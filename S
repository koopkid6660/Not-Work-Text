--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88 
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER FROM MorrisBr
]=]


-- Instances: 1068 | Scripts: ?? | Modules: ??

local G2L = {}

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end


--[[
    Instances:
--]]

--ScreenGui
G2L["0"] = Instance.new("ScreenGui")

--ScreenGui.Border
G2L["1"] = Instance.new("Frame")

--ScreenGui.Border.Drag
G2L["2"] = Instance.new("LocalScript")

--ScreenGui.Border.UICorner
G2L["3"] = Instance.new("UICorner")

--ScreenGui.Border.Main
G2L["4"] = Instance.new("Frame")

--ScreenGui.Border.Main.ImageLabel
G2L["5"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame
G2L["6"] = Instance.new("ScrollingFrame")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["7"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["8"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["9"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
G2L["10"] = Instance.new("LocalScript")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["11"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["12"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["13"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
G2L["14"] = Instance.new("LocalScript")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["15"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["16"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["17"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
G2L["18"] = Instance.new("LocalScript")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.GetScript
G2L["19"] = Instance.new("RemoteEvent")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.Script
G2L["20"] = Instance.new("Script")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["21"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["22"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["23"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["24"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["25"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["26"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["27"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["28"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["29"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["30"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["31"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["32"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["33"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["34"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["35"] = Instance.new("TextLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["36"] = Instance.new("ImageLabel")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["37"] = Instance.new("ImageButton")

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["38"] = Instance.new("TextLabel")

--ScreenGui.Border.TextLabel
G2L["39"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7
G2L["40"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.DraggableScript
G2L["41"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1
G2L["42"] = Instance.new("ScrollingFrame")

--ScreenGui.ssGUIv7.pg1.credits
G2L["43"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.credits.ImageLabel
G2L["44"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.pg1.credits.ImageLabel.UIGradient
G2L["45"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.pg1.credits.TextLabel
G2L["46"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.pg1.credits.TextLabel.LocalScript
G2L["47"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.credits.TextLabel.UICorner
G2L["48"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.Hints
G2L["49"] = Instance.new("Folder")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["50"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["51"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["52"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["53"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["54"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["55"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["56"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["57"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["58"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["59"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["60"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["61"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["62"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["63"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["64"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["65"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["66"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["67"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["68"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["69"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["70"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["71"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["72"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["73"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["74"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["75"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["76"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["77"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["78"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Label
G2L["79"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.Label.UICorner
G2L["80"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.Label.TextLabel
G2L["81"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.pg1.TextButton
G2L["82"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.TextButton.LocalScript
G2L["83"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.TextButton.UICorner
G2L["84"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.TextButton.UIGradient
G2L["85"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.pg1.code
G2L["86"] = Instance.new("Folder")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["87"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["88"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["89"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["90"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.mrbean
G2L["91"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.mrbean.RippleClick
G2L["92"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.mrbean.RippleClick.Circle
G2L["93"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.pg1.code.mrbean.ServerEventHandler
G2L["94"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["95"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["96"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["97"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["98"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["99"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["100"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["101"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["102"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["103"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["104"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["105"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["106"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["107"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["108"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["109"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["110"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["111"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["112"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["113"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["114"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["115"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["116"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["117"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["118"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["119"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["120"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["121"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["122"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["123"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["124"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["125"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["126"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["127"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["128"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["129"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["130"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["131"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["132"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["133"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["134"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["135"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["136"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["137"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["138"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["139"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["140"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["141"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["142"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["143"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["144"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["145"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["146"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["147"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["148"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["149"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["150"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["151"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["152"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["153"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["154"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["155"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["156"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["157"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["158"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["159"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["160"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["161"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["162"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["163"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["164"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["165"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["166"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["167"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["168"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["169"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["170"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["171"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["172"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["173"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["174"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["175"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["176"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["177"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["178"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["179"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["180"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["181"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["182"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["183"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["184"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["185"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["186"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["187"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["188"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["189"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["190"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.hints
G2L["191"] = Instance.new("Folder")

--ScreenGui.ssGUIv7.pg1.hints.Hints
G2L["192"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.hints.Hints.UICorner
G2L["193"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.hints.Hints.TextLabel
G2L["194"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.pg1.hints.Hints
G2L["195"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.hints.Hints.UICorner
G2L["196"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.hints.Hints.TextLabel
G2L["197"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.pg1.Extra
G2L["198"] = Instance.new("Folder")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1
G2L["199"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["200"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["201"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["202"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["203"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["204"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["205"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["206"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["207"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["208"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["209"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["210"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["211"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["212"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["213"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["214"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["215"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["216"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["217"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["218"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["219"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["220"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["221"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.UICorner
G2L["222"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.UIGradient
G2L["223"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["224"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["225"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["226"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["227"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2
G2L["228"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["229"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["230"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.UICorner
G2L["231"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.UIGradient
G2L["232"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["233"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["234"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["235"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["236"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["237"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["238"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["239"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["240"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["241"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["242"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["243"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["244"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["245"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["246"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["247"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["248"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["249"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["250"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["251"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["252"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["253"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["254"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["255"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["256"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.pg1.faces
G2L["257"] = Instance.new("Folder")

--ScreenGui.ssGUIv7.pg1.faces.Faces
G2L["258"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["259"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["260"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["261"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["262"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["263"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["264"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["265"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["266"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["267"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["268"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["269"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["270"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["271"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["272"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["273"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["274"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["275"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["276"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["277"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["278"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["279"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["280"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["281"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["282"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["283"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["284"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["285"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.LocalScript
G2L["286"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.UICorner
G2L["287"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.UIGradient
G2L["288"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["289"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["290"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["291"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["292"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2
G2L["293"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton
G2L["294"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton.LocalScript
G2L["295"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton.UICorner
G2L["296"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton.UIGradient
G2L["297"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["298"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["299"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["300"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["301"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["302"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["303"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["304"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["305"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["306"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["307"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["308"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["309"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["310"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["311"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["312"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["313"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["314"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["315"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["316"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["317"] = Instance.new("Script")

--ScreenGui.ssGUIv7.pg1.stamp
G2L["318"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.pg1.SynapseButton
G2L["319"] = Instance.new("ImageButton")

--ScreenGui.ssGUIv7.pg1.SynapseButton.LocalScript
G2L["320"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.pg1.icon
G2L["321"] = Instance.new("ImageButton")

--ScreenGui.ssGUIv7.pg1.icon.LocalScript
G2L["322"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 2
G2L["323"] = Instance.new("ScrollingFrame")

--ScreenGui.ssGUIv7.Page 2.back
G2L["324"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.back.LocalScript
G2L["325"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 2.back.UIGradient
G2L["326"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Page 2.back.UICorner
G2L["327"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 2.Hints
G2L["328"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 2.Hints.UICorner
G2L["329"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 2.Hints.TextLabel
G2L["330"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 2.Spams
G2L["331"] = Instance.new("Folder")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["332"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["333"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["334"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["335"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["336"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["337"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["338"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["339"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["340"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["341"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["342"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["343"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["344"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["345"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["346"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["347"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["348"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["349"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["350"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["351"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["352"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["353"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["354"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["355"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["356"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["357"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["358"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["359"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["360"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["361"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["362"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["363"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["364"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["365"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["366"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["367"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["368"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["369"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["370"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Hints
G2L["371"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 2.Hints.UICorner
G2L["372"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 2.Hints.TextLabel
G2L["373"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 2.Particles
G2L["374"] = Instance.new("Folder")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["375"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["376"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["377"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["378"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["379"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["380"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["381"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["382"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["383"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["384"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["385"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["386"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["387"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["388"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["389"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["390"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["391"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["392"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["393"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["394"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["395"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["396"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["397"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["398"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["399"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["400"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["401"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["402"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["403"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["404"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["405"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["406"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 2.credits
G2L["407"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 2.credits.ImageLabel
G2L["408"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.Page 2.credits.ImageLabel.UIGradient
G2L["409"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel
G2L["410"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel.LocalScript
G2L["411"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel.UICorner
G2L["412"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 2.credits
G2L["413"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 2.credits.ImageLabel
G2L["414"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.Page 2.credits.title
G2L["415"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel
G2L["416"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 2.pg
G2L["417"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 2.pg.LocalScript
G2L["418"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 2.pg.UIGradient
G2L["419"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Page 2.pg.UICorner
G2L["420"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3
G2L["421"] = Instance.new("ScrollingFrame")

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["422"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["423"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["424"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 3.goofy
G2L["425"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["426"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.back
G2L["427"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.back.LocalScript
G2L["428"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 3.back.UIGradient
G2L["429"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Page 3.back.UICorner
G2L["430"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3.goofy
G2L["431"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["432"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.goofy
G2L["433"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["434"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["435"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.credits
G2L["436"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.credits.ImageLabel
G2L["437"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.Page 3.credits.ImageLabel.UIGradient
G2L["438"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Page 3.credits.TextLabel
G2L["439"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 3.credits.TextLabel.LocalScript
G2L["440"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 3.credits.TextLabel.UICorner
G2L["441"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["442"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["443"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["444"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 3.Map
G2L["445"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.Map.Script
G2L["446"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Map.GetScript
G2L["447"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.Page 3.Map.LocalScript
G2L["448"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 3.map
G2L["449"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["450"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["451"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["452"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["453"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.map.Script
G2L["454"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.map.GetScript
G2L["455"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.Page 3.map.LocalScript
G2L["456"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["457"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["458"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["459"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton
G2L["460"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
G2L["461"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.Script
G2L["462"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton
G2L["463"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
G2L["464"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.Script
G2L["465"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton
G2L["466"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
G2L["467"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.Script
G2L["468"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["469"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["470"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["471"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 3.Hints.Nook
G2L["472"] = Instance.new("ImageButton")

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["473"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["474"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["475"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["476"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.UICorner
G2L["477"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.TextLabel
G2L["478"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 3.Hints.ImageLabel
G2L["479"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.Page 3.Hints.ImageLabel.TextLabel
G2L["480"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Page 3.Hints.ImageLabel
G2L["481"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.Title
G2L["482"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Title.LocalScript
G2L["483"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Title.ImageLabel
G2L["484"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.goofy
G2L["485"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["486"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["487"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["488"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["489"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["490"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["491"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.Shedletsky
G2L["492"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.Shedletsky.Script
G2L["493"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.Shedletsky.Script
G2L["494"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.Shedletsky.ServerEventHandler
G2L["495"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["496"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["497"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["498"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["499"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["500"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["501"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["502"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["503"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["504"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["505"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["506"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.goofy.mario
G2L["507"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["508"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["509"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.TextLabel
G2L["510"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.goofy.TextLabel.LocalScript
G2L["511"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["512"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["513"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["514"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["515"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.goofy.mario
G2L["516"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["517"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.mario
G2L["518"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["519"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.mario
G2L["520"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["521"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.mario
G2L["522"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["523"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.mario
G2L["524"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["525"] = Instance.new("Script")

--ScreenGui.ssGUIv7.goofy.goofy
G2L["526"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["527"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Synapse
G2L["528"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Synapse.Logo
G2L["529"] = Instance.new("ImageLabel")

--ScreenGui.ssGUIv7.Synapse.Logo.TextLabel
G2L["530"] = Instance.new("TextLabel")

--ScreenGui.ssGUIv7.Synapse.Source
G2L["531"] = Instance.new("TextBox")

--ScreenGui.ssGUIv7.Synapse.TextButton
G2L["532"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
G2L["533"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Synapse.TextButton.UICorner
G2L["534"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Synapse.TextButton.UIGradient
G2L["535"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Synapse.TextButton
G2L["536"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
G2L["537"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Synapse.TextButton.UICorner
G2L["538"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Synapse.TextButton.UIGradient
G2L["539"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Synapse.TextButton
G2L["540"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
G2L["541"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Synapse.TextButton.UICorner
G2L["542"] = Instance.new("UICorner")

--ScreenGui.ssGUIv7.Synapse.TextButton.UIGradient
G2L["543"] = Instance.new("UIGradient")

--ScreenGui.ssGUIv7.Synapse.Frame
G2L["544"] = Instance.new("Frame")

--ScreenGui.ssGUIv7.Synapse.Frame.exe
G2L["545"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Synapse.Frame.exe.ExecuteScript
G2L["546"] = Instance.new("RemoteEvent")

--ScreenGui.ssGUIv7.Synapse.Frame.exe.LocalScript
G2L["547"] = Instance.new("LocalScript")

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script
G2L["548"] = Instance.new("Script")

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring
G2L["549"] = Instance.new("ModuleScript")

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring.FiOne
G2L["550"] = Instance.new("ModuleScript")

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring.Yueliang
G2L["551"] = Instance.new("ModuleScript")

--ScreenGui.ssGUIv7.Synapse.Frame.cle
G2L["552"] = Instance.new("TextButton")

--ScreenGui.ssGUIv7.Synapse.Frame.cle.LocalScript
G2L["553"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui
G2L["554"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.DraggableScript
G2L["555"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1
G2L["556"] = Instance.new("ScrollingFrame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits
G2L["557"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.ImageLabel
G2L["558"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.ImageLabel.UIGradient
G2L["559"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.TextLabel
G2L["560"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.TextLabel.LocalScript
G2L["561"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.TextLabel.UICorner
G2L["562"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints
G2L["563"] = Instance.new("Folder")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["564"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["565"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["566"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["567"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["568"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["569"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["570"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["571"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["572"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["573"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["574"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["575"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["576"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["577"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["578"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["579"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["580"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["581"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["582"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["583"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["584"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["585"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["586"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["587"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["588"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["589"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["590"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["591"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["592"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Label
G2L["593"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Label.UICorner
G2L["594"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Label.TextLabel
G2L["595"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton
G2L["596"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton.LocalScript
G2L["597"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton.UICorner
G2L["598"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton.UIGradient
G2L["599"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code
G2L["600"] = Instance.new("Folder")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["601"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["602"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["603"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["604"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean
G2L["605"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean.RippleClick
G2L["606"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean.RippleClick.Circle
G2L["607"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean.ServerEventHandler
G2L["608"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["609"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["610"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["611"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["612"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["613"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["614"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["615"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["616"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["617"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["618"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["619"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["620"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["621"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["622"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["623"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["624"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["625"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["626"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["627"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["628"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["629"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["630"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["631"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["632"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["633"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["634"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["635"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["636"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["637"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["638"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["639"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["640"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["641"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["642"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["643"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["644"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["645"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["646"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["647"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["648"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["649"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["650"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["651"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["652"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["653"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["654"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["655"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["656"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["657"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["658"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["659"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["660"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["661"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["662"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["663"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["664"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["665"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["666"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["667"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["668"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["669"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["670"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["671"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["672"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["673"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["674"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["675"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["676"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["677"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["678"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["679"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["680"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["681"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["682"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["683"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["684"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["685"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["686"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["687"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["688"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["689"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["690"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["691"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["692"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["693"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["694"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["695"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["696"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["697"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["698"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["699"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["700"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["701"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["702"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["703"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["704"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints
G2L["705"] = Instance.new("Folder")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints
G2L["706"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.UICorner
G2L["707"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.TextLabel
G2L["708"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints
G2L["709"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.UICorner
G2L["710"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.TextLabel
G2L["711"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra
G2L["712"] = Instance.new("Folder")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1
G2L["713"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["714"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["715"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["716"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["717"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["718"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["719"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["720"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["721"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["722"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["723"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["724"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["725"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["726"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["727"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["728"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["729"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["730"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["731"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["732"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["733"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["734"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["735"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.UICorner
G2L["736"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.UIGradient
G2L["737"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["738"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["739"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["740"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["741"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2
G2L["742"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["743"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["744"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.UICorner
G2L["745"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.UIGradient
G2L["746"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["747"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["748"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["749"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["750"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["751"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["752"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["753"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["754"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["755"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["756"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["757"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["758"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["759"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["760"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["761"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["762"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["763"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["764"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["765"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["766"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["767"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["768"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["769"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["770"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces
G2L["771"] = Instance.new("Folder")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces
G2L["772"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["773"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["774"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["775"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["776"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["777"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["778"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["779"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["780"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["781"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["782"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["783"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["784"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["785"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["786"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["787"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["788"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["789"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["790"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["791"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["792"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["793"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["794"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["795"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["796"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["797"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["798"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["799"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.LocalScript
G2L["800"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.UICorner
G2L["801"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.UIGradient
G2L["802"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["803"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["804"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["805"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["806"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2
G2L["807"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton
G2L["808"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton.LocalScript
G2L["809"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton.UICorner
G2L["810"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton.UIGradient
G2L["811"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["812"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["813"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["814"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["815"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["816"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["817"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["818"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["819"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["820"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["821"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["822"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["823"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["824"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["825"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["826"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["827"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["828"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["829"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["830"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["831"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.stamp
G2L["832"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.SynapseButton
G2L["833"] = Instance.new("ImageButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.SynapseButton.LocalScript
G2L["834"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.icon
G2L["835"] = Instance.new("ImageButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.icon.LocalScript
G2L["836"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2
G2L["837"] = Instance.new("ScrollingFrame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back
G2L["838"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back.LocalScript
G2L["839"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back.UIGradient
G2L["840"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back.UICorner
G2L["841"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints
G2L["842"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.UICorner
G2L["843"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.TextLabel
G2L["844"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams
G2L["845"] = Instance.new("Folder")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["846"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["847"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["848"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["849"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["850"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["851"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["852"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["853"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["854"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["855"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["856"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["857"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["858"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["859"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["860"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["861"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["862"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["863"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["864"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["865"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["866"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["867"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["868"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["869"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["870"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["871"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["872"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["873"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["874"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["875"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["876"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["877"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["878"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["879"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["880"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["881"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["882"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["883"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["884"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints
G2L["885"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.UICorner
G2L["886"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.TextLabel
G2L["887"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles
G2L["888"] = Instance.new("Folder")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["889"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["890"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["891"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["892"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["893"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["894"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["895"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["896"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["897"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["898"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["899"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["900"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["901"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["902"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["903"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["904"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["905"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["906"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["907"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["908"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["909"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["910"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["911"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["912"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["913"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["914"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["915"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["916"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["917"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["918"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["919"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["920"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits
G2L["921"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.ImageLabel
G2L["922"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.ImageLabel.UIGradient
G2L["923"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel
G2L["924"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel.LocalScript
G2L["925"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel.UICorner
G2L["926"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits
G2L["927"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.ImageLabel
G2L["928"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.title
G2L["929"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel
G2L["930"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg
G2L["931"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg.LocalScript
G2L["932"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg.UIGradient
G2L["933"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg.UICorner
G2L["934"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3
G2L["935"] = Instance.new("ScrollingFrame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["936"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["937"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["938"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy
G2L["939"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["940"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back
G2L["941"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back.LocalScript
G2L["942"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back.UIGradient
G2L["943"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back.UICorner
G2L["944"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy
G2L["945"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["946"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy
G2L["947"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["948"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["949"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits
G2L["950"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.ImageLabel
G2L["951"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.ImageLabel.UIGradient
G2L["952"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.TextLabel
G2L["953"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.TextLabel.LocalScript
G2L["954"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.TextLabel.UICorner
G2L["955"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["956"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["957"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["958"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map
G2L["959"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map.Script
G2L["960"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map.GetScript
G2L["961"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map.LocalScript
G2L["962"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map
G2L["963"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["964"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["965"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["966"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["967"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Script
G2L["968"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.GetScript
G2L["969"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.LocalScript
G2L["970"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["971"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["972"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["973"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton
G2L["974"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
G2L["975"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.Script
G2L["976"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton
G2L["977"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
G2L["978"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.Script
G2L["979"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton
G2L["980"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
G2L["981"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.Script
G2L["982"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["983"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["984"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["985"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook
G2L["986"] = Instance.new("ImageButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["987"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["988"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["989"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["990"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.UICorner
G2L["991"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.TextLabel
G2L["992"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.ImageLabel
G2L["993"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.ImageLabel.TextLabel
G2L["994"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.ImageLabel
G2L["995"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Title
G2L["996"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Title.LocalScript
G2L["997"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Title.ImageLabel
G2L["998"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy
G2L["999"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1000"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1001"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1002"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1003"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1004"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1005"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky
G2L["1006"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky.Script
G2L["1007"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky.Script
G2L["1008"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky.ServerEventHandler
G2L["1009"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1010"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1011"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1012"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1013"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1014"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1015"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1016"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1017"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1018"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1019"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1020"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1021"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1022"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1023"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.TextLabel
G2L["1024"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.TextLabel.LocalScript
G2L["1025"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1026"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1027"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1028"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1029"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1030"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1031"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1032"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1033"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1034"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1035"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1036"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1037"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1038"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1039"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1040"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1041"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse
G2L["1042"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Logo
G2L["1043"] = Instance.new("ImageLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Logo.TextLabel
G2L["1044"] = Instance.new("TextLabel")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Source
G2L["1045"] = Instance.new("TextBox")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton
G2L["1046"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
G2L["1047"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UICorner
G2L["1048"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UIGradient
G2L["1049"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton
G2L["1050"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
G2L["1051"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UICorner
G2L["1052"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UIGradient
G2L["1053"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton
G2L["1054"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
G2L["1055"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UICorner
G2L["1056"] = Instance.new("UICorner")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UIGradient
G2L["1057"] = Instance.new("UIGradient")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame
G2L["1058"] = Instance.new("Frame")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe
G2L["1059"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.ExecuteScript
G2L["1060"] = Instance.new("RemoteEvent")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.LocalScript
G2L["1061"] = Instance.new("LocalScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script
G2L["1062"] = Instance.new("Script")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring
G2L["1063"] = Instance.new("ModuleScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring.FiOne
G2L["1064"] = Instance.new("ModuleScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring.Yueliang
G2L["1065"] = Instance.new("ModuleScript")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.cle
G2L["1066"] = Instance.new("TextButton")

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.cle.LocalScript
G2L["1067"] = Instance.new("LocalScript")



--[[
    Properties:
--]]
--ScreenGui
G2L["0"].Name = [[ScreenGui]]
G2L["0"].Enabled = true
G2L["0"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["0"].Parent = game.Players.LocalPlayer.PlayerGui

--ScreenGui.Border
G2L["1"].Name = [[Border]]
G2L["1"].Active = false
G2L["1"].AnchorPoint = Vector2.new(0, 0)
G2L["1"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["1"].BackgroundTransparency = 0
G2L["1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1"].BorderSizePixel = 5
G2L["1"].ClipsDescendants = false
G2L["1"].Draggable = false
G2L["1"].Position = UDim2.new(0.035148844, 0, 0.11193543, 0)
G2L["1"].Rotation = 0
G2L["1"].Selectable = false
G2L["1"].SelectionOrder = 0
G2L["1"].Size = UDim2.new(0, 372, 0, 417)
G2L["1"].Visible = true
G2L["1"].ZIndex = 1
G2L["1"].Parent = G2L["0"]

--ScreenGui.Border.Drag
G2L["2"].Name = [[Drag]]
G2L["2"].Parent = G2L["1"]

--ScreenGui.Border.UICorner
G2L["3"].Name = [[UICorner]]
G2L["3"].CornerRadius = UDim.new(0, 6)
G2L["3"].Parent = G2L["1"]

--ScreenGui.Border.Main
G2L["4"].Name = [[Main]]
G2L["4"].Active = false
G2L["4"].AnchorPoint = Vector2.new(0, 0)
G2L["4"].BackgroundColor3 = Color3.fromRGB(238.00002, 238.00002, 238.00002)
G2L["4"].BackgroundTransparency = 1
G2L["4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["4"].BorderSizePixel = 0
G2L["4"].ClipsDescendants = false
G2L["4"].Draggable = false
G2L["4"].Position = UDim2.new(0.059139784, 0, 0.12470024, 0)
G2L["4"].Rotation = 0
G2L["4"].Selectable = false
G2L["4"].SelectionOrder = 0
G2L["4"].Size = UDim2.new(0, 327, 0, 336)
G2L["4"].Visible = true
G2L["4"].ZIndex = 1
G2L["4"].Parent = G2L["1"]

--ScreenGui.Border.Main.ImageLabel
G2L["5"].Name = [[ImageLabel]]
G2L["5"].Image = [[rbxassetid://12694907913]]
G2L["5"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["5"].ScaleType = Enum.ScaleType.Stretch
G2L["5"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["5"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["5"].Active = false
G2L["5"].AnchorPoint = Vector2.new(0, 0)
G2L["5"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["5"].BackgroundTransparency = 0
G2L["5"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["5"].BorderSizePixel = 0
G2L["5"].ClipsDescendants = false
G2L["5"].Draggable = false
G2L["5"].Position = UDim2.new(0, 0, 0, 0)
G2L["5"].Rotation = 0
G2L["5"].Selectable = false
G2L["5"].SelectionOrder = 0
G2L["5"].Size = UDim2.new(0, 327, 0, 336)
G2L["5"].Visible = true
G2L["5"].ZIndex = 1
G2L["5"].Parent = G2L["4"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame
G2L["6"].Name = [[ScrollingFrame]]
G2L["6"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["6"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["6"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["6"].ScrollBarThickness = 12
G2L["6"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["6"].Active = true
G2L["6"].AnchorPoint = Vector2.new(0, 0)
G2L["6"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["6"].BackgroundTransparency = 1
G2L["6"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["6"].BorderSizePixel = 0
G2L["6"].ClipsDescendants = true
G2L["6"].Draggable = false
G2L["6"].Position = UDim2.new(0, 0, 0, 0)
G2L["6"].Rotation = 0
G2L["6"].Selectable = true
G2L["6"].SelectionOrder = 0
G2L["6"].Size = UDim2.new(0, 327, 0, 336)
G2L["6"].Visible = true
G2L["6"].ZIndex = 1
G2L["6"].Parent = G2L["5"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["7"].Name = [[Option]]
G2L["7"].Image = [[rbxassetid://13720914792]]
G2L["7"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["7"].ScaleType = Enum.ScaleType.Stretch
G2L["7"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["7"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["7"].Active = false
G2L["7"].AnchorPoint = Vector2.new(0, 0)
G2L["7"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["7"].BackgroundTransparency = 1
G2L["7"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["7"].BorderSizePixel = 0
G2L["7"].ClipsDescendants = false
G2L["7"].Draggable = false
G2L["7"].Position = UDim2.new(0.0795107, 0, 0.04097857, 0)
G2L["7"].Rotation = 0
G2L["7"].Selectable = false
G2L["7"].SelectionOrder = 0
G2L["7"].Size = UDim2.new(0, 40, 0, 41)
G2L["7"].Visible = true
G2L["7"].ZIndex = 1
G2L["7"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["8"].Name = [[ImageButton]]
G2L["8"].Image = [[rbxassetid://12695313856]]
G2L["8"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["8"].ScaleType = Enum.ScaleType.Stretch
G2L["8"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["8"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["8"].Active = true
G2L["8"].AnchorPoint = Vector2.new(0, 0)
G2L["8"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["8"].BackgroundTransparency = 0
G2L["8"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["8"].BorderSizePixel = 0
G2L["8"].ClipsDescendants = false
G2L["8"].Draggable = false
G2L["8"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["8"].Rotation = 0
G2L["8"].Selectable = true
G2L["8"].SelectionOrder = 0
G2L["8"].Size = UDim2.new(0, 187, 0, 41)
G2L["8"].Visible = true
G2L["8"].ZIndex = 1
G2L["8"].Parent = G2L["7"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["9"].Name = [[TextLabel]]
G2L["9"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["9"].Text = [[SS Gui V7]]
G2L["9"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["9"].TextScaled = true
G2L["9"].TextSize = 14
G2L["9"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["9"].TextStrokeTransparency = 1
G2L["9"].TextWrapped = true
G2L["9"].TextXAlignment = Enum.TextXAlignment.Center
G2L["9"].TextYAlignment = Enum.TextYAlignment.Center
G2L["9"].Active = false
G2L["9"].AnchorPoint = Vector2.new(0, 0)
G2L["9"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["9"].BackgroundTransparency = 1
G2L["9"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["9"].BorderSizePixel = 0
G2L["9"].ClipsDescendants = false
G2L["9"].Draggable = false
G2L["9"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["9"].Rotation = 0
G2L["9"].Selectable = false
G2L["9"].SelectionOrder = 0
G2L["9"].Size = UDim2.new(0, 169, 0, 33)
G2L["9"].Visible = true
G2L["9"].ZIndex = 1
G2L["9"].Parent = G2L["8"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
G2L["10"].Name = [[LocalScript]]
G2L["10"].Parent = G2L["8"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["11"].Name = [[Option]]
G2L["11"].Image = [[rbxassetid://13720914792]]
G2L["11"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["11"].ScaleType = Enum.ScaleType.Stretch
G2L["11"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["11"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["11"].Active = false
G2L["11"].AnchorPoint = Vector2.new(0, 0)
G2L["11"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["11"].BackgroundTransparency = 1
G2L["11"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["11"].BorderSizePixel = 0
G2L["11"].ClipsDescendants = false
G2L["11"].Draggable = false
G2L["11"].Position = UDim2.new(0.0795107, 0, 0.13255237, 0)
G2L["11"].Rotation = 0
G2L["11"].Selectable = false
G2L["11"].SelectionOrder = 0
G2L["11"].Size = UDim2.new(0, 40, 0, 41)
G2L["11"].Visible = true
G2L["11"].ZIndex = 1
G2L["11"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["12"].Name = [[ImageButton]]
G2L["12"].Image = [[rbxassetid://12695313856]]
G2L["12"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["12"].ScaleType = Enum.ScaleType.Stretch
G2L["12"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["12"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["12"].Active = true
G2L["12"].AnchorPoint = Vector2.new(0, 0)
G2L["12"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["12"].BackgroundTransparency = 0
G2L["12"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["12"].BorderSizePixel = 0
G2L["12"].ClipsDescendants = false
G2L["12"].Draggable = false
G2L["12"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["12"].Rotation = 0
G2L["12"].Selectable = true
G2L["12"].SelectionOrder = 0
G2L["12"].Size = UDim2.new(0, 187, 0, 41)
G2L["12"].Visible = true
G2L["12"].ZIndex = 1
G2L["12"].Parent = G2L["11"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["13"].Name = [[TextLabel]]
G2L["13"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["13"].Text = [[Nazi V999]]
G2L["13"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["13"].TextScaled = true
G2L["13"].TextSize = 14
G2L["13"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["13"].TextStrokeTransparency = 1
G2L["13"].TextWrapped = true
G2L["13"].TextXAlignment = Enum.TextXAlignment.Center
G2L["13"].TextYAlignment = Enum.TextYAlignment.Center
G2L["13"].Active = false
G2L["13"].AnchorPoint = Vector2.new(0, 0)
G2L["13"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["13"].BackgroundTransparency = 1
G2L["13"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["13"].BorderSizePixel = 0
G2L["13"].ClipsDescendants = false
G2L["13"].Draggable = false
G2L["13"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["13"].Rotation = 0
G2L["13"].Selectable = false
G2L["13"].SelectionOrder = 0
G2L["13"].Size = UDim2.new(0, 169, 0, 33)
G2L["13"].Visible = true
G2L["13"].ZIndex = 1
G2L["13"].Parent = G2L["12"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
G2L["14"].Name = [[LocalScript]]
G2L["14"].Parent = G2L["12"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["15"].Name = [[Option]]
G2L["15"].Image = [[rbxassetid://13720914792]]
G2L["15"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["15"].ScaleType = Enum.ScaleType.Stretch
G2L["15"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["15"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["15"].Active = false
G2L["15"].AnchorPoint = Vector2.new(0, 0)
G2L["15"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["15"].BackgroundTransparency = 1
G2L["15"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["15"].BorderSizePixel = 0
G2L["15"].ClipsDescendants = false
G2L["15"].Draggable = false
G2L["15"].Position = UDim2.new(0.0795107, 0, 0.22641428, 0)
G2L["15"].Rotation = 0
G2L["15"].Selectable = false
G2L["15"].SelectionOrder = 0
G2L["15"].Size = UDim2.new(0, 40, 0, 41)
G2L["15"].Visible = true
G2L["15"].ZIndex = 1
G2L["15"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["16"].Name = [[ImageButton]]
G2L["16"].Image = [[rbxassetid://12695313856]]
G2L["16"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["16"].ScaleType = Enum.ScaleType.Stretch
G2L["16"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["16"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["16"].Active = true
G2L["16"].AnchorPoint = Vector2.new(0, 0)
G2L["16"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["16"].BackgroundTransparency = 0
G2L["16"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["16"].BorderSizePixel = 0
G2L["16"].ClipsDescendants = false
G2L["16"].Draggable = false
G2L["16"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["16"].Rotation = 0
G2L["16"].Selectable = true
G2L["16"].SelectionOrder = 0
G2L["16"].Size = UDim2.new(0, 187, 0, 41)
G2L["16"].Visible = true
G2L["16"].ZIndex = 1
G2L["16"].Parent = G2L["15"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["17"].Name = [[TextLabel]]
G2L["17"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["17"].Text = [[Secret Service Panel]]
G2L["17"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["17"].TextScaled = true
G2L["17"].TextSize = 14
G2L["17"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["17"].TextStrokeTransparency = 1
G2L["17"].TextWrapped = true
G2L["17"].TextXAlignment = Enum.TextXAlignment.Center
G2L["17"].TextYAlignment = Enum.TextYAlignment.Center
G2L["17"].Active = false
G2L["17"].AnchorPoint = Vector2.new(0, 0)
G2L["17"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["17"].BackgroundTransparency = 1
G2L["17"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["17"].BorderSizePixel = 0
G2L["17"].ClipsDescendants = false
G2L["17"].Draggable = false
G2L["17"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["17"].Rotation = 0
G2L["17"].Selectable = false
G2L["17"].SelectionOrder = 0
G2L["17"].Size = UDim2.new(0, 169, 0, 33)
G2L["17"].Visible = true
G2L["17"].ZIndex = 1
G2L["17"].Parent = G2L["16"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
G2L["18"].Name = [[LocalScript]]
G2L["18"].Parent = G2L["16"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.GetScript
G2L["19"].Name = [[GetScript]]
G2L["19"].Parent = G2L["16"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.Script
G2L["20"].Name = [[Script]]
G2L["20"].Parent = G2L["16"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["21"].Name = [[Option]]
G2L["21"].Image = [[rbxassetid://13720914792]]
G2L["21"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["21"].ScaleType = Enum.ScaleType.Stretch
G2L["21"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["21"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["21"].Active = false
G2L["21"].AnchorPoint = Vector2.new(0, 0)
G2L["21"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["21"].BackgroundTransparency = 1
G2L["21"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["21"].BorderSizePixel = 0
G2L["21"].ClipsDescendants = false
G2L["21"].Draggable = false
G2L["21"].Position = UDim2.new(0.0795107, 0, 0.33080474, 0)
G2L["21"].Rotation = 0
G2L["21"].Selectable = false
G2L["21"].SelectionOrder = 0
G2L["21"].Size = UDim2.new(0, 40, 0, 41)
G2L["21"].Visible = true
G2L["21"].ZIndex = 1
G2L["21"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["22"].Name = [[ImageButton]]
G2L["22"].Image = [[rbxassetid://12695313856]]
G2L["22"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["22"].ScaleType = Enum.ScaleType.Stretch
G2L["22"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["22"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["22"].Active = true
G2L["22"].AnchorPoint = Vector2.new(0, 0)
G2L["22"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["22"].BackgroundTransparency = 0
G2L["22"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["22"].BorderSizePixel = 0
G2L["22"].ClipsDescendants = false
G2L["22"].Draggable = false
G2L["22"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["22"].Rotation = 0
G2L["22"].Selectable = true
G2L["22"].SelectionOrder = 0
G2L["22"].Size = UDim2.new(0, 187, 0, 41)
G2L["22"].Visible = true
G2L["22"].ZIndex = 1
G2L["22"].Parent = G2L["21"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["23"].Name = [[TextLabel]]
G2L["23"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["23"].Text = [[???]]
G2L["23"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["23"].TextScaled = true
G2L["23"].TextSize = 14
G2L["23"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["23"].TextStrokeTransparency = 1
G2L["23"].TextWrapped = true
G2L["23"].TextXAlignment = Enum.TextXAlignment.Center
G2L["23"].TextYAlignment = Enum.TextYAlignment.Center
G2L["23"].Active = false
G2L["23"].AnchorPoint = Vector2.new(0, 0)
G2L["23"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["23"].BackgroundTransparency = 1
G2L["23"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["23"].BorderSizePixel = 0
G2L["23"].ClipsDescendants = false
G2L["23"].Draggable = false
G2L["23"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["23"].Rotation = 0
G2L["23"].Selectable = false
G2L["23"].SelectionOrder = 0
G2L["23"].Size = UDim2.new(0, 169, 0, 33)
G2L["23"].Visible = true
G2L["23"].ZIndex = 1
G2L["23"].Parent = G2L["22"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["24"].Name = [[Option]]
G2L["24"].Image = [[rbxassetid://13720914792]]
G2L["24"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["24"].ScaleType = Enum.ScaleType.Stretch
G2L["24"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["24"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["24"].Active = false
G2L["24"].AnchorPoint = Vector2.new(0, 0)
G2L["24"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["24"].BackgroundTransparency = 1
G2L["24"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["24"].BorderSizePixel = 0
G2L["24"].ClipsDescendants = false
G2L["24"].Draggable = false
G2L["24"].Position = UDim2.new(0.0795107, 0, 0.43839517, 0)
G2L["24"].Rotation = 0
G2L["24"].Selectable = false
G2L["24"].SelectionOrder = 0
G2L["24"].Size = UDim2.new(0, 40, 0, 41)
G2L["24"].Visible = true
G2L["24"].ZIndex = 1
G2L["24"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["25"].Name = [[ImageButton]]
G2L["25"].Image = [[rbxassetid://12695313856]]
G2L["25"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["25"].ScaleType = Enum.ScaleType.Stretch
G2L["25"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["25"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["25"].Active = true
G2L["25"].AnchorPoint = Vector2.new(0, 0)
G2L["25"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["25"].BackgroundTransparency = 0
G2L["25"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["25"].BorderSizePixel = 0
G2L["25"].ClipsDescendants = false
G2L["25"].Draggable = false
G2L["25"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["25"].Rotation = 0
G2L["25"].Selectable = true
G2L["25"].SelectionOrder = 0
G2L["25"].Size = UDim2.new(0, 187, 0, 41)
G2L["25"].Visible = true
G2L["25"].ZIndex = 1
G2L["25"].Parent = G2L["24"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["26"].Name = [[TextLabel]]
G2L["26"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["26"].Text = [[???]]
G2L["26"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["26"].TextScaled = true
G2L["26"].TextSize = 14
G2L["26"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["26"].TextStrokeTransparency = 1
G2L["26"].TextWrapped = true
G2L["26"].TextXAlignment = Enum.TextXAlignment.Center
G2L["26"].TextYAlignment = Enum.TextYAlignment.Center
G2L["26"].Active = false
G2L["26"].AnchorPoint = Vector2.new(0, 0)
G2L["26"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["26"].BackgroundTransparency = 1
G2L["26"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["26"].BorderSizePixel = 0
G2L["26"].ClipsDescendants = false
G2L["26"].Draggable = false
G2L["26"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["26"].Rotation = 0
G2L["26"].Selectable = false
G2L["26"].SelectionOrder = 0
G2L["26"].Size = UDim2.new(0, 169, 0, 33)
G2L["26"].Visible = true
G2L["26"].ZIndex = 1
G2L["26"].Parent = G2L["25"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["27"].Name = [[Option]]
G2L["27"].Image = [[rbxassetid://13720914792]]
G2L["27"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["27"].ScaleType = Enum.ScaleType.Stretch
G2L["27"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["27"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["27"].Active = false
G2L["27"].AnchorPoint = Vector2.new(0, 0)
G2L["27"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["27"].BackgroundTransparency = 1
G2L["27"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["27"].BorderSizePixel = 0
G2L["27"].ClipsDescendants = false
G2L["27"].Draggable = false
G2L["27"].Position = UDim2.new(0.0795107, 0, 0.54048085, 0)
G2L["27"].Rotation = 0
G2L["27"].Selectable = false
G2L["27"].SelectionOrder = 0
G2L["27"].Size = UDim2.new(0, 40, 0, 41)
G2L["27"].Visible = true
G2L["27"].ZIndex = 1
G2L["27"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["28"].Name = [[ImageButton]]
G2L["28"].Image = [[rbxassetid://12695313856]]
G2L["28"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["28"].ScaleType = Enum.ScaleType.Stretch
G2L["28"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["28"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["28"].Active = true
G2L["28"].AnchorPoint = Vector2.new(0, 0)
G2L["28"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["28"].BackgroundTransparency = 0
G2L["28"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["28"].BorderSizePixel = 0
G2L["28"].ClipsDescendants = false
G2L["28"].Draggable = false
G2L["28"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["28"].Rotation = 0
G2L["28"].Selectable = true
G2L["28"].SelectionOrder = 0
G2L["28"].Size = UDim2.new(0, 187, 0, 41)
G2L["28"].Visible = true
G2L["28"].ZIndex = 1
G2L["28"].Parent = G2L["27"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["29"].Name = [[TextLabel]]
G2L["29"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["29"].Text = [[???]]
G2L["29"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["29"].TextScaled = true
G2L["29"].TextSize = 14
G2L["29"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["29"].TextStrokeTransparency = 1
G2L["29"].TextWrapped = true
G2L["29"].TextXAlignment = Enum.TextXAlignment.Center
G2L["29"].TextYAlignment = Enum.TextYAlignment.Center
G2L["29"].Active = false
G2L["29"].AnchorPoint = Vector2.new(0, 0)
G2L["29"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["29"].BackgroundTransparency = 1
G2L["29"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["29"].BorderSizePixel = 0
G2L["29"].ClipsDescendants = false
G2L["29"].Draggable = false
G2L["29"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["29"].Rotation = 0
G2L["29"].Selectable = false
G2L["29"].SelectionOrder = 0
G2L["29"].Size = UDim2.new(0, 169, 0, 33)
G2L["29"].Visible = true
G2L["29"].ZIndex = 1
G2L["29"].Parent = G2L["28"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["30"].Name = [[Option]]
G2L["30"].Image = [[rbxassetid://13720914792]]
G2L["30"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["30"].ScaleType = Enum.ScaleType.Stretch
G2L["30"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["30"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["30"].Active = false
G2L["30"].AnchorPoint = Vector2.new(0, 0)
G2L["30"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["30"].BackgroundTransparency = 1
G2L["30"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["30"].BorderSizePixel = 0
G2L["30"].ClipsDescendants = false
G2L["30"].Draggable = false
G2L["30"].Position = UDim2.new(0.0795107, 0, 0.6500186, 0)
G2L["30"].Rotation = 0
G2L["30"].Selectable = false
G2L["30"].SelectionOrder = 0
G2L["30"].Size = UDim2.new(0, 40, 0, 41)
G2L["30"].Visible = true
G2L["30"].ZIndex = 1
G2L["30"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["31"].Name = [[ImageButton]]
G2L["31"].Image = [[rbxassetid://12695313856]]
G2L["31"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["31"].ScaleType = Enum.ScaleType.Stretch
G2L["31"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["31"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["31"].Active = true
G2L["31"].AnchorPoint = Vector2.new(0, 0)
G2L["31"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["31"].BackgroundTransparency = 0
G2L["31"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["31"].BorderSizePixel = 0
G2L["31"].ClipsDescendants = false
G2L["31"].Draggable = false
G2L["31"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["31"].Rotation = 0
G2L["31"].Selectable = true
G2L["31"].SelectionOrder = 0
G2L["31"].Size = UDim2.new(0, 187, 0, 41)
G2L["31"].Visible = true
G2L["31"].ZIndex = 1
G2L["31"].Parent = G2L["30"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["32"].Name = [[TextLabel]]
G2L["32"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["32"].Text = [[???]]
G2L["32"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["32"].TextScaled = true
G2L["32"].TextSize = 14
G2L["32"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["32"].TextStrokeTransparency = 1
G2L["32"].TextWrapped = true
G2L["32"].TextXAlignment = Enum.TextXAlignment.Center
G2L["32"].TextYAlignment = Enum.TextYAlignment.Center
G2L["32"].Active = false
G2L["32"].AnchorPoint = Vector2.new(0, 0)
G2L["32"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["32"].BackgroundTransparency = 1
G2L["32"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["32"].BorderSizePixel = 0
G2L["32"].ClipsDescendants = false
G2L["32"].Draggable = false
G2L["32"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["32"].Rotation = 0
G2L["32"].Selectable = false
G2L["32"].SelectionOrder = 0
G2L["32"].Size = UDim2.new(0, 169, 0, 33)
G2L["32"].Visible = true
G2L["32"].ZIndex = 1
G2L["32"].Parent = G2L["31"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["33"].Name = [[Option]]
G2L["33"].Image = [[rbxassetid://13720914792]]
G2L["33"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["33"].ScaleType = Enum.ScaleType.Stretch
G2L["33"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["33"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["33"].Active = false
G2L["33"].AnchorPoint = Vector2.new(0, 0)
G2L["33"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["33"].BackgroundTransparency = 1
G2L["33"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["33"].BorderSizePixel = 0
G2L["33"].ClipsDescendants = false
G2L["33"].Draggable = false
G2L["33"].Position = UDim2.new(0.0795107, 0, 0.74944186, 0)
G2L["33"].Rotation = 0
G2L["33"].Selectable = false
G2L["33"].SelectionOrder = 0
G2L["33"].Size = UDim2.new(0, 40, 0, 41)
G2L["33"].Visible = true
G2L["33"].ZIndex = 1
G2L["33"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["34"].Name = [[ImageButton]]
G2L["34"].Image = [[rbxassetid://12695313856]]
G2L["34"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["34"].ScaleType = Enum.ScaleType.Stretch
G2L["34"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["34"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["34"].Active = true
G2L["34"].AnchorPoint = Vector2.new(0, 0)
G2L["34"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["34"].BackgroundTransparency = 0
G2L["34"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["34"].BorderSizePixel = 0
G2L["34"].ClipsDescendants = false
G2L["34"].Draggable = false
G2L["34"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["34"].Rotation = 0
G2L["34"].Selectable = true
G2L["34"].SelectionOrder = 0
G2L["34"].Size = UDim2.new(0, 187, 0, 41)
G2L["34"].Visible = true
G2L["34"].ZIndex = 1
G2L["34"].Parent = G2L["33"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["35"].Name = [[TextLabel]]
G2L["35"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["35"].Text = [[???]]
G2L["35"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["35"].TextScaled = true
G2L["35"].TextSize = 14
G2L["35"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["35"].TextStrokeTransparency = 1
G2L["35"].TextWrapped = true
G2L["35"].TextXAlignment = Enum.TextXAlignment.Center
G2L["35"].TextYAlignment = Enum.TextYAlignment.Center
G2L["35"].Active = false
G2L["35"].AnchorPoint = Vector2.new(0, 0)
G2L["35"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["35"].BackgroundTransparency = 1
G2L["35"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["35"].BorderSizePixel = 0
G2L["35"].ClipsDescendants = false
G2L["35"].Draggable = false
G2L["35"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["35"].Rotation = 0
G2L["35"].Selectable = false
G2L["35"].SelectionOrder = 0
G2L["35"].Size = UDim2.new(0, 169, 0, 33)
G2L["35"].Visible = true
G2L["35"].ZIndex = 1
G2L["35"].Parent = G2L["34"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option
G2L["36"].Name = [[Option]]
G2L["36"].Image = [[rbxassetid://13720914792]]
G2L["36"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["36"].ScaleType = Enum.ScaleType.Stretch
G2L["36"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["36"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["36"].Active = false
G2L["36"].AnchorPoint = Vector2.new(0, 0)
G2L["36"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["36"].BackgroundTransparency = 1
G2L["36"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["36"].BorderSizePixel = 0
G2L["36"].ClipsDescendants = false
G2L["36"].Draggable = false
G2L["36"].Position = UDim2.new(0.0795107, 0, 0.8560266, 0)
G2L["36"].Rotation = 0
G2L["36"].Selectable = false
G2L["36"].SelectionOrder = 0
G2L["36"].Size = UDim2.new(0, 40, 0, 41)
G2L["36"].Visible = true
G2L["36"].ZIndex = 1
G2L["36"].Parent = G2L["6"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton
G2L["37"].Name = [[ImageButton]]
G2L["37"].Image = [[rbxassetid://12695313856]]
G2L["37"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["37"].ScaleType = Enum.ScaleType.Stretch
G2L["37"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["37"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["37"].Active = true
G2L["37"].AnchorPoint = Vector2.new(0, 0)
G2L["37"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["37"].BackgroundTransparency = 0
G2L["37"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["37"].BorderSizePixel = 0
G2L["37"].ClipsDescendants = false
G2L["37"].Draggable = false
G2L["37"].Position = UDim2.new(1.15, 0, 0, 0)
G2L["37"].Rotation = 0
G2L["37"].Selectable = true
G2L["37"].SelectionOrder = 0
G2L["37"].Size = UDim2.new(0, 187, 0, 41)
G2L["37"].Visible = true
G2L["37"].ZIndex = 1
G2L["37"].Parent = G2L["36"]

--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.TextLabel
G2L["38"].Name = [[TextLabel]]
G2L["38"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["38"].Text = [[???]]
G2L["38"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["38"].TextScaled = true
G2L["38"].TextSize = 14
G2L["38"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["38"].TextStrokeTransparency = 1
G2L["38"].TextWrapped = true
G2L["38"].TextXAlignment = Enum.TextXAlignment.Center
G2L["38"].TextYAlignment = Enum.TextYAlignment.Center
G2L["38"].Active = false
G2L["38"].AnchorPoint = Vector2.new(0, 0)
G2L["38"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["38"].BackgroundTransparency = 1
G2L["38"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["38"].BorderSizePixel = 0
G2L["38"].ClipsDescendants = false
G2L["38"].Draggable = false
G2L["38"].Position = UDim2.new(0.04812834, 0, 0.09756097, 0)
G2L["38"].Rotation = 0
G2L["38"].Selectable = false
G2L["38"].SelectionOrder = 0
G2L["38"].Size = UDim2.new(0, 169, 0, 33)
G2L["38"].Visible = true
G2L["38"].ZIndex = 1
G2L["38"].Parent = G2L["37"]

--ScreenGui.Border.TextLabel
G2L["39"].Name = [[TextLabel]]
G2L["39"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["39"].Text = [[SS V16]]
G2L["39"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["39"].TextScaled = true
G2L["39"].TextSize = 14
G2L["39"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["39"].TextStrokeTransparency = 1
G2L["39"].TextWrapped = true
G2L["39"].TextXAlignment = Enum.TextXAlignment.Center
G2L["39"].TextYAlignment = Enum.TextYAlignment.Center
G2L["39"].Active = false
G2L["39"].AnchorPoint = Vector2.new(0, 0)
G2L["39"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["39"].BackgroundTransparency = 1.02
G2L["39"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["39"].BorderSizePixel = 0
G2L["39"].ClipsDescendants = false
G2L["39"].Draggable = false
G2L["39"].Position = UDim2.new(0.059139784, 0, 0.019184653, 0)
G2L["39"].Rotation = 0
G2L["39"].Selectable = false
G2L["39"].SelectionOrder = 0
G2L["39"].Size = UDim2.new(0, 327, 0, 35)
G2L["39"].Visible = true
G2L["39"].ZIndex = 1
G2L["39"].Parent = G2L["1"]

--ScreenGui.ssGUIv7
G2L["40"].Name = [[ssGUIv7]]
G2L["40"].Active = false
G2L["40"].AnchorPoint = Vector2.new(0, 0)
G2L["40"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["40"].BackgroundTransparency = 0
G2L["40"].BorderColor3 = Color3.fromRGB(195.00002, 0, 0)
G2L["40"].BorderSizePixel = 5
G2L["40"].ClipsDescendants = false
G2L["40"].Draggable = false
G2L["40"].Position = UDim2.new(0.26122797, 0, 0.07117826, 0)
G2L["40"].Rotation = 0
G2L["40"].Selectable = false
G2L["40"].SelectionOrder = 0
G2L["40"].Size = UDim2.new(0, 627, 0, 527)
G2L["40"].Visible = false
G2L["40"].ZIndex = 1
G2L["40"].Parent = G2L["0"]

--ScreenGui.ssGUIv7.DraggableScript
G2L["41"].Name = [[DraggableScript]]
G2L["41"].Parent = G2L["40"]

--ScreenGui.ssGUIv7.pg1
G2L["42"].Name = [[pg1]]
G2L["42"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["42"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["42"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["42"].ScrollBarThickness = 12
G2L["42"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["42"].Active = true
G2L["42"].AnchorPoint = Vector2.new(0, 0)
G2L["42"].BackgroundColor3 = Color3.fromRGB(51.000004, 50.000004, 52.000004)
G2L["42"].BackgroundTransparency = 0
G2L["42"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["42"].BorderSizePixel = 2
G2L["42"].ClipsDescendants = true
G2L["42"].Draggable = false
G2L["42"].Position = UDim2.new(-0.0015948477, 0, 0.11764706, 0)
G2L["42"].Rotation = 0
G2L["42"].Selectable = true
G2L["42"].SelectionOrder = 0
G2L["42"].Size = UDim2.new(0, 626, 0, 465)
G2L["42"].Visible = true
G2L["42"].ZIndex = 1
G2L["42"].Parent = G2L["40"]

--ScreenGui.ssGUIv7.pg1.credits
G2L["43"].Name = [[credits]]
G2L["43"].Active = false
G2L["43"].AnchorPoint = Vector2.new(0, 0)
G2L["43"].BackgroundColor3 = Color3.fromRGB(176, 176, 176)
G2L["43"].BackgroundTransparency = 1
G2L["43"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["43"].BorderSizePixel = 0
G2L["43"].ClipsDescendants = false
G2L["43"].Draggable = false
G2L["43"].Position = UDim2.new(0.34978673, 0, 0.32632598, 0)
G2L["43"].Rotation = 0
G2L["43"].Selectable = false
G2L["43"].SelectionOrder = 0
G2L["43"].Size = UDim2.new(0, 275, 0, 165)
G2L["43"].Visible = true
G2L["43"].ZIndex = 1
G2L["43"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.credits.ImageLabel
G2L["44"].Name = [[ImageLabel]]
G2L["44"].Image = [[rbxassetid://14801957514]]
G2L["44"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["44"].ScaleType = Enum.ScaleType.Stretch
G2L["44"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["44"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["44"].Active = false
G2L["44"].AnchorPoint = Vector2.new(0, 0)
G2L["44"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["44"].BackgroundTransparency = 0
G2L["44"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["44"].BorderSizePixel = 0
G2L["44"].ClipsDescendants = false
G2L["44"].Draggable = false
G2L["44"].Position = UDim2.new(-0.78909093, 0, 3.9939394, 0)
G2L["44"].Rotation = 0
G2L["44"].Selectable = false
G2L["44"].SelectionOrder = 0
G2L["44"].Size = UDim2.new(0, 52, 0, 48)
G2L["44"].Visible = true
G2L["44"].ZIndex = 1
G2L["44"].Parent = G2L["43"]

--ScreenGui.ssGUIv7.pg1.credits.ImageLabel.UIGradient
G2L["45"].Name = [[UIGradient]]
G2L["45"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(235, 8, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(235, 8, 0))};
G2L["45"].Enabled = true
G2L["45"].Rotation = 0
G2L["45"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["45"].Parent = G2L["44"]

--ScreenGui.ssGUIv7.pg1.credits.TextLabel
G2L["46"].Name = [[TextLabel]]
G2L["46"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["46"].Text = [[made by mario.ss & enitytest]]
G2L["46"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["46"].TextScaled = true
G2L["46"].TextSize = 42
G2L["46"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["46"].TextStrokeTransparency = 1
G2L["46"].TextWrapped = true
G2L["46"].TextXAlignment = Enum.TextXAlignment.Center
G2L["46"].TextYAlignment = Enum.TextYAlignment.Center
G2L["46"].Active = false
G2L["46"].AnchorPoint = Vector2.new(0, 0)
G2L["46"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["46"].BackgroundTransparency = 0
G2L["46"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["46"].BorderSizePixel = 2
G2L["46"].ClipsDescendants = false
G2L["46"].Draggable = false
G2L["46"].Position = UDim2.new(-0.60354406, 0, 4.084246, 0)
G2L["46"].Rotation = 0
G2L["46"].Selectable = false
G2L["46"].SelectionOrder = 0
G2L["46"].Size = UDim2.new(0, 194, 0, 25)
G2L["46"].Visible = true
G2L["46"].ZIndex = 1
G2L["46"].Parent = G2L["43"]

--ScreenGui.ssGUIv7.pg1.credits.TextLabel.LocalScript
G2L["47"].Name = [[LocalScript]]
G2L["47"].Parent = G2L["46"]

--ScreenGui.ssGUIv7.pg1.credits.TextLabel.UICorner
G2L["48"].Name = [[UICorner]]
G2L["48"].CornerRadius = UDim.new(0, 200)
G2L["48"].Parent = G2L["46"]

--ScreenGui.ssGUIv7.pg1.Hints
G2L["49"].Name = [[Hints]]
G2L["49"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["50"].Name = [[hint]]
G2L["50"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["50"].Text = [[Hint2]]
G2L["50"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["50"].TextScaled = false
G2L["50"].TextSize = 14
G2L["50"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["50"].TextStrokeTransparency = 1
G2L["50"].TextWrapped = false
G2L["50"].TextXAlignment = Enum.TextXAlignment.Center
G2L["50"].TextYAlignment = Enum.TextYAlignment.Center
G2L["50"].Active = true
G2L["50"].AnchorPoint = Vector2.new(0, 0)
G2L["50"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["50"].BackgroundTransparency = 0
G2L["50"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["50"].BorderSizePixel = 3
G2L["50"].ClipsDescendants = false
G2L["50"].Draggable = false
G2L["50"].Position = UDim2.new(0.098988004, 0, 0.54954344, 0)
G2L["50"].Rotation = 0
G2L["50"].Selectable = true
G2L["50"].SelectionOrder = 0
G2L["50"].Size = UDim2.new(0, 157, 0, 29)
G2L["50"].Visible = true
G2L["50"].ZIndex = 1
G2L["50"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["51"].Name = [[Script]]
G2L["51"].Parent = G2L["50"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["52"].Name = [[hint]]
G2L["52"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["52"].Text = [[Hint3]]
G2L["52"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["52"].TextScaled = false
G2L["52"].TextSize = 14
G2L["52"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["52"].TextStrokeTransparency = 1
G2L["52"].TextWrapped = false
G2L["52"].TextXAlignment = Enum.TextXAlignment.Center
G2L["52"].TextYAlignment = Enum.TextYAlignment.Center
G2L["52"].Active = true
G2L["52"].AnchorPoint = Vector2.new(0, 0)
G2L["52"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["52"].BackgroundTransparency = 0
G2L["52"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["52"].BorderSizePixel = 3
G2L["52"].ClipsDescendants = false
G2L["52"].Draggable = false
G2L["52"].Position = UDim2.new(0.3769433, 0, 0.5510082, 0)
G2L["52"].Rotation = 0
G2L["52"].Selectable = true
G2L["52"].SelectionOrder = 0
G2L["52"].Size = UDim2.new(0, 157, 0, 29)
G2L["52"].Visible = true
G2L["52"].ZIndex = 1
G2L["52"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["53"].Name = [[Script]]
G2L["53"].Parent = G2L["52"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["54"].Name = [[hint]]
G2L["54"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["54"].Text = [[Hint3]]
G2L["54"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["54"].TextScaled = false
G2L["54"].TextSize = 14
G2L["54"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["54"].TextStrokeTransparency = 1
G2L["54"].TextWrapped = false
G2L["54"].TextXAlignment = Enum.TextXAlignment.Center
G2L["54"].TextYAlignment = Enum.TextYAlignment.Center
G2L["54"].Active = true
G2L["54"].AnchorPoint = Vector2.new(0, 0)
G2L["54"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["54"].BackgroundTransparency = 0
G2L["54"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["54"].BorderSizePixel = 3
G2L["54"].ClipsDescendants = false
G2L["54"].Draggable = false
G2L["54"].Position = UDim2.new(0.64531386, 0, 0.55217785, 0)
G2L["54"].Rotation = 0
G2L["54"].Selectable = true
G2L["54"].SelectionOrder = 0
G2L["54"].Size = UDim2.new(0, 157, 0, 29)
G2L["54"].Visible = true
G2L["54"].ZIndex = 1
G2L["54"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["55"].Name = [[Script]]
G2L["55"].Parent = G2L["54"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["56"].Name = [[hint]]
G2L["56"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["56"].Text = [[Hint4]]
G2L["56"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["56"].TextScaled = false
G2L["56"].TextSize = 14
G2L["56"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["56"].TextStrokeTransparency = 1
G2L["56"].TextWrapped = false
G2L["56"].TextXAlignment = Enum.TextXAlignment.Center
G2L["56"].TextYAlignment = Enum.TextYAlignment.Center
G2L["56"].Active = true
G2L["56"].AnchorPoint = Vector2.new(0, 0)
G2L["56"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["56"].BackgroundTransparency = 0
G2L["56"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["56"].BorderSizePixel = 3
G2L["56"].ClipsDescendants = false
G2L["56"].Draggable = false
G2L["56"].Position = UDim2.new(0.098988004, 0, 0.5806353, 0)
G2L["56"].Rotation = 0
G2L["56"].Selectable = true
G2L["56"].SelectionOrder = 0
G2L["56"].Size = UDim2.new(0, 157, 0, 29)
G2L["56"].Visible = true
G2L["56"].ZIndex = 1
G2L["56"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["57"].Name = [[hint]]
G2L["57"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["57"].Text = [[Hint5]]
G2L["57"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["57"].TextScaled = false
G2L["57"].TextSize = 14
G2L["57"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["57"].TextStrokeTransparency = 1
G2L["57"].TextWrapped = false
G2L["57"].TextXAlignment = Enum.TextXAlignment.Center
G2L["57"].TextYAlignment = Enum.TextYAlignment.Center
G2L["57"].Active = true
G2L["57"].AnchorPoint = Vector2.new(0, 0)
G2L["57"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["57"].BackgroundTransparency = 0
G2L["57"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["57"].BorderSizePixel = 3
G2L["57"].ClipsDescendants = false
G2L["57"].Draggable = false
G2L["57"].Position = UDim2.new(0.3769433, 0, 0.58062285, 0)
G2L["57"].Rotation = 0
G2L["57"].Selectable = true
G2L["57"].SelectionOrder = 0
G2L["57"].Size = UDim2.new(0, 157, 0, 29)
G2L["57"].Visible = true
G2L["57"].ZIndex = 1
G2L["57"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["58"].Name = [[Script]]
G2L["58"].Parent = G2L["57"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["59"].Name = [[hint]]
G2L["59"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["59"].Text = [[Hint6]]
G2L["59"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["59"].TextScaled = false
G2L["59"].TextSize = 14
G2L["59"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["59"].TextStrokeTransparency = 1
G2L["59"].TextWrapped = false
G2L["59"].TextXAlignment = Enum.TextXAlignment.Center
G2L["59"].TextYAlignment = Enum.TextYAlignment.Center
G2L["59"].Active = true
G2L["59"].AnchorPoint = Vector2.new(0, 0)
G2L["59"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["59"].BackgroundTransparency = 0
G2L["59"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["59"].BorderSizePixel = 3
G2L["59"].ClipsDescendants = false
G2L["59"].Draggable = false
G2L["59"].Position = UDim2.new(0.64531386, 0, 0.5805946, 0)
G2L["59"].Rotation = 0
G2L["59"].Selectable = true
G2L["59"].SelectionOrder = 0
G2L["59"].Size = UDim2.new(0, 157, 0, 29)
G2L["59"].Visible = true
G2L["59"].ZIndex = 1
G2L["59"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["60"].Name = [[Script]]
G2L["60"].Parent = G2L["59"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["61"].Name = [[hint]]
G2L["61"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["61"].Text = [[Hint7]]
G2L["61"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["61"].TextScaled = false
G2L["61"].TextSize = 14
G2L["61"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["61"].TextStrokeTransparency = 1
G2L["61"].TextWrapped = false
G2L["61"].TextXAlignment = Enum.TextXAlignment.Center
G2L["61"].TextYAlignment = Enum.TextYAlignment.Center
G2L["61"].Active = true
G2L["61"].AnchorPoint = Vector2.new(0, 0)
G2L["61"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["61"].BackgroundTransparency = 0
G2L["61"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["61"].BorderSizePixel = 3
G2L["61"].ClipsDescendants = false
G2L["61"].Draggable = false
G2L["61"].Position = UDim2.new(0.098988004, 0, 0.61493915, 0)
G2L["61"].Rotation = 0
G2L["61"].Selectable = true
G2L["61"].SelectionOrder = 0
G2L["61"].Size = UDim2.new(0, 157, 0, 29)
G2L["61"].Visible = true
G2L["61"].ZIndex = 1
G2L["61"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["62"].Name = [[Script]]
G2L["62"].Parent = G2L["61"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["63"].Name = [[hint]]
G2L["63"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["63"].Text = [[Hint8]]
G2L["63"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["63"].TextScaled = false
G2L["63"].TextSize = 14
G2L["63"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["63"].TextStrokeTransparency = 1
G2L["63"].TextWrapped = false
G2L["63"].TextXAlignment = Enum.TextXAlignment.Center
G2L["63"].TextYAlignment = Enum.TextYAlignment.Center
G2L["63"].Active = true
G2L["63"].AnchorPoint = Vector2.new(0, 0)
G2L["63"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["63"].BackgroundTransparency = 0
G2L["63"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["63"].BorderSizePixel = 3
G2L["63"].ClipsDescendants = false
G2L["63"].Draggable = false
G2L["63"].Position = UDim2.new(0.3769433, 0, 0.6153675, 0)
G2L["63"].Rotation = 0
G2L["63"].Selectable = true
G2L["63"].SelectionOrder = 0
G2L["63"].Size = UDim2.new(0, 157, 0, 29)
G2L["63"].Visible = true
G2L["63"].ZIndex = 1
G2L["63"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["64"].Name = [[Script]]
G2L["64"].Parent = G2L["63"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["65"].Name = [[hint]]
G2L["65"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["65"].Text = [[Hint8]]
G2L["65"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["65"].TextScaled = false
G2L["65"].TextSize = 14
G2L["65"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["65"].TextStrokeTransparency = 1
G2L["65"].TextWrapped = false
G2L["65"].TextXAlignment = Enum.TextXAlignment.Center
G2L["65"].TextYAlignment = Enum.TextYAlignment.Center
G2L["65"].Active = true
G2L["65"].AnchorPoint = Vector2.new(0, 0)
G2L["65"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["65"].BackgroundTransparency = 0
G2L["65"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["65"].BorderSizePixel = 3
G2L["65"].ClipsDescendants = false
G2L["65"].Draggable = false
G2L["65"].Position = UDim2.new(0.64531386, 0, 0.61633825, 0)
G2L["65"].Rotation = 0
G2L["65"].Selectable = true
G2L["65"].SelectionOrder = 0
G2L["65"].Size = UDim2.new(0, 157, 0, 29)
G2L["65"].Visible = true
G2L["65"].ZIndex = 1
G2L["65"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["66"].Name = [[Script]]
G2L["66"].Parent = G2L["65"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["67"].Name = [[hint]]
G2L["67"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["67"].Text = [[Hint8]]
G2L["67"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["67"].TextScaled = false
G2L["67"].TextSize = 14
G2L["67"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["67"].TextStrokeTransparency = 1
G2L["67"].TextWrapped = false
G2L["67"].TextXAlignment = Enum.TextXAlignment.Center
G2L["67"].TextYAlignment = Enum.TextYAlignment.Center
G2L["67"].Active = true
G2L["67"].AnchorPoint = Vector2.new(0, 0)
G2L["67"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["67"].BackgroundTransparency = 0
G2L["67"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["67"].BorderSizePixel = 3
G2L["67"].ClipsDescendants = false
G2L["67"].Draggable = false
G2L["67"].Position = UDim2.new(0.098988004, 0, 0.6507969, 0)
G2L["67"].Rotation = 0
G2L["67"].Selectable = true
G2L["67"].SelectionOrder = 0
G2L["67"].Size = UDim2.new(0, 157, 0, 29)
G2L["67"].Visible = true
G2L["67"].ZIndex = 1
G2L["67"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["68"].Name = [[Script]]
G2L["68"].Parent = G2L["67"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["69"].Name = [[hint]]
G2L["69"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["69"].Text = [[Hint9]]
G2L["69"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["69"].TextScaled = false
G2L["69"].TextSize = 14
G2L["69"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["69"].TextStrokeTransparency = 1
G2L["69"].TextWrapped = false
G2L["69"].TextXAlignment = Enum.TextXAlignment.Center
G2L["69"].TextYAlignment = Enum.TextYAlignment.Center
G2L["69"].Active = true
G2L["69"].AnchorPoint = Vector2.new(0, 0)
G2L["69"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["69"].BackgroundTransparency = 0
G2L["69"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["69"].BorderSizePixel = 3
G2L["69"].ClipsDescendants = false
G2L["69"].Draggable = false
G2L["69"].Position = UDim2.new(0.37534583, 0, 0.6514838, 0)
G2L["69"].Rotation = 0
G2L["69"].Selectable = true
G2L["69"].SelectionOrder = 0
G2L["69"].Size = UDim2.new(0, 157, 0, 29)
G2L["69"].Visible = true
G2L["69"].ZIndex = 1
G2L["69"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["70"].Name = [[Script]]
G2L["70"].Parent = G2L["69"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["71"].Name = [[hint]]
G2L["71"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["71"].Text = [[Hint10]]
G2L["71"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["71"].TextScaled = false
G2L["71"].TextSize = 14
G2L["71"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["71"].TextStrokeTransparency = 1
G2L["71"].TextWrapped = false
G2L["71"].TextXAlignment = Enum.TextXAlignment.Center
G2L["71"].TextYAlignment = Enum.TextYAlignment.Center
G2L["71"].Active = true
G2L["71"].AnchorPoint = Vector2.new(0, 0)
G2L["71"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["71"].BackgroundTransparency = 0
G2L["71"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["71"].BorderSizePixel = 3
G2L["71"].ClipsDescendants = false
G2L["71"].Draggable = false
G2L["71"].Position = UDim2.new(0.64531386, 0, 0.65089005, 0)
G2L["71"].Rotation = 0
G2L["71"].Selectable = true
G2L["71"].SelectionOrder = 0
G2L["71"].Size = UDim2.new(0, 157, 0, 29)
G2L["71"].Visible = true
G2L["71"].ZIndex = 1
G2L["71"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["72"].Name = [[Script]]
G2L["72"].Parent = G2L["71"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["73"].Name = [[hint]]
G2L["73"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["73"].Text = [[Hint11]]
G2L["73"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["73"].TextScaled = false
G2L["73"].TextSize = 14
G2L["73"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["73"].TextStrokeTransparency = 1
G2L["73"].TextWrapped = false
G2L["73"].TextXAlignment = Enum.TextXAlignment.Center
G2L["73"].TextYAlignment = Enum.TextYAlignment.Center
G2L["73"].Active = true
G2L["73"].AnchorPoint = Vector2.new(0, 0)
G2L["73"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["73"].BackgroundTransparency = 0
G2L["73"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["73"].BorderSizePixel = 3
G2L["73"].ClipsDescendants = false
G2L["73"].Draggable = false
G2L["73"].Position = UDim2.new(0.098988004, 0, 0.6861034, 0)
G2L["73"].Rotation = 0
G2L["73"].Selectable = true
G2L["73"].SelectionOrder = 0
G2L["73"].Size = UDim2.new(0, 157, 0, 29)
G2L["73"].Visible = true
G2L["73"].ZIndex = 1
G2L["73"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["74"].Name = [[Script]]
G2L["74"].Parent = G2L["73"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["75"].Name = [[hint]]
G2L["75"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["75"].Text = [[Hint12]]
G2L["75"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["75"].TextScaled = false
G2L["75"].TextSize = 14
G2L["75"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["75"].TextStrokeTransparency = 1
G2L["75"].TextWrapped = false
G2L["75"].TextXAlignment = Enum.TextXAlignment.Center
G2L["75"].TextYAlignment = Enum.TextYAlignment.Center
G2L["75"].Active = true
G2L["75"].AnchorPoint = Vector2.new(0, 0)
G2L["75"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["75"].BackgroundTransparency = 0
G2L["75"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["75"].BorderSizePixel = 3
G2L["75"].ClipsDescendants = false
G2L["75"].Draggable = false
G2L["75"].Position = UDim2.new(0.3737484, 0, 0.6863506, 0)
G2L["75"].Rotation = 0
G2L["75"].Selectable = true
G2L["75"].SelectionOrder = 0
G2L["75"].Size = UDim2.new(0, 157, 0, 29)
G2L["75"].Visible = true
G2L["75"].ZIndex = 1
G2L["75"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["76"].Name = [[Script]]
G2L["76"].Parent = G2L["75"]

--ScreenGui.ssGUIv7.pg1.Hints.hint
G2L["77"].Name = [[hint]]
G2L["77"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["77"].Text = [[Hint13]]
G2L["77"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["77"].TextScaled = false
G2L["77"].TextSize = 14
G2L["77"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["77"].TextStrokeTransparency = 1
G2L["77"].TextWrapped = false
G2L["77"].TextXAlignment = Enum.TextXAlignment.Center
G2L["77"].TextYAlignment = Enum.TextYAlignment.Center
G2L["77"].Active = true
G2L["77"].AnchorPoint = Vector2.new(0, 0)
G2L["77"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["77"].BackgroundTransparency = 0
G2L["77"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["77"].BorderSizePixel = 3
G2L["77"].ClipsDescendants = false
G2L["77"].Draggable = false
G2L["77"].Position = UDim2.new(0.64531386, 0, 0.6869108, 0)
G2L["77"].Rotation = 0
G2L["77"].Selectable = true
G2L["77"].SelectionOrder = 0
G2L["77"].Size = UDim2.new(0, 157, 0, 29)
G2L["77"].Visible = true
G2L["77"].ZIndex = 1
G2L["77"].Parent = G2L["49"]

--ScreenGui.ssGUIv7.pg1.Hints.hint.Script
G2L["78"].Name = [[Script]]
G2L["78"].Parent = G2L["77"]

--ScreenGui.ssGUIv7.pg1.Label
G2L["79"].Name = [[Label]]
G2L["79"].Active = false
G2L["79"].AnchorPoint = Vector2.new(0, 0)
G2L["79"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["79"].BackgroundTransparency = 0.25
G2L["79"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["79"].BorderSizePixel = 2
G2L["79"].ClipsDescendants = false
G2L["79"].Draggable = false
G2L["79"].Position = UDim2.new(0.086208455, 0, 0.48463744, 0)
G2L["79"].Rotation = 0
G2L["79"].Selectable = false
G2L["79"].SelectionOrder = 0
G2L["79"].Size = UDim2.new(0, 532, 0, 52)
G2L["79"].Visible = true
G2L["79"].ZIndex = 1
G2L["79"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.Label.UICorner
G2L["80"].Name = [[UICorner]]
G2L["80"].CornerRadius = UDim.new(0, 200)
G2L["80"].Parent = G2L["79"]

--ScreenGui.ssGUIv7.pg1.Label.TextLabel
G2L["81"].Name = [[TextLabel]]
G2L["81"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["81"].Text = [[Hints]]
G2L["81"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["81"].TextScaled = true
G2L["81"].TextSize = 14
G2L["81"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["81"].TextStrokeTransparency = 1
G2L["81"].TextWrapped = true
G2L["81"].TextXAlignment = Enum.TextXAlignment.Center
G2L["81"].TextYAlignment = Enum.TextYAlignment.Center
G2L["81"].Active = false
G2L["81"].AnchorPoint = Vector2.new(0, 0)
G2L["81"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["81"].BackgroundTransparency = 1
G2L["81"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["81"].BorderSizePixel = 0
G2L["81"].ClipsDescendants = false
G2L["81"].Draggable = false
G2L["81"].Position = UDim2.new(0.30075186, 0, 0.17307693, 0)
G2L["81"].Rotation = 0
G2L["81"].Selectable = false
G2L["81"].SelectionOrder = 0
G2L["81"].Size = UDim2.new(0, 200, 0, 34)
G2L["81"].Visible = true
G2L["81"].ZIndex = 1
G2L["81"].Parent = G2L["79"]

--ScreenGui.ssGUIv7.pg1.TextButton
G2L["82"].Name = [[TextButton]]
G2L["82"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["82"].Text = [[Next Page]]
G2L["82"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["82"].TextScaled = true
G2L["82"].TextSize = 14
G2L["82"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["82"].TextStrokeTransparency = 1
G2L["82"].TextWrapped = true
G2L["82"].TextXAlignment = Enum.TextXAlignment.Center
G2L["82"].TextYAlignment = Enum.TextYAlignment.Center
G2L["82"].Active = true
G2L["82"].AnchorPoint = Vector2.new(0, 0)
G2L["82"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["82"].BackgroundTransparency = 0
G2L["82"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["82"].BorderSizePixel = 3
G2L["82"].ClipsDescendants = false
G2L["82"].Draggable = false
G2L["82"].Position = UDim2.new(0.42651758, 0, 0.9376442, 0)
G2L["82"].Rotation = 0
G2L["82"].Selectable = true
G2L["82"].SelectionOrder = 0
G2L["82"].Size = UDim2.new(0, 200, 0, 50)
G2L["82"].Visible = true
G2L["82"].ZIndex = 1
G2L["82"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.TextButton.LocalScript
G2L["83"].Name = [[LocalScript]]
G2L["83"].Parent = G2L["82"]

--ScreenGui.ssGUIv7.pg1.TextButton.UICorner
G2L["84"].Name = [[UICorner]]
G2L["84"].CornerRadius = UDim.new(0, 8)
G2L["84"].Parent = G2L["82"]

--ScreenGui.ssGUIv7.pg1.TextButton.UIGradient
G2L["85"].Name = [[UIGradient]]
G2L["85"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["85"].Enabled = true
G2L["85"].Rotation = 0
G2L["85"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["85"].Parent = G2L["82"]

--ScreenGui.ssGUIv7.pg1.code
G2L["86"].Name = [[code]]
G2L["86"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["87"].Name = [[TextButton]]
G2L["87"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["87"].Text = [[Itsnotskeleton v4]]
G2L["87"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["87"].TextScaled = false
G2L["87"].TextSize = 14
G2L["87"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["87"].TextStrokeTransparency = 1
G2L["87"].TextWrapped = false
G2L["87"].TextXAlignment = Enum.TextXAlignment.Center
G2L["87"].TextYAlignment = Enum.TextYAlignment.Center
G2L["87"].Active = true
G2L["87"].AnchorPoint = Vector2.new(0, 0)
G2L["87"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["87"].BackgroundTransparency = 0
G2L["87"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["87"].BorderSizePixel = 3
G2L["87"].ClipsDescendants = false
G2L["87"].Draggable = false
G2L["87"].Position = UDim2.new(0.084611036, 0, 0.21405016, 0)
G2L["87"].Rotation = 0
G2L["87"].Selectable = true
G2L["87"].SelectionOrder = 0
G2L["87"].Size = UDim2.new(0, 157, 0, 29)
G2L["87"].Visible = true
G2L["87"].ZIndex = 1
G2L["87"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["88"].Name = [[Script]]
G2L["88"].Parent = G2L["87"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["89"].Name = [[LocalScript]]
G2L["89"].Parent = G2L["87"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["90"].Name = [[GetScript]]
G2L["90"].Parent = G2L["87"]

--ScreenGui.ssGUIv7.pg1.code.mrbean
G2L["91"].Name = [[mrbean]]
G2L["91"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["91"].Text = [[mrbean admin]]
G2L["91"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["91"].TextScaled = true
G2L["91"].TextSize = 14
G2L["91"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["91"].TextStrokeTransparency = 1
G2L["91"].TextWrapped = true
G2L["91"].TextXAlignment = Enum.TextXAlignment.Center
G2L["91"].TextYAlignment = Enum.TextYAlignment.Center
G2L["91"].Active = true
G2L["91"].AnchorPoint = Vector2.new(0, 0)
G2L["91"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["91"].BackgroundTransparency = 0
G2L["91"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["91"].BorderSizePixel = 2
G2L["91"].ClipsDescendants = false
G2L["91"].Draggable = false
G2L["91"].Position = UDim2.new(0.37380192, 0, 0.44769025, 0)
G2L["91"].Rotation = 0
G2L["91"].Selectable = true
G2L["91"].SelectionOrder = 0
G2L["91"].Size = UDim2.new(0, 133, 0, 28)
G2L["91"].Visible = true
G2L["91"].ZIndex = 1
G2L["91"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.mrbean.RippleClick
G2L["92"].Name = [[RippleClick]]
G2L["92"].Parent = G2L["91"]

--ScreenGui.ssGUIv7.pg1.code.mrbean.RippleClick.Circle
G2L["93"].Name = [[Circle]]
G2L["93"].Image = [[rbxassetid://266543268]]
G2L["93"].ImageColor3 = Color3.fromRGB(0, 0, 0)
G2L["93"].ScaleType = Enum.ScaleType.Stretch
G2L["93"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["93"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["93"].Active = false
G2L["93"].AnchorPoint = Vector2.new(0, 0)
G2L["93"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["93"].BackgroundTransparency = 1
G2L["93"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["93"].BorderSizePixel = 1
G2L["93"].ClipsDescendants = false
G2L["93"].Draggable = false
G2L["93"].Position = UDim2.new(0, 0, 0, 0)
G2L["93"].Rotation = 0
G2L["93"].Selectable = false
G2L["93"].SelectionOrder = 0
G2L["93"].Size = UDim2.new(0, 0, 0, 0)
G2L["93"].Visible = true
G2L["93"].ZIndex = 10
G2L["93"].Parent = G2L["92"]

--ScreenGui.ssGUIv7.pg1.code.mrbean.ServerEventHandler
G2L["94"].Name = [[ServerEventHandler]]
G2L["94"].Parent = G2L["91"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["95"].Name = [[TextButton]]
G2L["95"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["95"].Text = [[Nuke (LondoSS)]]
G2L["95"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["95"].TextScaled = false
G2L["95"].TextSize = 14
G2L["95"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["95"].TextStrokeTransparency = 1
G2L["95"].TextWrapped = false
G2L["95"].TextXAlignment = Enum.TextXAlignment.Center
G2L["95"].TextYAlignment = Enum.TextYAlignment.Center
G2L["95"].Active = true
G2L["95"].AnchorPoint = Vector2.new(0, 0)
G2L["95"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["95"].BackgroundTransparency = 0
G2L["95"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["95"].BorderSizePixel = 3
G2L["95"].ClipsDescendants = false
G2L["95"].Draggable = false
G2L["95"].Position = UDim2.new(0.084611006, 0, 0.4454817, 0)
G2L["95"].Rotation = 0
G2L["95"].Selectable = true
G2L["95"].SelectionOrder = 0
G2L["95"].Size = UDim2.new(0, 157, 0, 29)
G2L["95"].Visible = true
G2L["95"].ZIndex = 1
G2L["95"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["96"].Name = [[Script]]
G2L["96"].Parent = G2L["95"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["97"].Name = [[LocalScript]]
G2L["97"].Parent = G2L["95"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["98"].Name = [[GetScript]]
G2L["98"].Parent = G2L["95"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["99"].Name = [[TextButton]]
G2L["99"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["99"].Text = [[inf yeild admin]]
G2L["99"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["99"].TextScaled = false
G2L["99"].TextSize = 14
G2L["99"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["99"].TextStrokeTransparency = 1
G2L["99"].TextWrapped = false
G2L["99"].TextXAlignment = Enum.TextXAlignment.Center
G2L["99"].TextYAlignment = Enum.TextYAlignment.Center
G2L["99"].Active = true
G2L["99"].AnchorPoint = Vector2.new(0, 0)
G2L["99"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["99"].BackgroundTransparency = 0
G2L["99"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["99"].BorderSizePixel = 3
G2L["99"].ClipsDescendants = false
G2L["99"].Draggable = false
G2L["99"].Position = UDim2.new(0.6772628, 0, 0.45449933, 0)
G2L["99"].Rotation = 0
G2L["99"].Selectable = true
G2L["99"].SelectionOrder = 0
G2L["99"].Size = UDim2.new(0, 157, 0, 29)
G2L["99"].Visible = true
G2L["99"].ZIndex = 1
G2L["99"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["100"].Name = [[Script]]
G2L["100"].Parent = G2L["99"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["101"].Name = [[LocalScript]]
G2L["101"].Parent = G2L["99"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["102"].Name = [[GetScript]]
G2L["102"].Parent = G2L["99"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["103"].Name = [[TextButton]]
G2L["103"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["103"].Text = [[Dreamybull v8]]
G2L["103"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["103"].TextScaled = false
G2L["103"].TextSize = 14
G2L["103"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["103"].TextStrokeTransparency = 1
G2L["103"].TextWrapped = false
G2L["103"].TextXAlignment = Enum.TextXAlignment.Center
G2L["103"].TextYAlignment = Enum.TextYAlignment.Center
G2L["103"].Active = true
G2L["103"].AnchorPoint = Vector2.new(0, 0)
G2L["103"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["103"].BackgroundTransparency = 0
G2L["103"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["103"].BorderSizePixel = 3
G2L["103"].ClipsDescendants = false
G2L["103"].Draggable = false
G2L["103"].Position = UDim2.new(0.37534583, 0, 0.21465428, 0)
G2L["103"].Rotation = 0
G2L["103"].Selectable = true
G2L["103"].SelectionOrder = 0
G2L["103"].Size = UDim2.new(0, 157, 0, 29)
G2L["103"].Visible = true
G2L["103"].ZIndex = 1
G2L["103"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["104"].Name = [[Script]]
G2L["104"].Parent = G2L["103"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["105"].Name = [[LocalScript]]
G2L["105"].Parent = G2L["103"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["106"].Name = [[GetScript]]
G2L["106"].Parent = G2L["103"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["107"].Name = [[TextButton]]
G2L["107"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["107"].Text = [[k00p3]]
G2L["107"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["107"].TextScaled = false
G2L["107"].TextSize = 14
G2L["107"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["107"].TextStrokeTransparency = 1
G2L["107"].TextWrapped = false
G2L["107"].TextXAlignment = Enum.TextXAlignment.Center
G2L["107"].TextYAlignment = Enum.TextYAlignment.Center
G2L["107"].Active = true
G2L["107"].AnchorPoint = Vector2.new(0, 0)
G2L["107"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["107"].BackgroundTransparency = 0
G2L["107"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["107"].BorderSizePixel = 3
G2L["107"].ClipsDescendants = false
G2L["107"].Draggable = false
G2L["107"].Position = UDim2.new(0.086208455, 0, 0.16222858, 0)
G2L["107"].Rotation = 0
G2L["107"].Selectable = true
G2L["107"].SelectionOrder = 0
G2L["107"].Size = UDim2.new(0, 157, 0, 29)
G2L["107"].Visible = true
G2L["107"].ZIndex = 1
G2L["107"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["108"].Name = [[Script]]
G2L["108"].Parent = G2L["107"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["109"].Name = [[LocalScript]]
G2L["109"].Parent = G2L["107"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["110"].Name = [[GetScript]]
G2L["110"].Parent = G2L["107"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["111"].Name = [[TextButton]]
G2L["111"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["111"].Text = [[die mart]]
G2L["111"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["111"].TextScaled = false
G2L["111"].TextSize = 14
G2L["111"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["111"].TextStrokeTransparency = 1
G2L["111"].TextWrapped = false
G2L["111"].TextXAlignment = Enum.TextXAlignment.Center
G2L["111"].TextYAlignment = Enum.TextYAlignment.Center
G2L["111"].Active = true
G2L["111"].AnchorPoint = Vector2.new(0, 0)
G2L["111"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["111"].BackgroundTransparency = 0
G2L["111"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["111"].BorderSizePixel = 3
G2L["111"].ClipsDescendants = false
G2L["111"].Draggable = false
G2L["111"].Position = UDim2.new(0.6836525, 0, 0.1237536, 0)
G2L["111"].Rotation = 0
G2L["111"].Selectable = true
G2L["111"].SelectionOrder = 0
G2L["111"].Size = UDim2.new(0, 157, 0, 29)
G2L["111"].Visible = true
G2L["111"].ZIndex = 1
G2L["111"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["112"].Name = [[Script]]
G2L["112"].Parent = G2L["111"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["113"].Name = [[LocalScript]]
G2L["113"].Parent = G2L["111"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["114"].Name = [[GetScript]]
G2L["114"].Parent = G2L["111"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["115"].Name = [[TextButton]]
G2L["115"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["115"].Text = [[topk3k]]
G2L["115"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["115"].TextScaled = false
G2L["115"].TextSize = 14
G2L["115"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["115"].TextStrokeTransparency = 1
G2L["115"].TextWrapped = false
G2L["115"].TextXAlignment = Enum.TextXAlignment.Center
G2L["115"].TextYAlignment = Enum.TextYAlignment.Center
G2L["115"].Active = true
G2L["115"].AnchorPoint = Vector2.new(0, 0)
G2L["115"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["115"].BackgroundTransparency = 0
G2L["115"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["115"].BorderSizePixel = 3
G2L["115"].ClipsDescendants = false
G2L["115"].Draggable = false
G2L["115"].Position = UDim2.new(0.6836525, 0, 0.2134314, 0)
G2L["115"].Rotation = 0
G2L["115"].Selectable = true
G2L["115"].SelectionOrder = 0
G2L["115"].Size = UDim2.new(0, 157, 0, 29)
G2L["115"].Visible = true
G2L["115"].ZIndex = 1
G2L["115"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["116"].Name = [[Script]]
G2L["116"].Parent = G2L["115"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["117"].Name = [[LocalScript]]
G2L["117"].Parent = G2L["115"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["118"].Name = [[GetScript]]
G2L["118"].Parent = G2L["115"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["119"].Name = [[TextButton]]
G2L["119"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["119"].Text = [[k00p1]]
G2L["119"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["119"].TextScaled = false
G2L["119"].TextSize = 14
G2L["119"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["119"].TextStrokeTransparency = 1
G2L["119"].TextWrapped = false
G2L["119"].TextXAlignment = Enum.TextXAlignment.Center
G2L["119"].TextYAlignment = Enum.TextYAlignment.Center
G2L["119"].Active = true
G2L["119"].AnchorPoint = Vector2.new(0, 0)
G2L["119"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["119"].BackgroundTransparency = 0
G2L["119"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["119"].BorderSizePixel = 3
G2L["119"].ClipsDescendants = false
G2L["119"].Draggable = false
G2L["119"].Position = UDim2.new(0.086208455, 0, 0.12242386, 0)
G2L["119"].Rotation = 0
G2L["119"].Selectable = true
G2L["119"].SelectionOrder = 0
G2L["119"].Size = UDim2.new(0, 157, 0, 29)
G2L["119"].Visible = true
G2L["119"].ZIndex = 1
G2L["119"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["120"].Name = [[Script]]
G2L["120"].Parent = G2L["119"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["121"].Name = [[LocalScript]]
G2L["121"].Parent = G2L["119"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["122"].Name = [[GetScript]]
G2L["122"].Parent = G2L["119"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["123"].Name = [[TextButton]]
G2L["123"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["123"].Text = [[k00p2]]
G2L["123"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["123"].TextScaled = false
G2L["123"].TextSize = 14
G2L["123"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["123"].TextStrokeTransparency = 1
G2L["123"].TextWrapped = false
G2L["123"].TextXAlignment = Enum.TextXAlignment.Center
G2L["123"].TextYAlignment = Enum.TextYAlignment.Center
G2L["123"].Active = true
G2L["123"].AnchorPoint = Vector2.new(0, 0)
G2L["123"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["123"].BackgroundTransparency = 0
G2L["123"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["123"].BorderSizePixel = 3
G2L["123"].ClipsDescendants = false
G2L["123"].Draggable = false
G2L["123"].Position = UDim2.new(0.3769433, 0, 0.2853463, 0)
G2L["123"].Rotation = 0
G2L["123"].Selectable = true
G2L["123"].SelectionOrder = 0
G2L["123"].Size = UDim2.new(0, 133, 0, 31)
G2L["123"].Visible = true
G2L["123"].ZIndex = 1
G2L["123"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["124"].Name = [[Script]]
G2L["124"].Parent = G2L["123"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["125"].Name = [[LocalScript]]
G2L["125"].Parent = G2L["123"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["126"].Name = [[GetScript]]
G2L["126"].Parent = G2L["123"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["127"].Name = [[TextButton]]
G2L["127"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["127"].Text = [[g00ngui]]
G2L["127"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["127"].TextScaled = false
G2L["127"].TextSize = 14
G2L["127"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["127"].TextStrokeTransparency = 1
G2L["127"].TextWrapped = false
G2L["127"].TextXAlignment = Enum.TextXAlignment.Center
G2L["127"].TextYAlignment = Enum.TextYAlignment.Center
G2L["127"].Active = true
G2L["127"].AnchorPoint = Vector2.new(0, 0)
G2L["127"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["127"].BackgroundTransparency = 0
G2L["127"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["127"].BorderSizePixel = 3
G2L["127"].ClipsDescendants = false
G2L["127"].Draggable = false
G2L["127"].Position = UDim2.new(0.3737484, 0, 0.16341704, 0)
G2L["127"].Rotation = 0
G2L["127"].Selectable = true
G2L["127"].SelectionOrder = 0
G2L["127"].Size = UDim2.new(0, 157, 0, 29)
G2L["127"].Visible = true
G2L["127"].ZIndex = 1
G2L["127"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["128"].Name = [[Script]]
G2L["128"].Parent = G2L["127"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["129"].Name = [[LocalScript]]
G2L["129"].Parent = G2L["127"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["130"].Name = [[GetScript]]
G2L["130"].Parent = G2L["127"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["131"].Name = [[TextButton]]
G2L["131"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["131"].Text = [[k00p4 (OP)]]
G2L["131"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["131"].TextScaled = false
G2L["131"].TextSize = 14
G2L["131"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["131"].TextStrokeTransparency = 1
G2L["131"].TextWrapped = false
G2L["131"].TextXAlignment = Enum.TextXAlignment.Center
G2L["131"].TextYAlignment = Enum.TextYAlignment.Center
G2L["131"].Active = true
G2L["131"].AnchorPoint = Vector2.new(0, 0)
G2L["131"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["131"].BackgroundTransparency = 0
G2L["131"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["131"].BorderSizePixel = 3
G2L["131"].ClipsDescendants = false
G2L["131"].Draggable = false
G2L["131"].Position = UDim2.new(0.6836525, 0, 0.16396038, 0)
G2L["131"].Rotation = 0
G2L["131"].Selectable = true
G2L["131"].SelectionOrder = 0
G2L["131"].Size = UDim2.new(0, 157, 0, 29)
G2L["131"].Visible = true
G2L["131"].ZIndex = 1
G2L["131"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["132"].Name = [[Script]]
G2L["132"].Parent = G2L["131"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["133"].Name = [[LocalScript]]
G2L["133"].Parent = G2L["131"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["134"].Name = [[GetScript]]
G2L["134"].Parent = G2L["131"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["135"].Name = [[TextButton]]
G2L["135"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["135"].Text = [[c00lgui (edit)]]
G2L["135"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["135"].TextScaled = false
G2L["135"].TextSize = 14
G2L["135"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["135"].TextStrokeTransparency = 1
G2L["135"].TextWrapped = false
G2L["135"].TextXAlignment = Enum.TextXAlignment.Center
G2L["135"].TextYAlignment = Enum.TextYAlignment.Center
G2L["135"].Active = true
G2L["135"].AnchorPoint = Vector2.new(0, 0)
G2L["135"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["135"].BackgroundTransparency = 0
G2L["135"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["135"].BorderSizePixel = 3
G2L["135"].ClipsDescendants = false
G2L["135"].Draggable = false
G2L["135"].Position = UDim2.new(0.084611006, 0, 0.3226151, 0)
G2L["135"].Rotation = 0
G2L["135"].Selectable = true
G2L["135"].SelectionOrder = 0
G2L["135"].Size = UDim2.new(0, 157, 0, 29)
G2L["135"].Visible = true
G2L["135"].ZIndex = 1
G2L["135"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["136"].Name = [[Script]]
G2L["136"].Parent = G2L["135"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["137"].Name = [[LocalScript]]
G2L["137"].Parent = G2L["135"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["138"].Name = [[GetScript]]
G2L["138"].Parent = G2L["135"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["139"].Name = [[TextButton]]
G2L["139"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["139"].Text = [[k00pkidd realm]]
G2L["139"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["139"].TextScaled = false
G2L["139"].TextSize = 14
G2L["139"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["139"].TextStrokeTransparency = 1
G2L["139"].TextWrapped = false
G2L["139"].TextXAlignment = Enum.TextXAlignment.Center
G2L["139"].TextYAlignment = Enum.TextYAlignment.Center
G2L["139"].Active = true
G2L["139"].AnchorPoint = Vector2.new(0, 0)
G2L["139"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["139"].BackgroundTransparency = 0
G2L["139"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["139"].BorderSizePixel = 3
G2L["139"].ClipsDescendants = false
G2L["139"].Draggable = false
G2L["139"].Position = UDim2.new(0.084611006, 0, 0.24998188, 0)
G2L["139"].Rotation = 0
G2L["139"].Selectable = true
G2L["139"].SelectionOrder = 0
G2L["139"].Size = UDim2.new(0, 157, 0, 29)
G2L["139"].Visible = true
G2L["139"].ZIndex = 1
G2L["139"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["140"].Name = [[Script]]
G2L["140"].Parent = G2L["139"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["141"].Name = [[LocalScript]]
G2L["141"].Parent = G2L["139"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["142"].Name = [[GetScript]]
G2L["142"].Parent = G2L["139"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["143"].Name = [[TextButton]]
G2L["143"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["143"].Text = [[k00p backdoor]]
G2L["143"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["143"].TextScaled = false
G2L["143"].TextSize = 14
G2L["143"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["143"].TextStrokeTransparency = 1
G2L["143"].TextWrapped = false
G2L["143"].TextXAlignment = Enum.TextXAlignment.Center
G2L["143"].TextYAlignment = Enum.TextYAlignment.Center
G2L["143"].Active = true
G2L["143"].AnchorPoint = Vector2.new(0, 0)
G2L["143"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["143"].BackgroundTransparency = 0
G2L["143"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["143"].BorderSizePixel = 3
G2L["143"].ClipsDescendants = false
G2L["143"].Draggable = false
G2L["143"].Position = UDim2.new(0.39451522, 0, 0.19184944, 0)
G2L["143"].Rotation = 0
G2L["143"].Selectable = true
G2L["143"].SelectionOrder = 0
G2L["143"].Size = UDim2.new(0, 129, 0, 20)
G2L["143"].Visible = true
G2L["143"].ZIndex = 1
G2L["143"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["144"].Name = [[Script]]
G2L["144"].Parent = G2L["143"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["145"].Name = [[LocalScript]]
G2L["145"].Parent = G2L["143"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["146"].Name = [[GetScript]]
G2L["146"].Parent = G2L["143"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["147"].Name = [[TextButton]]
G2L["147"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["147"].Text = [[secret (k00pagui edit)]]
G2L["147"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["147"].TextScaled = false
G2L["147"].TextSize = 14
G2L["147"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["147"].TextStrokeTransparency = 1
G2L["147"].TextWrapped = false
G2L["147"].TextXAlignment = Enum.TextXAlignment.Center
G2L["147"].TextYAlignment = Enum.TextYAlignment.Center
G2L["147"].Active = true
G2L["147"].AnchorPoint = Vector2.new(0, 0)
G2L["147"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["147"].BackgroundTransparency = 0
G2L["147"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["147"].BorderSizePixel = 3
G2L["147"].ClipsDescendants = false
G2L["147"].Draggable = false
G2L["147"].Position = UDim2.new(0.6836525, 0, 0.24893917, 0)
G2L["147"].Rotation = 0
G2L["147"].Selectable = true
G2L["147"].SelectionOrder = 0
G2L["147"].Size = UDim2.new(0, 157, 0, 29)
G2L["147"].Visible = true
G2L["147"].ZIndex = 1
G2L["147"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["148"].Name = [[Script]]
G2L["148"].Parent = G2L["147"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["149"].Name = [[LocalScript]]
G2L["149"].Parent = G2L["147"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["150"].Name = [[GetScript]]
G2L["150"].Parent = G2L["147"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["151"].Name = [[TextButton]]
G2L["151"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["151"].Text = [[bread v6]]
G2L["151"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["151"].TextScaled = false
G2L["151"].TextSize = 14
G2L["151"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["151"].TextStrokeTransparency = 1
G2L["151"].TextWrapped = false
G2L["151"].TextXAlignment = Enum.TextXAlignment.Center
G2L["151"].TextYAlignment = Enum.TextYAlignment.Center
G2L["151"].Active = true
G2L["151"].AnchorPoint = Vector2.new(0, 0)
G2L["151"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["151"].BackgroundTransparency = 0
G2L["151"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["151"].BorderSizePixel = 3
G2L["151"].ClipsDescendants = false
G2L["151"].Draggable = false
G2L["151"].Position = UDim2.new(0.6836525, 0, 0.28274766, 0)
G2L["151"].Rotation = 0
G2L["151"].Selectable = true
G2L["151"].SelectionOrder = 0
G2L["151"].Size = UDim2.new(0, 157, 0, 29)
G2L["151"].Visible = true
G2L["151"].ZIndex = 1
G2L["151"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["152"].Name = [[Script]]
G2L["152"].Parent = G2L["151"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["153"].Name = [[LocalScript]]
G2L["153"].Parent = G2L["151"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["154"].Name = [[GetScript]]
G2L["154"].Parent = G2L["151"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["155"].Name = [[TextButton]]
G2L["155"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["155"].Text = [[IP Log (Fake)]]
G2L["155"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["155"].TextScaled = false
G2L["155"].TextSize = 14
G2L["155"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["155"].TextStrokeTransparency = 1
G2L["155"].TextWrapped = false
G2L["155"].TextXAlignment = Enum.TextXAlignment.Center
G2L["155"].TextYAlignment = Enum.TextYAlignment.Center
G2L["155"].Active = true
G2L["155"].AnchorPoint = Vector2.new(0, 0)
G2L["155"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["155"].BackgroundTransparency = 0
G2L["155"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["155"].BorderSizePixel = 3
G2L["155"].ClipsDescendants = false
G2L["155"].Draggable = false
G2L["155"].Position = UDim2.new(0.3737484, 0, 0.24834602, 0)
G2L["155"].Rotation = 0
G2L["155"].Selectable = true
G2L["155"].SelectionOrder = 0
G2L["155"].Size = UDim2.new(0, 157, 0, 29)
G2L["155"].Visible = true
G2L["155"].ZIndex = 1
G2L["155"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["156"].Name = [[Script]]
G2L["156"].Parent = G2L["155"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["157"].Name = [[LocalScript]]
G2L["157"].Parent = G2L["155"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["158"].Name = [[GetScript]]
G2L["158"].Parent = G2L["155"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["159"].Name = [[TextButton]]
G2L["159"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["159"].Text = [[pass : (teamfatv19easter)]]
G2L["159"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["159"].TextScaled = false
G2L["159"].TextSize = 14
G2L["159"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["159"].TextStrokeTransparency = 1
G2L["159"].TextWrapped = false
G2L["159"].TextXAlignment = Enum.TextXAlignment.Center
G2L["159"].TextYAlignment = Enum.TextYAlignment.Center
G2L["159"].Active = true
G2L["159"].AnchorPoint = Vector2.new(0, 0)
G2L["159"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["159"].BackgroundTransparency = 0
G2L["159"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["159"].BorderSizePixel = 3
G2L["159"].ClipsDescendants = false
G2L["159"].Draggable = false
G2L["159"].Position = UDim2.new(0.084611006, 0, 0.28254172, 0)
G2L["159"].Rotation = 0
G2L["159"].Selectable = true
G2L["159"].SelectionOrder = 0
G2L["159"].Size = UDim2.new(0, 157, 0, 29)
G2L["159"].Visible = true
G2L["159"].ZIndex = 1
G2L["159"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["160"].Name = [[Script]]
G2L["160"].Parent = G2L["159"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["161"].Name = [[LocalScript]]
G2L["161"].Parent = G2L["159"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["162"].Name = [[GetScript]]
G2L["162"].Parent = G2L["159"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["163"].Name = [[TextButton]]
G2L["163"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["163"].Text = [[pass : ussrguiv3k00p]]
G2L["163"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["163"].TextScaled = false
G2L["163"].TextSize = 14
G2L["163"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["163"].TextStrokeTransparency = 1
G2L["163"].TextWrapped = false
G2L["163"].TextXAlignment = Enum.TextXAlignment.Center
G2L["163"].TextYAlignment = Enum.TextYAlignment.Center
G2L["163"].Active = true
G2L["163"].AnchorPoint = Vector2.new(0, 0)
G2L["163"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["163"].BackgroundTransparency = 0
G2L["163"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["163"].BorderSizePixel = 3
G2L["163"].ClipsDescendants = false
G2L["163"].Draggable = false
G2L["163"].Position = UDim2.new(0.084611006, 0, 0.36599267, 0)
G2L["163"].Rotation = 0
G2L["163"].Selectable = true
G2L["163"].SelectionOrder = 0
G2L["163"].Size = UDim2.new(0, 157, 0, 29)
G2L["163"].Visible = true
G2L["163"].ZIndex = 1
G2L["163"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["164"].Name = [[Script]]
G2L["164"].Parent = G2L["163"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["165"].Name = [[LocalScript]]
G2L["165"].Parent = G2L["163"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["166"].Name = [[GetScript]]
G2L["166"].Parent = G2L["163"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["167"].Name = [[TextButton]]
G2L["167"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["167"].Text = [[Nyan GUI]]
G2L["167"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["167"].TextScaled = false
G2L["167"].TextSize = 14
G2L["167"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["167"].TextStrokeTransparency = 1
G2L["167"].TextWrapped = false
G2L["167"].TextXAlignment = Enum.TextXAlignment.Center
G2L["167"].TextYAlignment = Enum.TextYAlignment.Center
G2L["167"].Active = true
G2L["167"].AnchorPoint = Vector2.new(0, 0)
G2L["167"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["167"].BackgroundTransparency = 0
G2L["167"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["167"].BorderSizePixel = 3
G2L["167"].ClipsDescendants = false
G2L["167"].Draggable = false
G2L["167"].Position = UDim2.new(0.3737484, 0, 0.32265875, 0)
G2L["167"].Rotation = 0
G2L["167"].Selectable = true
G2L["167"].SelectionOrder = 0
G2L["167"].Size = UDim2.new(0, 157, 0, 29)
G2L["167"].Visible = true
G2L["167"].ZIndex = 1
G2L["167"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["168"].Name = [[Script]]
G2L["168"].Parent = G2L["167"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["169"].Name = [[LocalScript]]
G2L["169"].Parent = G2L["167"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["170"].Name = [[GetScript]]
G2L["170"].Parent = G2L["167"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["171"].Name = [[TextButton]]
G2L["171"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["171"].Text = [[joore hub]]
G2L["171"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["171"].TextScaled = false
G2L["171"].TextSize = 14
G2L["171"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["171"].TextStrokeTransparency = 1
G2L["171"].TextWrapped = false
G2L["171"].TextXAlignment = Enum.TextXAlignment.Center
G2L["171"].TextYAlignment = Enum.TextYAlignment.Center
G2L["171"].Active = true
G2L["171"].AnchorPoint = Vector2.new(0, 0)
G2L["171"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["171"].BackgroundTransparency = 0
G2L["171"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["171"].BorderSizePixel = 3
G2L["171"].ClipsDescendants = false
G2L["171"].Draggable = false
G2L["171"].Position = UDim2.new(0.6836525, 0, 0.32275766, 0)
G2L["171"].Rotation = 0
G2L["171"].Selectable = true
G2L["171"].SelectionOrder = 0
G2L["171"].Size = UDim2.new(0, 157, 0, 29)
G2L["171"].Visible = true
G2L["171"].ZIndex = 1
G2L["171"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["172"].Name = [[Script]]
G2L["172"].Parent = G2L["171"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["173"].Name = [[LocalScript]]
G2L["173"].Parent = G2L["171"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["174"].Name = [[GetScript]]
G2L["174"].Parent = G2L["171"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["175"].Name = [[TextButton]]
G2L["175"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["175"].Text = [[kaax's undetectable]]
G2L["175"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["175"].TextScaled = false
G2L["175"].TextSize = 14
G2L["175"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["175"].TextStrokeTransparency = 1
G2L["175"].TextWrapped = false
G2L["175"].TextXAlignment = Enum.TextXAlignment.Center
G2L["175"].TextYAlignment = Enum.TextYAlignment.Center
G2L["175"].Active = true
G2L["175"].AnchorPoint = Vector2.new(0, 0)
G2L["175"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["175"].BackgroundTransparency = 0
G2L["175"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["175"].BorderSizePixel = 3
G2L["175"].ClipsDescendants = false
G2L["175"].Draggable = false
G2L["175"].Position = UDim2.new(0.3737484, 0, 0.36599267, 0)
G2L["175"].Rotation = 0
G2L["175"].Selectable = true
G2L["175"].SelectionOrder = 0
G2L["175"].Size = UDim2.new(0, 157, 0, 29)
G2L["175"].Visible = true
G2L["175"].ZIndex = 1
G2L["175"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["176"].Name = [[Script]]
G2L["176"].Parent = G2L["175"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["177"].Name = [[LocalScript]]
G2L["177"].Parent = G2L["175"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["178"].Name = [[GetScript]]
G2L["178"].Parent = G2L["175"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["179"].Name = [[TextButton]]
G2L["179"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["179"].Text = [[BGUI]]
G2L["179"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["179"].TextScaled = false
G2L["179"].TextSize = 14
G2L["179"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["179"].TextStrokeTransparency = 1
G2L["179"].TextWrapped = false
G2L["179"].TextXAlignment = Enum.TextXAlignment.Center
G2L["179"].TextYAlignment = Enum.TextYAlignment.Center
G2L["179"].Active = true
G2L["179"].AnchorPoint = Vector2.new(0, 0)
G2L["179"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["179"].BackgroundTransparency = 0
G2L["179"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["179"].BorderSizePixel = 3
G2L["179"].ClipsDescendants = false
G2L["179"].Draggable = false
G2L["179"].Position = UDim2.new(0.6836525, 0, 0.3668405, 0)
G2L["179"].Rotation = 0
G2L["179"].Selectable = true
G2L["179"].SelectionOrder = 0
G2L["179"].Size = UDim2.new(0, 157, 0, 29)
G2L["179"].Visible = true
G2L["179"].ZIndex = 1
G2L["179"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["180"].Name = [[Script]]
G2L["180"].Parent = G2L["179"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["181"].Name = [[LocalScript]]
G2L["181"].Parent = G2L["179"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["182"].Name = [[GetScript]]
G2L["182"].Parent = G2L["179"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["183"].Name = [[TextButton]]
G2L["183"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["183"].Text = [[Disco]]
G2L["183"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["183"].TextScaled = false
G2L["183"].TextSize = 14
G2L["183"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["183"].TextStrokeTransparency = 1
G2L["183"].TextWrapped = false
G2L["183"].TextXAlignment = Enum.TextXAlignment.Center
G2L["183"].TextYAlignment = Enum.TextYAlignment.Center
G2L["183"].Active = true
G2L["183"].AnchorPoint = Vector2.new(0, 0)
G2L["183"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["183"].BackgroundTransparency = 0
G2L["183"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["183"].BorderSizePixel = 3
G2L["183"].ClipsDescendants = false
G2L["183"].Draggable = false
G2L["183"].Position = UDim2.new(0.084611006, 0, 0.40784925, 0)
G2L["183"].Rotation = 0
G2L["183"].Selectable = true
G2L["183"].SelectionOrder = 0
G2L["183"].Size = UDim2.new(0, 157, 0, 29)
G2L["183"].Visible = true
G2L["183"].ZIndex = 1
G2L["183"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["184"].Name = [[Script]]
G2L["184"].Parent = G2L["183"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["185"].Name = [[TextButton]]
G2L["185"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["185"].Text = [[Kill All]]
G2L["185"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["185"].TextScaled = false
G2L["185"].TextSize = 14
G2L["185"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["185"].TextStrokeTransparency = 1
G2L["185"].TextWrapped = false
G2L["185"].TextXAlignment = Enum.TextXAlignment.Center
G2L["185"].TextYAlignment = Enum.TextYAlignment.Center
G2L["185"].Active = true
G2L["185"].AnchorPoint = Vector2.new(0, 0)
G2L["185"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["185"].BackgroundTransparency = 0
G2L["185"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["185"].BorderSizePixel = 3
G2L["185"].ClipsDescendants = false
G2L["185"].Draggable = false
G2L["185"].Position = UDim2.new(0.37534583, 0, 0.40832928, 0)
G2L["185"].Rotation = 0
G2L["185"].Selectable = true
G2L["185"].SelectionOrder = 0
G2L["185"].Size = UDim2.new(0, 157, 0, 29)
G2L["185"].Visible = true
G2L["185"].ZIndex = 1
G2L["185"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["186"].Name = [[Script]]
G2L["186"].Parent = G2L["185"]

--ScreenGui.ssGUIv7.pg1.code.TextButton
G2L["187"].Name = [[TextButton]]
G2L["187"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["187"].Text = [[LondoSS]]
G2L["187"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["187"].TextScaled = false
G2L["187"].TextSize = 14
G2L["187"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["187"].TextStrokeTransparency = 1
G2L["187"].TextWrapped = false
G2L["187"].TextXAlignment = Enum.TextXAlignment.Center
G2L["187"].TextYAlignment = Enum.TextYAlignment.Center
G2L["187"].Active = true
G2L["187"].AnchorPoint = Vector2.new(0, 0)
G2L["187"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["187"].BackgroundTransparency = 0
G2L["187"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["187"].BorderSizePixel = 3
G2L["187"].ClipsDescendants = false
G2L["187"].Draggable = false
G2L["187"].Position = UDim2.new(0.6836525, 0, 0.40336716, 0)
G2L["187"].Rotation = 0
G2L["187"].Selectable = true
G2L["187"].SelectionOrder = 0
G2L["187"].Size = UDim2.new(0, 157, 0, 29)
G2L["187"].Visible = true
G2L["187"].ZIndex = 1
G2L["187"].Parent = G2L["86"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.Script
G2L["188"].Name = [[Script]]
G2L["188"].Parent = G2L["187"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
G2L["189"].Name = [[LocalScript]]
G2L["189"].Parent = G2L["187"]

--ScreenGui.ssGUIv7.pg1.code.TextButton.GetScript
G2L["190"].Name = [[GetScript]]
G2L["190"].Parent = G2L["187"]

--ScreenGui.ssGUIv7.pg1.hints
G2L["191"].Name = [[hints]]
G2L["191"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.hints.Hints
G2L["192"].Name = [[Hints]]
G2L["192"].Active = false
G2L["192"].AnchorPoint = Vector2.new(0, 0)
G2L["192"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["192"].BackgroundTransparency = 0.25
G2L["192"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["192"].BorderSizePixel = 2
G2L["192"].ClipsDescendants = false
G2L["192"].Draggable = false
G2L["192"].Position = UDim2.new(0.121352226, 0, 0.721607, 0)
G2L["192"].Rotation = 0
G2L["192"].Selectable = false
G2L["192"].SelectionOrder = 0
G2L["192"].Size = UDim2.new(0, 476, 0, 54)
G2L["192"].Visible = true
G2L["192"].ZIndex = 1
G2L["192"].Parent = G2L["191"]

--ScreenGui.ssGUIv7.pg1.hints.Hints.UICorner
G2L["193"].Name = [[UICorner]]
G2L["193"].CornerRadius = UDim.new(0, 200)
G2L["193"].Parent = G2L["192"]

--ScreenGui.ssGUIv7.pg1.hints.Hints.TextLabel
G2L["194"].Name = [[TextLabel]]
G2L["194"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["194"].Text = [[Faces]]
G2L["194"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["194"].TextScaled = true
G2L["194"].TextSize = 14
G2L["194"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["194"].TextStrokeTransparency = 1
G2L["194"].TextWrapped = true
G2L["194"].TextXAlignment = Enum.TextXAlignment.Center
G2L["194"].TextYAlignment = Enum.TextYAlignment.Center
G2L["194"].Active = false
G2L["194"].AnchorPoint = Vector2.new(0, 0)
G2L["194"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["194"].BackgroundTransparency = 1
G2L["194"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["194"].BorderSizePixel = 0
G2L["194"].ClipsDescendants = false
G2L["194"].Draggable = false
G2L["194"].Position = UDim2.new(0.31203005, 0, 0.17307705, 0)
G2L["194"].Rotation = 0
G2L["194"].Selectable = false
G2L["194"].SelectionOrder = 0
G2L["194"].Size = UDim2.new(0, 200, 0, 34)
G2L["194"].Visible = true
G2L["194"].ZIndex = 1
G2L["194"].Parent = G2L["192"]

--ScreenGui.ssGUIv7.pg1.hints.Hints
G2L["195"].Name = [[Hints]]
G2L["195"].Active = false
G2L["195"].AnchorPoint = Vector2.new(0, 0)
G2L["195"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["195"].BackgroundTransparency = 0.25
G2L["195"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["195"].BorderSizePixel = 2
G2L["195"].ClipsDescendants = false
G2L["195"].Draggable = false
G2L["195"].Position = UDim2.new(0.24679361, 0, 0.0021505377, 0)
G2L["195"].Rotation = 0
G2L["195"].Selectable = false
G2L["195"].SelectionOrder = 0
G2L["195"].Size = UDim2.new(0, 353, 0, 43)
G2L["195"].Visible = true
G2L["195"].ZIndex = 1
G2L["195"].Parent = G2L["191"]

--ScreenGui.ssGUIv7.pg1.hints.Hints.UICorner
G2L["196"].Name = [[UICorner]]
G2L["196"].CornerRadius = UDim.new(0, 200)
G2L["196"].Parent = G2L["195"]

--ScreenGui.ssGUIv7.pg1.hints.Hints.TextLabel
G2L["197"].Name = [[TextLabel]]
G2L["197"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["197"].Text = [[Scripts / Commands]]
G2L["197"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["197"].TextScaled = true
G2L["197"].TextSize = 14
G2L["197"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["197"].TextStrokeTransparency = 1
G2L["197"].TextWrapped = true
G2L["197"].TextXAlignment = Enum.TextXAlignment.Center
G2L["197"].TextYAlignment = Enum.TextYAlignment.Center
G2L["197"].Active = false
G2L["197"].AnchorPoint = Vector2.new(0, 0)
G2L["197"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["197"].BackgroundTransparency = 1
G2L["197"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["197"].BorderSizePixel = 0
G2L["197"].ClipsDescendants = false
G2L["197"].Draggable = false
G2L["197"].Position = UDim2.new(0.24554807, 0, 0.08163931, 0)
G2L["197"].Rotation = 0
G2L["197"].Selectable = false
G2L["197"].SelectionOrder = 0
G2L["197"].Size = UDim2.new(0, 200, 0, 34)
G2L["197"].Visible = true
G2L["197"].ZIndex = 1
G2L["197"].Parent = G2L["195"]

--ScreenGui.ssGUIv7.pg1.Extra
G2L["198"].Name = [[Extra]]
G2L["198"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1
G2L["199"].Name = [[Extra1]]
G2L["199"].Active = false
G2L["199"].AnchorPoint = Vector2.new(0, 0)
G2L["199"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["199"].BackgroundTransparency = 0
G2L["199"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["199"].BorderSizePixel = 0
G2L["199"].ClipsDescendants = false
G2L["199"].Draggable = false
G2L["199"].Position = UDim2.new(0.07827476, 0, 0.044014353, 0)
G2L["199"].Rotation = 0
G2L["199"].Selectable = false
G2L["199"].SelectionOrder = 0
G2L["199"].Size = UDim2.new(0, 546, 0, 75)
G2L["199"].Visible = false
G2L["199"].ZIndex = 1
G2L["199"].Parent = G2L["198"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["200"].Name = [[TextButton]]
G2L["200"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["200"].Text = [[crossmod]]
G2L["200"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["200"].TextScaled = false
G2L["200"].TextSize = 14
G2L["200"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["200"].TextStrokeTransparency = 1
G2L["200"].TextWrapped = false
G2L["200"].TextXAlignment = Enum.TextXAlignment.Center
G2L["200"].TextYAlignment = Enum.TextYAlignment.Center
G2L["200"].Active = true
G2L["200"].AnchorPoint = Vector2.new(0, 0)
G2L["200"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["200"].BackgroundTransparency = 0
G2L["200"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["200"].BorderSizePixel = 3
G2L["200"].ClipsDescendants = false
G2L["200"].Draggable = false
G2L["200"].Position = UDim2.new(0.3887866, 0, 0.076220095, 0)
G2L["200"].Rotation = 0
G2L["200"].Selectable = true
G2L["200"].SelectionOrder = 0
G2L["200"].Size = UDim2.new(0, 157, 0, 29)
G2L["200"].Visible = true
G2L["200"].ZIndex = 1
G2L["200"].Parent = G2L["199"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["201"].Name = [[Script]]
G2L["201"].Parent = G2L["200"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["202"].Name = [[LocalScript]]
G2L["202"].Parent = G2L["200"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["203"].Name = [[GetScript]]
G2L["203"].Parent = G2L["200"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["204"].Name = [[TextButton]]
G2L["204"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["204"].Text = [[map]]
G2L["204"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["204"].TextScaled = false
G2L["204"].TextSize = 14
G2L["204"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["204"].TextStrokeTransparency = 1
G2L["204"].TextWrapped = false
G2L["204"].TextXAlignment = Enum.TextXAlignment.Center
G2L["204"].TextYAlignment = Enum.TextYAlignment.Center
G2L["204"].Active = true
G2L["204"].AnchorPoint = Vector2.new(0, 0)
G2L["204"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["204"].BackgroundTransparency = 0
G2L["204"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["204"].BorderSizePixel = 3
G2L["204"].ClipsDescendants = false
G2L["204"].Draggable = false
G2L["204"].Position = UDim2.new(0.08301359, 0, 0.048621196, 0)
G2L["204"].Rotation = 0
G2L["204"].Selectable = true
G2L["204"].SelectionOrder = 0
G2L["204"].Size = UDim2.new(0, 157, 0, 29)
G2L["204"].Visible = true
G2L["204"].ZIndex = 1
G2L["204"].Parent = G2L["199"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["205"].Name = [[Script]]
G2L["205"].Parent = G2L["204"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["206"].Name = [[LocalScript]]
G2L["206"].Parent = G2L["204"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["207"].Name = [[GetScript]]
G2L["207"].Parent = G2L["204"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["208"].Name = [[TextButton]]
G2L["208"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["208"].Text = [[undetected v8]]
G2L["208"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["208"].TextScaled = false
G2L["208"].TextSize = 14
G2L["208"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["208"].TextStrokeTransparency = 1
G2L["208"].TextWrapped = false
G2L["208"].TextXAlignment = Enum.TextXAlignment.Center
G2L["208"].TextYAlignment = Enum.TextYAlignment.Center
G2L["208"].Active = true
G2L["208"].AnchorPoint = Vector2.new(0, 0)
G2L["208"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["208"].BackgroundTransparency = 0
G2L["208"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["208"].BorderSizePixel = 3
G2L["208"].ClipsDescendants = false
G2L["208"].Draggable = false
G2L["208"].Position = UDim2.new(0.38840628, 0, 0.5895341, 0)
G2L["208"].Rotation = 0
G2L["208"].Selectable = true
G2L["208"].SelectionOrder = 0
G2L["208"].Size = UDim2.new(0, 157, 0, 29)
G2L["208"].Visible = true
G2L["208"].ZIndex = 1
G2L["208"].Parent = G2L["199"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["209"].Name = [[Script]]
G2L["209"].Parent = G2L["208"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["210"].Name = [[LocalScript]]
G2L["210"].Parent = G2L["208"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["211"].Name = [[GetScript]]
G2L["211"].Parent = G2L["208"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["212"].Name = [[TextButton]]
G2L["212"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["212"].Text = [[sirhax]]
G2L["212"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["212"].TextScaled = false
G2L["212"].TextSize = 14
G2L["212"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["212"].TextStrokeTransparency = 1
G2L["212"].TextWrapped = false
G2L["212"].TextXAlignment = Enum.TextXAlignment.Center
G2L["212"].TextYAlignment = Enum.TextYAlignment.Center
G2L["212"].Active = true
G2L["212"].AnchorPoint = Vector2.new(0, 0)
G2L["212"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["212"].BackgroundTransparency = 0
G2L["212"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["212"].BorderSizePixel = 3
G2L["212"].ClipsDescendants = false
G2L["212"].Draggable = false
G2L["212"].Position = UDim2.new(0.6772628, 0, 0.048621196, 0)
G2L["212"].Rotation = 0
G2L["212"].Selectable = true
G2L["212"].SelectionOrder = 0
G2L["212"].Size = UDim2.new(0, 157, 0, 29)
G2L["212"].Visible = true
G2L["212"].ZIndex = 1
G2L["212"].Parent = G2L["199"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["213"].Name = [[Script]]
G2L["213"].Parent = G2L["212"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["214"].Name = [[LocalScript]]
G2L["214"].Parent = G2L["212"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["215"].Name = [[GetScript]]
G2L["215"].Parent = G2L["212"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["216"].Name = [[TextButton]]
G2L["216"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["216"].Text = [[grove gui]]
G2L["216"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["216"].TextScaled = false
G2L["216"].TextSize = 14
G2L["216"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["216"].TextStrokeTransparency = 1
G2L["216"].TextWrapped = false
G2L["216"].TextXAlignment = Enum.TextXAlignment.Center
G2L["216"].TextYAlignment = Enum.TextYAlignment.Center
G2L["216"].Active = true
G2L["216"].AnchorPoint = Vector2.new(0, 0)
G2L["216"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["216"].BackgroundTransparency = 0
G2L["216"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["216"].BorderSizePixel = 3
G2L["216"].ClipsDescendants = false
G2L["216"].Draggable = false
G2L["216"].Position = UDim2.new(0.68548393, 0, 0.5881915, 0)
G2L["216"].Rotation = 0
G2L["216"].Selectable = true
G2L["216"].SelectionOrder = 0
G2L["216"].Size = UDim2.new(0, 157, 0, 29)
G2L["216"].Visible = true
G2L["216"].ZIndex = 1
G2L["216"].Parent = G2L["199"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["217"].Name = [[Script]]
G2L["217"].Parent = G2L["216"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["218"].Name = [[LocalScript]]
G2L["218"].Parent = G2L["216"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["219"].Name = [[GetScript]]
G2L["219"].Parent = G2L["216"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["220"].Name = [[TextButton]]
G2L["220"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["220"].Text = [[More]]
G2L["220"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["220"].TextScaled = true
G2L["220"].TextSize = 14
G2L["220"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["220"].TextStrokeTransparency = 1
G2L["220"].TextWrapped = true
G2L["220"].TextXAlignment = Enum.TextXAlignment.Center
G2L["220"].TextYAlignment = Enum.TextYAlignment.Center
G2L["220"].Active = true
G2L["220"].AnchorPoint = Vector2.new(0, 0)
G2L["220"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["220"].BackgroundTransparency = 0
G2L["220"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["220"].BorderSizePixel = 3
G2L["220"].ClipsDescendants = false
G2L["220"].Draggable = false
G2L["220"].Position = UDim2.new(0.43400458, 0, 0.99983907, 0)
G2L["220"].Rotation = 0
G2L["220"].Selectable = true
G2L["220"].SelectionOrder = 0
G2L["220"].Size = UDim2.new(0, 93, 0, 25)
G2L["220"].Visible = true
G2L["220"].ZIndex = 1
G2L["220"].Parent = G2L["199"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["221"].Name = [[LocalScript]]
G2L["221"].Parent = G2L["220"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.UICorner
G2L["222"].Name = [[UICorner]]
G2L["222"].CornerRadius = UDim.new(0, 8)
G2L["222"].Parent = G2L["220"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.UIGradient
G2L["223"].Name = [[UIGradient]]
G2L["223"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["223"].Enabled = true
G2L["223"].Rotation = 0
G2L["223"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["223"].Parent = G2L["220"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton
G2L["224"].Name = [[TextButton]]
G2L["224"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["224"].Text = [[p00g v10 admin panel]]
G2L["224"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["224"].TextScaled = false
G2L["224"].TextSize = 14
G2L["224"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["224"].TextStrokeTransparency = 1
G2L["224"].TextWrapped = false
G2L["224"].TextXAlignment = Enum.TextXAlignment.Center
G2L["224"].TextYAlignment = Enum.TextYAlignment.Center
G2L["224"].Active = true
G2L["224"].AnchorPoint = Vector2.new(0, 0)
G2L["224"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["224"].BackgroundTransparency = 0
G2L["224"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["224"].BorderSizePixel = 3
G2L["224"].ClipsDescendants = false
G2L["224"].Draggable = false
G2L["224"].Position = UDim2.new(0.08499134, 0, 0.60245645, 0)
G2L["224"].Rotation = 0
G2L["224"].Selectable = true
G2L["224"].SelectionOrder = 0
G2L["224"].Size = UDim2.new(0, 157, 0, 29)
G2L["224"].Visible = true
G2L["224"].ZIndex = 1
G2L["224"].Parent = G2L["199"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.Script
G2L["225"].Name = [[Script]]
G2L["225"].Parent = G2L["224"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
G2L["226"].Name = [[LocalScript]]
G2L["226"].Parent = G2L["224"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.GetScript
G2L["227"].Name = [[GetScript]]
G2L["227"].Parent = G2L["224"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2
G2L["228"].Name = [[Extra2]]
G2L["228"].Active = false
G2L["228"].AnchorPoint = Vector2.new(0, 0)
G2L["228"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["228"].BackgroundTransparency = 0
G2L["228"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["228"].BorderSizePixel = 0
G2L["228"].ClipsDescendants = false
G2L["228"].Draggable = false
G2L["228"].Position = UDim2.new(0.07827476, 0, 0.044014353, 0)
G2L["228"].Rotation = 0
G2L["228"].Selectable = false
G2L["228"].SelectionOrder = 0
G2L["228"].Size = UDim2.new(0, 546, 0, 75)
G2L["228"].Visible = true
G2L["228"].ZIndex = 1
G2L["228"].Parent = G2L["198"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["229"].Name = [[TextButton]]
G2L["229"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["229"].Text = [[Back]]
G2L["229"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["229"].TextScaled = true
G2L["229"].TextSize = 14
G2L["229"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["229"].TextStrokeTransparency = 1
G2L["229"].TextWrapped = true
G2L["229"].TextXAlignment = Enum.TextXAlignment.Center
G2L["229"].TextYAlignment = Enum.TextYAlignment.Center
G2L["229"].Active = true
G2L["229"].AnchorPoint = Vector2.new(0, 0)
G2L["229"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["229"].BackgroundTransparency = 0
G2L["229"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["229"].BorderSizePixel = 3
G2L["229"].ClipsDescendants = false
G2L["229"].Draggable = false
G2L["229"].Position = UDim2.new(0.40103754, 0, 0.99983907, 0)
G2L["229"].Rotation = 0
G2L["229"].Selectable = true
G2L["229"].SelectionOrder = 0
G2L["229"].Size = UDim2.new(0, 93, 0, 25)
G2L["229"].Visible = true
G2L["229"].ZIndex = 1
G2L["229"].Parent = G2L["228"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["230"].Name = [[LocalScript]]
G2L["230"].Parent = G2L["229"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.UICorner
G2L["231"].Name = [[UICorner]]
G2L["231"].CornerRadius = UDim.new(0, 8)
G2L["231"].Parent = G2L["229"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.UIGradient
G2L["232"].Name = [[UIGradient]]
G2L["232"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["232"].Enabled = true
G2L["232"].Rotation = 0
G2L["232"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["232"].Parent = G2L["229"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["233"].Name = [[TextButton]]
G2L["233"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["233"].Text = [[Best hub leaked]]
G2L["233"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["233"].TextScaled = true
G2L["233"].TextSize = 14
G2L["233"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["233"].TextStrokeTransparency = 1
G2L["233"].TextWrapped = true
G2L["233"].TextXAlignment = Enum.TextXAlignment.Center
G2L["233"].TextYAlignment = Enum.TextYAlignment.Center
G2L["233"].Active = true
G2L["233"].AnchorPoint = Vector2.new(0, 0)
G2L["233"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["233"].BackgroundTransparency = 0
G2L["233"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["233"].BorderSizePixel = 3
G2L["233"].ClipsDescendants = false
G2L["233"].Draggable = false
G2L["233"].Position = UDim2.new(0.0054945056, 0, 0, 0)
G2L["233"].Rotation = 0
G2L["233"].Selectable = true
G2L["233"].SelectionOrder = 0
G2L["233"].Size = UDim2.new(0, 121, 0, 30)
G2L["233"].Visible = true
G2L["233"].ZIndex = 1
G2L["233"].Parent = G2L["228"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["234"].Name = [[Script]]
G2L["234"].Parent = G2L["233"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["235"].Name = [[LocalScript]]
G2L["235"].Parent = G2L["233"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["236"].Name = [[GetScript]]
G2L["236"].Parent = G2L["233"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["237"].Name = [[TextButton]]
G2L["237"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["237"].Text = [[dreamybull v10]]
G2L["237"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["237"].TextScaled = true
G2L["237"].TextSize = 14
G2L["237"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["237"].TextStrokeTransparency = 1
G2L["237"].TextWrapped = true
G2L["237"].TextXAlignment = Enum.TextXAlignment.Center
G2L["237"].TextYAlignment = Enum.TextYAlignment.Center
G2L["237"].Active = true
G2L["237"].AnchorPoint = Vector2.new(0, 0)
G2L["237"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["237"].BackgroundTransparency = 0
G2L["237"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["237"].BorderSizePixel = 3
G2L["237"].ClipsDescendants = false
G2L["237"].Draggable = false
G2L["237"].Position = UDim2.new(0.24908425, 0, 0, 0)
G2L["237"].Rotation = 0
G2L["237"].Selectable = true
G2L["237"].SelectionOrder = 0
G2L["237"].Size = UDim2.new(0, 121, 0, 30)
G2L["237"].Visible = true
G2L["237"].ZIndex = 1
G2L["237"].Parent = G2L["228"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["238"].Name = [[Script]]
G2L["238"].Parent = G2L["237"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["239"].Name = [[LocalScript]]
G2L["239"].Parent = G2L["237"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["240"].Name = [[GetScript]]
G2L["240"].Parent = G2L["237"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["241"].Name = [[TextButton]]
G2L["241"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["241"].Text = [[Anti-Gay Sky]]
G2L["241"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["241"].TextScaled = true
G2L["241"].TextSize = 14
G2L["241"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["241"].TextStrokeTransparency = 1
G2L["241"].TextWrapped = true
G2L["241"].TextXAlignment = Enum.TextXAlignment.Center
G2L["241"].TextYAlignment = Enum.TextYAlignment.Center
G2L["241"].Active = true
G2L["241"].AnchorPoint = Vector2.new(0, 0)
G2L["241"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["241"].BackgroundTransparency = 0
G2L["241"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["241"].BorderSizePixel = 3
G2L["241"].ClipsDescendants = false
G2L["241"].Draggable = false
G2L["241"].Position = UDim2.new(0.48168498, 0, 0, 0)
G2L["241"].Rotation = 0
G2L["241"].Selectable = true
G2L["241"].SelectionOrder = 0
G2L["241"].Size = UDim2.new(0, 121, 0, 30)
G2L["241"].Visible = true
G2L["241"].ZIndex = 1
G2L["241"].Parent = G2L["228"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["242"].Name = [[Script]]
G2L["242"].Parent = G2L["241"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["243"].Name = [[LocalScript]]
G2L["243"].Parent = G2L["241"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["244"].Name = [[GetScript]]
G2L["244"].Parent = G2L["241"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["245"].Name = [[TextButton]]
G2L["245"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["245"].Text = [[secret by j01taro]]
G2L["245"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["245"].TextScaled = true
G2L["245"].TextSize = 14
G2L["245"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["245"].TextStrokeTransparency = 1
G2L["245"].TextWrapped = true
G2L["245"].TextXAlignment = Enum.TextXAlignment.Center
G2L["245"].TextYAlignment = Enum.TextYAlignment.Center
G2L["245"].Active = true
G2L["245"].AnchorPoint = Vector2.new(0, 0)
G2L["245"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["245"].BackgroundTransparency = 0
G2L["245"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["245"].BorderSizePixel = 3
G2L["245"].ClipsDescendants = false
G2L["245"].Draggable = false
G2L["245"].Position = UDim2.new(0.71428573, 0, 0, 0)
G2L["245"].Rotation = 0
G2L["245"].Selectable = true
G2L["245"].SelectionOrder = 0
G2L["245"].Size = UDim2.new(0, 121, 0, 30)
G2L["245"].Visible = true
G2L["245"].ZIndex = 1
G2L["245"].Parent = G2L["228"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["246"].Name = [[Script]]
G2L["246"].Parent = G2L["245"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["247"].Name = [[LocalScript]]
G2L["247"].Parent = G2L["245"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["248"].Name = [[GetScript]]
G2L["248"].Parent = G2L["245"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["249"].Name = [[TextButton]]
G2L["249"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["249"].Text = [[v4]]
G2L["249"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["249"].TextScaled = true
G2L["249"].TextSize = 14
G2L["249"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["249"].TextStrokeTransparency = 1
G2L["249"].TextWrapped = true
G2L["249"].TextXAlignment = Enum.TextXAlignment.Center
G2L["249"].TextYAlignment = Enum.TextYAlignment.Center
G2L["249"].Active = true
G2L["249"].AnchorPoint = Vector2.new(0, 0)
G2L["249"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["249"].BackgroundTransparency = 0
G2L["249"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["249"].BorderSizePixel = 3
G2L["249"].ClipsDescendants = false
G2L["249"].Draggable = false
G2L["249"].Position = UDim2.new(0.0054945056, 0, 0.42666668, 0)
G2L["249"].Rotation = 0
G2L["249"].Selectable = true
G2L["249"].SelectionOrder = 0
G2L["249"].Size = UDim2.new(0, 121, 0, 30)
G2L["249"].Visible = true
G2L["249"].ZIndex = 1
G2L["249"].Parent = G2L["228"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["250"].Name = [[Script]]
G2L["250"].Parent = G2L["249"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["251"].Name = [[LocalScript]]
G2L["251"].Parent = G2L["249"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["252"].Name = [[GetScript]]
G2L["252"].Parent = G2L["249"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton
G2L["253"].Name = [[TextButton]]
G2L["253"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["253"].Text = [[skeletons undetectable]]
G2L["253"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["253"].TextScaled = true
G2L["253"].TextSize = 14
G2L["253"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["253"].TextStrokeTransparency = 1
G2L["253"].TextWrapped = true
G2L["253"].TextXAlignment = Enum.TextXAlignment.Center
G2L["253"].TextYAlignment = Enum.TextYAlignment.Center
G2L["253"].Active = true
G2L["253"].AnchorPoint = Vector2.new(0, 0)
G2L["253"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["253"].BackgroundTransparency = 0
G2L["253"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["253"].BorderSizePixel = 3
G2L["253"].ClipsDescendants = false
G2L["253"].Draggable = false
G2L["253"].Position = UDim2.new(0.24908425, 0, 0.42666668, 0)
G2L["253"].Rotation = 0
G2L["253"].Selectable = true
G2L["253"].SelectionOrder = 0
G2L["253"].Size = UDim2.new(0, 121, 0, 30)
G2L["253"].Visible = true
G2L["253"].ZIndex = 1
G2L["253"].Parent = G2L["228"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.Script
G2L["254"].Name = [[Script]]
G2L["254"].Parent = G2L["253"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
G2L["255"].Name = [[LocalScript]]
G2L["255"].Parent = G2L["253"]

--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.GetScript
G2L["256"].Name = [[GetScript]]
G2L["256"].Parent = G2L["253"]

--ScreenGui.ssGUIv7.pg1.faces
G2L["257"].Name = [[faces]]
G2L["257"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.faces.Faces
G2L["258"].Name = [[Faces]]
G2L["258"].Active = false
G2L["258"].AnchorPoint = Vector2.new(0, 0)
G2L["258"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["258"].BackgroundTransparency = 0
G2L["258"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["258"].BorderSizePixel = 2
G2L["258"].ClipsDescendants = false
G2L["258"].Draggable = false
G2L["258"].Position = UDim2.new(0.031948883, 0, 0.78018373, 0)
G2L["258"].Rotation = 0
G2L["258"].Selectable = false
G2L["258"].SelectionOrder = 0
G2L["258"].Size = UDim2.new(0, 492, 0, 150)
G2L["258"].Visible = false
G2L["258"].ZIndex = 1
G2L["258"].Parent = G2L["257"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["259"].Name = [[TextButton]]
G2L["259"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["259"].Text = [[anonymous]]
G2L["259"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["259"].TextScaled = false
G2L["259"].TextSize = 14
G2L["259"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["259"].TextStrokeTransparency = 1
G2L["259"].TextWrapped = false
G2L["259"].TextXAlignment = Enum.TextXAlignment.Center
G2L["259"].TextYAlignment = Enum.TextYAlignment.Center
G2L["259"].Active = true
G2L["259"].AnchorPoint = Vector2.new(0, 0)
G2L["259"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["259"].BackgroundTransparency = 0
G2L["259"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["259"].BorderSizePixel = 2
G2L["259"].ClipsDescendants = false
G2L["259"].Draggable = false
G2L["259"].Position = UDim2.new(0.59671026, 0, 0.73282653, 0)
G2L["259"].Rotation = 0
G2L["259"].Selectable = true
G2L["259"].SelectionOrder = 0
G2L["259"].Size = UDim2.new(0, 144, 0, 24)
G2L["259"].Visible = true
G2L["259"].ZIndex = 1
G2L["259"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["260"].Name = [[Script]]
G2L["260"].Parent = G2L["259"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["261"].Name = [[TextButton]]
G2L["261"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["261"].Text = [[pennywise]]
G2L["261"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["261"].TextScaled = false
G2L["261"].TextSize = 14
G2L["261"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["261"].TextStrokeTransparency = 1
G2L["261"].TextWrapped = false
G2L["261"].TextXAlignment = Enum.TextXAlignment.Center
G2L["261"].TextYAlignment = Enum.TextYAlignment.Center
G2L["261"].Active = true
G2L["261"].AnchorPoint = Vector2.new(0, 0)
G2L["261"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["261"].BackgroundTransparency = 0
G2L["261"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["261"].BorderSizePixel = 2
G2L["261"].ClipsDescendants = false
G2L["261"].Draggable = false
G2L["261"].Position = UDim2.new(-0.0037598338, 0, 0.7800985, 0)
G2L["261"].Rotation = 0
G2L["261"].Selectable = true
G2L["261"].SelectionOrder = 0
G2L["261"].Size = UDim2.new(0, 144, 0, 24)
G2L["261"].Visible = true
G2L["261"].ZIndex = 1
G2L["261"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["262"].Name = [[Script]]
G2L["262"].Parent = G2L["261"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["263"].Name = [[TextButton]]
G2L["263"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["263"].Text = [[c00lkidd (custom)]]
G2L["263"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["263"].TextScaled = false
G2L["263"].TextSize = 14
G2L["263"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["263"].TextStrokeTransparency = 1
G2L["263"].TextWrapped = false
G2L["263"].TextXAlignment = Enum.TextXAlignment.Center
G2L["263"].TextYAlignment = Enum.TextYAlignment.Center
G2L["263"].Active = true
G2L["263"].AnchorPoint = Vector2.new(0, 0)
G2L["263"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["263"].BackgroundTransparency = 0
G2L["263"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["263"].BorderSizePixel = 2
G2L["263"].ClipsDescendants = false
G2L["263"].Draggable = false
G2L["263"].Position = UDim2.new(0.29095557, 0, 0.7297101, 0)
G2L["263"].Rotation = 0
G2L["263"].Selectable = true
G2L["263"].SelectionOrder = 0
G2L["263"].Size = UDim2.new(0, 144, 0, 24)
G2L["263"].Visible = true
G2L["263"].ZIndex = 1
G2L["263"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["264"].Name = [[Script]]
G2L["264"].Parent = G2L["263"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["265"].Name = [[TextButton]]
G2L["265"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["265"].Text = [[freddy]]
G2L["265"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["265"].TextScaled = false
G2L["265"].TextSize = 14
G2L["265"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["265"].TextStrokeTransparency = 1
G2L["265"].TextWrapped = false
G2L["265"].TextXAlignment = Enum.TextXAlignment.Center
G2L["265"].TextYAlignment = Enum.TextYAlignment.Center
G2L["265"].Active = true
G2L["265"].AnchorPoint = Vector2.new(0, 0)
G2L["265"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["265"].BackgroundTransparency = 0
G2L["265"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["265"].BorderSizePixel = 2
G2L["265"].ClipsDescendants = false
G2L["265"].Draggable = false
G2L["265"].Position = UDim2.new(0.5842944, 0, 0.5277012, 0)
G2L["265"].Rotation = 0
G2L["265"].Selectable = true
G2L["265"].SelectionOrder = 0
G2L["265"].Size = UDim2.new(0, 144, 0, 24)
G2L["265"].Visible = true
G2L["265"].ZIndex = 1
G2L["265"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["266"].Name = [[Script]]
G2L["266"].Parent = G2L["265"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["267"].Name = [[TextButton]]
G2L["267"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["267"].Text = [[nerd]]
G2L["267"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["267"].TextScaled = false
G2L["267"].TextSize = 14
G2L["267"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["267"].TextStrokeTransparency = 1
G2L["267"].TextWrapped = false
G2L["267"].TextXAlignment = Enum.TextXAlignment.Center
G2L["267"].TextYAlignment = Enum.TextYAlignment.Center
G2L["267"].Active = true
G2L["267"].AnchorPoint = Vector2.new(0, 0)
G2L["267"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["267"].BackgroundTransparency = 0
G2L["267"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["267"].BorderSizePixel = 2
G2L["267"].ClipsDescendants = false
G2L["267"].Draggable = false
G2L["267"].Position = UDim2.new(0.2918322, 0, 0.5695998, 0)
G2L["267"].Rotation = 0
G2L["267"].Selectable = true
G2L["267"].SelectionOrder = 0
G2L["267"].Size = UDim2.new(0, 144, 0, 24)
G2L["267"].Visible = true
G2L["267"].ZIndex = 1
G2L["267"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["268"].Name = [[Script]]
G2L["268"].Parent = G2L["267"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["269"].Name = [[TextButton]]
G2L["269"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["269"].Text = [[sigma]]
G2L["269"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["269"].TextScaled = false
G2L["269"].TextSize = 14
G2L["269"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["269"].TextStrokeTransparency = 1
G2L["269"].TextWrapped = false
G2L["269"].TextXAlignment = Enum.TextXAlignment.Center
G2L["269"].TextYAlignment = Enum.TextYAlignment.Center
G2L["269"].Active = true
G2L["269"].AnchorPoint = Vector2.new(0, 0)
G2L["269"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["269"].BackgroundTransparency = 0
G2L["269"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["269"].BorderSizePixel = 2
G2L["269"].ClipsDescendants = false
G2L["269"].Draggable = false
G2L["269"].Position = UDim2.new(-0.0017273135, 0, 0.5732619, 0)
G2L["269"].Rotation = 0
G2L["269"].Selectable = true
G2L["269"].SelectionOrder = 0
G2L["269"].Size = UDim2.new(0, 144, 0, 24)
G2L["269"].Visible = true
G2L["269"].ZIndex = 1
G2L["269"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["270"].Name = [[Script]]
G2L["270"].Parent = G2L["269"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["271"].Name = [[TextButton]]
G2L["271"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["271"].Text = [[dreamybull]]
G2L["271"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["271"].TextScaled = false
G2L["271"].TextSize = 14
G2L["271"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["271"].TextStrokeTransparency = 1
G2L["271"].TextWrapped = false
G2L["271"].TextXAlignment = Enum.TextXAlignment.Center
G2L["271"].TextYAlignment = Enum.TextYAlignment.Center
G2L["271"].Active = true
G2L["271"].AnchorPoint = Vector2.new(0, 0)
G2L["271"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["271"].BackgroundTransparency = 0
G2L["271"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["271"].BorderSizePixel = 2
G2L["271"].ClipsDescendants = false
G2L["271"].Draggable = false
G2L["271"].Position = UDim2.new(0.58226186, 0, 0.366462, 0)
G2L["271"].Rotation = 0
G2L["271"].Selectable = true
G2L["271"].SelectionOrder = 0
G2L["271"].Size = UDim2.new(0, 144, 0, 24)
G2L["271"].Visible = true
G2L["271"].ZIndex = 1
G2L["271"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["272"].Name = [[Script]]
G2L["272"].Parent = G2L["271"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["273"].Name = [[TextButton]]
G2L["273"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["273"].Text = [[C:]]
G2L["273"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["273"].TextScaled = false
G2L["273"].TextSize = 14
G2L["273"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["273"].TextStrokeTransparency = 1
G2L["273"].TextWrapped = false
G2L["273"].TextXAlignment = Enum.TextXAlignment.Center
G2L["273"].TextYAlignment = Enum.TextYAlignment.Center
G2L["273"].Active = true
G2L["273"].AnchorPoint = Vector2.new(0, 0)
G2L["273"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["273"].BackgroundTransparency = 0
G2L["273"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["273"].BorderSizePixel = 2
G2L["273"].ClipsDescendants = false
G2L["273"].Draggable = false
G2L["273"].Position = UDim2.new(-0.002883229, 0, 0.37029135, 0)
G2L["273"].Rotation = 0
G2L["273"].Selectable = true
G2L["273"].SelectionOrder = 0
G2L["273"].Size = UDim2.new(0, 144, 0, 24)
G2L["273"].Visible = true
G2L["273"].ZIndex = 1
G2L["273"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["274"].Name = [[Script]]
G2L["274"].Parent = G2L["273"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["275"].Name = [[TextButton]]
G2L["275"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["275"].Text = [[Biggie Cheese]]
G2L["275"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["275"].TextScaled = false
G2L["275"].TextSize = 14
G2L["275"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["275"].TextStrokeTransparency = 1
G2L["275"].TextWrapped = false
G2L["275"].TextXAlignment = Enum.TextXAlignment.Center
G2L["275"].TextYAlignment = Enum.TextYAlignment.Center
G2L["275"].Active = true
G2L["275"].AnchorPoint = Vector2.new(0, 0)
G2L["275"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["275"].BackgroundTransparency = 0
G2L["275"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["275"].BorderSizePixel = 2
G2L["275"].ClipsDescendants = false
G2L["275"].Draggable = false
G2L["275"].Position = UDim2.new(0.29161146, 0, 0.17679708, 0)
G2L["275"].Rotation = 0
G2L["275"].Selectable = true
G2L["275"].SelectionOrder = 0
G2L["275"].Size = UDim2.new(0, 144, 0, 24)
G2L["275"].Visible = true
G2L["275"].ZIndex = 1
G2L["275"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["276"].Name = [[Script]]
G2L["276"].Parent = G2L["275"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["277"].Name = [[TextButton]]
G2L["277"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["277"].Text = [[pennywise]]
G2L["277"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["277"].TextScaled = false
G2L["277"].TextSize = 14
G2L["277"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["277"].TextStrokeTransparency = 1
G2L["277"].TextWrapped = false
G2L["277"].TextXAlignment = Enum.TextXAlignment.Center
G2L["277"].TextYAlignment = Enum.TextYAlignment.Center
G2L["277"].Active = true
G2L["277"].AnchorPoint = Vector2.new(0, 0)
G2L["277"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["277"].BackgroundTransparency = 0
G2L["277"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["277"].BorderSizePixel = 2
G2L["277"].ClipsDescendants = false
G2L["277"].Draggable = false
G2L["277"].Position = UDim2.new(0.28957894, 0, 0.3728827, 0)
G2L["277"].Rotation = 0
G2L["277"].Selectable = true
G2L["277"].SelectionOrder = 0
G2L["277"].Size = UDim2.new(0, 144, 0, 24)
G2L["277"].Visible = true
G2L["277"].ZIndex = 1
G2L["277"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["278"].Name = [[Script]]
G2L["278"].Parent = G2L["277"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["279"].Name = [[TextButton]]
G2L["279"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["279"].Text = [[Creeper]]
G2L["279"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["279"].TextScaled = false
G2L["279"].TextSize = 14
G2L["279"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["279"].TextStrokeTransparency = 1
G2L["279"].TextWrapped = false
G2L["279"].TextXAlignment = Enum.TextXAlignment.Center
G2L["279"].TextYAlignment = Enum.TextYAlignment.Center
G2L["279"].Active = true
G2L["279"].AnchorPoint = Vector2.new(0, 0)
G2L["279"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["279"].BackgroundTransparency = 0
G2L["279"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["279"].BorderSizePixel = 2
G2L["279"].ClipsDescendants = false
G2L["279"].Draggable = false
G2L["279"].Position = UDim2.new(-0.0008507085, 0, 0.021930136, 0)
G2L["279"].Rotation = 0
G2L["279"].Selectable = true
G2L["279"].SelectionOrder = 0
G2L["279"].Size = UDim2.new(0, 144, 0, 24)
G2L["279"].Visible = true
G2L["279"].ZIndex = 1
G2L["279"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["280"].Name = [[Script]]
G2L["280"].Parent = G2L["279"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["281"].Name = [[TextButton]]
G2L["281"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["281"].Text = [[Scary Maze Ghost]]
G2L["281"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["281"].TextScaled = false
G2L["281"].TextSize = 14
G2L["281"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["281"].TextStrokeTransparency = 1
G2L["281"].TextWrapped = false
G2L["281"].TextXAlignment = Enum.TextXAlignment.Center
G2L["281"].TextYAlignment = Enum.TextYAlignment.Center
G2L["281"].Active = true
G2L["281"].AnchorPoint = Vector2.new(0, 0)
G2L["281"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["281"].BackgroundTransparency = 0
G2L["281"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["281"].BorderSizePixel = 2
G2L["281"].ClipsDescendants = false
G2L["281"].Draggable = false
G2L["281"].Position = UDim2.new(0.2918322, 0, 0.018207805, 0)
G2L["281"].Rotation = 0
G2L["281"].Selectable = true
G2L["281"].SelectionOrder = 0
G2L["281"].Size = UDim2.new(0, 144, 0, 24)
G2L["281"].Visible = true
G2L["281"].ZIndex = 1
G2L["281"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["282"].Name = [[Script]]
G2L["282"].Parent = G2L["281"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["283"].Name = [[TextButton]]
G2L["283"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["283"].Text = [[Jeffy Jeffy]]
G2L["283"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["283"].TextScaled = false
G2L["283"].TextSize = 14
G2L["283"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["283"].TextStrokeTransparency = 1
G2L["283"].TextWrapped = false
G2L["283"].TextXAlignment = Enum.TextXAlignment.Center
G2L["283"].TextYAlignment = Enum.TextYAlignment.Center
G2L["283"].Active = true
G2L["283"].AnchorPoint = Vector2.new(0, 0)
G2L["283"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["283"].BackgroundTransparency = 0
G2L["283"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["283"].BorderSizePixel = 2
G2L["283"].ClipsDescendants = false
G2L["283"].Draggable = false
G2L["283"].Position = UDim2.new(0.58226186, 0, 0.17733602, 0)
G2L["283"].Rotation = 0
G2L["283"].Selectable = true
G2L["283"].SelectionOrder = 0
G2L["283"].Size = UDim2.new(0, 144, 0, 24)
G2L["283"].Visible = true
G2L["283"].ZIndex = 1
G2L["283"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["284"].Name = [[Script]]
G2L["284"].Parent = G2L["283"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["285"].Name = [[TextButton]]
G2L["285"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["285"].Text = [[More]]
G2L["285"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["285"].TextScaled = true
G2L["285"].TextSize = 14
G2L["285"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["285"].TextStrokeTransparency = 1
G2L["285"].TextWrapped = true
G2L["285"].TextXAlignment = Enum.TextXAlignment.Center
G2L["285"].TextYAlignment = Enum.TextYAlignment.Center
G2L["285"].Active = true
G2L["285"].AnchorPoint = Vector2.new(0, 0)
G2L["285"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["285"].BackgroundTransparency = 0
G2L["285"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["285"].BorderSizePixel = 3
G2L["285"].ClipsDescendants = false
G2L["285"].Draggable = false
G2L["285"].Position = UDim2.new(-0.0009545427, 0, 0.99415284, 0)
G2L["285"].Rotation = 0
G2L["285"].Selectable = true
G2L["285"].SelectionOrder = 0
G2L["285"].Size = UDim2.new(0, 113, 0, 17)
G2L["285"].Visible = true
G2L["285"].ZIndex = 1
G2L["285"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.LocalScript
G2L["286"].Name = [[LocalScript]]
G2L["286"].Parent = G2L["285"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.UICorner
G2L["287"].Name = [[UICorner]]
G2L["287"].CornerRadius = UDim.new(0, 8)
G2L["287"].Parent = G2L["285"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.UIGradient
G2L["288"].Name = [[UIGradient]]
G2L["288"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["288"].Enabled = true
G2L["288"].Rotation = 0
G2L["288"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["288"].Parent = G2L["285"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["289"].Name = [[TextButton]]
G2L["289"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["289"].Text = [[jondow6665]]
G2L["289"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["289"].TextScaled = false
G2L["289"].TextSize = 14
G2L["289"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["289"].TextStrokeTransparency = 1
G2L["289"].TextWrapped = false
G2L["289"].TextXAlignment = Enum.TextXAlignment.Center
G2L["289"].TextYAlignment = Enum.TextYAlignment.Center
G2L["289"].Active = true
G2L["289"].AnchorPoint = Vector2.new(0, 0)
G2L["289"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["289"].BackgroundTransparency = 0
G2L["289"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["289"].BorderSizePixel = 2
G2L["289"].ClipsDescendants = false
G2L["289"].Draggable = false
G2L["289"].Position = UDim2.new(-0.0017273135, 0, 0.17652486, 0)
G2L["289"].Rotation = 0
G2L["289"].Selectable = true
G2L["289"].SelectionOrder = 0
G2L["289"].Size = UDim2.new(0, 144, 0, 24)
G2L["289"].Visible = true
G2L["289"].ZIndex = 1
G2L["289"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["290"].Name = [[Script]]
G2L["290"].Parent = G2L["289"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton
G2L["291"].Name = [[TextButton]]
G2L["291"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["291"].Text = [[Jeffy Jeffy]]
G2L["291"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["291"].TextScaled = false
G2L["291"].TextSize = 14
G2L["291"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["291"].TextStrokeTransparency = 1
G2L["291"].TextWrapped = false
G2L["291"].TextXAlignment = Enum.TextXAlignment.Center
G2L["291"].TextYAlignment = Enum.TextYAlignment.Center
G2L["291"].Active = true
G2L["291"].AnchorPoint = Vector2.new(0, 0)
G2L["291"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["291"].BackgroundTransparency = 0
G2L["291"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["291"].BorderSizePixel = 2
G2L["291"].ClipsDescendants = false
G2L["291"].Draggable = false
G2L["291"].Position = UDim2.new(0.5836385, 0, 0.016554158, 0)
G2L["291"].Rotation = 0
G2L["291"].Selectable = true
G2L["291"].SelectionOrder = 0
G2L["291"].Size = UDim2.new(0, 144, 0, 24)
G2L["291"].Visible = true
G2L["291"].ZIndex = 1
G2L["291"].Parent = G2L["258"]

--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.Script
G2L["292"].Name = [[Script]]
G2L["292"].Parent = G2L["291"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2
G2L["293"].Name = [[Faces2]]
G2L["293"].Active = false
G2L["293"].AnchorPoint = Vector2.new(0, 0)
G2L["293"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["293"].BackgroundTransparency = 0
G2L["293"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["293"].BorderSizePixel = 2
G2L["293"].ClipsDescendants = false
G2L["293"].Draggable = false
G2L["293"].Position = UDim2.new(0.11661342, 0, 0.7799719, 0)
G2L["293"].Rotation = 0
G2L["293"].Selectable = false
G2L["293"].SelectionOrder = 0
G2L["293"].Size = UDim2.new(0, 492, 0, 150)
G2L["293"].Visible = true
G2L["293"].ZIndex = 1
G2L["293"].Parent = G2L["257"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton
G2L["294"].Name = [[TextButton]]
G2L["294"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["294"].Text = [[Back]]
G2L["294"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["294"].TextScaled = true
G2L["294"].TextSize = 14
G2L["294"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["294"].TextStrokeTransparency = 1
G2L["294"].TextWrapped = true
G2L["294"].TextXAlignment = Enum.TextXAlignment.Center
G2L["294"].TextYAlignment = Enum.TextYAlignment.Center
G2L["294"].Active = true
G2L["294"].AnchorPoint = Vector2.new(0, 0)
G2L["294"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["294"].BackgroundTransparency = 0
G2L["294"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["294"].BorderSizePixel = 3
G2L["294"].ClipsDescendants = false
G2L["294"].Draggable = false
G2L["294"].Position = UDim2.new(-0.0009545427, 0, 0.99415284, 0)
G2L["294"].Rotation = 0
G2L["294"].Selectable = true
G2L["294"].SelectionOrder = 0
G2L["294"].Size = UDim2.new(0, 113, 0, 17)
G2L["294"].Visible = true
G2L["294"].ZIndex = 1
G2L["294"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton.LocalScript
G2L["295"].Name = [[LocalScript]]
G2L["295"].Parent = G2L["294"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton.UICorner
G2L["296"].Name = [[UICorner]]
G2L["296"].CornerRadius = UDim.new(0, 8)
G2L["296"].Parent = G2L["294"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton.UIGradient
G2L["297"].Name = [[UIGradient]]
G2L["297"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["297"].Enabled = true
G2L["297"].Rotation = 0
G2L["297"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["297"].Parent = G2L["294"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["298"].Name = [[face]]
G2L["298"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["298"].Text = [[Kirby]]
G2L["298"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["298"].TextScaled = false
G2L["298"].TextSize = 14
G2L["298"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["298"].TextStrokeTransparency = 1
G2L["298"].TextWrapped = false
G2L["298"].TextXAlignment = Enum.TextXAlignment.Center
G2L["298"].TextYAlignment = Enum.TextYAlignment.Center
G2L["298"].Active = true
G2L["298"].AnchorPoint = Vector2.new(0, 0)
G2L["298"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["298"].BackgroundTransparency = 0
G2L["298"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["298"].BorderSizePixel = 2
G2L["298"].ClipsDescendants = false
G2L["298"].Draggable = false
G2L["298"].Position = UDim2.new(-0.002883229, 0, 0.019493205, 0)
G2L["298"].Rotation = 0
G2L["298"].Selectable = true
G2L["298"].SelectionOrder = 0
G2L["298"].Size = UDim2.new(0, 144, 0, 24)
G2L["298"].Visible = true
G2L["298"].ZIndex = 1
G2L["298"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["299"].Name = [[Script]]
G2L["299"].Parent = G2L["298"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["300"].Name = [[face]]
G2L["300"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["300"].Text = [[Amogus]]
G2L["300"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["300"].TextScaled = false
G2L["300"].TextSize = 14
G2L["300"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["300"].TextStrokeTransparency = 1
G2L["300"].TextWrapped = false
G2L["300"].TextXAlignment = Enum.TextXAlignment.Center
G2L["300"].TextYAlignment = Enum.TextYAlignment.Center
G2L["300"].Active = true
G2L["300"].AnchorPoint = Vector2.new(0, 0)
G2L["300"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["300"].BackgroundTransparency = 0
G2L["300"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["300"].BorderSizePixel = 2
G2L["300"].ClipsDescendants = false
G2L["300"].Draggable = false
G2L["300"].Position = UDim2.new(0.2897997, 0, 0.019493205, 0)
G2L["300"].Rotation = 0
G2L["300"].Selectable = true
G2L["300"].SelectionOrder = 0
G2L["300"].Size = UDim2.new(0, 144, 0, 24)
G2L["300"].Visible = true
G2L["300"].ZIndex = 1
G2L["300"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["301"].Name = [[Script]]
G2L["301"].Parent = G2L["300"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["302"].Name = [[face]]
G2L["302"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["302"].Text = [[Fire In The Hole]]
G2L["302"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["302"].TextScaled = false
G2L["302"].TextSize = 14
G2L["302"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["302"].TextStrokeTransparency = 1
G2L["302"].TextWrapped = false
G2L["302"].TextXAlignment = Enum.TextXAlignment.Center
G2L["302"].TextYAlignment = Enum.TextYAlignment.Center
G2L["302"].Active = true
G2L["302"].AnchorPoint = Vector2.new(0, 0)
G2L["302"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["302"].BackgroundTransparency = 0
G2L["302"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["302"].BorderSizePixel = 2
G2L["302"].ClipsDescendants = false
G2L["302"].Draggable = false
G2L["302"].Position = UDim2.new(0.58248264, 0, 0.019493205, 0)
G2L["302"].Rotation = 0
G2L["302"].Selectable = true
G2L["302"].SelectionOrder = 0
G2L["302"].Size = UDim2.new(0, 144, 0, 24)
G2L["302"].Visible = true
G2L["302"].ZIndex = 1
G2L["302"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["303"].Name = [[Script]]
G2L["303"].Parent = G2L["302"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["304"].Name = [[face]]
G2L["304"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["304"].Text = [[LTG]]
G2L["304"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["304"].TextScaled = false
G2L["304"].TextSize = 14
G2L["304"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["304"].TextStrokeTransparency = 1
G2L["304"].TextWrapped = false
G2L["304"].TextXAlignment = Enum.TextXAlignment.Center
G2L["304"].TextYAlignment = Enum.TextYAlignment.Center
G2L["304"].Active = true
G2L["304"].AnchorPoint = Vector2.new(0, 0)
G2L["304"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["304"].BackgroundTransparency = 0
G2L["304"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["304"].BorderSizePixel = 2
G2L["304"].ClipsDescendants = false
G2L["304"].Draggable = false
G2L["304"].Position = UDim2.new(-0.002883229, 0, 0.1794932, 0)
G2L["304"].Rotation = 0
G2L["304"].Selectable = true
G2L["304"].SelectionOrder = 0
G2L["304"].Size = UDim2.new(0, 144, 0, 24)
G2L["304"].Visible = true
G2L["304"].ZIndex = 1
G2L["304"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["305"].Name = [[Script]]
G2L["305"].Parent = G2L["304"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["306"].Name = [[face]]
G2L["306"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["306"].Text = [[Kanye]]
G2L["306"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["306"].TextScaled = false
G2L["306"].TextSize = 14
G2L["306"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["306"].TextStrokeTransparency = 1
G2L["306"].TextWrapped = false
G2L["306"].TextXAlignment = Enum.TextXAlignment.Center
G2L["306"].TextYAlignment = Enum.TextYAlignment.Center
G2L["306"].Active = true
G2L["306"].AnchorPoint = Vector2.new(0, 0)
G2L["306"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["306"].BackgroundTransparency = 0
G2L["306"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["306"].BorderSizePixel = 2
G2L["306"].ClipsDescendants = false
G2L["306"].Draggable = false
G2L["306"].Position = UDim2.new(0.2897997, 0, 0.1794932, 0)
G2L["306"].Rotation = 0
G2L["306"].Selectable = true
G2L["306"].SelectionOrder = 0
G2L["306"].Size = UDim2.new(0, 144, 0, 24)
G2L["306"].Visible = true
G2L["306"].ZIndex = 1
G2L["306"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["307"].Name = [[Script]]
G2L["307"].Parent = G2L["306"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["308"].Name = [[face]]
G2L["308"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["308"].Text = [[MrBean]]
G2L["308"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["308"].TextScaled = false
G2L["308"].TextSize = 14
G2L["308"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["308"].TextStrokeTransparency = 1
G2L["308"].TextWrapped = false
G2L["308"].TextXAlignment = Enum.TextXAlignment.Center
G2L["308"].TextYAlignment = Enum.TextYAlignment.Center
G2L["308"].Active = true
G2L["308"].AnchorPoint = Vector2.new(0, 0)
G2L["308"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["308"].BackgroundTransparency = 0
G2L["308"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["308"].BorderSizePixel = 2
G2L["308"].ClipsDescendants = false
G2L["308"].Draggable = false
G2L["308"].Position = UDim2.new(0.58248264, 0, 0.1794932, 0)
G2L["308"].Rotation = 0
G2L["308"].Selectable = true
G2L["308"].SelectionOrder = 0
G2L["308"].Size = UDim2.new(0, 144, 0, 24)
G2L["308"].Visible = true
G2L["308"].ZIndex = 1
G2L["308"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["309"].Name = [[Script]]
G2L["309"].Parent = G2L["308"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["310"].Name = [[face]]
G2L["310"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["310"].Text = [[The Rock]]
G2L["310"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["310"].TextScaled = false
G2L["310"].TextSize = 14
G2L["310"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["310"].TextStrokeTransparency = 1
G2L["310"].TextWrapped = false
G2L["310"].TextXAlignment = Enum.TextXAlignment.Center
G2L["310"].TextYAlignment = Enum.TextYAlignment.Center
G2L["310"].Active = true
G2L["310"].AnchorPoint = Vector2.new(0, 0)
G2L["310"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["310"].BackgroundTransparency = 0
G2L["310"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["310"].BorderSizePixel = 2
G2L["310"].ClipsDescendants = false
G2L["310"].Draggable = false
G2L["310"].Position = UDim2.new(-0.002883229, 0, 0.37282655, 0)
G2L["310"].Rotation = 0
G2L["310"].Selectable = true
G2L["310"].SelectionOrder = 0
G2L["310"].Size = UDim2.new(0, 144, 0, 24)
G2L["310"].Visible = true
G2L["310"].ZIndex = 1
G2L["310"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["311"].Name = [[Script]]
G2L["311"].Parent = G2L["310"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["312"].Name = [[face]]
G2L["312"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["312"].Text = [[Bruh]]
G2L["312"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["312"].TextScaled = false
G2L["312"].TextSize = 14
G2L["312"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["312"].TextStrokeTransparency = 1
G2L["312"].TextWrapped = false
G2L["312"].TextXAlignment = Enum.TextXAlignment.Center
G2L["312"].TextYAlignment = Enum.TextYAlignment.Center
G2L["312"].Active = true
G2L["312"].AnchorPoint = Vector2.new(0, 0)
G2L["312"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["312"].BackgroundTransparency = 0
G2L["312"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["312"].BorderSizePixel = 2
G2L["312"].ClipsDescendants = false
G2L["312"].Draggable = false
G2L["312"].Position = UDim2.new(0.2897997, 0, 0.37282655, 0)
G2L["312"].Rotation = 0
G2L["312"].Selectable = true
G2L["312"].SelectionOrder = 0
G2L["312"].Size = UDim2.new(0, 144, 0, 24)
G2L["312"].Visible = true
G2L["312"].ZIndex = 1
G2L["312"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["313"].Name = [[Script]]
G2L["313"].Parent = G2L["312"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["314"].Name = [[face]]
G2L["314"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["314"].Text = [[Sanic]]
G2L["314"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["314"].TextScaled = false
G2L["314"].TextSize = 14
G2L["314"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["314"].TextStrokeTransparency = 1
G2L["314"].TextWrapped = false
G2L["314"].TextXAlignment = Enum.TextXAlignment.Center
G2L["314"].TextYAlignment = Enum.TextYAlignment.Center
G2L["314"].Active = true
G2L["314"].AnchorPoint = Vector2.new(0, 0)
G2L["314"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["314"].BackgroundTransparency = 0
G2L["314"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["314"].BorderSizePixel = 2
G2L["314"].ClipsDescendants = false
G2L["314"].Draggable = false
G2L["314"].Position = UDim2.new(0.58248264, 0, 0.37282655, 0)
G2L["314"].Rotation = 0
G2L["314"].Selectable = true
G2L["314"].SelectionOrder = 0
G2L["314"].Size = UDim2.new(0, 144, 0, 24)
G2L["314"].Visible = true
G2L["314"].ZIndex = 1
G2L["314"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["315"].Name = [[Script]]
G2L["315"].Parent = G2L["314"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face
G2L["316"].Name = [[face]]
G2L["316"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["316"].Text = [[Big Chungus]]
G2L["316"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["316"].TextScaled = false
G2L["316"].TextSize = 14
G2L["316"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["316"].TextStrokeTransparency = 1
G2L["316"].TextWrapped = false
G2L["316"].TextXAlignment = Enum.TextXAlignment.Center
G2L["316"].TextYAlignment = Enum.TextYAlignment.Center
G2L["316"].Active = true
G2L["316"].AnchorPoint = Vector2.new(0, 0)
G2L["316"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["316"].BackgroundTransparency = 0
G2L["316"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["316"].BorderSizePixel = 2
G2L["316"].ClipsDescendants = false
G2L["316"].Draggable = false
G2L["316"].Position = UDim2.new(-0.0008507085, 0, 0.57282656, 0)
G2L["316"].Rotation = 0
G2L["316"].Selectable = true
G2L["316"].SelectionOrder = 0
G2L["316"].Size = UDim2.new(0, 144, 0, 24)
G2L["316"].Visible = true
G2L["316"].ZIndex = 1
G2L["316"].Parent = G2L["293"]

--ScreenGui.ssGUIv7.pg1.faces.Faces2.face.Script
G2L["317"].Name = [[Script]]
G2L["317"].Parent = G2L["316"]

--ScreenGui.ssGUIv7.pg1.stamp
G2L["318"].Name = [[stamp]]
G2L["318"].Image = [[http://www.roblox.com/asset/?id=16218312317]]
G2L["318"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["318"].ScaleType = Enum.ScaleType.Stretch
G2L["318"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["318"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["318"].Active = false
G2L["318"].AnchorPoint = Vector2.new(0, 0)
G2L["318"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["318"].BackgroundTransparency = 0
G2L["318"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["318"].BorderSizePixel = 0
G2L["318"].ClipsDescendants = false
G2L["318"].Draggable = false
G2L["318"].Position = UDim2.new(0.77830935, 0, 0.9376943, 0)
G2L["318"].Rotation = 0
G2L["318"].Selectable = false
G2L["318"].SelectionOrder = 0
G2L["318"].Size = UDim2.new(0, 59, 0, 53)
G2L["318"].Visible = true
G2L["318"].ZIndex = 1
G2L["318"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.SynapseButton
G2L["319"].Name = [[SynapseButton]]
G2L["319"].Image = [[rbxassetid://11330378074]]
G2L["319"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["319"].ScaleType = Enum.ScaleType.Stretch
G2L["319"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["319"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["319"].Active = true
G2L["319"].AnchorPoint = Vector2.new(0, 0)
G2L["319"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["319"].BackgroundTransparency = 0
G2L["319"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["319"].BorderSizePixel = 0
G2L["319"].ClipsDescendants = false
G2L["319"].Draggable = false
G2L["319"].Position = UDim2.new(-0.001177608, 0, -0.0030081472, 0)
G2L["319"].Rotation = 0
G2L["319"].Selectable = true
G2L["319"].SelectionOrder = 0
G2L["319"].Size = UDim2.new(0, 44, 0, 43)
G2L["319"].Visible = true
G2L["319"].ZIndex = 1
G2L["319"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.SynapseButton.LocalScript
G2L["320"].Name = [[LocalScript]]
G2L["320"].Parent = G2L["319"]

--ScreenGui.ssGUIv7.pg1.icon
G2L["321"].Name = [[icon]]
G2L["321"].Image = [[rbxassetid://4998267428]]
G2L["321"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["321"].ScaleType = Enum.ScaleType.Stretch
G2L["321"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["321"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["321"].Active = true
G2L["321"].AnchorPoint = Vector2.new(0, 0)
G2L["321"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["321"].BackgroundTransparency = 0
G2L["321"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["321"].BorderSizePixel = 0
G2L["321"].ClipsDescendants = false
G2L["321"].Draggable = false
G2L["321"].Position = UDim2.new(0.92667806, 0, -0.0005410143, 0)
G2L["321"].Rotation = 0
G2L["321"].Selectable = true
G2L["321"].SelectionOrder = 0
G2L["321"].Size = UDim2.new(0, 34, 0, 34)
G2L["321"].Visible = true
G2L["321"].ZIndex = 1
G2L["321"].Parent = G2L["42"]

--ScreenGui.ssGUIv7.pg1.icon.LocalScript
G2L["322"].Name = [[LocalScript]]
G2L["322"].Parent = G2L["321"]

--ScreenGui.ssGUIv7.Page 2
G2L["323"].Name = [[Page 2]]
G2L["323"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["323"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["323"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["323"].ScrollBarThickness = 12
G2L["323"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["323"].Active = true
G2L["323"].AnchorPoint = Vector2.new(0, 0)
G2L["323"].BackgroundColor3 = Color3.fromRGB(51.000004, 50.000004, 52.000004)
G2L["323"].BackgroundTransparency = 0
G2L["323"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["323"].BorderSizePixel = 0
G2L["323"].ClipsDescendants = true
G2L["323"].Draggable = false
G2L["323"].Position = UDim2.new(-5.334492E-05, 0, 0.11954465, 0)
G2L["323"].Rotation = 0
G2L["323"].Selectable = true
G2L["323"].SelectionOrder = 0
G2L["323"].Size = UDim2.new(0, 624, 0, 464)
G2L["323"].Visible = false
G2L["323"].ZIndex = 1
G2L["323"].Parent = G2L["40"]

--ScreenGui.ssGUIv7.Page 2.back
G2L["324"].Name = [[back]]
G2L["324"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["324"].Text = [[Back]]
G2L["324"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["324"].TextScaled = true
G2L["324"].TextSize = 14
G2L["324"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["324"].TextStrokeTransparency = 1
G2L["324"].TextWrapped = true
G2L["324"].TextXAlignment = Enum.TextXAlignment.Center
G2L["324"].TextYAlignment = Enum.TextYAlignment.Center
G2L["324"].Active = true
G2L["324"].AnchorPoint = Vector2.new(0, 0)
G2L["324"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["324"].BackgroundTransparency = 0
G2L["324"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["324"].BorderSizePixel = 3
G2L["324"].ClipsDescendants = false
G2L["324"].Draggable = false
G2L["324"].Position = UDim2.new(0.47435898, 0, 0.9405098, 0)
G2L["324"].Rotation = 0
G2L["324"].Selectable = true
G2L["324"].SelectionOrder = 0
G2L["324"].Size = UDim2.new(0, 200, 0, 50)
G2L["324"].Visible = true
G2L["324"].ZIndex = 1
G2L["324"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.back.LocalScript
G2L["325"].Name = [[LocalScript]]
G2L["325"].Parent = G2L["324"]

--ScreenGui.ssGUIv7.Page 2.back.UIGradient
G2L["326"].Name = [[UIGradient]]
G2L["326"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["326"].Enabled = true
G2L["326"].Rotation = 0
G2L["326"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["326"].Parent = G2L["324"]

--ScreenGui.ssGUIv7.Page 2.back.UICorner
G2L["327"].Name = [[UICorner]]
G2L["327"].CornerRadius = UDim.new(0, 8)
G2L["327"].Parent = G2L["324"]

--ScreenGui.ssGUIv7.Page 2.Hints
G2L["328"].Name = [[Hints]]
G2L["328"].Active = false
G2L["328"].AnchorPoint = Vector2.new(0, 0)
G2L["328"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["328"].BackgroundTransparency = 0.25
G2L["328"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["328"].BorderSizePixel = 2
G2L["328"].ClipsDescendants = false
G2L["328"].Draggable = false
G2L["328"].Position = UDim2.new(0.111736834, 0, 0.0006538753, 0)
G2L["328"].Rotation = 0
G2L["328"].Selectable = false
G2L["328"].SelectionOrder = 0
G2L["328"].Size = UDim2.new(0, 476, 0, 54)
G2L["328"].Visible = true
G2L["328"].ZIndex = 1
G2L["328"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.Hints.UICorner
G2L["329"].Name = [[UICorner]]
G2L["329"].CornerRadius = UDim.new(0, 200)
G2L["329"].Parent = G2L["328"]

--ScreenGui.ssGUIv7.Page 2.Hints.TextLabel
G2L["330"].Name = [[TextLabel]]
G2L["330"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["330"].Text = [[Spams]]
G2L["330"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["330"].TextScaled = true
G2L["330"].TextSize = 14
G2L["330"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["330"].TextStrokeTransparency = 1
G2L["330"].TextWrapped = true
G2L["330"].TextXAlignment = Enum.TextXAlignment.Center
G2L["330"].TextYAlignment = Enum.TextYAlignment.Center
G2L["330"].Active = false
G2L["330"].AnchorPoint = Vector2.new(0, 0)
G2L["330"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["330"].BackgroundTransparency = 1
G2L["330"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["330"].BorderSizePixel = 0
G2L["330"].ClipsDescendants = false
G2L["330"].Draggable = false
G2L["330"].Position = UDim2.new(0.28991598, 0, 0, 0)
G2L["330"].Rotation = 0
G2L["330"].Selectable = false
G2L["330"].SelectionOrder = 0
G2L["330"].Size = UDim2.new(0, 200, 0, 50)
G2L["330"].Visible = true
G2L["330"].ZIndex = 1
G2L["330"].Parent = G2L["328"]

--ScreenGui.ssGUIv7.Page 2.Spams
G2L["331"].Name = [[Spams]]
G2L["331"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["332"].Name = [[TextButton]]
G2L["332"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["332"].Text = [[Duolingo Spam]]
G2L["332"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["332"].TextScaled = true
G2L["332"].TextSize = 14
G2L["332"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["332"].TextStrokeTransparency = 1
G2L["332"].TextWrapped = true
G2L["332"].TextXAlignment = Enum.TextXAlignment.Center
G2L["332"].TextYAlignment = Enum.TextYAlignment.Center
G2L["332"].Active = true
G2L["332"].AnchorPoint = Vector2.new(0, 0)
G2L["332"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["332"].BackgroundTransparency = 0
G2L["332"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["332"].BorderSizePixel = 2
G2L["332"].ClipsDescendants = false
G2L["332"].Draggable = false
G2L["332"].Position = UDim2.new(0.032051284, 0, 0.061369993, 0)
G2L["332"].Rotation = 0
G2L["332"].Selectable = true
G2L["332"].SelectionOrder = 0
G2L["332"].Size = UDim2.new(0, 121, 0, 18)
G2L["332"].Visible = true
G2L["332"].ZIndex = 1
G2L["332"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["333"].Name = [[Script]]
G2L["333"].Parent = G2L["332"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["334"].Name = [[Script]]
G2L["334"].Parent = G2L["332"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["335"].Name = [[TextButton]]
G2L["335"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["335"].Text = [[Cartman Spam]]
G2L["335"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["335"].TextScaled = true
G2L["335"].TextSize = 14
G2L["335"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["335"].TextStrokeTransparency = 1
G2L["335"].TextWrapped = true
G2L["335"].TextXAlignment = Enum.TextXAlignment.Center
G2L["335"].TextYAlignment = Enum.TextYAlignment.Center
G2L["335"].Active = true
G2L["335"].AnchorPoint = Vector2.new(0, 0)
G2L["335"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["335"].BackgroundTransparency = 0
G2L["335"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["335"].BorderSizePixel = 2
G2L["335"].ClipsDescendants = false
G2L["335"].Draggable = false
G2L["335"].Position = UDim2.new(0.2596154, 0, 0.061818913, 0)
G2L["335"].Rotation = 0
G2L["335"].Selectable = true
G2L["335"].SelectionOrder = 0
G2L["335"].Size = UDim2.new(0, 121, 0, 18)
G2L["335"].Visible = true
G2L["335"].ZIndex = 1
G2L["335"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["336"].Name = [[Script]]
G2L["336"].Parent = G2L["335"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["337"].Name = [[Script]]
G2L["337"].Parent = G2L["335"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["338"].Name = [[TextButton]]
G2L["338"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["338"].Text = [[Cat Spam]]
G2L["338"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["338"].TextScaled = true
G2L["338"].TextSize = 14
G2L["338"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["338"].TextStrokeTransparency = 1
G2L["338"].TextWrapped = true
G2L["338"].TextXAlignment = Enum.TextXAlignment.Center
G2L["338"].TextYAlignment = Enum.TextYAlignment.Center
G2L["338"].Active = true
G2L["338"].AnchorPoint = Vector2.new(0, 0)
G2L["338"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["338"].BackgroundTransparency = 0
G2L["338"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["338"].BorderSizePixel = 2
G2L["338"].ClipsDescendants = false
G2L["338"].Draggable = false
G2L["338"].Position = UDim2.new(0.48076922, 0, 0.06283865, 0)
G2L["338"].Rotation = 0
G2L["338"].Selectable = true
G2L["338"].SelectionOrder = 0
G2L["338"].Size = UDim2.new(0, 121, 0, 18)
G2L["338"].Visible = true
G2L["338"].ZIndex = 1
G2L["338"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["339"].Name = [[Script]]
G2L["339"].Parent = G2L["338"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["340"].Name = [[Script]]
G2L["340"].Parent = G2L["338"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["341"].Name = [[TextButton]]
G2L["341"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["341"].Text = [[Patrick Spam]]
G2L["341"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["341"].TextScaled = true
G2L["341"].TextSize = 14
G2L["341"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["341"].TextStrokeTransparency = 1
G2L["341"].TextWrapped = true
G2L["341"].TextXAlignment = Enum.TextXAlignment.Center
G2L["341"].TextYAlignment = Enum.TextYAlignment.Center
G2L["341"].Active = true
G2L["341"].AnchorPoint = Vector2.new(0, 0)
G2L["341"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["341"].BackgroundTransparency = 0
G2L["341"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["341"].BorderSizePixel = 2
G2L["341"].ClipsDescendants = false
G2L["341"].Draggable = false
G2L["341"].Position = UDim2.new(0.701923, 0, 0.06299986, 0)
G2L["341"].Rotation = 0
G2L["341"].Selectable = true
G2L["341"].SelectionOrder = 0
G2L["341"].Size = UDim2.new(0, 121, 0, 18)
G2L["341"].Visible = true
G2L["341"].ZIndex = 1
G2L["341"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["342"].Name = [[Script]]
G2L["342"].Parent = G2L["341"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["343"].Name = [[Script]]
G2L["343"].Parent = G2L["341"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["344"].Name = [[TextButton]]
G2L["344"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["344"].Text = [[Poop Spam]]
G2L["344"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["344"].TextScaled = true
G2L["344"].TextSize = 14
G2L["344"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["344"].TextStrokeTransparency = 1
G2L["344"].TextWrapped = true
G2L["344"].TextXAlignment = Enum.TextXAlignment.Center
G2L["344"].TextYAlignment = Enum.TextYAlignment.Center
G2L["344"].Active = true
G2L["344"].AnchorPoint = Vector2.new(0, 0)
G2L["344"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["344"].BackgroundTransparency = 0
G2L["344"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["344"].BorderSizePixel = 2
G2L["344"].ClipsDescendants = false
G2L["344"].Draggable = false
G2L["344"].Position = UDim2.new(0.03205123, 0, 0.08707296, 0)
G2L["344"].Rotation = 0
G2L["344"].Selectable = true
G2L["344"].SelectionOrder = 0
G2L["344"].Size = UDim2.new(0, 121, 0, 18)
G2L["344"].Visible = true
G2L["344"].ZIndex = 1
G2L["344"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["345"].Name = [[Script]]
G2L["345"].Parent = G2L["344"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["346"].Name = [[Script]]
G2L["346"].Parent = G2L["344"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["347"].Name = [[TextButton]]
G2L["347"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["347"].Text = [[Epic Spam]]
G2L["347"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["347"].TextScaled = true
G2L["347"].TextSize = 14
G2L["347"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["347"].TextStrokeTransparency = 1
G2L["347"].TextWrapped = true
G2L["347"].TextXAlignment = Enum.TextXAlignment.Center
G2L["347"].TextYAlignment = Enum.TextYAlignment.Center
G2L["347"].Active = true
G2L["347"].AnchorPoint = Vector2.new(0, 0)
G2L["347"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["347"].BackgroundTransparency = 0
G2L["347"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["347"].BorderSizePixel = 2
G2L["347"].ClipsDescendants = false
G2L["347"].Draggable = false
G2L["347"].Position = UDim2.new(0.25961533, 0, 0.087876946, 0)
G2L["347"].Rotation = 0
G2L["347"].Selectable = true
G2L["347"].SelectionOrder = 0
G2L["347"].Size = UDim2.new(0, 121, 0, 18)
G2L["347"].Visible = true
G2L["347"].ZIndex = 1
G2L["347"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["348"].Name = [[Script]]
G2L["348"].Parent = G2L["347"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["349"].Name = [[Script]]
G2L["349"].Parent = G2L["347"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["350"].Name = [[TextButton]]
G2L["350"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["350"].Text = [[USA Spam]]
G2L["350"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["350"].TextScaled = true
G2L["350"].TextSize = 14
G2L["350"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["350"].TextStrokeTransparency = 1
G2L["350"].TextWrapped = true
G2L["350"].TextXAlignment = Enum.TextXAlignment.Center
G2L["350"].TextYAlignment = Enum.TextYAlignment.Center
G2L["350"].Active = true
G2L["350"].AnchorPoint = Vector2.new(0, 0)
G2L["350"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["350"].BackgroundTransparency = 0
G2L["350"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["350"].BorderSizePixel = 2
G2L["350"].ClipsDescendants = false
G2L["350"].Draggable = false
G2L["350"].Position = UDim2.new(0.4807692, 0, 0.08754806, 0)
G2L["350"].Rotation = 0
G2L["350"].Selectable = true
G2L["350"].SelectionOrder = 0
G2L["350"].Size = UDim2.new(0, 121, 0, 18)
G2L["350"].Visible = true
G2L["350"].ZIndex = 1
G2L["350"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["351"].Name = [[Script]]
G2L["351"].Parent = G2L["350"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["352"].Name = [[Script]]
G2L["352"].Parent = G2L["350"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["353"].Name = [[TextButton]]
G2L["353"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["353"].Text = [[USSR Spam]]
G2L["353"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["353"].TextScaled = true
G2L["353"].TextSize = 14
G2L["353"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["353"].TextStrokeTransparency = 1
G2L["353"].TextWrapped = true
G2L["353"].TextXAlignment = Enum.TextXAlignment.Center
G2L["353"].TextYAlignment = Enum.TextYAlignment.Center
G2L["353"].Active = true
G2L["353"].AnchorPoint = Vector2.new(0, 0)
G2L["353"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["353"].BackgroundTransparency = 0
G2L["353"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["353"].BorderSizePixel = 2
G2L["353"].ClipsDescendants = false
G2L["353"].Draggable = false
G2L["353"].Position = UDim2.new(0.701923, 0, 0.086801, 0)
G2L["353"].Rotation = 0
G2L["353"].Selectable = true
G2L["353"].SelectionOrder = 0
G2L["353"].Size = UDim2.new(0, 121, 0, 18)
G2L["353"].Visible = true
G2L["353"].ZIndex = 1
G2L["353"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["354"].Name = [[Script]]
G2L["354"].Parent = G2L["353"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["355"].Name = [[Script]]
G2L["355"].Parent = G2L["353"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["356"].Name = [[TextButton]]
G2L["356"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["356"].Text = [[Russia Spam]]
G2L["356"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["356"].TextScaled = true
G2L["356"].TextSize = 14
G2L["356"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["356"].TextStrokeTransparency = 1
G2L["356"].TextWrapped = true
G2L["356"].TextXAlignment = Enum.TextXAlignment.Center
G2L["356"].TextYAlignment = Enum.TextYAlignment.Center
G2L["356"].Active = true
G2L["356"].AnchorPoint = Vector2.new(0, 0)
G2L["356"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["356"].BackgroundTransparency = 0
G2L["356"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["356"].BorderSizePixel = 2
G2L["356"].ClipsDescendants = false
G2L["356"].Draggable = false
G2L["356"].Position = UDim2.new(0.03205123, 0, 0.11588985, 0)
G2L["356"].Rotation = 0
G2L["356"].Selectable = true
G2L["356"].SelectionOrder = 0
G2L["356"].Size = UDim2.new(0, 121, 0, 18)
G2L["356"].Visible = true
G2L["356"].ZIndex = 1
G2L["356"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["357"].Name = [[Script]]
G2L["357"].Parent = G2L["356"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["358"].Name = [[Script]]
G2L["358"].Parent = G2L["356"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["359"].Name = [[TextButton]]
G2L["359"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["359"].Text = [[Anime Girl Spam]]
G2L["359"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["359"].TextScaled = true
G2L["359"].TextSize = 14
G2L["359"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["359"].TextStrokeTransparency = 1
G2L["359"].TextWrapped = true
G2L["359"].TextXAlignment = Enum.TextXAlignment.Center
G2L["359"].TextYAlignment = Enum.TextYAlignment.Center
G2L["359"].Active = true
G2L["359"].AnchorPoint = Vector2.new(0, 0)
G2L["359"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["359"].BackgroundTransparency = 0
G2L["359"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["359"].BorderSizePixel = 2
G2L["359"].ClipsDescendants = false
G2L["359"].Draggable = false
G2L["359"].Position = UDim2.new(0.25961533, 0, 0.116698034, 0)
G2L["359"].Rotation = 0
G2L["359"].Selectable = true
G2L["359"].SelectionOrder = 0
G2L["359"].Size = UDim2.new(0, 121, 0, 18)
G2L["359"].Visible = true
G2L["359"].ZIndex = 1
G2L["359"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["360"].Name = [[Script]]
G2L["360"].Parent = G2L["359"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["361"].Name = [[Script]]
G2L["361"].Parent = G2L["359"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["362"].Name = [[TextButton]]
G2L["362"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["362"].Text = [[c00lkidd Spam]]
G2L["362"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["362"].TextScaled = true
G2L["362"].TextSize = 14
G2L["362"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["362"].TextStrokeTransparency = 1
G2L["362"].TextWrapped = true
G2L["362"].TextXAlignment = Enum.TextXAlignment.Center
G2L["362"].TextYAlignment = Enum.TextYAlignment.Center
G2L["362"].Active = true
G2L["362"].AnchorPoint = Vector2.new(0, 0)
G2L["362"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["362"].BackgroundTransparency = 0
G2L["362"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["362"].BorderSizePixel = 2
G2L["362"].ClipsDescendants = false
G2L["362"].Draggable = false
G2L["362"].Position = UDim2.new(0.4807692, 0, 0.11637872, 0)
G2L["362"].Rotation = 0
G2L["362"].Selectable = true
G2L["362"].SelectionOrder = 0
G2L["362"].Size = UDim2.new(0, 121, 0, 18)
G2L["362"].Visible = true
G2L["362"].ZIndex = 1
G2L["362"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["363"].Name = [[Script]]
G2L["363"].Parent = G2L["362"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["364"].Name = [[Script]]
G2L["364"].Parent = G2L["362"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["365"].Name = [[TextButton]]
G2L["365"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["365"].Text = [[Mrbeast Spam]]
G2L["365"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["365"].TextScaled = true
G2L["365"].TextSize = 14
G2L["365"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["365"].TextStrokeTransparency = 1
G2L["365"].TextWrapped = true
G2L["365"].TextXAlignment = Enum.TextXAlignment.Center
G2L["365"].TextYAlignment = Enum.TextYAlignment.Center
G2L["365"].Active = true
G2L["365"].AnchorPoint = Vector2.new(0, 0)
G2L["365"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["365"].BackgroundTransparency = 0
G2L["365"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["365"].BorderSizePixel = 2
G2L["365"].ClipsDescendants = false
G2L["365"].Draggable = false
G2L["365"].Position = UDim2.new(0.701923, 0, 0.11674618, 0)
G2L["365"].Rotation = 0
G2L["365"].Selectable = true
G2L["365"].SelectionOrder = 0
G2L["365"].Size = UDim2.new(0, 121, 0, 18)
G2L["365"].Visible = true
G2L["365"].ZIndex = 1
G2L["365"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["366"].Name = [[Script]]
G2L["366"].Parent = G2L["365"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["367"].Name = [[Script]]
G2L["367"].Parent = G2L["365"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton
G2L["368"].Name = [[TextButton]]
G2L["368"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["368"].Text = [[Shrek Spam]]
G2L["368"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["368"].TextScaled = true
G2L["368"].TextSize = 14
G2L["368"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["368"].TextStrokeTransparency = 1
G2L["368"].TextWrapped = true
G2L["368"].TextXAlignment = Enum.TextXAlignment.Center
G2L["368"].TextYAlignment = Enum.TextYAlignment.Center
G2L["368"].Active = true
G2L["368"].AnchorPoint = Vector2.new(0, 0)
G2L["368"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["368"].BackgroundTransparency = 0
G2L["368"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["368"].BorderSizePixel = 2
G2L["368"].ClipsDescendants = false
G2L["368"].Draggable = false
G2L["368"].Position = UDim2.new(0.03205123, 0, 0.14235017, 0)
G2L["368"].Rotation = 0
G2L["368"].Selectable = true
G2L["368"].SelectionOrder = 0
G2L["368"].Size = UDim2.new(0, 121, 0, 18)
G2L["368"].Visible = true
G2L["368"].ZIndex = 1
G2L["368"].Parent = G2L["331"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["369"].Name = [[Script]]
G2L["369"].Parent = G2L["368"]

--ScreenGui.ssGUIv7.Page 2.Spams.TextButton.Script
G2L["370"].Name = [[Script]]
G2L["370"].Parent = G2L["368"]

--ScreenGui.ssGUIv7.Page 2.Hints
G2L["371"].Name = [[Hints]]
G2L["371"].Active = false
G2L["371"].AnchorPoint = Vector2.new(0, 0)
G2L["371"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["371"].BackgroundTransparency = 0.25
G2L["371"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["371"].BorderSizePixel = 2
G2L["371"].ClipsDescendants = false
G2L["371"].Draggable = false
G2L["371"].Position = UDim2.new(0.110134274, 0, 0.17673525, 0)
G2L["371"].Rotation = 0
G2L["371"].Selectable = false
G2L["371"].SelectionOrder = 0
G2L["371"].Size = UDim2.new(0, 476, 0, 54)
G2L["371"].Visible = true
G2L["371"].ZIndex = 1
G2L["371"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.Hints.UICorner
G2L["372"].Name = [[UICorner]]
G2L["372"].CornerRadius = UDim.new(0, 200)
G2L["372"].Parent = G2L["371"]

--ScreenGui.ssGUIv7.Page 2.Hints.TextLabel
G2L["373"].Name = [[TextLabel]]
G2L["373"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["373"].Text = [[Particles]]
G2L["373"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["373"].TextScaled = true
G2L["373"].TextSize = 14
G2L["373"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["373"].TextStrokeTransparency = 1
G2L["373"].TextWrapped = true
G2L["373"].TextXAlignment = Enum.TextXAlignment.Center
G2L["373"].TextYAlignment = Enum.TextYAlignment.Center
G2L["373"].Active = false
G2L["373"].AnchorPoint = Vector2.new(0, 0)
G2L["373"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["373"].BackgroundTransparency = 1
G2L["373"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["373"].BorderSizePixel = 0
G2L["373"].ClipsDescendants = false
G2L["373"].Draggable = false
G2L["373"].Position = UDim2.new(0.30042017, 0, 0, 0)
G2L["373"].Rotation = 0
G2L["373"].Selectable = false
G2L["373"].SelectionOrder = 0
G2L["373"].Size = UDim2.new(0, 200, 0, 50)
G2L["373"].Visible = true
G2L["373"].ZIndex = 1
G2L["373"].Parent = G2L["371"]

--ScreenGui.ssGUIv7.Page 2.Particles
G2L["374"].Name = [[Particles]]
G2L["374"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["375"].Name = [[TextButton]]
G2L["375"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["375"].Text = [[Trump]]
G2L["375"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["375"].TextScaled = false
G2L["375"].TextSize = 14
G2L["375"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["375"].TextStrokeTransparency = 1
G2L["375"].TextWrapped = false
G2L["375"].TextXAlignment = Enum.TextXAlignment.Center
G2L["375"].TextYAlignment = Enum.TextYAlignment.Center
G2L["375"].Active = true
G2L["375"].AnchorPoint = Vector2.new(0, 0)
G2L["375"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["375"].BackgroundTransparency = 0
G2L["375"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["375"].BorderSizePixel = 3
G2L["375"].ClipsDescendants = false
G2L["375"].Draggable = false
G2L["375"].Position = UDim2.new(0.060897436, 0, 0.25024447, 0)
G2L["375"].Rotation = 0
G2L["375"].Selectable = true
G2L["375"].SelectionOrder = 0
G2L["375"].Size = UDim2.new(0, 114, 0, 34)
G2L["375"].Visible = true
G2L["375"].ZIndex = 1
G2L["375"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["376"].Name = [[Script]]
G2L["376"].Parent = G2L["375"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["377"].Name = [[TextButton]]
G2L["377"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["377"].Text = [[USA]]
G2L["377"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["377"].TextScaled = false
G2L["377"].TextSize = 14
G2L["377"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["377"].TextStrokeTransparency = 1
G2L["377"].TextWrapped = false
G2L["377"].TextXAlignment = Enum.TextXAlignment.Center
G2L["377"].TextYAlignment = Enum.TextYAlignment.Center
G2L["377"].Active = true
G2L["377"].AnchorPoint = Vector2.new(0, 0)
G2L["377"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["377"].BackgroundTransparency = 0
G2L["377"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["377"].BorderSizePixel = 3
G2L["377"].ClipsDescendants = false
G2L["377"].Draggable = false
G2L["377"].Position = UDim2.new(0.27083334, 0, 0.25024447, 0)
G2L["377"].Rotation = 0
G2L["377"].Selectable = true
G2L["377"].SelectionOrder = 0
G2L["377"].Size = UDim2.new(0, 114, 0, 34)
G2L["377"].Visible = true
G2L["377"].ZIndex = 1
G2L["377"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["378"].Name = [[Script]]
G2L["378"].Parent = G2L["377"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["379"].Name = [[TextButton]]
G2L["379"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["379"].Text = [[Spongebob]]
G2L["379"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["379"].TextScaled = false
G2L["379"].TextSize = 14
G2L["379"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["379"].TextStrokeTransparency = 1
G2L["379"].TextWrapped = false
G2L["379"].TextXAlignment = Enum.TextXAlignment.Center
G2L["379"].TextYAlignment = Enum.TextYAlignment.Center
G2L["379"].Active = true
G2L["379"].AnchorPoint = Vector2.new(0, 0)
G2L["379"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["379"].BackgroundTransparency = 0
G2L["379"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["379"].BorderSizePixel = 3
G2L["379"].ClipsDescendants = false
G2L["379"].Draggable = false
G2L["379"].Position = UDim2.new(0.47596154, 0, 0.24947771, 0)
G2L["379"].Rotation = 0
G2L["379"].Selectable = true
G2L["379"].SelectionOrder = 0
G2L["379"].Size = UDim2.new(0, 114, 0, 34)
G2L["379"].Visible = true
G2L["379"].ZIndex = 1
G2L["379"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["380"].Name = [[Script]]
G2L["380"].Parent = G2L["379"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["381"].Name = [[TextButton]]
G2L["381"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["381"].Text = [[Patrick]]
G2L["381"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["381"].TextScaled = false
G2L["381"].TextSize = 14
G2L["381"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["381"].TextStrokeTransparency = 1
G2L["381"].TextWrapped = false
G2L["381"].TextXAlignment = Enum.TextXAlignment.Center
G2L["381"].TextYAlignment = Enum.TextYAlignment.Center
G2L["381"].Active = true
G2L["381"].AnchorPoint = Vector2.new(0, 0)
G2L["381"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["381"].BackgroundTransparency = 0
G2L["381"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["381"].BorderSizePixel = 3
G2L["381"].ClipsDescendants = false
G2L["381"].Draggable = false
G2L["381"].Position = UDim2.new(0.69070506, 0, 0.24989122, 0)
G2L["381"].Rotation = 0
G2L["381"].Selectable = true
G2L["381"].SelectionOrder = 0
G2L["381"].Size = UDim2.new(0, 114, 0, 34)
G2L["381"].Visible = true
G2L["381"].ZIndex = 1
G2L["381"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["382"].Name = [[Script]]
G2L["382"].Parent = G2L["381"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["383"].Name = [[TextButton]]
G2L["383"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["383"].Text = [[Chris]]
G2L["383"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["383"].TextScaled = false
G2L["383"].TextSize = 14
G2L["383"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["383"].TextStrokeTransparency = 1
G2L["383"].TextWrapped = false
G2L["383"].TextXAlignment = Enum.TextXAlignment.Center
G2L["383"].TextYAlignment = Enum.TextYAlignment.Center
G2L["383"].Active = true
G2L["383"].AnchorPoint = Vector2.new(0, 0)
G2L["383"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["383"].BackgroundTransparency = 0
G2L["383"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["383"].BorderSizePixel = 3
G2L["383"].ClipsDescendants = false
G2L["383"].Draggable = false
G2L["383"].Position = UDim2.new(0.06249995, 0, 0.2874684, 0)
G2L["383"].Rotation = 0
G2L["383"].Selectable = true
G2L["383"].SelectionOrder = 0
G2L["383"].Size = UDim2.new(0, 114, 0, 34)
G2L["383"].Visible = true
G2L["383"].ZIndex = 1
G2L["383"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["384"].Name = [[Script]]
G2L["384"].Parent = G2L["383"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["385"].Name = [[TextButton]]
G2L["385"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["385"].Text = [[MR BEAST!]]
G2L["385"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["385"].TextScaled = false
G2L["385"].TextSize = 14
G2L["385"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["385"].TextStrokeTransparency = 1
G2L["385"].TextWrapped = false
G2L["385"].TextXAlignment = Enum.TextXAlignment.Center
G2L["385"].TextYAlignment = Enum.TextYAlignment.Center
G2L["385"].Active = true
G2L["385"].AnchorPoint = Vector2.new(0, 0)
G2L["385"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["385"].BackgroundTransparency = 0
G2L["385"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["385"].BorderSizePixel = 3
G2L["385"].ClipsDescendants = false
G2L["385"].Draggable = false
G2L["385"].Position = UDim2.new(0.27083328, 0, 0.2887752, 0)
G2L["385"].Rotation = 0
G2L["385"].Selectable = true
G2L["385"].SelectionOrder = 0
G2L["385"].Size = UDim2.new(0, 114, 0, 34)
G2L["385"].Visible = true
G2L["385"].ZIndex = 1
G2L["385"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["386"].Name = [[Script]]
G2L["386"].Parent = G2L["385"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["387"].Name = [[TextButton]]
G2L["387"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["387"].Text = [[jondow6665]]
G2L["387"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["387"].TextScaled = false
G2L["387"].TextSize = 14
G2L["387"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["387"].TextStrokeTransparency = 1
G2L["387"].TextWrapped = false
G2L["387"].TextXAlignment = Enum.TextXAlignment.Center
G2L["387"].TextYAlignment = Enum.TextYAlignment.Center
G2L["387"].Active = true
G2L["387"].AnchorPoint = Vector2.new(0, 0)
G2L["387"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["387"].BackgroundTransparency = 0
G2L["387"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["387"].BorderSizePixel = 3
G2L["387"].ClipsDescendants = false
G2L["387"].Draggable = false
G2L["387"].Position = UDim2.new(0.47596148, 0, 0.28743336, 0)
G2L["387"].Rotation = 0
G2L["387"].Selectable = true
G2L["387"].SelectionOrder = 0
G2L["387"].Size = UDim2.new(0, 114, 0, 34)
G2L["387"].Visible = true
G2L["387"].ZIndex = 1
G2L["387"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["388"].Name = [[Script]]
G2L["388"].Parent = G2L["387"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["389"].Name = [[TextButton]]
G2L["389"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["389"].Text = [[USSR]]
G2L["389"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["389"].TextScaled = false
G2L["389"].TextSize = 14
G2L["389"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["389"].TextStrokeTransparency = 1
G2L["389"].TextWrapped = false
G2L["389"].TextXAlignment = Enum.TextXAlignment.Center
G2L["389"].TextYAlignment = Enum.TextYAlignment.Center
G2L["389"].Active = true
G2L["389"].AnchorPoint = Vector2.new(0, 0)
G2L["389"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["389"].BackgroundTransparency = 0
G2L["389"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["389"].BorderSizePixel = 3
G2L["389"].ClipsDescendants = false
G2L["389"].Draggable = false
G2L["389"].Position = UDim2.new(0.69070506, 0, 0.28863657, 0)
G2L["389"].Rotation = 0
G2L["389"].Selectable = true
G2L["389"].SelectionOrder = 0
G2L["389"].Size = UDim2.new(0, 114, 0, 34)
G2L["389"].Visible = true
G2L["389"].ZIndex = 1
G2L["389"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["390"].Name = [[Script]]
G2L["390"].Parent = G2L["389"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["391"].Name = [[TextButton]]
G2L["391"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["391"].Text = [[Popcat]]
G2L["391"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["391"].TextScaled = false
G2L["391"].TextSize = 14
G2L["391"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["391"].TextStrokeTransparency = 1
G2L["391"].TextWrapped = false
G2L["391"].TextXAlignment = Enum.TextXAlignment.Center
G2L["391"].TextYAlignment = Enum.TextYAlignment.Center
G2L["391"].Active = true
G2L["391"].AnchorPoint = Vector2.new(0, 0)
G2L["391"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["391"].BackgroundTransparency = 0
G2L["391"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["391"].BorderSizePixel = 3
G2L["391"].ClipsDescendants = false
G2L["391"].Draggable = false
G2L["391"].Position = UDim2.new(0.69070506, 0, 0.32160115, 0)
G2L["391"].Rotation = 0
G2L["391"].Selectable = true
G2L["391"].SelectionOrder = 0
G2L["391"].Size = UDim2.new(0, 114, 0, 34)
G2L["391"].Visible = true
G2L["391"].ZIndex = 1
G2L["391"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["392"].Name = [[Script]]
G2L["392"].Parent = G2L["391"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["393"].Name = [[TextButton]]
G2L["393"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["393"].Text = [[Floppa]]
G2L["393"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["393"].TextScaled = false
G2L["393"].TextSize = 14
G2L["393"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["393"].TextStrokeTransparency = 1
G2L["393"].TextWrapped = false
G2L["393"].TextXAlignment = Enum.TextXAlignment.Center
G2L["393"].TextYAlignment = Enum.TextYAlignment.Center
G2L["393"].Active = true
G2L["393"].AnchorPoint = Vector2.new(0, 0)
G2L["393"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["393"].BackgroundTransparency = 0
G2L["393"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["393"].BorderSizePixel = 3
G2L["393"].ClipsDescendants = false
G2L["393"].Draggable = false
G2L["393"].Position = UDim2.new(0.47596148, 0, 0.32320607, 0)
G2L["393"].Rotation = 0
G2L["393"].Selectable = true
G2L["393"].SelectionOrder = 0
G2L["393"].Size = UDim2.new(0, 114, 0, 34)
G2L["393"].Visible = true
G2L["393"].ZIndex = 1
G2L["393"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["394"].Name = [[Script]]
G2L["394"].Parent = G2L["393"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["395"].Name = [[TextButton]]
G2L["395"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["395"].Text = [[Doritos]]
G2L["395"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["395"].TextScaled = false
G2L["395"].TextSize = 14
G2L["395"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["395"].TextStrokeTransparency = 1
G2L["395"].TextWrapped = false
G2L["395"].TextXAlignment = Enum.TextXAlignment.Center
G2L["395"].TextYAlignment = Enum.TextYAlignment.Center
G2L["395"].Active = true
G2L["395"].AnchorPoint = Vector2.new(0, 0)
G2L["395"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["395"].BackgroundTransparency = 0
G2L["395"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["395"].BorderSizePixel = 3
G2L["395"].ClipsDescendants = false
G2L["395"].Draggable = false
G2L["395"].Position = UDim2.new(0.27083328, 0, 0.32254133, 0)
G2L["395"].Rotation = 0
G2L["395"].Selectable = true
G2L["395"].SelectionOrder = 0
G2L["395"].Size = UDim2.new(0, 114, 0, 34)
G2L["395"].Visible = true
G2L["395"].ZIndex = 1
G2L["395"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["396"].Name = [[Script]]
G2L["396"].Parent = G2L["395"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["397"].Name = [[TextButton]]
G2L["397"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["397"].Text = [[MLG]]
G2L["397"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["397"].TextScaled = false
G2L["397"].TextSize = 14
G2L["397"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["397"].TextStrokeTransparency = 1
G2L["397"].TextWrapped = false
G2L["397"].TextXAlignment = Enum.TextXAlignment.Center
G2L["397"].TextYAlignment = Enum.TextYAlignment.Center
G2L["397"].Active = true
G2L["397"].AnchorPoint = Vector2.new(0, 0)
G2L["397"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["397"].BackgroundTransparency = 0
G2L["397"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["397"].BorderSizePixel = 3
G2L["397"].ClipsDescendants = false
G2L["397"].Draggable = false
G2L["397"].Position = UDim2.new(0.06249995, 0, 0.32318655, 0)
G2L["397"].Rotation = 0
G2L["397"].Selectable = true
G2L["397"].SelectionOrder = 0
G2L["397"].Size = UDim2.new(0, 114, 0, 34)
G2L["397"].Visible = true
G2L["397"].ZIndex = 1
G2L["397"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["398"].Name = [[Script]]
G2L["398"].Parent = G2L["397"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["399"].Name = [[TextButton]]
G2L["399"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["399"].Text = [[Creeper]]
G2L["399"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["399"].TextScaled = false
G2L["399"].TextSize = 14
G2L["399"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["399"].TextStrokeTransparency = 1
G2L["399"].TextWrapped = false
G2L["399"].TextXAlignment = Enum.TextXAlignment.Center
G2L["399"].TextYAlignment = Enum.TextYAlignment.Center
G2L["399"].Active = true
G2L["399"].AnchorPoint = Vector2.new(0, 0)
G2L["399"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["399"].BackgroundTransparency = 0
G2L["399"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["399"].BorderSizePixel = 3
G2L["399"].ClipsDescendants = false
G2L["399"].Draggable = false
G2L["399"].Position = UDim2.new(0.69070506, 0, 0.3612901, 0)
G2L["399"].Rotation = 0
G2L["399"].Selectable = true
G2L["399"].SelectionOrder = 0
G2L["399"].Size = UDim2.new(0, 114, 0, 34)
G2L["399"].Visible = true
G2L["399"].ZIndex = 1
G2L["399"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["400"].Name = [[Script]]
G2L["400"].Parent = G2L["399"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["401"].Name = [[TextButton]]
G2L["401"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["401"].Text = [[666]]
G2L["401"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["401"].TextScaled = false
G2L["401"].TextSize = 14
G2L["401"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["401"].TextStrokeTransparency = 1
G2L["401"].TextWrapped = false
G2L["401"].TextXAlignment = Enum.TextXAlignment.Center
G2L["401"].TextYAlignment = Enum.TextYAlignment.Center
G2L["401"].Active = true
G2L["401"].AnchorPoint = Vector2.new(0, 0)
G2L["401"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["401"].BackgroundTransparency = 0
G2L["401"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["401"].BorderSizePixel = 3
G2L["401"].ClipsDescendants = false
G2L["401"].Draggable = false
G2L["401"].Position = UDim2.new(0.47596148, 0, 0.36027125, 0)
G2L["401"].Rotation = 0
G2L["401"].Selectable = true
G2L["401"].SelectionOrder = 0
G2L["401"].Size = UDim2.new(0, 114, 0, 34)
G2L["401"].Visible = true
G2L["401"].ZIndex = 1
G2L["401"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["402"].Name = [[Script]]
G2L["402"].Parent = G2L["401"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["403"].Name = [[TextButton]]
G2L["403"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["403"].Text = [[c00lkidd]]
G2L["403"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["403"].TextScaled = false
G2L["403"].TextSize = 14
G2L["403"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["403"].TextStrokeTransparency = 1
G2L["403"].TextWrapped = false
G2L["403"].TextXAlignment = Enum.TextXAlignment.Center
G2L["403"].TextYAlignment = Enum.TextYAlignment.Center
G2L["403"].Active = true
G2L["403"].AnchorPoint = Vector2.new(0, 0)
G2L["403"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["403"].BackgroundTransparency = 0
G2L["403"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["403"].BorderSizePixel = 3
G2L["403"].ClipsDescendants = false
G2L["403"].Draggable = false
G2L["403"].Position = UDim2.new(0.27083328, 0, 0.3614782, 0)
G2L["403"].Rotation = 0
G2L["403"].Selectable = true
G2L["403"].SelectionOrder = 0
G2L["403"].Size = UDim2.new(0, 114, 0, 34)
G2L["403"].Visible = true
G2L["403"].ZIndex = 1
G2L["403"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["404"].Name = [[Script]]
G2L["404"].Parent = G2L["403"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton
G2L["405"].Name = [[TextButton]]
G2L["405"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["405"].Text = [[Poop]]
G2L["405"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["405"].TextScaled = false
G2L["405"].TextSize = 14
G2L["405"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["405"].TextStrokeTransparency = 1
G2L["405"].TextWrapped = false
G2L["405"].TextXAlignment = Enum.TextXAlignment.Center
G2L["405"].TextYAlignment = Enum.TextYAlignment.Center
G2L["405"].Active = true
G2L["405"].AnchorPoint = Vector2.new(0, 0)
G2L["405"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["405"].BackgroundTransparency = 0
G2L["405"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["405"].BorderSizePixel = 3
G2L["405"].ClipsDescendants = false
G2L["405"].Draggable = false
G2L["405"].Position = UDim2.new(0.06249995, 0, 0.36206475, 0)
G2L["405"].Rotation = 0
G2L["405"].Selectable = true
G2L["405"].SelectionOrder = 0
G2L["405"].Size = UDim2.new(0, 114, 0, 34)
G2L["405"].Visible = true
G2L["405"].ZIndex = 1
G2L["405"].Parent = G2L["374"]

--ScreenGui.ssGUIv7.Page 2.Particles.TextButton.Script
G2L["406"].Name = [[Script]]
G2L["406"].Parent = G2L["405"]

--ScreenGui.ssGUIv7.Page 2.credits
G2L["407"].Name = [[credits]]
G2L["407"].Active = false
G2L["407"].AnchorPoint = Vector2.new(0, 0)
G2L["407"].BackgroundColor3 = Color3.fromRGB(176, 176, 176)
G2L["407"].BackgroundTransparency = 1
G2L["407"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["407"].BorderSizePixel = 0
G2L["407"].ClipsDescendants = false
G2L["407"].Draggable = false
G2L["407"].Position = UDim2.new(0.34978673, 0, 0.32632598, 0)
G2L["407"].Rotation = 0
G2L["407"].Selectable = false
G2L["407"].SelectionOrder = 0
G2L["407"].Size = UDim2.new(0, 275, 0, 165)
G2L["407"].Visible = true
G2L["407"].ZIndex = 1
G2L["407"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.credits.ImageLabel
G2L["408"].Name = [[ImageLabel]]
G2L["408"].Image = [[rbxassetid://14801957514]]
G2L["408"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["408"].ScaleType = Enum.ScaleType.Stretch
G2L["408"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["408"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["408"].Active = false
G2L["408"].AnchorPoint = Vector2.new(0, 0)
G2L["408"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["408"].BackgroundTransparency = 0
G2L["408"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["408"].BorderSizePixel = 0
G2L["408"].ClipsDescendants = false
G2L["408"].Draggable = false
G2L["408"].Position = UDim2.new(-0.78909093, 0, 3.9939394, 0)
G2L["408"].Rotation = 0
G2L["408"].Selectable = false
G2L["408"].SelectionOrder = 0
G2L["408"].Size = UDim2.new(0, 52, 0, 48)
G2L["408"].Visible = true
G2L["408"].ZIndex = 1
G2L["408"].Parent = G2L["407"]

--ScreenGui.ssGUIv7.Page 2.credits.ImageLabel.UIGradient
G2L["409"].Name = [[UIGradient]]
G2L["409"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(235, 8, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(235, 8, 0))};
G2L["409"].Enabled = true
G2L["409"].Rotation = 0
G2L["409"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["409"].Parent = G2L["408"]

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel
G2L["410"].Name = [[TextLabel]]
G2L["410"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["410"].Text = [[made by mario.ss & enitytest]]
G2L["410"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["410"].TextScaled = true
G2L["410"].TextSize = 42
G2L["410"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["410"].TextStrokeTransparency = 1
G2L["410"].TextWrapped = true
G2L["410"].TextXAlignment = Enum.TextXAlignment.Center
G2L["410"].TextYAlignment = Enum.TextYAlignment.Center
G2L["410"].Active = false
G2L["410"].AnchorPoint = Vector2.new(0, 0)
G2L["410"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["410"].BackgroundTransparency = 0
G2L["410"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["410"].BorderSizePixel = 2
G2L["410"].ClipsDescendants = false
G2L["410"].Draggable = false
G2L["410"].Position = UDim2.new(-0.60354406, 0, 4.084246, 0)
G2L["410"].Rotation = 0
G2L["410"].Selectable = false
G2L["410"].SelectionOrder = 0
G2L["410"].Size = UDim2.new(0, 194, 0, 25)
G2L["410"].Visible = true
G2L["410"].ZIndex = 1
G2L["410"].Parent = G2L["407"]

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel.LocalScript
G2L["411"].Name = [[LocalScript]]
G2L["411"].Parent = G2L["410"]

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel.UICorner
G2L["412"].Name = [[UICorner]]
G2L["412"].CornerRadius = UDim.new(0, 200)
G2L["412"].Parent = G2L["410"]

--ScreenGui.ssGUIv7.Page 2.credits
G2L["413"].Name = [[credits]]
G2L["413"].Active = false
G2L["413"].AnchorPoint = Vector2.new(0, 0)
G2L["413"].BackgroundColor3 = Color3.fromRGB(130, 15.000001, 0)
G2L["413"].BackgroundTransparency = 0
G2L["413"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["413"].BorderSizePixel = 2
G2L["413"].ClipsDescendants = false
G2L["413"].Draggable = false
G2L["413"].Position = UDim2.new(0.25801286, 0, 0.4308354, 0)
G2L["413"].Rotation = 0
G2L["413"].Selectable = false
G2L["413"].SelectionOrder = 0
G2L["413"].Size = UDim2.new(0, 320, 0, 357)
G2L["413"].Visible = true
G2L["413"].ZIndex = 1
G2L["413"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.credits.ImageLabel
G2L["414"].Name = [[ImageLabel]]
G2L["414"].Image = [[rbxassetid://14726883331]]
G2L["414"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["414"].ScaleType = Enum.ScaleType.Stretch
G2L["414"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["414"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["414"].Active = false
G2L["414"].AnchorPoint = Vector2.new(0, 0)
G2L["414"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["414"].BackgroundTransparency = 0
G2L["414"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["414"].BorderSizePixel = 0
G2L["414"].ClipsDescendants = false
G2L["414"].Draggable = false
G2L["414"].Position = UDim2.new(0.025, 0, 0.02409897, 0)
G2L["414"].Rotation = 0
G2L["414"].Selectable = false
G2L["414"].SelectionOrder = 0
G2L["414"].Size = UDim2.new(0, 305, 0, 343)
G2L["414"].Visible = true
G2L["414"].ZIndex = 1
G2L["414"].Parent = G2L["413"]

--ScreenGui.ssGUIv7.Page 2.credits.title
G2L["415"].Name = [[title]]
G2L["415"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["415"].Text = [[Credits]]
G2L["415"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["415"].TextScaled = true
G2L["415"].TextSize = 14
G2L["415"].TextStrokeColor3 = Color3.fromRGB(190, 0, 0)
G2L["415"].TextStrokeTransparency = 1
G2L["415"].TextWrapped = true
G2L["415"].TextXAlignment = Enum.TextXAlignment.Center
G2L["415"].TextYAlignment = Enum.TextYAlignment.Center
G2L["415"].Active = false
G2L["415"].AnchorPoint = Vector2.new(0, 0)
G2L["415"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["415"].BackgroundTransparency = 1
G2L["415"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["415"].BorderSizePixel = 0
G2L["415"].ClipsDescendants = false
G2L["415"].Draggable = false
G2L["415"].Position = UDim2.new(0.046875, 0, 0.022127466, 0)
G2L["415"].Rotation = 0
G2L["415"].Selectable = false
G2L["415"].SelectionOrder = 0
G2L["415"].Size = UDim2.new(0, 298, 0, 58)
G2L["415"].Visible = true
G2L["415"].ZIndex = 1
G2L["415"].Parent = G2L["413"]

--ScreenGui.ssGUIv7.Page 2.credits.TextLabel
G2L["416"].Name = [[TextLabel]]
G2L["416"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["416"].Text = [[g00byd0lan/hark, jondow6665,enitytest (owner), c0em3r (map require script) ]]
G2L["416"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["416"].TextScaled = true
G2L["416"].TextSize = 14
G2L["416"].TextStrokeColor3 = Color3.fromRGB(190, 0, 0)
G2L["416"].TextStrokeTransparency = 1
G2L["416"].TextWrapped = true
G2L["416"].TextXAlignment = Enum.TextXAlignment.Center
G2L["416"].TextYAlignment = Enum.TextYAlignment.Center
G2L["416"].Active = false
G2L["416"].AnchorPoint = Vector2.new(0, 0)
G2L["416"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["416"].BackgroundTransparency = 1
G2L["416"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["416"].BorderSizePixel = 0
G2L["416"].ClipsDescendants = false
G2L["416"].Draggable = false
G2L["416"].Position = UDim2.new(0.09375, 0, 0.26358384, 0)
G2L["416"].Rotation = 0
G2L["416"].Selectable = false
G2L["416"].SelectionOrder = 0
G2L["416"].Size = UDim2.new(0, 268, 0, 72)
G2L["416"].Visible = true
G2L["416"].ZIndex = 1
G2L["416"].Parent = G2L["413"]

--ScreenGui.ssGUIv7.Page 2.pg
G2L["417"].Name = [[pg]]
G2L["417"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["417"].Text = [[Next Page]]
G2L["417"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["417"].TextScaled = true
G2L["417"].TextSize = 14
G2L["417"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["417"].TextStrokeTransparency = 1
G2L["417"].TextWrapped = true
G2L["417"].TextXAlignment = Enum.TextXAlignment.Center
G2L["417"].TextYAlignment = Enum.TextYAlignment.Center
G2L["417"].Active = true
G2L["417"].AnchorPoint = Vector2.new(0, 0)
G2L["417"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["417"].BackgroundTransparency = 0
G2L["417"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["417"].BorderSizePixel = 3
G2L["417"].ClipsDescendants = false
G2L["417"].Draggable = false
G2L["417"].Position = UDim2.new(0.47435898, 0, 0.8842614, 0)
G2L["417"].Rotation = 0
G2L["417"].Selectable = true
G2L["417"].SelectionOrder = 0
G2L["417"].Size = UDim2.new(0, 200, 0, 50)
G2L["417"].Visible = true
G2L["417"].ZIndex = 1
G2L["417"].Parent = G2L["323"]

--ScreenGui.ssGUIv7.Page 2.pg.LocalScript
G2L["418"].Name = [[LocalScript]]
G2L["418"].Parent = G2L["417"]

--ScreenGui.ssGUIv7.Page 2.pg.UIGradient
G2L["419"].Name = [[UIGradient]]
G2L["419"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["419"].Enabled = true
G2L["419"].Rotation = 0
G2L["419"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["419"].Parent = G2L["417"]

--ScreenGui.ssGUIv7.Page 2.pg.UICorner
G2L["420"].Name = [[UICorner]]
G2L["420"].CornerRadius = UDim.new(0, 8)
G2L["420"].Parent = G2L["417"]

--ScreenGui.ssGUIv7.Page 3
G2L["421"].Name = [[Page 3]]
G2L["421"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["421"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["421"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["421"].ScrollBarThickness = 12
G2L["421"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["421"].Active = true
G2L["421"].AnchorPoint = Vector2.new(0, 0)
G2L["421"].BackgroundColor3 = Color3.fromRGB(51.000004, 50.000004, 52.000004)
G2L["421"].BackgroundTransparency = 0
G2L["421"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["421"].BorderSizePixel = 0
G2L["421"].ClipsDescendants = true
G2L["421"].Draggable = false
G2L["421"].Position = UDim2.new(-0.0019999966, 0, 0.10436427, 0)
G2L["421"].Rotation = 0
G2L["421"].Selectable = true
G2L["421"].SelectionOrder = 0
G2L["421"].Size = UDim2.new(0, 627, 0, 475)
G2L["421"].Visible = false
G2L["421"].ZIndex = 1
G2L["421"].Parent = G2L["40"]

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["422"].Name = [[Hints]]
G2L["422"].Active = false
G2L["422"].AnchorPoint = Vector2.new(0, 0)
G2L["422"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["422"].BackgroundTransparency = 0.25
G2L["422"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["422"].BorderSizePixel = 2
G2L["422"].ClipsDescendants = false
G2L["422"].Draggable = false
G2L["422"].Position = UDim2.new(0.11013426, 0, 0.0005960709, 0)
G2L["422"].Rotation = 0
G2L["422"].Selectable = false
G2L["422"].SelectionOrder = 0
G2L["422"].Size = UDim2.new(0, 476, 0, 54)
G2L["422"].Visible = true
G2L["422"].ZIndex = 1
G2L["422"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["423"].Name = [[UICorner]]
G2L["423"].CornerRadius = UDim.new(0, 200)
G2L["423"].Parent = G2L["422"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["424"].Name = [[TextLabel]]
G2L["424"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["424"].Text = [[ISIS ]]
G2L["424"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["424"].TextScaled = true
G2L["424"].TextSize = 14
G2L["424"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["424"].TextStrokeTransparency = 1
G2L["424"].TextWrapped = true
G2L["424"].TextXAlignment = Enum.TextXAlignment.Center
G2L["424"].TextYAlignment = Enum.TextYAlignment.Center
G2L["424"].Active = false
G2L["424"].AnchorPoint = Vector2.new(0, 0)
G2L["424"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["424"].BackgroundTransparency = 1
G2L["424"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["424"].BorderSizePixel = 0
G2L["424"].ClipsDescendants = false
G2L["424"].Draggable = false
G2L["424"].Position = UDim2.new(0.30042017, 0, 0, 0)
G2L["424"].Rotation = 0
G2L["424"].Selectable = false
G2L["424"].SelectionOrder = 0
G2L["424"].Size = UDim2.new(0, 200, 0, 50)
G2L["424"].Visible = true
G2L["424"].ZIndex = 1
G2L["424"].Parent = G2L["422"]

--ScreenGui.ssGUIv7.Page 3.goofy
G2L["425"].Name = [[goofy]]
G2L["425"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["425"].Text = [[Jumpscare]]
G2L["425"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["425"].TextScaled = true
G2L["425"].TextSize = 14
G2L["425"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["425"].TextStrokeTransparency = 1
G2L["425"].TextWrapped = true
G2L["425"].TextXAlignment = Enum.TextXAlignment.Center
G2L["425"].TextYAlignment = Enum.TextYAlignment.Center
G2L["425"].Active = true
G2L["425"].AnchorPoint = Vector2.new(0, 0)
G2L["425"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["425"].BackgroundTransparency = 0
G2L["425"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["425"].BorderSizePixel = 3
G2L["425"].ClipsDescendants = false
G2L["425"].Draggable = false
G2L["425"].Position = UDim2.new(0.10882691, 0, 0.056648057, 0)
G2L["425"].Rotation = 0
G2L["425"].Selectable = true
G2L["425"].SelectionOrder = 0
G2L["425"].Size = UDim2.new(0, 179, 0, 28)
G2L["425"].Visible = true
G2L["425"].ZIndex = 1
G2L["425"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["426"].Name = [[Script]]
G2L["426"].Parent = G2L["425"]

--ScreenGui.ssGUIv7.Page 3.back
G2L["427"].Name = [[back]]
G2L["427"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["427"].Text = [[Back]]
G2L["427"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["427"].TextScaled = true
G2L["427"].TextSize = 14
G2L["427"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["427"].TextStrokeTransparency = 1
G2L["427"].TextWrapped = true
G2L["427"].TextXAlignment = Enum.TextXAlignment.Center
G2L["427"].TextYAlignment = Enum.TextYAlignment.Center
G2L["427"].Active = true
G2L["427"].AnchorPoint = Vector2.new(0, 0)
G2L["427"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["427"].BackgroundTransparency = 0
G2L["427"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["427"].BorderSizePixel = 3
G2L["427"].ClipsDescendants = false
G2L["427"].Draggable = false
G2L["427"].Position = UDim2.new(0.47435898, 0, 0.9405098, 0)
G2L["427"].Rotation = 0
G2L["427"].Selectable = true
G2L["427"].SelectionOrder = 0
G2L["427"].Size = UDim2.new(0, 200, 0, 50)
G2L["427"].Visible = true
G2L["427"].ZIndex = 1
G2L["427"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.back.LocalScript
G2L["428"].Name = [[LocalScript]]
G2L["428"].Parent = G2L["427"]

--ScreenGui.ssGUIv7.Page 3.back.UIGradient
G2L["429"].Name = [[UIGradient]]
G2L["429"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["429"].Enabled = true
G2L["429"].Rotation = 0
G2L["429"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["429"].Parent = G2L["427"]

--ScreenGui.ssGUIv7.Page 3.back.UICorner
G2L["430"].Name = [[UICorner]]
G2L["430"].CornerRadius = UDim.new(0, 8)
G2L["430"].Parent = G2L["427"]

--ScreenGui.ssGUIv7.Page 3.goofy
G2L["431"].Name = [[goofy]]
G2L["431"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["431"].Text = [[ Particles]]
G2L["431"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["431"].TextScaled = false
G2L["431"].TextSize = 28
G2L["431"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["431"].TextStrokeTransparency = 1
G2L["431"].TextWrapped = false
G2L["431"].TextXAlignment = Enum.TextXAlignment.Center
G2L["431"].TextYAlignment = Enum.TextYAlignment.Center
G2L["431"].Active = true
G2L["431"].AnchorPoint = Vector2.new(0, 0)
G2L["431"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["431"].BackgroundTransparency = 0
G2L["431"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["431"].BorderSizePixel = 5
G2L["431"].ClipsDescendants = false
G2L["431"].Draggable = false
G2L["431"].Position = UDim2.new(0.40079, 0, 0.050266884, 0)
G2L["431"].Rotation = 0
G2L["431"].Selectable = true
G2L["431"].SelectionOrder = 0
G2L["431"].Size = UDim2.new(0, 162, 0, 38)
G2L["431"].Visible = true
G2L["431"].ZIndex = 1
G2L["431"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["432"].Name = [[Script]]
G2L["432"].Parent = G2L["431"]

--ScreenGui.ssGUIv7.Page 3.goofy
G2L["433"].Name = [[goofy]]
G2L["433"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["433"].Text = [[Decal Spam]]
G2L["433"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["433"].TextScaled = false
G2L["433"].TextSize = 28
G2L["433"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["433"].TextStrokeTransparency = 1
G2L["433"].TextWrapped = false
G2L["433"].TextXAlignment = Enum.TextXAlignment.Center
G2L["433"].TextYAlignment = Enum.TextYAlignment.Center
G2L["433"].Active = true
G2L["433"].AnchorPoint = Vector2.new(0, 0)
G2L["433"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["433"].BackgroundTransparency = 0
G2L["433"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["433"].BorderSizePixel = 5
G2L["433"].ClipsDescendants = false
G2L["433"].Draggable = false
G2L["433"].Position = UDim2.new(0.66124016, 0, 0.051612657, 0)
G2L["433"].Rotation = 0
G2L["433"].Selectable = true
G2L["433"].SelectionOrder = 0
G2L["433"].Size = UDim2.new(0, 142, 0, 38)
G2L["433"].Visible = true
G2L["433"].ZIndex = 1
G2L["433"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["434"].Name = [[Script]]
G2L["434"].Parent = G2L["433"]

--ScreenGui.ssGUIv7.Page 3.goofy.Script
G2L["435"].Name = [[Script]]
G2L["435"].Parent = G2L["433"]

--ScreenGui.ssGUIv7.Page 3.credits
G2L["436"].Name = [[credits]]
G2L["436"].Active = false
G2L["436"].AnchorPoint = Vector2.new(0, 0)
G2L["436"].BackgroundColor3 = Color3.fromRGB(176, 176, 176)
G2L["436"].BackgroundTransparency = 1
G2L["436"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["436"].BorderSizePixel = 0
G2L["436"].ClipsDescendants = false
G2L["436"].Draggable = false
G2L["436"].Position = UDim2.new(0.34978673, 0, 0.32632598, 0)
G2L["436"].Rotation = 0
G2L["436"].Selectable = false
G2L["436"].SelectionOrder = 0
G2L["436"].Size = UDim2.new(0, 275, 0, 165)
G2L["436"].Visible = true
G2L["436"].ZIndex = 1
G2L["436"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.credits.ImageLabel
G2L["437"].Name = [[ImageLabel]]
G2L["437"].Image = [[rbxassetid://14801957514]]
G2L["437"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["437"].ScaleType = Enum.ScaleType.Stretch
G2L["437"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["437"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["437"].Active = false
G2L["437"].AnchorPoint = Vector2.new(0, 0)
G2L["437"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["437"].BackgroundTransparency = 0
G2L["437"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["437"].BorderSizePixel = 0
G2L["437"].ClipsDescendants = false
G2L["437"].Draggable = false
G2L["437"].Position = UDim2.new(-0.78909093, 0, 3.9939394, 0)
G2L["437"].Rotation = 0
G2L["437"].Selectable = false
G2L["437"].SelectionOrder = 0
G2L["437"].Size = UDim2.new(0, 52, 0, 48)
G2L["437"].Visible = true
G2L["437"].ZIndex = 1
G2L["437"].Parent = G2L["436"]

--ScreenGui.ssGUIv7.Page 3.credits.ImageLabel.UIGradient
G2L["438"].Name = [[UIGradient]]
G2L["438"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(235, 8, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(235, 8, 0))};
G2L["438"].Enabled = true
G2L["438"].Rotation = 0
G2L["438"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["438"].Parent = G2L["437"]

--ScreenGui.ssGUIv7.Page 3.credits.TextLabel
G2L["439"].Name = [[TextLabel]]
G2L["439"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["439"].Text = [[made by mario.ss & enitytest]]
G2L["439"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["439"].TextScaled = true
G2L["439"].TextSize = 42
G2L["439"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["439"].TextStrokeTransparency = 1
G2L["439"].TextWrapped = true
G2L["439"].TextXAlignment = Enum.TextXAlignment.Center
G2L["439"].TextYAlignment = Enum.TextYAlignment.Center
G2L["439"].Active = false
G2L["439"].AnchorPoint = Vector2.new(0, 0)
G2L["439"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["439"].BackgroundTransparency = 0
G2L["439"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["439"].BorderSizePixel = 2
G2L["439"].ClipsDescendants = false
G2L["439"].Draggable = false
G2L["439"].Position = UDim2.new(-0.60354406, 0, 4.084246, 0)
G2L["439"].Rotation = 0
G2L["439"].Selectable = false
G2L["439"].SelectionOrder = 0
G2L["439"].Size = UDim2.new(0, 194, 0, 25)
G2L["439"].Visible = true
G2L["439"].ZIndex = 1
G2L["439"].Parent = G2L["436"]

--ScreenGui.ssGUIv7.Page 3.credits.TextLabel.LocalScript
G2L["440"].Name = [[LocalScript]]
G2L["440"].Parent = G2L["439"]

--ScreenGui.ssGUIv7.Page 3.credits.TextLabel.UICorner
G2L["441"].Name = [[UICorner]]
G2L["441"].CornerRadius = UDim.new(0, 200)
G2L["441"].Parent = G2L["439"]

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["442"].Name = [[Hints]]
G2L["442"].Active = false
G2L["442"].AnchorPoint = Vector2.new(0, 0)
G2L["442"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["442"].BackgroundTransparency = 0.25
G2L["442"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["442"].BorderSizePixel = 2
G2L["442"].ClipsDescendants = false
G2L["442"].Draggable = false
G2L["442"].Position = UDim2.new(0.11013426, 0, 0.09535954, 0)
G2L["442"].Rotation = 0
G2L["442"].Selectable = false
G2L["442"].SelectionOrder = 0
G2L["442"].Size = UDim2.new(0, 476, 0, 54)
G2L["442"].Visible = true
G2L["442"].ZIndex = 1
G2L["442"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["443"].Name = [[UICorner]]
G2L["443"].CornerRadius = UDim.new(0, 200)
G2L["443"].Parent = G2L["442"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["444"].Name = [[TextLabel]]
G2L["444"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["444"].Text = [[Map]]
G2L["444"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["444"].TextScaled = true
G2L["444"].TextSize = 14
G2L["444"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["444"].TextStrokeTransparency = 1
G2L["444"].TextWrapped = true
G2L["444"].TextXAlignment = Enum.TextXAlignment.Center
G2L["444"].TextYAlignment = Enum.TextYAlignment.Center
G2L["444"].Active = false
G2L["444"].AnchorPoint = Vector2.new(0, 0)
G2L["444"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["444"].BackgroundTransparency = 1
G2L["444"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["444"].BorderSizePixel = 0
G2L["444"].ClipsDescendants = false
G2L["444"].Draggable = false
G2L["444"].Position = UDim2.new(0.29831934, 0, 0.037037037, 0)
G2L["444"].Rotation = 0
G2L["444"].Selectable = false
G2L["444"].SelectionOrder = 0
G2L["444"].Size = UDim2.new(0, 200, 0, 50)
G2L["444"].Visible = true
G2L["444"].ZIndex = 1
G2L["444"].Parent = G2L["442"]

--ScreenGui.ssGUIv7.Page 3.Map
G2L["445"].Name = [[Map]]
G2L["445"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["445"].Text = [[EnityTest's Desert]]
G2L["445"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["445"].TextScaled = true
G2L["445"].TextSize = 14
G2L["445"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["445"].TextStrokeTransparency = 1
G2L["445"].TextWrapped = true
G2L["445"].TextXAlignment = Enum.TextXAlignment.Center
G2L["445"].TextYAlignment = Enum.TextYAlignment.Center
G2L["445"].Active = true
G2L["445"].AnchorPoint = Vector2.new(0, 0)
G2L["445"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["445"].BackgroundTransparency = 0
G2L["445"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["445"].BorderSizePixel = 3
G2L["445"].ClipsDescendants = false
G2L["445"].Draggable = false
G2L["445"].Position = UDim2.new(0.13810588, 0, 0.15087786, 0)
G2L["445"].Rotation = 0
G2L["445"].Selectable = true
G2L["445"].SelectionOrder = 0
G2L["445"].Size = UDim2.new(0, 124, 0, 41)
G2L["445"].Visible = true
G2L["445"].ZIndex = 1
G2L["445"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.Map.Script
G2L["446"].Name = [[Script]]
G2L["446"].Parent = G2L["445"]

--ScreenGui.ssGUIv7.Page 3.Map.GetScript
G2L["447"].Name = [[GetScript]]
G2L["447"].Parent = G2L["445"]

--ScreenGui.ssGUIv7.Page 3.Map.LocalScript
G2L["448"].Name = [[LocalScript]]
G2L["448"].Parent = G2L["445"]

--ScreenGui.ssGUIv7.Page 3.map
G2L["449"].Name = [[map]]
G2L["449"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["449"].Text = [[MeepCity 5 (g00byd0lan relam)]]
G2L["449"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["449"].TextScaled = false
G2L["449"].TextSize = 14
G2L["449"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["449"].TextStrokeTransparency = 1
G2L["449"].TextWrapped = true
G2L["449"].TextXAlignment = Enum.TextXAlignment.Center
G2L["449"].TextYAlignment = Enum.TextYAlignment.Center
G2L["449"].Active = true
G2L["449"].AnchorPoint = Vector2.new(0, 0)
G2L["449"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["449"].BackgroundTransparency = 0
G2L["449"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["449"].BorderSizePixel = 0
G2L["449"].ClipsDescendants = false
G2L["449"].Draggable = false
G2L["449"].Position = UDim2.new(0.35994124, 0, 0.15121825, 0)
G2L["449"].Rotation = 0
G2L["449"].Selectable = true
G2L["449"].SelectionOrder = 0
G2L["449"].Size = UDim2.new(0, 124, 0, 41)
G2L["449"].Visible = true
G2L["449"].ZIndex = 1
G2L["449"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["450"].Name = [[Frame]]
G2L["450"].Active = false
G2L["450"].AnchorPoint = Vector2.new(0, 0)
G2L["450"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["450"].BackgroundTransparency = 0
G2L["450"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["450"].BorderSizePixel = 0
G2L["450"].ClipsDescendants = false
G2L["450"].Draggable = false
G2L["450"].Position = UDim2.new(0, 0, 0, 0)
G2L["450"].Rotation = 0
G2L["450"].Selectable = false
G2L["450"].SelectionOrder = 0
G2L["450"].Size = UDim2.new(0, 122, 0, 6)
G2L["450"].Visible = true
G2L["450"].ZIndex = 1
G2L["450"].Parent = G2L["449"]

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["451"].Name = [[Frame]]
G2L["451"].Active = false
G2L["451"].AnchorPoint = Vector2.new(0, 0)
G2L["451"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["451"].BackgroundTransparency = 0
G2L["451"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["451"].BorderSizePixel = 0
G2L["451"].ClipsDescendants = false
G2L["451"].Draggable = false
G2L["451"].Position = UDim2.new(0, 0, 1.8608279E-07, 0)
G2L["451"].Rotation = 0
G2L["451"].Selectable = false
G2L["451"].SelectionOrder = 0
G2L["451"].Size = UDim2.new(0, 6, 0, 42)
G2L["451"].Visible = true
G2L["451"].ZIndex = 1
G2L["451"].Parent = G2L["449"]

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["452"].Name = [[Frame]]
G2L["452"].Active = false
G2L["452"].AnchorPoint = Vector2.new(0, 0)
G2L["452"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["452"].BackgroundTransparency = 0
G2L["452"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["452"].BorderSizePixel = 0
G2L["452"].ClipsDescendants = false
G2L["452"].Draggable = false
G2L["452"].Position = UDim2.new(0.9433963, 0, 0, 0)
G2L["452"].Rotation = 0
G2L["452"].Selectable = false
G2L["452"].SelectionOrder = 0
G2L["452"].Size = UDim2.new(0, 7, 0, 42)
G2L["452"].Visible = true
G2L["452"].ZIndex = 1
G2L["452"].Parent = G2L["449"]

--ScreenGui.ssGUIv7.Page 3.map.Frame
G2L["453"].Name = [[Frame]]
G2L["453"].Active = false
G2L["453"].AnchorPoint = Vector2.new(0, 0)
G2L["453"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["453"].BackgroundTransparency = 0
G2L["453"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["453"].BorderSizePixel = 0
G2L["453"].ClipsDescendants = false
G2L["453"].Draggable = false
G2L["453"].Position = UDim2.new(0, 0, 1, 0)
G2L["453"].Rotation = 0
G2L["453"].Selectable = false
G2L["453"].SelectionOrder = 0
G2L["453"].Size = UDim2.new(0, 124, 0, 6)
G2L["453"].Visible = true
G2L["453"].ZIndex = 1
G2L["453"].Parent = G2L["449"]

--ScreenGui.ssGUIv7.Page 3.map.Script
G2L["454"].Name = [[Script]]
G2L["454"].Parent = G2L["449"]

--ScreenGui.ssGUIv7.Page 3.map.GetScript
G2L["455"].Name = [[GetScript]]
G2L["455"].Parent = G2L["449"]

--ScreenGui.ssGUIv7.Page 3.map.LocalScript
G2L["456"].Name = [[LocalScript]]
G2L["456"].Parent = G2L["449"]

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["457"].Name = [[Hints]]
G2L["457"].Active = false
G2L["457"].AnchorPoint = Vector2.new(0, 0)
G2L["457"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["457"].BackgroundTransparency = 0.25
G2L["457"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["457"].BorderSizePixel = 2
G2L["457"].ClipsDescendants = false
G2L["457"].Draggable = false
G2L["457"].Position = UDim2.new(0.10852654, 0, 0.23613025, 0)
G2L["457"].Rotation = 0
G2L["457"].Selectable = false
G2L["457"].SelectionOrder = 0
G2L["457"].Size = UDim2.new(0, 476, 0, 54)
G2L["457"].Visible = true
G2L["457"].ZIndex = 1
G2L["457"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["458"].Name = [[UICorner]]
G2L["458"].CornerRadius = UDim.new(0, 200)
G2L["458"].Parent = G2L["457"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["459"].Name = [[TextLabel]]
G2L["459"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["459"].Text = [[Toadroast's]]
G2L["459"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["459"].TextScaled = true
G2L["459"].TextSize = 14
G2L["459"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["459"].TextStrokeTransparency = 1
G2L["459"].TextWrapped = true
G2L["459"].TextXAlignment = Enum.TextXAlignment.Center
G2L["459"].TextYAlignment = Enum.TextYAlignment.Center
G2L["459"].Active = false
G2L["459"].AnchorPoint = Vector2.new(0, 0)
G2L["459"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["459"].BackgroundTransparency = 1
G2L["459"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["459"].BorderSizePixel = 0
G2L["459"].ClipsDescendants = false
G2L["459"].Draggable = false
G2L["459"].Position = UDim2.new(0.28991598, 0, 0.074074075, 0)
G2L["459"].Rotation = 0
G2L["459"].Selectable = false
G2L["459"].SelectionOrder = 0
G2L["459"].Size = UDim2.new(0, 200, 0, 50)
G2L["459"].Visible = true
G2L["459"].ZIndex = 1
G2L["459"].Parent = G2L["457"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton
G2L["460"].Name = [[TextButton]]
G2L["460"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["460"].Text = [[tr1]]
G2L["460"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["460"].TextScaled = true
G2L["460"].TextSize = 14
G2L["460"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["460"].TextStrokeTransparency = 1
G2L["460"].TextWrapped = true
G2L["460"].TextXAlignment = Enum.TextXAlignment.Center
G2L["460"].TextYAlignment = Enum.TextYAlignment.Center
G2L["460"].Active = true
G2L["460"].AnchorPoint = Vector2.new(0, 0)
G2L["460"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["460"].BackgroundTransparency = 0
G2L["460"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["460"].BorderSizePixel = 3
G2L["460"].ClipsDescendants = false
G2L["460"].Draggable = false
G2L["460"].Position = UDim2.new(-0.073529415, 0, 0.9985272, 0)
G2L["460"].Rotation = 0
G2L["460"].Selectable = true
G2L["460"].SelectionOrder = 0
G2L["460"].Size = UDim2.new(0, 162, 0, 33)
G2L["460"].Visible = true
G2L["460"].ZIndex = 1
G2L["460"].Parent = G2L["457"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
G2L["461"].Name = [[LocalScript]]
G2L["461"].Parent = G2L["460"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.Script
G2L["462"].Name = [[Script]]
G2L["462"].Parent = G2L["460"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton
G2L["463"].Name = [[TextButton]]
G2L["463"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["463"].Text = [[tr2]]
G2L["463"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["463"].TextScaled = true
G2L["463"].TextSize = 14
G2L["463"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["463"].TextStrokeTransparency = 1
G2L["463"].TextWrapped = true
G2L["463"].TextXAlignment = Enum.TextXAlignment.Center
G2L["463"].TextYAlignment = Enum.TextYAlignment.Center
G2L["463"].Active = true
G2L["463"].AnchorPoint = Vector2.new(0, 0)
G2L["463"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["463"].BackgroundTransparency = 0
G2L["463"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["463"].BorderSizePixel = 3
G2L["463"].ClipsDescendants = false
G2L["463"].Draggable = false
G2L["463"].Position = UDim2.new(0.29831934, 0, 0.9985272, 0)
G2L["463"].Rotation = 0
G2L["463"].Selectable = true
G2L["463"].SelectionOrder = 0
G2L["463"].Size = UDim2.new(0, 162, 0, 33)
G2L["463"].Visible = true
G2L["463"].ZIndex = 1
G2L["463"].Parent = G2L["457"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
G2L["464"].Name = [[LocalScript]]
G2L["464"].Parent = G2L["463"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.Script
G2L["465"].Name = [[Script]]
G2L["465"].Parent = G2L["463"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton
G2L["466"].Name = [[TextButton]]
G2L["466"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["466"].Text = [[Shrek]]
G2L["466"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["466"].TextScaled = true
G2L["466"].TextSize = 14
G2L["466"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["466"].TextStrokeTransparency = 1
G2L["466"].TextWrapped = true
G2L["466"].TextXAlignment = Enum.TextXAlignment.Center
G2L["466"].TextYAlignment = Enum.TextYAlignment.Center
G2L["466"].Active = true
G2L["466"].AnchorPoint = Vector2.new(0, 0)
G2L["466"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["466"].BackgroundTransparency = 0
G2L["466"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["466"].BorderSizePixel = 3
G2L["466"].ClipsDescendants = false
G2L["466"].Draggable = false
G2L["466"].Position = UDim2.new(0.6617647, 0, 0.9985272, 0)
G2L["466"].Rotation = 0
G2L["466"].Selectable = true
G2L["466"].SelectionOrder = 0
G2L["466"].Size = UDim2.new(0, 162, 0, 33)
G2L["466"].Visible = true
G2L["466"].ZIndex = 1
G2L["466"].Parent = G2L["457"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
G2L["467"].Name = [[LocalScript]]
G2L["467"].Parent = G2L["466"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.Script
G2L["468"].Name = [[Script]]
G2L["468"].Parent = G2L["466"]

--ScreenGui.ssGUIv7.Page 3.Hints
G2L["469"].Name = [[Hints]]
G2L["469"].Active = false
G2L["469"].AnchorPoint = Vector2.new(0, 0)
G2L["469"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["469"].BackgroundTransparency = 0.25
G2L["469"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["469"].BorderSizePixel = 2
G2L["469"].ClipsDescendants = false
G2L["469"].Draggable = false
G2L["469"].Position = UDim2.new(0.10531111, 0, 0.32453266, 0)
G2L["469"].Rotation = 0
G2L["469"].Selectable = false
G2L["469"].SelectionOrder = 0
G2L["469"].Size = UDim2.new(0, 476, 0, 54)
G2L["469"].Visible = true
G2L["469"].ZIndex = 1
G2L["469"].Parent = G2L["421"]

--ScreenGui.ssGUIv7.Page 3.Hints.UICorner
G2L["470"].Name = [[UICorner]]
G2L["470"].CornerRadius = UDim.new(0, 200)
G2L["470"].Parent = G2L["469"]

--ScreenGui.ssGUIv7.Page 3.Hints.TextLabel
G2L["471"].Name = [[TextLabel]]
G2L["471"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["471"].Text = [[Bonus!]]
G2L["471"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["471"].TextScaled = true
G2L["471"].TextSize = 14
G2L["471"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["471"].TextStrokeTransparency = 1
G2L["471"].TextWrapped = true
G2L["471"].TextXAlignment = Enum.TextXAlignment.Center
G2L["471"].TextYAlignment = Enum.TextYAlignment.Center
G2L["471"].Active = false
G2L["471"].AnchorPoint = Vector2.new(0, 0)
G2L["471"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["471"].BackgroundTransparency = 1
G2L["471"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["471"].BorderSizePixel = 0
G2L["471"].ClipsDescendants = false
G2L["471"].Draggable = false
G2L["471"].Position = UDim2.new(0.28991598, 0, 0.074074075, 0)
G2L["471"].Rotation = 0
G2L["471"].Selectable = false
G2L["471"].SelectionOrder = 0
G2L["471"].Size = UDim2.new(0, 200, 0, 50)
G2L["471"].Visible = true
G2L["471"].ZIndex = 1
G2L["471"].Parent = G2L["469"]

--ScreenGui.ssGUIv7.Page 3.Hints.Nook
G2L["472"].Name = [[Nook]]
G2L["472"].Image = [[rbxassetid://59820288]]
G2L["472"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["472"].ScaleType = Enum.ScaleType.Stretch
G2L["472"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["472"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["472"].Active = true
G2L["472"].AnchorPoint = Vector2.new(0, 0)
G2L["472"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["472"].BackgroundTransparency = 0
G2L["472"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["472"].BorderSizePixel = 0
G2L["472"].ClipsDescendants = false
G2L["472"].Draggable = false
G2L["472"].Position = UDim2.new(0.29285365, 0, 1.1296296, 0)
G2L["472"].Rotation = 0
G2L["472"].Selectable = true
G2L["472"].SelectionOrder = 0
G2L["472"].Size = UDim2.new(0, 176, 0, 166)
G2L["472"].Visible = true
G2L["472"].ZIndex = 1
G2L["472"].Parent = G2L["469"]

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["473"].Name = [[Script]]
G2L["473"].Parent = G2L["472"]

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["474"].Name = [[Script]]
G2L["474"].Parent = G2L["472"]

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["475"].Name = [[Script]]
G2L["475"].Parent = G2L["472"]

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.Script
G2L["476"].Name = [[Script]]
G2L["476"].Parent = G2L["472"]

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.UICorner
G2L["477"].Name = [[UICorner]]
G2L["477"].CornerRadius = UDim.new(0, 200)
G2L["477"].Parent = G2L["472"]

--ScreenGui.ssGUIv7.Page 3.Hints.Nook.TextLabel
G2L["478"].Name = [[TextLabel]]
G2L["478"].FontFace = Font.new([[rbxasset://fonts/families/LuckiestGuy.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["478"].Text = [[Nuke]]
G2L["478"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["478"].TextScaled = true
G2L["478"].TextSize = 14
G2L["478"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["478"].TextStrokeTransparency = 0
G2L["478"].TextWrapped = true
G2L["478"].TextXAlignment = Enum.TextXAlignment.Center
G2L["478"].TextYAlignment = Enum.TextYAlignment.Center
G2L["478"].Active = false
G2L["478"].AnchorPoint = Vector2.new(0, 0)
G2L["478"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["478"].BackgroundTransparency = 1
G2L["478"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["478"].BorderSizePixel = 0
G2L["478"].ClipsDescendants = false
G2L["478"].Draggable = false
G2L["478"].Position = UDim2.new(0.043191217, 0, 0.37349397, 0)
G2L["478"].Rotation = 0
G2L["478"].Selectable = false
G2L["478"].SelectionOrder = 0
G2L["478"].Size = UDim2.new(0, 159, 0, 50)
G2L["478"].Visible = true
G2L["478"].ZIndex = 1
G2L["478"].Parent = G2L["472"]

--ScreenGui.ssGUIv7.Page 3.Hints.ImageLabel
G2L["479"].Name = [[ImageLabel]]
G2L["479"].Image = [[rbxassetid://12435505486]]
G2L["479"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["479"].ScaleType = Enum.ScaleType.Stretch
G2L["479"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["479"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["479"].Active = false
G2L["479"].AnchorPoint = Vector2.new(0, 0)
G2L["479"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["479"].BackgroundTransparency = 0
G2L["479"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["479"].BorderSizePixel = 0
G2L["479"].ClipsDescendants = false
G2L["479"].Draggable = false
G2L["479"].Position = UDim2.new(0.5105042, 0, 5.111111, 0)
G2L["479"].Rotation = 0
G2L["479"].Selectable = false
G2L["479"].SelectionOrder = 0
G2L["479"].Size = UDim2.new(0, 292, 0, 255)
G2L["479"].Visible = true
G2L["479"].ZIndex = 1
G2L["479"].Parent = G2L["469"]

--ScreenGui.ssGUIv7.Page 3.Hints.ImageLabel.TextLabel
G2L["480"].Name = [[TextLabel]]
G2L["480"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["480"].Text = [[Animan Studios - Ballin]]
G2L["480"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["480"].TextScaled = true
G2L["480"].TextSize = 14
G2L["480"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["480"].TextStrokeTransparency = 1
G2L["480"].TextWrapped = true
G2L["480"].TextXAlignment = Enum.TextXAlignment.Center
G2L["480"].TextYAlignment = Enum.TextYAlignment.Center
G2L["480"].Active = false
G2L["480"].AnchorPoint = Vector2.new(0, 0)
G2L["480"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["480"].BackgroundTransparency = 0
G2L["480"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["480"].BorderSizePixel = 0
G2L["480"].ClipsDescendants = false
G2L["480"].Draggable = false
G2L["480"].Position = UDim2.new(-1, 0, 1, 0)
G2L["480"].Rotation = 0
G2L["480"].Selectable = false
G2L["480"].SelectionOrder = 0
G2L["480"].Size = UDim2.new(0, 584, 0, 50)
G2L["480"].Visible = true
G2L["480"].ZIndex = 1
G2L["480"].Parent = G2L["479"]

--ScreenGui.ssGUIv7.Page 3.Hints.ImageLabel
G2L["481"].Name = [[ImageLabel]]
G2L["481"].Image = [[http://www.roblox.com/asset/?id=16218312317]]
G2L["481"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["481"].ScaleType = Enum.ScaleType.Stretch
G2L["481"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["481"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["481"].Active = false
G2L["481"].AnchorPoint = Vector2.new(0, 0)
G2L["481"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["481"].BackgroundTransparency = 0
G2L["481"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["481"].BorderSizePixel = 0
G2L["481"].ClipsDescendants = false
G2L["481"].Draggable = false
G2L["481"].Position = UDim2.new(-0.10294111, 0, 5.111111, 0)
G2L["481"].Rotation = 0
G2L["481"].Selectable = false
G2L["481"].SelectionOrder = 0
G2L["481"].Size = UDim2.new(0, 292, 0, 255)
G2L["481"].Visible = true
G2L["481"].ZIndex = 1
G2L["481"].Parent = G2L["469"]

--ScreenGui.ssGUIv7.Title
G2L["482"].Name = [[Title]]
G2L["482"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["482"].Text = [[SS GUI V7]]
G2L["482"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["482"].TextScaled = true
G2L["482"].TextSize = 76
G2L["482"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["482"].TextStrokeTransparency = 1
G2L["482"].TextWrapped = true
G2L["482"].TextXAlignment = Enum.TextXAlignment.Center
G2L["482"].TextYAlignment = Enum.TextYAlignment.Center
G2L["482"].Active = false
G2L["482"].AnchorPoint = Vector2.new(0, 0)
G2L["482"].BackgroundColor3 = Color3.fromRGB(20, 20, 20)
G2L["482"].BackgroundTransparency = 0
G2L["482"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["482"].BorderSizePixel = 1
G2L["482"].ClipsDescendants = false
G2L["482"].Draggable = false
G2L["482"].Position = UDim2.new(-0.0063795852, 0, 0.0056926, 0)
G2L["482"].Rotation = 0
G2L["482"].Selectable = false
G2L["482"].SelectionOrder = 0
G2L["482"].Size = UDim2.new(0, 627, 0, 55)
G2L["482"].Visible = true
G2L["482"].ZIndex = 1
G2L["482"].Parent = G2L["40"]

--ScreenGui.ssGUIv7.Title.LocalScript
G2L["483"].Name = [[LocalScript]]
G2L["483"].Parent = G2L["482"]

--ScreenGui.ssGUIv7.Title.ImageLabel
G2L["484"].Name = [[ImageLabel]]
G2L["484"].Image = [[http://www.roblox.com/asset/?id=16218312317]]
G2L["484"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["484"].ScaleType = Enum.ScaleType.Stretch
G2L["484"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["484"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["484"].Active = false
G2L["484"].AnchorPoint = Vector2.new(0, 0)
G2L["484"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["484"].BackgroundTransparency = 0
G2L["484"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["484"].BorderSizePixel = 0
G2L["484"].ClipsDescendants = false
G2L["484"].Draggable = false
G2L["484"].Position = UDim2.new(0.7783093, 0, 0, 0)
G2L["484"].Rotation = 0
G2L["484"].Selectable = false
G2L["484"].SelectionOrder = 0
G2L["484"].Size = UDim2.new(0, 59, 0, 55)
G2L["484"].Visible = true
G2L["484"].ZIndex = 1
G2L["484"].Parent = G2L["482"]

--ScreenGui.ssGUIv7.goofy
G2L["485"].Name = [[goofy]]
G2L["485"].Active = false
G2L["485"].AnchorPoint = Vector2.new(0, 0)
G2L["485"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["485"].BackgroundTransparency = 0
G2L["485"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["485"].BorderSizePixel = 0
G2L["485"].ClipsDescendants = false
G2L["485"].Draggable = false
G2L["485"].Position = UDim2.new(1, 0, 0.10436433, 0)
G2L["485"].Rotation = 0
G2L["485"].Selectable = false
G2L["485"].SelectionOrder = 0
G2L["485"].Size = UDim2.new(0, 199, 0, 478)
G2L["485"].Visible = false
G2L["485"].ZIndex = 1
G2L["485"].Parent = G2L["40"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["486"].Name = [[goofy]]
G2L["486"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["486"].Text = [[Troll Spam]]
G2L["486"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["486"].TextScaled = false
G2L["486"].TextSize = 28
G2L["486"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["486"].TextStrokeTransparency = 1
G2L["486"].TextWrapped = false
G2L["486"].TextXAlignment = Enum.TextXAlignment.Center
G2L["486"].TextYAlignment = Enum.TextYAlignment.Center
G2L["486"].Active = true
G2L["486"].AnchorPoint = Vector2.new(0, 0)
G2L["486"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["486"].BackgroundTransparency = 0
G2L["486"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["486"].BorderSizePixel = 5
G2L["486"].ClipsDescendants = false
G2L["486"].Draggable = false
G2L["486"].Position = UDim2.new(-0.0011393229, 0, 0.35432026, 0)
G2L["486"].Rotation = 0
G2L["486"].Selectable = true
G2L["486"].SelectionOrder = 0
G2L["486"].Size = UDim2.new(0, 142, 0, 62)
G2L["486"].Visible = true
G2L["486"].ZIndex = 1
G2L["486"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["487"].Name = [[Script]]
G2L["487"].Parent = G2L["486"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["488"].Name = [[Script]]
G2L["488"].Parent = G2L["486"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["489"].Name = [[goofy]]
G2L["489"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["489"].Text = [[KSI Spam]]
G2L["489"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["489"].TextScaled = false
G2L["489"].TextSize = 28
G2L["489"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["489"].TextStrokeTransparency = 1
G2L["489"].TextWrapped = false
G2L["489"].TextXAlignment = Enum.TextXAlignment.Center
G2L["489"].TextYAlignment = Enum.TextYAlignment.Center
G2L["489"].Active = true
G2L["489"].AnchorPoint = Vector2.new(0, 0)
G2L["489"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["489"].BackgroundTransparency = 0
G2L["489"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["489"].BorderSizePixel = 5
G2L["489"].ClipsDescendants = false
G2L["489"].Draggable = false
G2L["489"].Position = UDim2.new(-0.0011393229, 0, 0.22741394, 0)
G2L["489"].Rotation = 0
G2L["489"].Selectable = true
G2L["489"].SelectionOrder = 0
G2L["489"].Size = UDim2.new(0, 142, 0, 62)
G2L["489"].Visible = true
G2L["489"].ZIndex = 1
G2L["489"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["490"].Name = [[Script]]
G2L["490"].Parent = G2L["489"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["491"].Name = [[Script]]
G2L["491"].Parent = G2L["489"]

--ScreenGui.ssGUIv7.goofy.Shedletsky
G2L["492"].Name = [[Shedletsky]]
G2L["492"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["492"].Text = [[Shedletsky]]
G2L["492"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["492"].TextScaled = false
G2L["492"].TextSize = 28
G2L["492"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["492"].TextStrokeTransparency = 1
G2L["492"].TextWrapped = false
G2L["492"].TextXAlignment = Enum.TextXAlignment.Center
G2L["492"].TextYAlignment = Enum.TextYAlignment.Center
G2L["492"].Active = true
G2L["492"].AnchorPoint = Vector2.new(0, 0)
G2L["492"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["492"].BackgroundTransparency = 0
G2L["492"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["492"].BorderSizePixel = 5
G2L["492"].ClipsDescendants = false
G2L["492"].Draggable = false
G2L["492"].Position = UDim2.new(-0.0027340287, 0, 0.1134706, 0)
G2L["492"].Rotation = 0
G2L["492"].Selectable = true
G2L["492"].SelectionOrder = 0
G2L["492"].Size = UDim2.new(0, 143, 0, 62)
G2L["492"].Visible = true
G2L["492"].ZIndex = 1
G2L["492"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.Shedletsky.Script
G2L["493"].Name = [[Script]]
G2L["493"].Parent = G2L["492"]

--ScreenGui.ssGUIv7.goofy.Shedletsky.Script
G2L["494"].Name = [[Script]]
G2L["494"].Parent = G2L["492"]

--ScreenGui.ssGUIv7.goofy.Shedletsky.ServerEventHandler
G2L["495"].Name = [[ServerEventHandler]]
G2L["495"].Parent = G2L["492"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["496"].Name = [[goofy]]
G2L["496"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["496"].Text = [[Scary Spam]]
G2L["496"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["496"].TextScaled = false
G2L["496"].TextSize = 28
G2L["496"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["496"].TextStrokeTransparency = 1
G2L["496"].TextWrapped = false
G2L["496"].TextXAlignment = Enum.TextXAlignment.Center
G2L["496"].TextYAlignment = Enum.TextYAlignment.Center
G2L["496"].Active = true
G2L["496"].AnchorPoint = Vector2.new(0, 0)
G2L["496"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["496"].BackgroundTransparency = 0
G2L["496"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["496"].BorderSizePixel = 5
G2L["496"].ClipsDescendants = false
G2L["496"].Draggable = false
G2L["496"].Position = UDim2.new(0.00435817, 0, 0.4664118, 0)
G2L["496"].Rotation = 0
G2L["496"].Selectable = true
G2L["496"].SelectionOrder = 0
G2L["496"].Size = UDim2.new(0, 142, 0, 62)
G2L["496"].Visible = true
G2L["496"].ZIndex = 1
G2L["496"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["497"].Name = [[Script]]
G2L["497"].Parent = G2L["496"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["498"].Name = [[Script]]
G2L["498"].Parent = G2L["496"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["499"].Name = [[goofy]]
G2L["499"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["499"].Text = [[ Jumpscare]]
G2L["499"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["499"].TextScaled = false
G2L["499"].TextSize = 28
G2L["499"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["499"].TextStrokeTransparency = 1
G2L["499"].TextWrapped = false
G2L["499"].TextXAlignment = Enum.TextXAlignment.Center
G2L["499"].TextYAlignment = Enum.TextYAlignment.Center
G2L["499"].Active = true
G2L["499"].AnchorPoint = Vector2.new(0, 0)
G2L["499"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["499"].BackgroundTransparency = 0
G2L["499"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["499"].BorderSizePixel = 5
G2L["499"].ClipsDescendants = false
G2L["499"].Draggable = false
G2L["499"].Position = UDim2.new(-0.0011393229, 0, 0.7988455, 0)
G2L["499"].Rotation = 0
G2L["499"].Selectable = true
G2L["499"].SelectionOrder = 0
G2L["499"].Size = UDim2.new(0, 142, 0, 62)
G2L["499"].Visible = true
G2L["499"].ZIndex = 1
G2L["499"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["500"].Name = [[Script]]
G2L["500"].Parent = G2L["499"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["501"].Name = [[goofy]]
G2L["501"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["501"].Text = [[ Hint]]
G2L["501"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["501"].TextScaled = false
G2L["501"].TextSize = 28
G2L["501"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["501"].TextStrokeTransparency = 1
G2L["501"].TextWrapped = false
G2L["501"].TextXAlignment = Enum.TextXAlignment.Center
G2L["501"].TextYAlignment = Enum.TextYAlignment.Center
G2L["501"].Active = true
G2L["501"].AnchorPoint = Vector2.new(0, 0)
G2L["501"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["501"].BackgroundTransparency = 0
G2L["501"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["501"].BorderSizePixel = 5
G2L["501"].ClipsDescendants = false
G2L["501"].Draggable = false
G2L["501"].Position = UDim2.new(-0.0027340287, 0, 0.9127889, 0)
G2L["501"].Rotation = 0
G2L["501"].Selectable = true
G2L["501"].SelectionOrder = 0
G2L["501"].Size = UDim2.new(0, 143, 0, 33)
G2L["501"].Visible = true
G2L["501"].ZIndex = 1
G2L["501"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["502"].Name = [[Script]]
G2L["502"].Parent = G2L["501"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["503"].Name = [[goofy]]
G2L["503"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["503"].Text = [[ Particles]]
G2L["503"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["503"].TextScaled = false
G2L["503"].TextSize = 28
G2L["503"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["503"].TextStrokeTransparency = 1
G2L["503"].TextWrapped = false
G2L["503"].TextXAlignment = Enum.TextXAlignment.Center
G2L["503"].TextYAlignment = Enum.TextYAlignment.Center
G2L["503"].Active = true
G2L["503"].AnchorPoint = Vector2.new(0, 0)
G2L["503"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["503"].BackgroundTransparency = 0
G2L["503"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["503"].BorderSizePixel = 5
G2L["503"].ClipsDescendants = false
G2L["503"].Draggable = false
G2L["503"].Position = UDim2.new(-0.0011393229, 0, 0.68305033, 0)
G2L["503"].Rotation = 0
G2L["503"].Selectable = true
G2L["503"].SelectionOrder = 0
G2L["503"].Size = UDim2.new(0, 142, 0, 62)
G2L["503"].Visible = true
G2L["503"].ZIndex = 1
G2L["503"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.Script
G2L["504"].Name = [[Script]]
G2L["504"].Parent = G2L["503"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["505"].Name = [[goofy]]
G2L["505"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["505"].Text = [[ Music]]
G2L["505"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["505"].TextScaled = false
G2L["505"].TextSize = 28
G2L["505"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["505"].TextStrokeTransparency = 1
G2L["505"].TextWrapped = false
G2L["505"].TextXAlignment = Enum.TextXAlignment.Center
G2L["505"].TextYAlignment = Enum.TextYAlignment.Center
G2L["505"].Active = true
G2L["505"].AnchorPoint = Vector2.new(0, 0)
G2L["505"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["505"].BackgroundTransparency = 0
G2L["505"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["505"].BorderSizePixel = 5
G2L["505"].ClipsDescendants = false
G2L["505"].Draggable = false
G2L["505"].Position = UDim2.new(0.00435817, 0, 0.5802181, 0)
G2L["505"].Rotation = 0
G2L["505"].Selectable = true
G2L["505"].SelectionOrder = 0
G2L["505"].Size = UDim2.new(0, 142, 0, 62)
G2L["505"].Visible = true
G2L["505"].ZIndex = 1
G2L["505"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["506"].Name = [[LocalScript]]
G2L["506"].Parent = G2L["505"]

--ScreenGui.ssGUIv7.goofy.mario
G2L["507"].Name = [[mario]]
G2L["507"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["507"].Text = [[Mario Spam]]
G2L["507"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["507"].TextScaled = false
G2L["507"].TextSize = 28
G2L["507"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["507"].TextStrokeTransparency = 1
G2L["507"].TextWrapped = false
G2L["507"].TextXAlignment = Enum.TextXAlignment.Center
G2L["507"].TextYAlignment = Enum.TextYAlignment.Center
G2L["507"].Active = true
G2L["507"].AnchorPoint = Vector2.new(0, 0)
G2L["507"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["507"].BackgroundTransparency = 0
G2L["507"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["507"].BorderSizePixel = 5
G2L["507"].ClipsDescendants = false
G2L["507"].Draggable = false
G2L["507"].Position = UDim2.new(-0.0011393229, 0, 0.008786499, 0)
G2L["507"].Rotation = 0
G2L["507"].Selectable = true
G2L["507"].SelectionOrder = 0
G2L["507"].Size = UDim2.new(0, 142, 0, 62)
G2L["507"].Visible = true
G2L["507"].ZIndex = 1
G2L["507"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["508"].Name = [[Script]]
G2L["508"].Parent = G2L["507"]

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["509"].Name = [[Script]]
G2L["509"].Parent = G2L["507"]

--ScreenGui.ssGUIv7.goofy.TextLabel
G2L["510"].Name = [[TextLabel]]
G2L["510"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["510"].Text = [[Extras]]
G2L["510"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["510"].TextScaled = false
G2L["510"].TextSize = 29
G2L["510"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["510"].TextStrokeTransparency = 1
G2L["510"].TextWrapped = false
G2L["510"].TextXAlignment = Enum.TextXAlignment.Center
G2L["510"].TextYAlignment = Enum.TextYAlignment.Center
G2L["510"].Active = false
G2L["510"].AnchorPoint = Vector2.new(0, 0)
G2L["510"].BackgroundColor3 = Color3.fromRGB(43, 43, 43)
G2L["510"].BackgroundTransparency = 0
G2L["510"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["510"].BorderSizePixel = 3
G2L["510"].ClipsDescendants = false
G2L["510"].Draggable = false
G2L["510"].Position = UDim2.new(0.0043571126, 0, -0.09166668, 0)
G2L["510"].Rotation = 0
G2L["510"].Selectable = false
G2L["510"].SelectionOrder = 0
G2L["510"].Size = UDim2.new(0, 197, 0, 44)
G2L["510"].Visible = true
G2L["510"].ZIndex = 1
G2L["510"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.TextLabel.LocalScript
G2L["511"].Name = [[LocalScript]]
G2L["511"].Parent = G2L["510"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["512"].Name = [[goofy]]
G2L["512"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["512"].Text = [[ arab]]
G2L["512"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["512"].TextScaled = false
G2L["512"].TextSize = 28
G2L["512"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["512"].TextStrokeTransparency = 1
G2L["512"].TextWrapped = false
G2L["512"].TextXAlignment = Enum.TextXAlignment.Center
G2L["512"].TextYAlignment = Enum.TextYAlignment.Center
G2L["512"].Active = true
G2L["512"].AnchorPoint = Vector2.new(0, 0)
G2L["512"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["512"].BackgroundTransparency = 0
G2L["512"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["512"].BorderSizePixel = 5
G2L["512"].ClipsDescendants = false
G2L["512"].Draggable = false
G2L["512"].Position = UDim2.new(0.6859431, 0, 0.580218, 0)
G2L["512"].Rotation = 0
G2L["512"].Selectable = true
G2L["512"].SelectionOrder = 0
G2L["512"].Size = UDim2.new(0, 62, 0, 62)
G2L["512"].Visible = true
G2L["512"].ZIndex = 1
G2L["512"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["513"].Name = [[LocalScript]]
G2L["513"].Parent = G2L["512"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["514"].Name = [[goofy]]
G2L["514"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["514"].Text = [[ k00p]]
G2L["514"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["514"].TextScaled = false
G2L["514"].TextSize = 28
G2L["514"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["514"].TextStrokeTransparency = 1
G2L["514"].TextWrapped = false
G2L["514"].TextXAlignment = Enum.TextXAlignment.Center
G2L["514"].TextYAlignment = Enum.TextYAlignment.Center
G2L["514"].Active = true
G2L["514"].AnchorPoint = Vector2.new(0, 0)
G2L["514"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["514"].BackgroundTransparency = 0
G2L["514"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["514"].BorderSizePixel = 5
G2L["514"].ClipsDescendants = false
G2L["514"].Draggable = false
G2L["514"].Position = UDim2.new(0.686759, 0, 0.7099251, 0)
G2L["514"].Rotation = 0
G2L["514"].Selectable = true
G2L["514"].SelectionOrder = 0
G2L["514"].Size = UDim2.new(0, 62, 0, 62)
G2L["514"].Visible = true
G2L["514"].ZIndex = 1
G2L["514"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["515"].Name = [[LocalScript]]
G2L["515"].Parent = G2L["514"]

--ScreenGui.ssGUIv7.goofy.mario
G2L["516"].Name = [[mario]]
G2L["516"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["516"].Text = [[face]]
G2L["516"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["516"].TextScaled = false
G2L["516"].TextSize = 28
G2L["516"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["516"].TextStrokeTransparency = 1
G2L["516"].TextWrapped = false
G2L["516"].TextXAlignment = Enum.TextXAlignment.Center
G2L["516"].TextYAlignment = Enum.TextYAlignment.Center
G2L["516"].Active = true
G2L["516"].AnchorPoint = Vector2.new(0, 0)
G2L["516"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["516"].BackgroundTransparency = 0
G2L["516"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["516"].BorderSizePixel = 5
G2L["516"].ClipsDescendants = false
G2L["516"].Draggable = false
G2L["516"].Position = UDim2.new(0.6822767, 0, 0.008786493, 0)
G2L["516"].Rotation = 0
G2L["516"].Selectable = true
G2L["516"].SelectionOrder = 0
G2L["516"].Size = UDim2.new(0, 63, 0, 62)
G2L["516"].Visible = true
G2L["516"].ZIndex = 1
G2L["516"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["517"].Name = [[Script]]
G2L["517"].Parent = G2L["516"]

--ScreenGui.ssGUIv7.goofy.mario
G2L["518"].Name = [[mario]]
G2L["518"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["518"].Text = [[face]]
G2L["518"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["518"].TextScaled = false
G2L["518"].TextSize = 28
G2L["518"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["518"].TextStrokeTransparency = 1
G2L["518"].TextWrapped = false
G2L["518"].TextXAlignment = Enum.TextXAlignment.Center
G2L["518"].TextYAlignment = Enum.TextYAlignment.Center
G2L["518"].Active = true
G2L["518"].AnchorPoint = Vector2.new(0, 0)
G2L["518"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["518"].BackgroundTransparency = 0
G2L["518"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["518"].BorderSizePixel = 5
G2L["518"].ClipsDescendants = false
G2L["518"].Draggable = false
G2L["518"].Position = UDim2.new(0.67725164, 0, 0.12384927, 0)
G2L["518"].Rotation = 0
G2L["518"].Selectable = true
G2L["518"].SelectionOrder = 0
G2L["518"].Size = UDim2.new(0, 63, 0, 57)
G2L["518"].Visible = true
G2L["518"].ZIndex = 1
G2L["518"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["519"].Name = [[Script]]
G2L["519"].Parent = G2L["518"]

--ScreenGui.ssGUIv7.goofy.mario
G2L["520"].Name = [[mario]]
G2L["520"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["520"].Text = [[face]]
G2L["520"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["520"].TextScaled = false
G2L["520"].TextSize = 28
G2L["520"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["520"].TextStrokeTransparency = 1
G2L["520"].TextWrapped = false
G2L["520"].TextXAlignment = Enum.TextXAlignment.Center
G2L["520"].TextYAlignment = Enum.TextYAlignment.Center
G2L["520"].Active = true
G2L["520"].AnchorPoint = Vector2.new(0, 0)
G2L["520"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["520"].BackgroundTransparency = 0
G2L["520"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["520"].BorderSizePixel = 5
G2L["520"].ClipsDescendants = false
G2L["520"].Draggable = false
G2L["520"].Position = UDim2.new(0.6822767, 0, 0.23472793, 0)
G2L["520"].Rotation = 0
G2L["520"].Selectable = true
G2L["520"].SelectionOrder = 0
G2L["520"].Size = UDim2.new(0, 63, 0, 57)
G2L["520"].Visible = true
G2L["520"].ZIndex = 1
G2L["520"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["521"].Name = [[Script]]
G2L["521"].Parent = G2L["520"]

--ScreenGui.ssGUIv7.goofy.mario
G2L["522"].Name = [[mario]]
G2L["522"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["522"].Text = [[face]]
G2L["522"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["522"].TextScaled = false
G2L["522"].TextSize = 28
G2L["522"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["522"].TextStrokeTransparency = 1
G2L["522"].TextWrapped = false
G2L["522"].TextXAlignment = Enum.TextXAlignment.Center
G2L["522"].TextYAlignment = Enum.TextYAlignment.Center
G2L["522"].Active = true
G2L["522"].AnchorPoint = Vector2.new(0, 0)
G2L["522"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["522"].BackgroundTransparency = 0
G2L["522"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["522"].BorderSizePixel = 5
G2L["522"].ClipsDescendants = false
G2L["522"].Draggable = false
G2L["522"].Position = UDim2.new(0.67725164, 0, 0.35606685, 0)
G2L["522"].Rotation = 0
G2L["522"].Selectable = true
G2L["522"].SelectionOrder = 0
G2L["522"].Size = UDim2.new(0, 63, 0, 57)
G2L["522"].Visible = true
G2L["522"].ZIndex = 1
G2L["522"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["523"].Name = [[Script]]
G2L["523"].Parent = G2L["522"]

--ScreenGui.ssGUIv7.goofy.mario
G2L["524"].Name = [[mario]]
G2L["524"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["524"].Text = [[face]]
G2L["524"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["524"].TextScaled = false
G2L["524"].TextSize = 28
G2L["524"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["524"].TextStrokeTransparency = 1
G2L["524"].TextWrapped = false
G2L["524"].TextXAlignment = Enum.TextXAlignment.Center
G2L["524"].TextYAlignment = Enum.TextYAlignment.Center
G2L["524"].Active = true
G2L["524"].AnchorPoint = Vector2.new(0, 0)
G2L["524"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["524"].BackgroundTransparency = 0
G2L["524"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["524"].BorderSizePixel = 5
G2L["524"].ClipsDescendants = false
G2L["524"].Draggable = false
G2L["524"].Position = UDim2.new(0.67725164, 0, 0.4753137, 0)
G2L["524"].Rotation = 0
G2L["524"].Selectable = true
G2L["524"].SelectionOrder = 0
G2L["524"].Size = UDim2.new(0, 63, 0, 57)
G2L["524"].Visible = true
G2L["524"].ZIndex = 1
G2L["524"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.mario.Script
G2L["525"].Name = [[Script]]
G2L["525"].Parent = G2L["524"]

--ScreenGui.ssGUIv7.goofy.goofy
G2L["526"].Name = [[goofy]]
G2L["526"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["526"].Text = [[ taco]]
G2L["526"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["526"].TextScaled = false
G2L["526"].TextSize = 28
G2L["526"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["526"].TextStrokeTransparency = 1
G2L["526"].TextWrapped = false
G2L["526"].TextXAlignment = Enum.TextXAlignment.Center
G2L["526"].TextYAlignment = Enum.TextYAlignment.Center
G2L["526"].Active = true
G2L["526"].AnchorPoint = Vector2.new(0, 0)
G2L["526"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["526"].BackgroundTransparency = 0
G2L["526"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["526"].BorderSizePixel = 5
G2L["526"].ClipsDescendants = false
G2L["526"].Draggable = false
G2L["526"].Position = UDim2.new(0.6859431, 0, 0.8396322, 0)
G2L["526"].Rotation = 0
G2L["526"].Selectable = true
G2L["526"].SelectionOrder = 0
G2L["526"].Size = UDim2.new(0, 62, 0, 62)
G2L["526"].Visible = true
G2L["526"].ZIndex = 1
G2L["526"].Parent = G2L["485"]

--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
G2L["527"].Name = [[LocalScript]]
G2L["527"].Parent = G2L["526"]

--ScreenGui.ssGUIv7.Synapse
G2L["528"].Name = [[Synapse]]
G2L["528"].Active = false
G2L["528"].AnchorPoint = Vector2.new(0, 0)
G2L["528"].BackgroundColor3 = Color3.fromRGB(24.000002, 24.000002, 24.000002)
G2L["528"].BackgroundTransparency = 0
G2L["528"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["528"].BorderSizePixel = 0
G2L["528"].ClipsDescendants = false
G2L["528"].Draggable = false
G2L["528"].Position = UDim2.new(-0.003189744, 0, 0.11764712, 0)
G2L["528"].Rotation = 0
G2L["528"].Selectable = false
G2L["528"].SelectionOrder = 0
G2L["528"].Size = UDim2.new(0, 626, 0, 465)
G2L["528"].Visible = false
G2L["528"].ZIndex = 1
G2L["528"].Parent = G2L["40"]

--ScreenGui.ssGUIv7.Synapse.Logo
G2L["529"].Name = [[Logo]]
G2L["529"].Image = [[rbxassetid://11330378074]]
G2L["529"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["529"].ScaleType = Enum.ScaleType.Stretch
G2L["529"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["529"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["529"].Active = false
G2L["529"].AnchorPoint = Vector2.new(0, 0)
G2L["529"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["529"].BackgroundTransparency = 0
G2L["529"].BorderColor3 = Color3.fromRGB(136, 136, 136)
G2L["529"].BorderSizePixel = 3
G2L["529"].ClipsDescendants = false
G2L["529"].Draggable = false
G2L["529"].Position = UDim2.new(0.18370607, 0, 0.0048148865, 0)
G2L["529"].Rotation = 0
G2L["529"].Selectable = false
G2L["529"].SelectionOrder = 0
G2L["529"].Size = UDim2.new(0, 51, 0, 52)
G2L["529"].Visible = true
G2L["529"].ZIndex = 1
G2L["529"].Parent = G2L["528"]

--ScreenGui.ssGUIv7.Synapse.Logo.TextLabel
G2L["530"].Name = [[TextLabel]]
G2L["530"].FontFace = Font.new([[rbxasset://fonts/families/Roboto.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["530"].Text = [[Synapse X (Built - In)]]
G2L["530"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["530"].TextScaled = true
G2L["530"].TextSize = 14
G2L["530"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["530"].TextStrokeTransparency = 1
G2L["530"].TextWrapped = true
G2L["530"].TextXAlignment = Enum.TextXAlignment.Center
G2L["530"].TextYAlignment = Enum.TextYAlignment.Center
G2L["530"].Active = false
G2L["530"].AnchorPoint = Vector2.new(0, 0)
G2L["530"].BackgroundColor3 = Color3.fromRGB(255, 124.00001, 48.000004)
G2L["530"].BackgroundTransparency = 0
G2L["530"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["530"].BorderSizePixel = 0
G2L["530"].ClipsDescendants = false
G2L["530"].Draggable = false
G2L["530"].Position = UDim2.new(1.2156863, 0, 0.03846154, 0)
G2L["530"].Rotation = 0
G2L["530"].Selectable = false
G2L["530"].SelectionOrder = 0
G2L["530"].Size = UDim2.new(0, 423, 0, 50)
G2L["530"].Visible = true
G2L["530"].ZIndex = 1
G2L["530"].Parent = G2L["529"]

--ScreenGui.ssGUIv7.Synapse.Source
G2L["531"].Name = [[Source]]
G2L["531"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["531"].MultiLine = true
G2L["531"].PlaceholderColor3 = Color3.new(0, 0, 0)
G2L["531"].PlaceholderText = [[Script here]]
G2L["531"].Text = [[]]
G2L["531"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["531"].TextScaled = false
G2L["531"].TextSize = 14
G2L["531"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["531"].TextStrokeTransparency = 1
G2L["531"].TextWrapped = false
G2L["531"].TextXAlignment = Enum.TextXAlignment.Left
G2L["531"].TextYAlignment = Enum.TextYAlignment.Top
G2L["531"].Active = true
G2L["531"].AnchorPoint = Vector2.new(0, 0)
G2L["531"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["531"].BackgroundTransparency = 0.2
G2L["531"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["531"].BorderSizePixel = 1
G2L["531"].ClipsDescendants = false
G2L["531"].Draggable = false
G2L["531"].Position = UDim2.new(0.18210863, 0, 0.22292034, 0)
G2L["531"].Rotation = 0
G2L["531"].Selectable = true
G2L["531"].SelectionOrder = 0
G2L["531"].Size = UDim2.new(0, 485, 0, 295)
G2L["531"].Visible = true
G2L["531"].ZIndex = 1
G2L["531"].Parent = G2L["528"]

--ScreenGui.ssGUIv7.Synapse.TextButton
G2L["532"].Name = [[TextButton]]
G2L["532"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["532"].Text = [[Page 1]]
G2L["532"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["532"].TextScaled = true
G2L["532"].TextSize = 14
G2L["532"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["532"].TextStrokeTransparency = 1
G2L["532"].TextWrapped = true
G2L["532"].TextXAlignment = Enum.TextXAlignment.Center
G2L["532"].TextYAlignment = Enum.TextYAlignment.Center
G2L["532"].Active = true
G2L["532"].AnchorPoint = Vector2.new(0, 0)
G2L["532"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["532"].BackgroundTransparency = 0
G2L["532"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["532"].BorderSizePixel = 3
G2L["532"].ClipsDescendants = false
G2L["532"].Draggable = false
G2L["532"].Position = UDim2.new(0.007987221, 0, 0.1483968, 0)
G2L["532"].Rotation = 0
G2L["532"].Selectable = true
G2L["532"].SelectionOrder = 0
G2L["532"].Size = UDim2.new(0, 93, 0, 50)
G2L["532"].Visible = true
G2L["532"].ZIndex = 1
G2L["532"].Parent = G2L["528"]

--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
G2L["533"].Name = [[LocalScript]]
G2L["533"].Parent = G2L["532"]

--ScreenGui.ssGUIv7.Synapse.TextButton.UICorner
G2L["534"].Name = [[UICorner]]
G2L["534"].CornerRadius = UDim.new(0, 8)
G2L["534"].Parent = G2L["532"]

--ScreenGui.ssGUIv7.Synapse.TextButton.UIGradient
G2L["535"].Name = [[UIGradient]]
G2L["535"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))};
G2L["535"].Enabled = true
G2L["535"].Rotation = 0
G2L["535"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["535"].Parent = G2L["532"]

--ScreenGui.ssGUIv7.Synapse.TextButton
G2L["536"].Name = [[TextButton]]
G2L["536"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["536"].Text = [[Page 2]]
G2L["536"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["536"].TextScaled = true
G2L["536"].TextSize = 14
G2L["536"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["536"].TextStrokeTransparency = 1
G2L["536"].TextWrapped = true
G2L["536"].TextXAlignment = Enum.TextXAlignment.Center
G2L["536"].TextYAlignment = Enum.TextYAlignment.Center
G2L["536"].Active = true
G2L["536"].AnchorPoint = Vector2.new(0, 0)
G2L["536"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["536"].BackgroundTransparency = 0
G2L["536"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["536"].BorderSizePixel = 3
G2L["536"].ClipsDescendants = false
G2L["536"].Draggable = false
G2L["536"].Position = UDim2.new(0.007987221, 0, 0.26022476, 0)
G2L["536"].Rotation = 0
G2L["536"].Selectable = true
G2L["536"].SelectionOrder = 0
G2L["536"].Size = UDim2.new(0, 93, 0, 50)
G2L["536"].Visible = true
G2L["536"].ZIndex = 1
G2L["536"].Parent = G2L["528"]

--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
G2L["537"].Name = [[LocalScript]]
G2L["537"].Parent = G2L["536"]

--ScreenGui.ssGUIv7.Synapse.TextButton.UICorner
G2L["538"].Name = [[UICorner]]
G2L["538"].CornerRadius = UDim.new(0, 8)
G2L["538"].Parent = G2L["536"]

--ScreenGui.ssGUIv7.Synapse.TextButton.UIGradient
G2L["539"].Name = [[UIGradient]]
G2L["539"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["539"].Enabled = true
G2L["539"].Rotation = 0
G2L["539"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["539"].Parent = G2L["536"]

--ScreenGui.ssGUIv7.Synapse.TextButton
G2L["540"].Name = [[TextButton]]
G2L["540"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["540"].Text = [[Page 3]]
G2L["540"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["540"].TextScaled = true
G2L["540"].TextSize = 14
G2L["540"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["540"].TextStrokeTransparency = 1
G2L["540"].TextWrapped = true
G2L["540"].TextXAlignment = Enum.TextXAlignment.Center
G2L["540"].TextYAlignment = Enum.TextYAlignment.Center
G2L["540"].Active = true
G2L["540"].AnchorPoint = Vector2.new(0, 0)
G2L["540"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["540"].BackgroundTransparency = 0
G2L["540"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["540"].BorderSizePixel = 3
G2L["540"].ClipsDescendants = false
G2L["540"].Draggable = false
G2L["540"].Position = UDim2.new(0.007987221, 0, 0.37420326, 0)
G2L["540"].Rotation = 0
G2L["540"].Selectable = true
G2L["540"].SelectionOrder = 0
G2L["540"].Size = UDim2.new(0, 93, 0, 50)
G2L["540"].Visible = true
G2L["540"].ZIndex = 1
G2L["540"].Parent = G2L["528"]

--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
G2L["541"].Name = [[LocalScript]]
G2L["541"].Parent = G2L["540"]

--ScreenGui.ssGUIv7.Synapse.TextButton.UICorner
G2L["542"].Name = [[UICorner]]
G2L["542"].CornerRadius = UDim.new(0, 8)
G2L["542"].Parent = G2L["540"]

--ScreenGui.ssGUIv7.Synapse.TextButton.UIGradient
G2L["543"].Name = [[UIGradient]]
G2L["543"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(200, 5, 5)), ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 5, 5))};
G2L["543"].Enabled = true
G2L["543"].Rotation = 0
G2L["543"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["543"].Parent = G2L["540"]

--ScreenGui.ssGUIv7.Synapse.Frame
G2L["544"].Name = [[Frame]]
G2L["544"].Active = false
G2L["544"].AnchorPoint = Vector2.new(0, 0)
G2L["544"].BackgroundColor3 = Color3.fromRGB(36, 36, 36)
G2L["544"].BackgroundTransparency = 0
G2L["544"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["544"].BorderSizePixel = 0
G2L["544"].ClipsDescendants = false
G2L["544"].Draggable = false
G2L["544"].Position = UDim2.new(0.18210863, 0, 0.8623656, 0)
G2L["544"].Rotation = 0
G2L["544"].Selectable = false
G2L["544"].SelectionOrder = 0
G2L["544"].Size = UDim2.new(0, 485, 0, 48)
G2L["544"].Visible = true
G2L["544"].ZIndex = 1
G2L["544"].Parent = G2L["528"]

--ScreenGui.ssGUIv7.Synapse.Frame.exe
G2L["545"].Name = [[exe]]
G2L["545"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["545"].Text = [[Execute]]
G2L["545"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["545"].TextScaled = false
G2L["545"].TextSize = 20
G2L["545"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["545"].TextStrokeTransparency = 1
G2L["545"].TextWrapped = true
G2L["545"].TextXAlignment = Enum.TextXAlignment.Center
G2L["545"].TextYAlignment = Enum.TextYAlignment.Center
G2L["545"].Active = true
G2L["545"].AnchorPoint = Vector2.new(0, 0)
G2L["545"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["545"].BackgroundTransparency = 0
G2L["545"].BorderColor3 = Color3.fromRGB(80, 80, 80)
G2L["545"].BorderSizePixel = 3
G2L["545"].ClipsDescendants = false
G2L["545"].Draggable = false
G2L["545"].Position = UDim2.new(0.019055616, 0, 0.16911697, 0)
G2L["545"].Rotation = 0
G2L["545"].Selectable = true
G2L["545"].SelectionOrder = 0
G2L["545"].Size = UDim2.new(0, 165, 0, 34)
G2L["545"].Visible = true
G2L["545"].ZIndex = 1
G2L["545"].Parent = G2L["544"]

--ScreenGui.ssGUIv7.Synapse.Frame.exe.ExecuteScript
G2L["546"].Name = [[ExecuteScript]]
G2L["546"].Parent = G2L["545"]

--ScreenGui.ssGUIv7.Synapse.Frame.exe.LocalScript
G2L["547"].Name = [[LocalScript]]
G2L["547"].Parent = G2L["545"]

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script
G2L["548"].Name = [[Script]]
G2L["548"].Parent = G2L["545"]

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring
G2L["549"].Name = [[Loadstring]]
G2L["549"].Parent = G2L["548"]

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring.FiOne
G2L["550"].Name = [[FiOne]]
G2L["550"].Parent = G2L["549"]

--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring.Yueliang
G2L["551"].Name = [[Yueliang]]
G2L["551"].Parent = G2L["549"]

--ScreenGui.ssGUIv7.Synapse.Frame.cle
G2L["552"].Name = [[cle]]
G2L["552"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["552"].Text = [[Clear]]
G2L["552"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["552"].TextScaled = false
G2L["552"].TextSize = 20
G2L["552"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["552"].TextStrokeTransparency = 1
G2L["552"].TextWrapped = true
G2L["552"].TextXAlignment = Enum.TextXAlignment.Center
G2L["552"].TextYAlignment = Enum.TextYAlignment.Center
G2L["552"].Active = true
G2L["552"].AnchorPoint = Vector2.new(0, 0)
G2L["552"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["552"].BackgroundTransparency = 0
G2L["552"].BorderColor3 = Color3.fromRGB(103.00001, 103.00001, 103.00001)
G2L["552"].BorderSizePixel = 3
G2L["552"].ClipsDescendants = false
G2L["552"].Draggable = false
G2L["552"].Position = UDim2.new(0.6501251, 0, 0.16911697, 0)
G2L["552"].Rotation = 0
G2L["552"].Selectable = true
G2L["552"].SelectionOrder = 0
G2L["552"].Size = UDim2.new(0, 158, 0, 34)
G2L["552"].Visible = true
G2L["552"].ZIndex = 1
G2L["552"].Parent = G2L["544"]

--ScreenGui.ssGUIv7.Synapse.Frame.cle.LocalScript
G2L["553"].Name = [[LocalScript]]
G2L["553"].Parent = G2L["552"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui
G2L["554"].Name = [[stikinoutyoutgyatfortherizzlercursedgui]]
G2L["554"].Active = false
G2L["554"].AnchorPoint = Vector2.new(0, 0)
G2L["554"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["554"].BackgroundTransparency = 0
G2L["554"].BorderColor3 = Color3.fromRGB(195.00002, 0, 0)
G2L["554"].BorderSizePixel = 5
G2L["554"].ClipsDescendants = false
G2L["554"].Draggable = false
G2L["554"].Position = UDim2.new(0.26122797, 0, 0.07117826, 0)
G2L["554"].Rotation = 25
G2L["554"].Selectable = false
G2L["554"].SelectionOrder = 0
G2L["554"].Size = UDim2.new(0, 627, 0, 527)
G2L["554"].Visible = false
G2L["554"].ZIndex = 1
G2L["554"].Parent = G2L["0"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.DraggableScript
G2L["555"].Name = [[DraggableScript]]
G2L["555"].Parent = G2L["554"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1
G2L["556"].Name = [[pg1]]
G2L["556"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["556"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["556"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["556"].ScrollBarThickness = 12
G2L["556"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["556"].Active = true
G2L["556"].AnchorPoint = Vector2.new(0, 0)
G2L["556"].BackgroundColor3 = Color3.fromRGB(51.000004, 50.000004, 52.000004)
G2L["556"].BackgroundTransparency = 0
G2L["556"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["556"].BorderSizePixel = 2
G2L["556"].ClipsDescendants = true
G2L["556"].Draggable = false
G2L["556"].Position = UDim2.new(-0.0015948477, 0, 0.11764706, 0)
G2L["556"].Rotation = 25
G2L["556"].Selectable = true
G2L["556"].SelectionOrder = 0
G2L["556"].Size = UDim2.new(0, 626, 0, 465)
G2L["556"].Visible = true
G2L["556"].ZIndex = 1
G2L["556"].Parent = G2L["554"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits
G2L["557"].Name = [[credits]]
G2L["557"].Active = false
G2L["557"].AnchorPoint = Vector2.new(0, 0)
G2L["557"].BackgroundColor3 = Color3.fromRGB(176, 176, 176)
G2L["557"].BackgroundTransparency = 1
G2L["557"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["557"].BorderSizePixel = 0
G2L["557"].ClipsDescendants = false
G2L["557"].Draggable = false
G2L["557"].Position = UDim2.new(0.34978673, 0, 0.32632598, 0)
G2L["557"].Rotation = 25
G2L["557"].Selectable = false
G2L["557"].SelectionOrder = 0
G2L["557"].Size = UDim2.new(0, 275, 0, 165)
G2L["557"].Visible = true
G2L["557"].ZIndex = 1
G2L["557"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.ImageLabel
G2L["558"].Name = [[ImageLabel]]
G2L["558"].Image = [[rbxassetid://14801957514]]
G2L["558"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["558"].ScaleType = Enum.ScaleType.Stretch
G2L["558"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["558"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["558"].Active = false
G2L["558"].AnchorPoint = Vector2.new(0, 0)
G2L["558"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["558"].BackgroundTransparency = 0
G2L["558"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["558"].BorderSizePixel = 0
G2L["558"].ClipsDescendants = false
G2L["558"].Draggable = false
G2L["558"].Position = UDim2.new(-0.78909093, 0, 3.9939394, 0)
G2L["558"].Rotation = 0
G2L["558"].Selectable = false
G2L["558"].SelectionOrder = 0
G2L["558"].Size = UDim2.new(0, 52, 0, 48)
G2L["558"].Visible = true
G2L["558"].ZIndex = 1
G2L["558"].Parent = G2L["557"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.ImageLabel.UIGradient
G2L["559"].Name = [[UIGradient]]
G2L["559"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(235, 8, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(235, 8, 0))};
G2L["559"].Enabled = true
G2L["559"].Rotation = 0
G2L["559"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["559"].Parent = G2L["558"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.TextLabel
G2L["560"].Name = [[TextLabel]]
G2L["560"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["560"].Text = [[made by mario.ss & enitytest]]
G2L["560"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["560"].TextScaled = true
G2L["560"].TextSize = 42
G2L["560"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["560"].TextStrokeTransparency = 1
G2L["560"].TextWrapped = true
G2L["560"].TextXAlignment = Enum.TextXAlignment.Center
G2L["560"].TextYAlignment = Enum.TextYAlignment.Center
G2L["560"].Active = false
G2L["560"].AnchorPoint = Vector2.new(0, 0)
G2L["560"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["560"].BackgroundTransparency = 0
G2L["560"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["560"].BorderSizePixel = 2
G2L["560"].ClipsDescendants = false
G2L["560"].Draggable = false
G2L["560"].Position = UDim2.new(-0.60354406, 0, 4.084246, 0)
G2L["560"].Rotation = 0
G2L["560"].Selectable = false
G2L["560"].SelectionOrder = 0
G2L["560"].Size = UDim2.new(0, 194, 0, 25)
G2L["560"].Visible = true
G2L["560"].ZIndex = 1
G2L["560"].Parent = G2L["557"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.TextLabel.LocalScript
G2L["561"].Name = [[LocalScript]]
G2L["561"].Parent = G2L["560"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.TextLabel.UICorner
G2L["562"].Name = [[UICorner]]
G2L["562"].CornerRadius = UDim.new(0, 200)
G2L["562"].Parent = G2L["560"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints
G2L["563"].Name = [[Hints]]
G2L["563"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["564"].Name = [[hint]]
G2L["564"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["564"].Text = [[Hint2]]
G2L["564"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["564"].TextScaled = false
G2L["564"].TextSize = 14
G2L["564"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["564"].TextStrokeTransparency = 1
G2L["564"].TextWrapped = false
G2L["564"].TextXAlignment = Enum.TextXAlignment.Center
G2L["564"].TextYAlignment = Enum.TextYAlignment.Center
G2L["564"].Active = true
G2L["564"].AnchorPoint = Vector2.new(0, 0)
G2L["564"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["564"].BackgroundTransparency = 0
G2L["564"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["564"].BorderSizePixel = 3
G2L["564"].ClipsDescendants = false
G2L["564"].Draggable = false
G2L["564"].Position = UDim2.new(0.098988004, 0, 0.54954344, 0)
G2L["564"].Rotation = 0
G2L["564"].Selectable = true
G2L["564"].SelectionOrder = 0
G2L["564"].Size = UDim2.new(0, 157, 0, 29)
G2L["564"].Visible = true
G2L["564"].ZIndex = 1
G2L["564"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["565"].Name = [[Script]]
G2L["565"].Parent = G2L["564"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["566"].Name = [[hint]]
G2L["566"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["566"].Text = [[Hint3]]
G2L["566"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["566"].TextScaled = false
G2L["566"].TextSize = 14
G2L["566"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["566"].TextStrokeTransparency = 1
G2L["566"].TextWrapped = false
G2L["566"].TextXAlignment = Enum.TextXAlignment.Center
G2L["566"].TextYAlignment = Enum.TextYAlignment.Center
G2L["566"].Active = true
G2L["566"].AnchorPoint = Vector2.new(0, 0)
G2L["566"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["566"].BackgroundTransparency = 0
G2L["566"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["566"].BorderSizePixel = 3
G2L["566"].ClipsDescendants = false
G2L["566"].Draggable = false
G2L["566"].Position = UDim2.new(0.3769433, 0, 0.5510082, 0)
G2L["566"].Rotation = 0
G2L["566"].Selectable = true
G2L["566"].SelectionOrder = 0
G2L["566"].Size = UDim2.new(0, 157, 0, 29)
G2L["566"].Visible = true
G2L["566"].ZIndex = 1
G2L["566"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["567"].Name = [[Script]]
G2L["567"].Parent = G2L["566"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["568"].Name = [[hint]]
G2L["568"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["568"].Text = [[Hint3]]
G2L["568"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["568"].TextScaled = false
G2L["568"].TextSize = 14
G2L["568"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["568"].TextStrokeTransparency = 1
G2L["568"].TextWrapped = false
G2L["568"].TextXAlignment = Enum.TextXAlignment.Center
G2L["568"].TextYAlignment = Enum.TextYAlignment.Center
G2L["568"].Active = true
G2L["568"].AnchorPoint = Vector2.new(0, 0)
G2L["568"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["568"].BackgroundTransparency = 0
G2L["568"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["568"].BorderSizePixel = 3
G2L["568"].ClipsDescendants = false
G2L["568"].Draggable = false
G2L["568"].Position = UDim2.new(0.64531386, 0, 0.55217785, 0)
G2L["568"].Rotation = 0
G2L["568"].Selectable = true
G2L["568"].SelectionOrder = 0
G2L["568"].Size = UDim2.new(0, 157, 0, 29)
G2L["568"].Visible = true
G2L["568"].ZIndex = 1
G2L["568"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["569"].Name = [[Script]]
G2L["569"].Parent = G2L["568"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["570"].Name = [[hint]]
G2L["570"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["570"].Text = [[Hint4]]
G2L["570"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["570"].TextScaled = false
G2L["570"].TextSize = 14
G2L["570"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["570"].TextStrokeTransparency = 1
G2L["570"].TextWrapped = false
G2L["570"].TextXAlignment = Enum.TextXAlignment.Center
G2L["570"].TextYAlignment = Enum.TextYAlignment.Center
G2L["570"].Active = true
G2L["570"].AnchorPoint = Vector2.new(0, 0)
G2L["570"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["570"].BackgroundTransparency = 0
G2L["570"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["570"].BorderSizePixel = 3
G2L["570"].ClipsDescendants = false
G2L["570"].Draggable = false
G2L["570"].Position = UDim2.new(0.098988004, 0, 0.5806353, 0)
G2L["570"].Rotation = 0
G2L["570"].Selectable = true
G2L["570"].SelectionOrder = 0
G2L["570"].Size = UDim2.new(0, 157, 0, 29)
G2L["570"].Visible = true
G2L["570"].ZIndex = 1
G2L["570"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["571"].Name = [[hint]]
G2L["571"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["571"].Text = [[Hint5]]
G2L["571"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["571"].TextScaled = false
G2L["571"].TextSize = 14
G2L["571"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["571"].TextStrokeTransparency = 1
G2L["571"].TextWrapped = false
G2L["571"].TextXAlignment = Enum.TextXAlignment.Center
G2L["571"].TextYAlignment = Enum.TextYAlignment.Center
G2L["571"].Active = true
G2L["571"].AnchorPoint = Vector2.new(0, 0)
G2L["571"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["571"].BackgroundTransparency = 0
G2L["571"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["571"].BorderSizePixel = 3
G2L["571"].ClipsDescendants = false
G2L["571"].Draggable = false
G2L["571"].Position = UDim2.new(0.3769433, 0, 0.58062285, 0)
G2L["571"].Rotation = 0
G2L["571"].Selectable = true
G2L["571"].SelectionOrder = 0
G2L["571"].Size = UDim2.new(0, 157, 0, 29)
G2L["571"].Visible = true
G2L["571"].ZIndex = 1
G2L["571"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["572"].Name = [[Script]]
G2L["572"].Parent = G2L["571"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["573"].Name = [[hint]]
G2L["573"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["573"].Text = [[Hint6]]
G2L["573"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["573"].TextScaled = false
G2L["573"].TextSize = 14
G2L["573"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["573"].TextStrokeTransparency = 1
G2L["573"].TextWrapped = false
G2L["573"].TextXAlignment = Enum.TextXAlignment.Center
G2L["573"].TextYAlignment = Enum.TextYAlignment.Center
G2L["573"].Active = true
G2L["573"].AnchorPoint = Vector2.new(0, 0)
G2L["573"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["573"].BackgroundTransparency = 0
G2L["573"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["573"].BorderSizePixel = 3
G2L["573"].ClipsDescendants = false
G2L["573"].Draggable = false
G2L["573"].Position = UDim2.new(0.64531386, 0, 0.5805946, 0)
G2L["573"].Rotation = 0
G2L["573"].Selectable = true
G2L["573"].SelectionOrder = 0
G2L["573"].Size = UDim2.new(0, 157, 0, 29)
G2L["573"].Visible = true
G2L["573"].ZIndex = 1
G2L["573"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["574"].Name = [[Script]]
G2L["574"].Parent = G2L["573"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["575"].Name = [[hint]]
G2L["575"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["575"].Text = [[Hint7]]
G2L["575"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["575"].TextScaled = false
G2L["575"].TextSize = 14
G2L["575"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["575"].TextStrokeTransparency = 1
G2L["575"].TextWrapped = false
G2L["575"].TextXAlignment = Enum.TextXAlignment.Center
G2L["575"].TextYAlignment = Enum.TextYAlignment.Center
G2L["575"].Active = true
G2L["575"].AnchorPoint = Vector2.new(0, 0)
G2L["575"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["575"].BackgroundTransparency = 0
G2L["575"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["575"].BorderSizePixel = 3
G2L["575"].ClipsDescendants = false
G2L["575"].Draggable = false
G2L["575"].Position = UDim2.new(0.098988004, 0, 0.61493915, 0)
G2L["575"].Rotation = 0
G2L["575"].Selectable = true
G2L["575"].SelectionOrder = 0
G2L["575"].Size = UDim2.new(0, 157, 0, 29)
G2L["575"].Visible = true
G2L["575"].ZIndex = 1
G2L["575"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["576"].Name = [[Script]]
G2L["576"].Parent = G2L["575"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["577"].Name = [[hint]]
G2L["577"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["577"].Text = [[Hint8]]
G2L["577"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["577"].TextScaled = false
G2L["577"].TextSize = 14
G2L["577"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["577"].TextStrokeTransparency = 1
G2L["577"].TextWrapped = false
G2L["577"].TextXAlignment = Enum.TextXAlignment.Center
G2L["577"].TextYAlignment = Enum.TextYAlignment.Center
G2L["577"].Active = true
G2L["577"].AnchorPoint = Vector2.new(0, 0)
G2L["577"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["577"].BackgroundTransparency = 0
G2L["577"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["577"].BorderSizePixel = 3
G2L["577"].ClipsDescendants = false
G2L["577"].Draggable = false
G2L["577"].Position = UDim2.new(0.3769433, 0, 0.6153675, 0)
G2L["577"].Rotation = 0
G2L["577"].Selectable = true
G2L["577"].SelectionOrder = 0
G2L["577"].Size = UDim2.new(0, 157, 0, 29)
G2L["577"].Visible = true
G2L["577"].ZIndex = 1
G2L["577"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["578"].Name = [[Script]]
G2L["578"].Parent = G2L["577"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["579"].Name = [[hint]]
G2L["579"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["579"].Text = [[Hint8]]
G2L["579"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["579"].TextScaled = false
G2L["579"].TextSize = 14
G2L["579"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["579"].TextStrokeTransparency = 1
G2L["579"].TextWrapped = false
G2L["579"].TextXAlignment = Enum.TextXAlignment.Center
G2L["579"].TextYAlignment = Enum.TextYAlignment.Center
G2L["579"].Active = true
G2L["579"].AnchorPoint = Vector2.new(0, 0)
G2L["579"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["579"].BackgroundTransparency = 0
G2L["579"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["579"].BorderSizePixel = 3
G2L["579"].ClipsDescendants = false
G2L["579"].Draggable = false
G2L["579"].Position = UDim2.new(0.64531386, 0, 0.61633825, 0)
G2L["579"].Rotation = 0
G2L["579"].Selectable = true
G2L["579"].SelectionOrder = 0
G2L["579"].Size = UDim2.new(0, 157, 0, 29)
G2L["579"].Visible = true
G2L["579"].ZIndex = 1
G2L["579"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["580"].Name = [[Script]]
G2L["580"].Parent = G2L["579"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["581"].Name = [[hint]]
G2L["581"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["581"].Text = [[Hint8]]
G2L["581"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["581"].TextScaled = false
G2L["581"].TextSize = 14
G2L["581"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["581"].TextStrokeTransparency = 1
G2L["581"].TextWrapped = false
G2L["581"].TextXAlignment = Enum.TextXAlignment.Center
G2L["581"].TextYAlignment = Enum.TextYAlignment.Center
G2L["581"].Active = true
G2L["581"].AnchorPoint = Vector2.new(0, 0)
G2L["581"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["581"].BackgroundTransparency = 0
G2L["581"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["581"].BorderSizePixel = 3
G2L["581"].ClipsDescendants = false
G2L["581"].Draggable = false
G2L["581"].Position = UDim2.new(0.098988004, 0, 0.6507969, 0)
G2L["581"].Rotation = 0
G2L["581"].Selectable = true
G2L["581"].SelectionOrder = 0
G2L["581"].Size = UDim2.new(0, 157, 0, 29)
G2L["581"].Visible = true
G2L["581"].ZIndex = 1
G2L["581"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["582"].Name = [[Script]]
G2L["582"].Parent = G2L["581"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["583"].Name = [[hint]]
G2L["583"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["583"].Text = [[Hint9]]
G2L["583"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["583"].TextScaled = false
G2L["583"].TextSize = 14
G2L["583"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["583"].TextStrokeTransparency = 1
G2L["583"].TextWrapped = false
G2L["583"].TextXAlignment = Enum.TextXAlignment.Center
G2L["583"].TextYAlignment = Enum.TextYAlignment.Center
G2L["583"].Active = true
G2L["583"].AnchorPoint = Vector2.new(0, 0)
G2L["583"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["583"].BackgroundTransparency = 0
G2L["583"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["583"].BorderSizePixel = 3
G2L["583"].ClipsDescendants = false
G2L["583"].Draggable = false
G2L["583"].Position = UDim2.new(0.37534583, 0, 0.6514838, 0)
G2L["583"].Rotation = 0
G2L["583"].Selectable = true
G2L["583"].SelectionOrder = 0
G2L["583"].Size = UDim2.new(0, 157, 0, 29)
G2L["583"].Visible = true
G2L["583"].ZIndex = 1
G2L["583"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["584"].Name = [[Script]]
G2L["584"].Parent = G2L["583"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["585"].Name = [[hint]]
G2L["585"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["585"].Text = [[Hint10]]
G2L["585"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["585"].TextScaled = false
G2L["585"].TextSize = 14
G2L["585"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["585"].TextStrokeTransparency = 1
G2L["585"].TextWrapped = false
G2L["585"].TextXAlignment = Enum.TextXAlignment.Center
G2L["585"].TextYAlignment = Enum.TextYAlignment.Center
G2L["585"].Active = true
G2L["585"].AnchorPoint = Vector2.new(0, 0)
G2L["585"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["585"].BackgroundTransparency = 0
G2L["585"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["585"].BorderSizePixel = 3
G2L["585"].ClipsDescendants = false
G2L["585"].Draggable = false
G2L["585"].Position = UDim2.new(0.64531386, 0, 0.65089005, 0)
G2L["585"].Rotation = 0
G2L["585"].Selectable = true
G2L["585"].SelectionOrder = 0
G2L["585"].Size = UDim2.new(0, 157, 0, 29)
G2L["585"].Visible = true
G2L["585"].ZIndex = 1
G2L["585"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["586"].Name = [[Script]]
G2L["586"].Parent = G2L["585"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["587"].Name = [[hint]]
G2L["587"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["587"].Text = [[Hint11]]
G2L["587"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["587"].TextScaled = false
G2L["587"].TextSize = 14
G2L["587"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["587"].TextStrokeTransparency = 1
G2L["587"].TextWrapped = false
G2L["587"].TextXAlignment = Enum.TextXAlignment.Center
G2L["587"].TextYAlignment = Enum.TextYAlignment.Center
G2L["587"].Active = true
G2L["587"].AnchorPoint = Vector2.new(0, 0)
G2L["587"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["587"].BackgroundTransparency = 0
G2L["587"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["587"].BorderSizePixel = 3
G2L["587"].ClipsDescendants = false
G2L["587"].Draggable = false
G2L["587"].Position = UDim2.new(0.098988004, 0, 0.6861034, 0)
G2L["587"].Rotation = 0
G2L["587"].Selectable = true
G2L["587"].SelectionOrder = 0
G2L["587"].Size = UDim2.new(0, 157, 0, 29)
G2L["587"].Visible = true
G2L["587"].ZIndex = 1
G2L["587"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["588"].Name = [[Script]]
G2L["588"].Parent = G2L["587"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["589"].Name = [[hint]]
G2L["589"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["589"].Text = [[Hint12]]
G2L["589"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["589"].TextScaled = false
G2L["589"].TextSize = 14
G2L["589"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["589"].TextStrokeTransparency = 1
G2L["589"].TextWrapped = false
G2L["589"].TextXAlignment = Enum.TextXAlignment.Center
G2L["589"].TextYAlignment = Enum.TextYAlignment.Center
G2L["589"].Active = true
G2L["589"].AnchorPoint = Vector2.new(0, 0)
G2L["589"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["589"].BackgroundTransparency = 0
G2L["589"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["589"].BorderSizePixel = 3
G2L["589"].ClipsDescendants = false
G2L["589"].Draggable = false
G2L["589"].Position = UDim2.new(0.3737484, 0, 0.6863506, 0)
G2L["589"].Rotation = 0
G2L["589"].Selectable = true
G2L["589"].SelectionOrder = 0
G2L["589"].Size = UDim2.new(0, 157, 0, 29)
G2L["589"].Visible = true
G2L["589"].ZIndex = 1
G2L["589"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["590"].Name = [[Script]]
G2L["590"].Parent = G2L["589"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint
G2L["591"].Name = [[hint]]
G2L["591"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["591"].Text = [[Hint13]]
G2L["591"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["591"].TextScaled = false
G2L["591"].TextSize = 14
G2L["591"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["591"].TextStrokeTransparency = 1
G2L["591"].TextWrapped = false
G2L["591"].TextXAlignment = Enum.TextXAlignment.Center
G2L["591"].TextYAlignment = Enum.TextYAlignment.Center
G2L["591"].Active = true
G2L["591"].AnchorPoint = Vector2.new(0, 0)
G2L["591"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["591"].BackgroundTransparency = 0
G2L["591"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["591"].BorderSizePixel = 3
G2L["591"].ClipsDescendants = false
G2L["591"].Draggable = false
G2L["591"].Position = UDim2.new(0.64531386, 0, 0.6869108, 0)
G2L["591"].Rotation = 0
G2L["591"].Selectable = true
G2L["591"].SelectionOrder = 0
G2L["591"].Size = UDim2.new(0, 157, 0, 29)
G2L["591"].Visible = true
G2L["591"].ZIndex = 1
G2L["591"].Parent = G2L["563"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Hints.hint.Script
G2L["592"].Name = [[Script]]
G2L["592"].Parent = G2L["591"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Label
G2L["593"].Name = [[Label]]
G2L["593"].Active = false
G2L["593"].AnchorPoint = Vector2.new(0, 0)
G2L["593"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["593"].BackgroundTransparency = 0.25
G2L["593"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["593"].BorderSizePixel = 2
G2L["593"].ClipsDescendants = false
G2L["593"].Draggable = false
G2L["593"].Position = UDim2.new(0.086208455, 0, 0.48463744, 0)
G2L["593"].Rotation = 25
G2L["593"].Selectable = false
G2L["593"].SelectionOrder = 0
G2L["593"].Size = UDim2.new(0, 532, 0, 52)
G2L["593"].Visible = true
G2L["593"].ZIndex = 1
G2L["593"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Label.UICorner
G2L["594"].Name = [[UICorner]]
G2L["594"].CornerRadius = UDim.new(0, 200)
G2L["594"].Parent = G2L["593"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Label.TextLabel
G2L["595"].Name = [[TextLabel]]
G2L["595"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["595"].Text = [[Hints]]
G2L["595"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["595"].TextScaled = true
G2L["595"].TextSize = 14
G2L["595"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["595"].TextStrokeTransparency = 1
G2L["595"].TextWrapped = true
G2L["595"].TextXAlignment = Enum.TextXAlignment.Center
G2L["595"].TextYAlignment = Enum.TextYAlignment.Center
G2L["595"].Active = false
G2L["595"].AnchorPoint = Vector2.new(0, 0)
G2L["595"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["595"].BackgroundTransparency = 1
G2L["595"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["595"].BorderSizePixel = 0
G2L["595"].ClipsDescendants = false
G2L["595"].Draggable = false
G2L["595"].Position = UDim2.new(0.30075186, 0, 0.17307693, 0)
G2L["595"].Rotation = 0
G2L["595"].Selectable = false
G2L["595"].SelectionOrder = 0
G2L["595"].Size = UDim2.new(0, 200, 0, 34)
G2L["595"].Visible = true
G2L["595"].ZIndex = 1
G2L["595"].Parent = G2L["593"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton
G2L["596"].Name = [[TextButton]]
G2L["596"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["596"].Text = [[Next Page]]
G2L["596"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["596"].TextScaled = true
G2L["596"].TextSize = 14
G2L["596"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["596"].TextStrokeTransparency = 1
G2L["596"].TextWrapped = true
G2L["596"].TextXAlignment = Enum.TextXAlignment.Center
G2L["596"].TextYAlignment = Enum.TextYAlignment.Center
G2L["596"].Active = true
G2L["596"].AnchorPoint = Vector2.new(0, 0)
G2L["596"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["596"].BackgroundTransparency = 0
G2L["596"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["596"].BorderSizePixel = 3
G2L["596"].ClipsDescendants = false
G2L["596"].Draggable = false
G2L["596"].Position = UDim2.new(0.42651758, 0, 0.9376442, 0)
G2L["596"].Rotation = 25
G2L["596"].Selectable = true
G2L["596"].SelectionOrder = 0
G2L["596"].Size = UDim2.new(0, 200, 0, 50)
G2L["596"].Visible = true
G2L["596"].ZIndex = 1
G2L["596"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton.LocalScript
G2L["597"].Name = [[LocalScript]]
G2L["597"].Parent = G2L["596"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton.UICorner
G2L["598"].Name = [[UICorner]]
G2L["598"].CornerRadius = UDim.new(0, 8)
G2L["598"].Parent = G2L["596"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton.UIGradient
G2L["599"].Name = [[UIGradient]]
G2L["599"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["599"].Enabled = true
G2L["599"].Rotation = 0
G2L["599"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["599"].Parent = G2L["596"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code
G2L["600"].Name = [[code]]
G2L["600"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["601"].Name = [[TextButton]]
G2L["601"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["601"].Text = [[Itsnotskeleton v4]]
G2L["601"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["601"].TextScaled = false
G2L["601"].TextSize = 14
G2L["601"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["601"].TextStrokeTransparency = 1
G2L["601"].TextWrapped = false
G2L["601"].TextXAlignment = Enum.TextXAlignment.Center
G2L["601"].TextYAlignment = Enum.TextYAlignment.Center
G2L["601"].Active = true
G2L["601"].AnchorPoint = Vector2.new(0, 0)
G2L["601"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["601"].BackgroundTransparency = 0
G2L["601"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["601"].BorderSizePixel = 3
G2L["601"].ClipsDescendants = false
G2L["601"].Draggable = false
G2L["601"].Position = UDim2.new(0.084611036, 0, 0.21405016, 0)
G2L["601"].Rotation = 0
G2L["601"].Selectable = true
G2L["601"].SelectionOrder = 0
G2L["601"].Size = UDim2.new(0, 157, 0, 29)
G2L["601"].Visible = true
G2L["601"].ZIndex = 1
G2L["601"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["602"].Name = [[Script]]
G2L["602"].Parent = G2L["601"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["603"].Name = [[LocalScript]]
G2L["603"].Parent = G2L["601"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["604"].Name = [[GetScript]]
G2L["604"].Parent = G2L["601"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean
G2L["605"].Name = [[mrbean]]
G2L["605"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["605"].Text = [[mrbean admin]]
G2L["605"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["605"].TextScaled = true
G2L["605"].TextSize = 14
G2L["605"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["605"].TextStrokeTransparency = 1
G2L["605"].TextWrapped = true
G2L["605"].TextXAlignment = Enum.TextXAlignment.Center
G2L["605"].TextYAlignment = Enum.TextYAlignment.Center
G2L["605"].Active = true
G2L["605"].AnchorPoint = Vector2.new(0, 0)
G2L["605"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["605"].BackgroundTransparency = 0
G2L["605"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["605"].BorderSizePixel = 2
G2L["605"].ClipsDescendants = false
G2L["605"].Draggable = false
G2L["605"].Position = UDim2.new(0.37380192, 0, 0.44769025, 0)
G2L["605"].Rotation = 0
G2L["605"].Selectable = true
G2L["605"].SelectionOrder = 0
G2L["605"].Size = UDim2.new(0, 133, 0, 28)
G2L["605"].Visible = true
G2L["605"].ZIndex = 1
G2L["605"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean.RippleClick
G2L["606"].Name = [[RippleClick]]
G2L["606"].Parent = G2L["605"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean.RippleClick.Circle
G2L["607"].Name = [[Circle]]
G2L["607"].Image = [[rbxassetid://266543268]]
G2L["607"].ImageColor3 = Color3.fromRGB(0, 0, 0)
G2L["607"].ScaleType = Enum.ScaleType.Stretch
G2L["607"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["607"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["607"].Active = false
G2L["607"].AnchorPoint = Vector2.new(0, 0)
G2L["607"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["607"].BackgroundTransparency = 1
G2L["607"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["607"].BorderSizePixel = 1
G2L["607"].ClipsDescendants = false
G2L["607"].Draggable = false
G2L["607"].Position = UDim2.new(0, 0, 0, 0)
G2L["607"].Rotation = 0
G2L["607"].Selectable = false
G2L["607"].SelectionOrder = 0
G2L["607"].Size = UDim2.new(0, 0, 0, 0)
G2L["607"].Visible = true
G2L["607"].ZIndex = 10
G2L["607"].Parent = G2L["606"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean.ServerEventHandler
G2L["608"].Name = [[ServerEventHandler]]
G2L["608"].Parent = G2L["605"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["609"].Name = [[TextButton]]
G2L["609"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["609"].Text = [[Nuke (LondoSS)]]
G2L["609"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["609"].TextScaled = false
G2L["609"].TextSize = 14
G2L["609"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["609"].TextStrokeTransparency = 1
G2L["609"].TextWrapped = false
G2L["609"].TextXAlignment = Enum.TextXAlignment.Center
G2L["609"].TextYAlignment = Enum.TextYAlignment.Center
G2L["609"].Active = true
G2L["609"].AnchorPoint = Vector2.new(0, 0)
G2L["609"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["609"].BackgroundTransparency = 0
G2L["609"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["609"].BorderSizePixel = 3
G2L["609"].ClipsDescendants = false
G2L["609"].Draggable = false
G2L["609"].Position = UDim2.new(0.084611006, 0, 0.4454817, 0)
G2L["609"].Rotation = 0
G2L["609"].Selectable = true
G2L["609"].SelectionOrder = 0
G2L["609"].Size = UDim2.new(0, 157, 0, 29)
G2L["609"].Visible = true
G2L["609"].ZIndex = 1
G2L["609"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["610"].Name = [[Script]]
G2L["610"].Parent = G2L["609"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["611"].Name = [[LocalScript]]
G2L["611"].Parent = G2L["609"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["612"].Name = [[GetScript]]
G2L["612"].Parent = G2L["609"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["613"].Name = [[TextButton]]
G2L["613"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["613"].Text = [[inf yeild admin]]
G2L["613"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["613"].TextScaled = false
G2L["613"].TextSize = 14
G2L["613"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["613"].TextStrokeTransparency = 1
G2L["613"].TextWrapped = false
G2L["613"].TextXAlignment = Enum.TextXAlignment.Center
G2L["613"].TextYAlignment = Enum.TextYAlignment.Center
G2L["613"].Active = true
G2L["613"].AnchorPoint = Vector2.new(0, 0)
G2L["613"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["613"].BackgroundTransparency = 0
G2L["613"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["613"].BorderSizePixel = 3
G2L["613"].ClipsDescendants = false
G2L["613"].Draggable = false
G2L["613"].Position = UDim2.new(0.6772628, 0, 0.45449933, 0)
G2L["613"].Rotation = 0
G2L["613"].Selectable = true
G2L["613"].SelectionOrder = 0
G2L["613"].Size = UDim2.new(0, 157, 0, 29)
G2L["613"].Visible = true
G2L["613"].ZIndex = 1
G2L["613"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["614"].Name = [[Script]]
G2L["614"].Parent = G2L["613"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["615"].Name = [[LocalScript]]
G2L["615"].Parent = G2L["613"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["616"].Name = [[GetScript]]
G2L["616"].Parent = G2L["613"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["617"].Name = [[TextButton]]
G2L["617"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["617"].Text = [[Dreamybull v8]]
G2L["617"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["617"].TextScaled = false
G2L["617"].TextSize = 14
G2L["617"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["617"].TextStrokeTransparency = 1
G2L["617"].TextWrapped = false
G2L["617"].TextXAlignment = Enum.TextXAlignment.Center
G2L["617"].TextYAlignment = Enum.TextYAlignment.Center
G2L["617"].Active = true
G2L["617"].AnchorPoint = Vector2.new(0, 0)
G2L["617"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["617"].BackgroundTransparency = 0
G2L["617"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["617"].BorderSizePixel = 3
G2L["617"].ClipsDescendants = false
G2L["617"].Draggable = false
G2L["617"].Position = UDim2.new(0.37534583, 0, 0.21465428, 0)
G2L["617"].Rotation = 0
G2L["617"].Selectable = true
G2L["617"].SelectionOrder = 0
G2L["617"].Size = UDim2.new(0, 157, 0, 29)
G2L["617"].Visible = true
G2L["617"].ZIndex = 1
G2L["617"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["618"].Name = [[Script]]
G2L["618"].Parent = G2L["617"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["619"].Name = [[LocalScript]]
G2L["619"].Parent = G2L["617"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["620"].Name = [[GetScript]]
G2L["620"].Parent = G2L["617"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["621"].Name = [[TextButton]]
G2L["621"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["621"].Text = [[k00p3]]
G2L["621"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["621"].TextScaled = false
G2L["621"].TextSize = 14
G2L["621"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["621"].TextStrokeTransparency = 1
G2L["621"].TextWrapped = false
G2L["621"].TextXAlignment = Enum.TextXAlignment.Center
G2L["621"].TextYAlignment = Enum.TextYAlignment.Center
G2L["621"].Active = true
G2L["621"].AnchorPoint = Vector2.new(0, 0)
G2L["621"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["621"].BackgroundTransparency = 0
G2L["621"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["621"].BorderSizePixel = 3
G2L["621"].ClipsDescendants = false
G2L["621"].Draggable = false
G2L["621"].Position = UDim2.new(0.086208455, 0, 0.16222858, 0)
G2L["621"].Rotation = 0
G2L["621"].Selectable = true
G2L["621"].SelectionOrder = 0
G2L["621"].Size = UDim2.new(0, 157, 0, 29)
G2L["621"].Visible = true
G2L["621"].ZIndex = 1
G2L["621"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["622"].Name = [[Script]]
G2L["622"].Parent = G2L["621"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["623"].Name = [[LocalScript]]
G2L["623"].Parent = G2L["621"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["624"].Name = [[GetScript]]
G2L["624"].Parent = G2L["621"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["625"].Name = [[TextButton]]
G2L["625"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["625"].Text = [[die mart]]
G2L["625"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["625"].TextScaled = false
G2L["625"].TextSize = 14
G2L["625"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["625"].TextStrokeTransparency = 1
G2L["625"].TextWrapped = false
G2L["625"].TextXAlignment = Enum.TextXAlignment.Center
G2L["625"].TextYAlignment = Enum.TextYAlignment.Center
G2L["625"].Active = true
G2L["625"].AnchorPoint = Vector2.new(0, 0)
G2L["625"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["625"].BackgroundTransparency = 0
G2L["625"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["625"].BorderSizePixel = 3
G2L["625"].ClipsDescendants = false
G2L["625"].Draggable = false
G2L["625"].Position = UDim2.new(0.6836525, 0, 0.1237536, 0)
G2L["625"].Rotation = 0
G2L["625"].Selectable = true
G2L["625"].SelectionOrder = 0
G2L["625"].Size = UDim2.new(0, 157, 0, 29)
G2L["625"].Visible = true
G2L["625"].ZIndex = 1
G2L["625"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["626"].Name = [[Script]]
G2L["626"].Parent = G2L["625"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["627"].Name = [[LocalScript]]
G2L["627"].Parent = G2L["625"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["628"].Name = [[GetScript]]
G2L["628"].Parent = G2L["625"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["629"].Name = [[TextButton]]
G2L["629"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["629"].Text = [[topk3k]]
G2L["629"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["629"].TextScaled = false
G2L["629"].TextSize = 14
G2L["629"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["629"].TextStrokeTransparency = 1
G2L["629"].TextWrapped = false
G2L["629"].TextXAlignment = Enum.TextXAlignment.Center
G2L["629"].TextYAlignment = Enum.TextYAlignment.Center
G2L["629"].Active = true
G2L["629"].AnchorPoint = Vector2.new(0, 0)
G2L["629"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["629"].BackgroundTransparency = 0
G2L["629"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["629"].BorderSizePixel = 3
G2L["629"].ClipsDescendants = false
G2L["629"].Draggable = false
G2L["629"].Position = UDim2.new(0.6836525, 0, 0.2134314, 0)
G2L["629"].Rotation = 0
G2L["629"].Selectable = true
G2L["629"].SelectionOrder = 0
G2L["629"].Size = UDim2.new(0, 157, 0, 29)
G2L["629"].Visible = true
G2L["629"].ZIndex = 1
G2L["629"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["630"].Name = [[Script]]
G2L["630"].Parent = G2L["629"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["631"].Name = [[LocalScript]]
G2L["631"].Parent = G2L["629"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["632"].Name = [[GetScript]]
G2L["632"].Parent = G2L["629"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["633"].Name = [[TextButton]]
G2L["633"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["633"].Text = [[k00p1]]
G2L["633"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["633"].TextScaled = false
G2L["633"].TextSize = 14
G2L["633"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["633"].TextStrokeTransparency = 1
G2L["633"].TextWrapped = false
G2L["633"].TextXAlignment = Enum.TextXAlignment.Center
G2L["633"].TextYAlignment = Enum.TextYAlignment.Center
G2L["633"].Active = true
G2L["633"].AnchorPoint = Vector2.new(0, 0)
G2L["633"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["633"].BackgroundTransparency = 0
G2L["633"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["633"].BorderSizePixel = 3
G2L["633"].ClipsDescendants = false
G2L["633"].Draggable = false
G2L["633"].Position = UDim2.new(0.086208455, 0, 0.12242386, 0)
G2L["633"].Rotation = 0
G2L["633"].Selectable = true
G2L["633"].SelectionOrder = 0
G2L["633"].Size = UDim2.new(0, 157, 0, 29)
G2L["633"].Visible = true
G2L["633"].ZIndex = 1
G2L["633"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["634"].Name = [[Script]]
G2L["634"].Parent = G2L["633"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["635"].Name = [[LocalScript]]
G2L["635"].Parent = G2L["633"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["636"].Name = [[GetScript]]
G2L["636"].Parent = G2L["633"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["637"].Name = [[TextButton]]
G2L["637"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["637"].Text = [[k00p2]]
G2L["637"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["637"].TextScaled = false
G2L["637"].TextSize = 14
G2L["637"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["637"].TextStrokeTransparency = 1
G2L["637"].TextWrapped = false
G2L["637"].TextXAlignment = Enum.TextXAlignment.Center
G2L["637"].TextYAlignment = Enum.TextYAlignment.Center
G2L["637"].Active = true
G2L["637"].AnchorPoint = Vector2.new(0, 0)
G2L["637"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["637"].BackgroundTransparency = 0
G2L["637"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["637"].BorderSizePixel = 3
G2L["637"].ClipsDescendants = false
G2L["637"].Draggable = false
G2L["637"].Position = UDim2.new(0.3769433, 0, 0.2853463, 0)
G2L["637"].Rotation = 0
G2L["637"].Selectable = true
G2L["637"].SelectionOrder = 0
G2L["637"].Size = UDim2.new(0, 133, 0, 31)
G2L["637"].Visible = true
G2L["637"].ZIndex = 1
G2L["637"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["638"].Name = [[Script]]
G2L["638"].Parent = G2L["637"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["639"].Name = [[LocalScript]]
G2L["639"].Parent = G2L["637"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["640"].Name = [[GetScript]]
G2L["640"].Parent = G2L["637"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["641"].Name = [[TextButton]]
G2L["641"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["641"].Text = [[g00ngui]]
G2L["641"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["641"].TextScaled = false
G2L["641"].TextSize = 14
G2L["641"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["641"].TextStrokeTransparency = 1
G2L["641"].TextWrapped = false
G2L["641"].TextXAlignment = Enum.TextXAlignment.Center
G2L["641"].TextYAlignment = Enum.TextYAlignment.Center
G2L["641"].Active = true
G2L["641"].AnchorPoint = Vector2.new(0, 0)
G2L["641"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["641"].BackgroundTransparency = 0
G2L["641"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["641"].BorderSizePixel = 3
G2L["641"].ClipsDescendants = false
G2L["641"].Draggable = false
G2L["641"].Position = UDim2.new(0.3737484, 0, 0.16341704, 0)
G2L["641"].Rotation = 0
G2L["641"].Selectable = true
G2L["641"].SelectionOrder = 0
G2L["641"].Size = UDim2.new(0, 157, 0, 29)
G2L["641"].Visible = true
G2L["641"].ZIndex = 1
G2L["641"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["642"].Name = [[Script]]
G2L["642"].Parent = G2L["641"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["643"].Name = [[LocalScript]]
G2L["643"].Parent = G2L["641"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["644"].Name = [[GetScript]]
G2L["644"].Parent = G2L["641"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["645"].Name = [[TextButton]]
G2L["645"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["645"].Text = [[k00p4 (OP)]]
G2L["645"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["645"].TextScaled = false
G2L["645"].TextSize = 14
G2L["645"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["645"].TextStrokeTransparency = 1
G2L["645"].TextWrapped = false
G2L["645"].TextXAlignment = Enum.TextXAlignment.Center
G2L["645"].TextYAlignment = Enum.TextYAlignment.Center
G2L["645"].Active = true
G2L["645"].AnchorPoint = Vector2.new(0, 0)
G2L["645"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["645"].BackgroundTransparency = 0
G2L["645"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["645"].BorderSizePixel = 3
G2L["645"].ClipsDescendants = false
G2L["645"].Draggable = false
G2L["645"].Position = UDim2.new(0.6836525, 0, 0.16396038, 0)
G2L["645"].Rotation = 0
G2L["645"].Selectable = true
G2L["645"].SelectionOrder = 0
G2L["645"].Size = UDim2.new(0, 157, 0, 29)
G2L["645"].Visible = true
G2L["645"].ZIndex = 1
G2L["645"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["646"].Name = [[Script]]
G2L["646"].Parent = G2L["645"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["647"].Name = [[LocalScript]]
G2L["647"].Parent = G2L["645"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["648"].Name = [[GetScript]]
G2L["648"].Parent = G2L["645"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["649"].Name = [[TextButton]]
G2L["649"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["649"].Text = [[c00lgui (edit)]]
G2L["649"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["649"].TextScaled = false
G2L["649"].TextSize = 14
G2L["649"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["649"].TextStrokeTransparency = 1
G2L["649"].TextWrapped = false
G2L["649"].TextXAlignment = Enum.TextXAlignment.Center
G2L["649"].TextYAlignment = Enum.TextYAlignment.Center
G2L["649"].Active = true
G2L["649"].AnchorPoint = Vector2.new(0, 0)
G2L["649"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["649"].BackgroundTransparency = 0
G2L["649"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["649"].BorderSizePixel = 3
G2L["649"].ClipsDescendants = false
G2L["649"].Draggable = false
G2L["649"].Position = UDim2.new(0.084611006, 0, 0.3226151, 0)
G2L["649"].Rotation = 0
G2L["649"].Selectable = true
G2L["649"].SelectionOrder = 0
G2L["649"].Size = UDim2.new(0, 157, 0, 29)
G2L["649"].Visible = true
G2L["649"].ZIndex = 1
G2L["649"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["650"].Name = [[Script]]
G2L["650"].Parent = G2L["649"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["651"].Name = [[LocalScript]]
G2L["651"].Parent = G2L["649"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["652"].Name = [[GetScript]]
G2L["652"].Parent = G2L["649"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["653"].Name = [[TextButton]]
G2L["653"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["653"].Text = [[k00pkidd realm]]
G2L["653"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["653"].TextScaled = false
G2L["653"].TextSize = 14
G2L["653"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["653"].TextStrokeTransparency = 1
G2L["653"].TextWrapped = false
G2L["653"].TextXAlignment = Enum.TextXAlignment.Center
G2L["653"].TextYAlignment = Enum.TextYAlignment.Center
G2L["653"].Active = true
G2L["653"].AnchorPoint = Vector2.new(0, 0)
G2L["653"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["653"].BackgroundTransparency = 0
G2L["653"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["653"].BorderSizePixel = 3
G2L["653"].ClipsDescendants = false
G2L["653"].Draggable = false
G2L["653"].Position = UDim2.new(0.084611006, 0, 0.24998188, 0)
G2L["653"].Rotation = 0
G2L["653"].Selectable = true
G2L["653"].SelectionOrder = 0
G2L["653"].Size = UDim2.new(0, 157, 0, 29)
G2L["653"].Visible = true
G2L["653"].ZIndex = 1
G2L["653"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["654"].Name = [[Script]]
G2L["654"].Parent = G2L["653"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["655"].Name = [[LocalScript]]
G2L["655"].Parent = G2L["653"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["656"].Name = [[GetScript]]
G2L["656"].Parent = G2L["653"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["657"].Name = [[TextButton]]
G2L["657"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["657"].Text = [[k00p backdoor]]
G2L["657"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["657"].TextScaled = false
G2L["657"].TextSize = 14
G2L["657"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["657"].TextStrokeTransparency = 1
G2L["657"].TextWrapped = false
G2L["657"].TextXAlignment = Enum.TextXAlignment.Center
G2L["657"].TextYAlignment = Enum.TextYAlignment.Center
G2L["657"].Active = true
G2L["657"].AnchorPoint = Vector2.new(0, 0)
G2L["657"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["657"].BackgroundTransparency = 0
G2L["657"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["657"].BorderSizePixel = 3
G2L["657"].ClipsDescendants = false
G2L["657"].Draggable = false
G2L["657"].Position = UDim2.new(0.39451522, 0, 0.19184944, 0)
G2L["657"].Rotation = 0
G2L["657"].Selectable = true
G2L["657"].SelectionOrder = 0
G2L["657"].Size = UDim2.new(0, 129, 0, 20)
G2L["657"].Visible = true
G2L["657"].ZIndex = 1
G2L["657"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["658"].Name = [[Script]]
G2L["658"].Parent = G2L["657"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["659"].Name = [[LocalScript]]
G2L["659"].Parent = G2L["657"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["660"].Name = [[GetScript]]
G2L["660"].Parent = G2L["657"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["661"].Name = [[TextButton]]
G2L["661"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["661"].Text = [[secret (k00pagui edit)]]
G2L["661"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["661"].TextScaled = false
G2L["661"].TextSize = 14
G2L["661"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["661"].TextStrokeTransparency = 1
G2L["661"].TextWrapped = false
G2L["661"].TextXAlignment = Enum.TextXAlignment.Center
G2L["661"].TextYAlignment = Enum.TextYAlignment.Center
G2L["661"].Active = true
G2L["661"].AnchorPoint = Vector2.new(0, 0)
G2L["661"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["661"].BackgroundTransparency = 0
G2L["661"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["661"].BorderSizePixel = 3
G2L["661"].ClipsDescendants = false
G2L["661"].Draggable = false
G2L["661"].Position = UDim2.new(0.6836525, 0, 0.24893917, 0)
G2L["661"].Rotation = 0
G2L["661"].Selectable = true
G2L["661"].SelectionOrder = 0
G2L["661"].Size = UDim2.new(0, 157, 0, 29)
G2L["661"].Visible = true
G2L["661"].ZIndex = 1
G2L["661"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["662"].Name = [[Script]]
G2L["662"].Parent = G2L["661"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["663"].Name = [[LocalScript]]
G2L["663"].Parent = G2L["661"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["664"].Name = [[GetScript]]
G2L["664"].Parent = G2L["661"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["665"].Name = [[TextButton]]
G2L["665"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["665"].Text = [[bread v6]]
G2L["665"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["665"].TextScaled = false
G2L["665"].TextSize = 14
G2L["665"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["665"].TextStrokeTransparency = 1
G2L["665"].TextWrapped = false
G2L["665"].TextXAlignment = Enum.TextXAlignment.Center
G2L["665"].TextYAlignment = Enum.TextYAlignment.Center
G2L["665"].Active = true
G2L["665"].AnchorPoint = Vector2.new(0, 0)
G2L["665"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["665"].BackgroundTransparency = 0
G2L["665"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["665"].BorderSizePixel = 3
G2L["665"].ClipsDescendants = false
G2L["665"].Draggable = false
G2L["665"].Position = UDim2.new(0.6836525, 0, 0.28274766, 0)
G2L["665"].Rotation = 0
G2L["665"].Selectable = true
G2L["665"].SelectionOrder = 0
G2L["665"].Size = UDim2.new(0, 157, 0, 29)
G2L["665"].Visible = true
G2L["665"].ZIndex = 1
G2L["665"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["666"].Name = [[Script]]
G2L["666"].Parent = G2L["665"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["667"].Name = [[LocalScript]]
G2L["667"].Parent = G2L["665"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["668"].Name = [[GetScript]]
G2L["668"].Parent = G2L["665"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["669"].Name = [[TextButton]]
G2L["669"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["669"].Text = [[IP Log (Fake)]]
G2L["669"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["669"].TextScaled = false
G2L["669"].TextSize = 14
G2L["669"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["669"].TextStrokeTransparency = 1
G2L["669"].TextWrapped = false
G2L["669"].TextXAlignment = Enum.TextXAlignment.Center
G2L["669"].TextYAlignment = Enum.TextYAlignment.Center
G2L["669"].Active = true
G2L["669"].AnchorPoint = Vector2.new(0, 0)
G2L["669"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["669"].BackgroundTransparency = 0
G2L["669"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["669"].BorderSizePixel = 3
G2L["669"].ClipsDescendants = false
G2L["669"].Draggable = false
G2L["669"].Position = UDim2.new(0.3737484, 0, 0.24834602, 0)
G2L["669"].Rotation = 0
G2L["669"].Selectable = true
G2L["669"].SelectionOrder = 0
G2L["669"].Size = UDim2.new(0, 157, 0, 29)
G2L["669"].Visible = true
G2L["669"].ZIndex = 1
G2L["669"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["670"].Name = [[Script]]
G2L["670"].Parent = G2L["669"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["671"].Name = [[LocalScript]]
G2L["671"].Parent = G2L["669"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["672"].Name = [[GetScript]]
G2L["672"].Parent = G2L["669"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["673"].Name = [[TextButton]]
G2L["673"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["673"].Text = [[pass : (teamfatv19easter)]]
G2L["673"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["673"].TextScaled = false
G2L["673"].TextSize = 14
G2L["673"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["673"].TextStrokeTransparency = 1
G2L["673"].TextWrapped = false
G2L["673"].TextXAlignment = Enum.TextXAlignment.Center
G2L["673"].TextYAlignment = Enum.TextYAlignment.Center
G2L["673"].Active = true
G2L["673"].AnchorPoint = Vector2.new(0, 0)
G2L["673"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["673"].BackgroundTransparency = 0
G2L["673"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["673"].BorderSizePixel = 3
G2L["673"].ClipsDescendants = false
G2L["673"].Draggable = false
G2L["673"].Position = UDim2.new(0.084611006, 0, 0.28254172, 0)
G2L["673"].Rotation = 0
G2L["673"].Selectable = true
G2L["673"].SelectionOrder = 0
G2L["673"].Size = UDim2.new(0, 157, 0, 29)
G2L["673"].Visible = true
G2L["673"].ZIndex = 1
G2L["673"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["674"].Name = [[Script]]
G2L["674"].Parent = G2L["673"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["675"].Name = [[LocalScript]]
G2L["675"].Parent = G2L["673"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["676"].Name = [[GetScript]]
G2L["676"].Parent = G2L["673"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["677"].Name = [[TextButton]]
G2L["677"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["677"].Text = [[pass : ussrguiv3k00p]]
G2L["677"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["677"].TextScaled = false
G2L["677"].TextSize = 14
G2L["677"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["677"].TextStrokeTransparency = 1
G2L["677"].TextWrapped = false
G2L["677"].TextXAlignment = Enum.TextXAlignment.Center
G2L["677"].TextYAlignment = Enum.TextYAlignment.Center
G2L["677"].Active = true
G2L["677"].AnchorPoint = Vector2.new(0, 0)
G2L["677"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["677"].BackgroundTransparency = 0
G2L["677"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["677"].BorderSizePixel = 3
G2L["677"].ClipsDescendants = false
G2L["677"].Draggable = false
G2L["677"].Position = UDim2.new(0.084611006, 0, 0.36599267, 0)
G2L["677"].Rotation = 0
G2L["677"].Selectable = true
G2L["677"].SelectionOrder = 0
G2L["677"].Size = UDim2.new(0, 157, 0, 29)
G2L["677"].Visible = true
G2L["677"].ZIndex = 1
G2L["677"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["678"].Name = [[Script]]
G2L["678"].Parent = G2L["677"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["679"].Name = [[LocalScript]]
G2L["679"].Parent = G2L["677"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["680"].Name = [[GetScript]]
G2L["680"].Parent = G2L["677"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["681"].Name = [[TextButton]]
G2L["681"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["681"].Text = [[Nyan GUI]]
G2L["681"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["681"].TextScaled = false
G2L["681"].TextSize = 14
G2L["681"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["681"].TextStrokeTransparency = 1
G2L["681"].TextWrapped = false
G2L["681"].TextXAlignment = Enum.TextXAlignment.Center
G2L["681"].TextYAlignment = Enum.TextYAlignment.Center
G2L["681"].Active = true
G2L["681"].AnchorPoint = Vector2.new(0, 0)
G2L["681"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["681"].BackgroundTransparency = 0
G2L["681"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["681"].BorderSizePixel = 3
G2L["681"].ClipsDescendants = false
G2L["681"].Draggable = false
G2L["681"].Position = UDim2.new(0.3737484, 0, 0.32265875, 0)
G2L["681"].Rotation = 0
G2L["681"].Selectable = true
G2L["681"].SelectionOrder = 0
G2L["681"].Size = UDim2.new(0, 157, 0, 29)
G2L["681"].Visible = true
G2L["681"].ZIndex = 1
G2L["681"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["682"].Name = [[Script]]
G2L["682"].Parent = G2L["681"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["683"].Name = [[LocalScript]]
G2L["683"].Parent = G2L["681"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["684"].Name = [[GetScript]]
G2L["684"].Parent = G2L["681"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["685"].Name = [[TextButton]]
G2L["685"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["685"].Text = [[joore hub]]
G2L["685"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["685"].TextScaled = false
G2L["685"].TextSize = 14
G2L["685"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["685"].TextStrokeTransparency = 1
G2L["685"].TextWrapped = false
G2L["685"].TextXAlignment = Enum.TextXAlignment.Center
G2L["685"].TextYAlignment = Enum.TextYAlignment.Center
G2L["685"].Active = true
G2L["685"].AnchorPoint = Vector2.new(0, 0)
G2L["685"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["685"].BackgroundTransparency = 0
G2L["685"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["685"].BorderSizePixel = 3
G2L["685"].ClipsDescendants = false
G2L["685"].Draggable = false
G2L["685"].Position = UDim2.new(0.6836525, 0, 0.32275766, 0)
G2L["685"].Rotation = 0
G2L["685"].Selectable = true
G2L["685"].SelectionOrder = 0
G2L["685"].Size = UDim2.new(0, 157, 0, 29)
G2L["685"].Visible = true
G2L["685"].ZIndex = 1
G2L["685"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["686"].Name = [[Script]]
G2L["686"].Parent = G2L["685"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["687"].Name = [[LocalScript]]
G2L["687"].Parent = G2L["685"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["688"].Name = [[GetScript]]
G2L["688"].Parent = G2L["685"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["689"].Name = [[TextButton]]
G2L["689"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["689"].Text = [[kaax's undetectable]]
G2L["689"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["689"].TextScaled = false
G2L["689"].TextSize = 14
G2L["689"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["689"].TextStrokeTransparency = 1
G2L["689"].TextWrapped = false
G2L["689"].TextXAlignment = Enum.TextXAlignment.Center
G2L["689"].TextYAlignment = Enum.TextYAlignment.Center
G2L["689"].Active = true
G2L["689"].AnchorPoint = Vector2.new(0, 0)
G2L["689"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["689"].BackgroundTransparency = 0
G2L["689"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["689"].BorderSizePixel = 3
G2L["689"].ClipsDescendants = false
G2L["689"].Draggable = false
G2L["689"].Position = UDim2.new(0.3737484, 0, 0.36599267, 0)
G2L["689"].Rotation = 0
G2L["689"].Selectable = true
G2L["689"].SelectionOrder = 0
G2L["689"].Size = UDim2.new(0, 157, 0, 29)
G2L["689"].Visible = true
G2L["689"].ZIndex = 1
G2L["689"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["690"].Name = [[Script]]
G2L["690"].Parent = G2L["689"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["691"].Name = [[LocalScript]]
G2L["691"].Parent = G2L["689"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["692"].Name = [[GetScript]]
G2L["692"].Parent = G2L["689"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["693"].Name = [[TextButton]]
G2L["693"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["693"].Text = [[BGUI]]
G2L["693"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["693"].TextScaled = false
G2L["693"].TextSize = 14
G2L["693"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["693"].TextStrokeTransparency = 1
G2L["693"].TextWrapped = false
G2L["693"].TextXAlignment = Enum.TextXAlignment.Center
G2L["693"].TextYAlignment = Enum.TextYAlignment.Center
G2L["693"].Active = true
G2L["693"].AnchorPoint = Vector2.new(0, 0)
G2L["693"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["693"].BackgroundTransparency = 0
G2L["693"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["693"].BorderSizePixel = 3
G2L["693"].ClipsDescendants = false
G2L["693"].Draggable = false
G2L["693"].Position = UDim2.new(0.6836525, 0, 0.3668405, 0)
G2L["693"].Rotation = 0
G2L["693"].Selectable = true
G2L["693"].SelectionOrder = 0
G2L["693"].Size = UDim2.new(0, 157, 0, 29)
G2L["693"].Visible = true
G2L["693"].ZIndex = 1
G2L["693"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["694"].Name = [[Script]]
G2L["694"].Parent = G2L["693"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["695"].Name = [[LocalScript]]
G2L["695"].Parent = G2L["693"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["696"].Name = [[GetScript]]
G2L["696"].Parent = G2L["693"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["697"].Name = [[TextButton]]
G2L["697"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["697"].Text = [[Disco]]
G2L["697"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["697"].TextScaled = false
G2L["697"].TextSize = 14
G2L["697"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["697"].TextStrokeTransparency = 1
G2L["697"].TextWrapped = false
G2L["697"].TextXAlignment = Enum.TextXAlignment.Center
G2L["697"].TextYAlignment = Enum.TextYAlignment.Center
G2L["697"].Active = true
G2L["697"].AnchorPoint = Vector2.new(0, 0)
G2L["697"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["697"].BackgroundTransparency = 0
G2L["697"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["697"].BorderSizePixel = 3
G2L["697"].ClipsDescendants = false
G2L["697"].Draggable = false
G2L["697"].Position = UDim2.new(0.084611006, 0, 0.40784925, 0)
G2L["697"].Rotation = 0
G2L["697"].Selectable = true
G2L["697"].SelectionOrder = 0
G2L["697"].Size = UDim2.new(0, 157, 0, 29)
G2L["697"].Visible = true
G2L["697"].ZIndex = 1
G2L["697"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["698"].Name = [[Script]]
G2L["698"].Parent = G2L["697"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["699"].Name = [[TextButton]]
G2L["699"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["699"].Text = [[Kill All]]
G2L["699"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["699"].TextScaled = false
G2L["699"].TextSize = 14
G2L["699"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["699"].TextStrokeTransparency = 1
G2L["699"].TextWrapped = false
G2L["699"].TextXAlignment = Enum.TextXAlignment.Center
G2L["699"].TextYAlignment = Enum.TextYAlignment.Center
G2L["699"].Active = true
G2L["699"].AnchorPoint = Vector2.new(0, 0)
G2L["699"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["699"].BackgroundTransparency = 0
G2L["699"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["699"].BorderSizePixel = 3
G2L["699"].ClipsDescendants = false
G2L["699"].Draggable = false
G2L["699"].Position = UDim2.new(0.37534583, 0, 0.40832928, 0)
G2L["699"].Rotation = 0
G2L["699"].Selectable = true
G2L["699"].SelectionOrder = 0
G2L["699"].Size = UDim2.new(0, 157, 0, 29)
G2L["699"].Visible = true
G2L["699"].ZIndex = 1
G2L["699"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["700"].Name = [[Script]]
G2L["700"].Parent = G2L["699"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton
G2L["701"].Name = [[TextButton]]
G2L["701"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["701"].Text = [[LondoSS]]
G2L["701"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["701"].TextScaled = false
G2L["701"].TextSize = 14
G2L["701"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["701"].TextStrokeTransparency = 1
G2L["701"].TextWrapped = false
G2L["701"].TextXAlignment = Enum.TextXAlignment.Center
G2L["701"].TextYAlignment = Enum.TextYAlignment.Center
G2L["701"].Active = true
G2L["701"].AnchorPoint = Vector2.new(0, 0)
G2L["701"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["701"].BackgroundTransparency = 0
G2L["701"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["701"].BorderSizePixel = 3
G2L["701"].ClipsDescendants = false
G2L["701"].Draggable = false
G2L["701"].Position = UDim2.new(0.6836525, 0, 0.40336716, 0)
G2L["701"].Rotation = 0
G2L["701"].Selectable = true
G2L["701"].SelectionOrder = 0
G2L["701"].Size = UDim2.new(0, 157, 0, 29)
G2L["701"].Visible = true
G2L["701"].ZIndex = 1
G2L["701"].Parent = G2L["600"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.Script
G2L["702"].Name = [[Script]]
G2L["702"].Parent = G2L["701"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
G2L["703"].Name = [[LocalScript]]
G2L["703"].Parent = G2L["701"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.GetScript
G2L["704"].Name = [[GetScript]]
G2L["704"].Parent = G2L["701"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints
G2L["705"].Name = [[hints]]
G2L["705"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints
G2L["706"].Name = [[Hints]]
G2L["706"].Active = false
G2L["706"].AnchorPoint = Vector2.new(0, 0)
G2L["706"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["706"].BackgroundTransparency = 0.25
G2L["706"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["706"].BorderSizePixel = 2
G2L["706"].ClipsDescendants = false
G2L["706"].Draggable = false
G2L["706"].Position = UDim2.new(0.121352226, 0, 0.721607, 0)
G2L["706"].Rotation = 0
G2L["706"].Selectable = false
G2L["706"].SelectionOrder = 0
G2L["706"].Size = UDim2.new(0, 476, 0, 54)
G2L["706"].Visible = true
G2L["706"].ZIndex = 1
G2L["706"].Parent = G2L["705"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.UICorner
G2L["707"].Name = [[UICorner]]
G2L["707"].CornerRadius = UDim.new(0, 200)
G2L["707"].Parent = G2L["706"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.TextLabel
G2L["708"].Name = [[TextLabel]]
G2L["708"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["708"].Text = [[Faces]]
G2L["708"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["708"].TextScaled = true
G2L["708"].TextSize = 14
G2L["708"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["708"].TextStrokeTransparency = 1
G2L["708"].TextWrapped = true
G2L["708"].TextXAlignment = Enum.TextXAlignment.Center
G2L["708"].TextYAlignment = Enum.TextYAlignment.Center
G2L["708"].Active = false
G2L["708"].AnchorPoint = Vector2.new(0, 0)
G2L["708"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["708"].BackgroundTransparency = 1
G2L["708"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["708"].BorderSizePixel = 0
G2L["708"].ClipsDescendants = false
G2L["708"].Draggable = false
G2L["708"].Position = UDim2.new(0.31203005, 0, 0.17307705, 0)
G2L["708"].Rotation = 0
G2L["708"].Selectable = false
G2L["708"].SelectionOrder = 0
G2L["708"].Size = UDim2.new(0, 200, 0, 34)
G2L["708"].Visible = true
G2L["708"].ZIndex = 1
G2L["708"].Parent = G2L["706"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints
G2L["709"].Name = [[Hints]]
G2L["709"].Active = false
G2L["709"].AnchorPoint = Vector2.new(0, 0)
G2L["709"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["709"].BackgroundTransparency = 0.25
G2L["709"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["709"].BorderSizePixel = 2
G2L["709"].ClipsDescendants = false
G2L["709"].Draggable = false
G2L["709"].Position = UDim2.new(0.24679361, 0, 0.0021505377, 0)
G2L["709"].Rotation = 0
G2L["709"].Selectable = false
G2L["709"].SelectionOrder = 0
G2L["709"].Size = UDim2.new(0, 353, 0, 43)
G2L["709"].Visible = true
G2L["709"].ZIndex = 1
G2L["709"].Parent = G2L["705"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.UICorner
G2L["710"].Name = [[UICorner]]
G2L["710"].CornerRadius = UDim.new(0, 200)
G2L["710"].Parent = G2L["709"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.hints.Hints.TextLabel
G2L["711"].Name = [[TextLabel]]
G2L["711"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["711"].Text = [[Scripts / Commands]]
G2L["711"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["711"].TextScaled = true
G2L["711"].TextSize = 14
G2L["711"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["711"].TextStrokeTransparency = 1
G2L["711"].TextWrapped = true
G2L["711"].TextXAlignment = Enum.TextXAlignment.Center
G2L["711"].TextYAlignment = Enum.TextYAlignment.Center
G2L["711"].Active = false
G2L["711"].AnchorPoint = Vector2.new(0, 0)
G2L["711"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["711"].BackgroundTransparency = 1
G2L["711"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["711"].BorderSizePixel = 0
G2L["711"].ClipsDescendants = false
G2L["711"].Draggable = false
G2L["711"].Position = UDim2.new(0.24554807, 0, 0.08163931, 0)
G2L["711"].Rotation = 0
G2L["711"].Selectable = false
G2L["711"].SelectionOrder = 0
G2L["711"].Size = UDim2.new(0, 200, 0, 34)
G2L["711"].Visible = true
G2L["711"].ZIndex = 1
G2L["711"].Parent = G2L["709"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra
G2L["712"].Name = [[Extra]]
G2L["712"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1
G2L["713"].Name = [[Extra1]]
G2L["713"].Active = false
G2L["713"].AnchorPoint = Vector2.new(0, 0)
G2L["713"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["713"].BackgroundTransparency = 0
G2L["713"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["713"].BorderSizePixel = 0
G2L["713"].ClipsDescendants = false
G2L["713"].Draggable = false
G2L["713"].Position = UDim2.new(0.07827476, 0, 0.044014353, 0)
G2L["713"].Rotation = 0
G2L["713"].Selectable = false
G2L["713"].SelectionOrder = 0
G2L["713"].Size = UDim2.new(0, 546, 0, 75)
G2L["713"].Visible = false
G2L["713"].ZIndex = 1
G2L["713"].Parent = G2L["712"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["714"].Name = [[TextButton]]
G2L["714"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["714"].Text = [[crossmod]]
G2L["714"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["714"].TextScaled = false
G2L["714"].TextSize = 14
G2L["714"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["714"].TextStrokeTransparency = 1
G2L["714"].TextWrapped = false
G2L["714"].TextXAlignment = Enum.TextXAlignment.Center
G2L["714"].TextYAlignment = Enum.TextYAlignment.Center
G2L["714"].Active = true
G2L["714"].AnchorPoint = Vector2.new(0, 0)
G2L["714"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["714"].BackgroundTransparency = 0
G2L["714"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["714"].BorderSizePixel = 3
G2L["714"].ClipsDescendants = false
G2L["714"].Draggable = false
G2L["714"].Position = UDim2.new(0.3887866, 0, 0.076220095, 0)
G2L["714"].Rotation = 0
G2L["714"].Selectable = true
G2L["714"].SelectionOrder = 0
G2L["714"].Size = UDim2.new(0, 157, 0, 29)
G2L["714"].Visible = true
G2L["714"].ZIndex = 1
G2L["714"].Parent = G2L["713"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["715"].Name = [[Script]]
G2L["715"].Parent = G2L["714"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["716"].Name = [[LocalScript]]
G2L["716"].Parent = G2L["714"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["717"].Name = [[GetScript]]
G2L["717"].Parent = G2L["714"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["718"].Name = [[TextButton]]
G2L["718"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["718"].Text = [[map]]
G2L["718"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["718"].TextScaled = false
G2L["718"].TextSize = 14
G2L["718"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["718"].TextStrokeTransparency = 1
G2L["718"].TextWrapped = false
G2L["718"].TextXAlignment = Enum.TextXAlignment.Center
G2L["718"].TextYAlignment = Enum.TextYAlignment.Center
G2L["718"].Active = true
G2L["718"].AnchorPoint = Vector2.new(0, 0)
G2L["718"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["718"].BackgroundTransparency = 0
G2L["718"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["718"].BorderSizePixel = 3
G2L["718"].ClipsDescendants = false
G2L["718"].Draggable = false
G2L["718"].Position = UDim2.new(0.08301359, 0, 0.048621196, 0)
G2L["718"].Rotation = 0
G2L["718"].Selectable = true
G2L["718"].SelectionOrder = 0
G2L["718"].Size = UDim2.new(0, 157, 0, 29)
G2L["718"].Visible = true
G2L["718"].ZIndex = 1
G2L["718"].Parent = G2L["713"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["719"].Name = [[Script]]
G2L["719"].Parent = G2L["718"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["720"].Name = [[LocalScript]]
G2L["720"].Parent = G2L["718"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["721"].Name = [[GetScript]]
G2L["721"].Parent = G2L["718"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["722"].Name = [[TextButton]]
G2L["722"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["722"].Text = [[undetected v8]]
G2L["722"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["722"].TextScaled = false
G2L["722"].TextSize = 14
G2L["722"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["722"].TextStrokeTransparency = 1
G2L["722"].TextWrapped = false
G2L["722"].TextXAlignment = Enum.TextXAlignment.Center
G2L["722"].TextYAlignment = Enum.TextYAlignment.Center
G2L["722"].Active = true
G2L["722"].AnchorPoint = Vector2.new(0, 0)
G2L["722"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["722"].BackgroundTransparency = 0
G2L["722"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["722"].BorderSizePixel = 3
G2L["722"].ClipsDescendants = false
G2L["722"].Draggable = false
G2L["722"].Position = UDim2.new(0.38840628, 0, 0.5895341, 0)
G2L["722"].Rotation = 0
G2L["722"].Selectable = true
G2L["722"].SelectionOrder = 0
G2L["722"].Size = UDim2.new(0, 157, 0, 29)
G2L["722"].Visible = true
G2L["722"].ZIndex = 1
G2L["722"].Parent = G2L["713"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["723"].Name = [[Script]]
G2L["723"].Parent = G2L["722"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["724"].Name = [[LocalScript]]
G2L["724"].Parent = G2L["722"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["725"].Name = [[GetScript]]
G2L["725"].Parent = G2L["722"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["726"].Name = [[TextButton]]
G2L["726"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["726"].Text = [[sirhax]]
G2L["726"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["726"].TextScaled = false
G2L["726"].TextSize = 14
G2L["726"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["726"].TextStrokeTransparency = 1
G2L["726"].TextWrapped = false
G2L["726"].TextXAlignment = Enum.TextXAlignment.Center
G2L["726"].TextYAlignment = Enum.TextYAlignment.Center
G2L["726"].Active = true
G2L["726"].AnchorPoint = Vector2.new(0, 0)
G2L["726"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["726"].BackgroundTransparency = 0
G2L["726"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["726"].BorderSizePixel = 3
G2L["726"].ClipsDescendants = false
G2L["726"].Draggable = false
G2L["726"].Position = UDim2.new(0.6772628, 0, 0.048621196, 0)
G2L["726"].Rotation = 0
G2L["726"].Selectable = true
G2L["726"].SelectionOrder = 0
G2L["726"].Size = UDim2.new(0, 157, 0, 29)
G2L["726"].Visible = true
G2L["726"].ZIndex = 1
G2L["726"].Parent = G2L["713"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["727"].Name = [[Script]]
G2L["727"].Parent = G2L["726"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["728"].Name = [[LocalScript]]
G2L["728"].Parent = G2L["726"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["729"].Name = [[GetScript]]
G2L["729"].Parent = G2L["726"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["730"].Name = [[TextButton]]
G2L["730"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["730"].Text = [[grove gui]]
G2L["730"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["730"].TextScaled = false
G2L["730"].TextSize = 14
G2L["730"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["730"].TextStrokeTransparency = 1
G2L["730"].TextWrapped = false
G2L["730"].TextXAlignment = Enum.TextXAlignment.Center
G2L["730"].TextYAlignment = Enum.TextYAlignment.Center
G2L["730"].Active = true
G2L["730"].AnchorPoint = Vector2.new(0, 0)
G2L["730"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["730"].BackgroundTransparency = 0
G2L["730"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["730"].BorderSizePixel = 3
G2L["730"].ClipsDescendants = false
G2L["730"].Draggable = false
G2L["730"].Position = UDim2.new(0.68548393, 0, 0.5881915, 0)
G2L["730"].Rotation = 0
G2L["730"].Selectable = true
G2L["730"].SelectionOrder = 0
G2L["730"].Size = UDim2.new(0, 157, 0, 29)
G2L["730"].Visible = true
G2L["730"].ZIndex = 1
G2L["730"].Parent = G2L["713"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["731"].Name = [[Script]]
G2L["731"].Parent = G2L["730"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["732"].Name = [[LocalScript]]
G2L["732"].Parent = G2L["730"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["733"].Name = [[GetScript]]
G2L["733"].Parent = G2L["730"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["734"].Name = [[TextButton]]
G2L["734"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["734"].Text = [[More]]
G2L["734"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["734"].TextScaled = true
G2L["734"].TextSize = 14
G2L["734"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["734"].TextStrokeTransparency = 1
G2L["734"].TextWrapped = true
G2L["734"].TextXAlignment = Enum.TextXAlignment.Center
G2L["734"].TextYAlignment = Enum.TextYAlignment.Center
G2L["734"].Active = true
G2L["734"].AnchorPoint = Vector2.new(0, 0)
G2L["734"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["734"].BackgroundTransparency = 0
G2L["734"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["734"].BorderSizePixel = 3
G2L["734"].ClipsDescendants = false
G2L["734"].Draggable = false
G2L["734"].Position = UDim2.new(0.43400458, 0, 0.99983907, 0)
G2L["734"].Rotation = 0
G2L["734"].Selectable = true
G2L["734"].SelectionOrder = 0
G2L["734"].Size = UDim2.new(0, 93, 0, 25)
G2L["734"].Visible = true
G2L["734"].ZIndex = 1
G2L["734"].Parent = G2L["713"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["735"].Name = [[LocalScript]]
G2L["735"].Parent = G2L["734"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.UICorner
G2L["736"].Name = [[UICorner]]
G2L["736"].CornerRadius = UDim.new(0, 8)
G2L["736"].Parent = G2L["734"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.UIGradient
G2L["737"].Name = [[UIGradient]]
G2L["737"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["737"].Enabled = true
G2L["737"].Rotation = 0
G2L["737"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["737"].Parent = G2L["734"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton
G2L["738"].Name = [[TextButton]]
G2L["738"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["738"].Text = [[p00g v10 admin panel]]
G2L["738"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["738"].TextScaled = false
G2L["738"].TextSize = 14
G2L["738"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["738"].TextStrokeTransparency = 1
G2L["738"].TextWrapped = false
G2L["738"].TextXAlignment = Enum.TextXAlignment.Center
G2L["738"].TextYAlignment = Enum.TextYAlignment.Center
G2L["738"].Active = true
G2L["738"].AnchorPoint = Vector2.new(0, 0)
G2L["738"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["738"].BackgroundTransparency = 0
G2L["738"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["738"].BorderSizePixel = 3
G2L["738"].ClipsDescendants = false
G2L["738"].Draggable = false
G2L["738"].Position = UDim2.new(0.08499134, 0, 0.60245645, 0)
G2L["738"].Rotation = 0
G2L["738"].Selectable = true
G2L["738"].SelectionOrder = 0
G2L["738"].Size = UDim2.new(0, 157, 0, 29)
G2L["738"].Visible = true
G2L["738"].ZIndex = 1
G2L["738"].Parent = G2L["713"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.Script
G2L["739"].Name = [[Script]]
G2L["739"].Parent = G2L["738"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
G2L["740"].Name = [[LocalScript]]
G2L["740"].Parent = G2L["738"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.GetScript
G2L["741"].Name = [[GetScript]]
G2L["741"].Parent = G2L["738"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2
G2L["742"].Name = [[Extra2]]
G2L["742"].Active = false
G2L["742"].AnchorPoint = Vector2.new(0, 0)
G2L["742"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["742"].BackgroundTransparency = 0
G2L["742"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["742"].BorderSizePixel = 0
G2L["742"].ClipsDescendants = false
G2L["742"].Draggable = false
G2L["742"].Position = UDim2.new(0.07112947, 0, 0.094501525, 0)
G2L["742"].Rotation = 0
G2L["742"].Selectable = false
G2L["742"].SelectionOrder = 0
G2L["742"].Size = UDim2.new(0, 546, 0, 75)
G2L["742"].Visible = true
G2L["742"].ZIndex = 1
G2L["742"].Parent = G2L["712"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["743"].Name = [[TextButton]]
G2L["743"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["743"].Text = [[Back]]
G2L["743"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["743"].TextScaled = true
G2L["743"].TextSize = 14
G2L["743"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["743"].TextStrokeTransparency = 1
G2L["743"].TextWrapped = true
G2L["743"].TextXAlignment = Enum.TextXAlignment.Center
G2L["743"].TextYAlignment = Enum.TextYAlignment.Center
G2L["743"].Active = true
G2L["743"].AnchorPoint = Vector2.new(0, 0)
G2L["743"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["743"].BackgroundTransparency = 0
G2L["743"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["743"].BorderSizePixel = 3
G2L["743"].ClipsDescendants = false
G2L["743"].Draggable = false
G2L["743"].Position = UDim2.new(0.40103754, 0, 0.99983907, 0)
G2L["743"].Rotation = 0
G2L["743"].Selectable = true
G2L["743"].SelectionOrder = 0
G2L["743"].Size = UDim2.new(0, 93, 0, 25)
G2L["743"].Visible = true
G2L["743"].ZIndex = 1
G2L["743"].Parent = G2L["742"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["744"].Name = [[LocalScript]]
G2L["744"].Parent = G2L["743"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.UICorner
G2L["745"].Name = [[UICorner]]
G2L["745"].CornerRadius = UDim.new(0, 8)
G2L["745"].Parent = G2L["743"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.UIGradient
G2L["746"].Name = [[UIGradient]]
G2L["746"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["746"].Enabled = true
G2L["746"].Rotation = 0
G2L["746"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["746"].Parent = G2L["743"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["747"].Name = [[TextButton]]
G2L["747"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["747"].Text = [[Best hub leaked]]
G2L["747"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["747"].TextScaled = true
G2L["747"].TextSize = 14
G2L["747"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["747"].TextStrokeTransparency = 1
G2L["747"].TextWrapped = true
G2L["747"].TextXAlignment = Enum.TextXAlignment.Center
G2L["747"].TextYAlignment = Enum.TextYAlignment.Center
G2L["747"].Active = true
G2L["747"].AnchorPoint = Vector2.new(0, 0)
G2L["747"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["747"].BackgroundTransparency = 0
G2L["747"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["747"].BorderSizePixel = 3
G2L["747"].ClipsDescendants = false
G2L["747"].Draggable = false
G2L["747"].Position = UDim2.new(0.0054945056, 0, 0, 0)
G2L["747"].Rotation = 0
G2L["747"].Selectable = true
G2L["747"].SelectionOrder = 0
G2L["747"].Size = UDim2.new(0, 121, 0, 30)
G2L["747"].Visible = true
G2L["747"].ZIndex = 1
G2L["747"].Parent = G2L["742"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["748"].Name = [[Script]]
G2L["748"].Parent = G2L["747"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["749"].Name = [[LocalScript]]
G2L["749"].Parent = G2L["747"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["750"].Name = [[GetScript]]
G2L["750"].Parent = G2L["747"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["751"].Name = [[TextButton]]
G2L["751"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["751"].Text = [[dreamybull v10]]
G2L["751"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["751"].TextScaled = true
G2L["751"].TextSize = 14
G2L["751"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["751"].TextStrokeTransparency = 1
G2L["751"].TextWrapped = true
G2L["751"].TextXAlignment = Enum.TextXAlignment.Center
G2L["751"].TextYAlignment = Enum.TextYAlignment.Center
G2L["751"].Active = true
G2L["751"].AnchorPoint = Vector2.new(0, 0)
G2L["751"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["751"].BackgroundTransparency = 0
G2L["751"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["751"].BorderSizePixel = 3
G2L["751"].ClipsDescendants = false
G2L["751"].Draggable = false
G2L["751"].Position = UDim2.new(0.24908425, 0, 0, 0)
G2L["751"].Rotation = 0
G2L["751"].Selectable = true
G2L["751"].SelectionOrder = 0
G2L["751"].Size = UDim2.new(0, 121, 0, 30)
G2L["751"].Visible = true
G2L["751"].ZIndex = 1
G2L["751"].Parent = G2L["742"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["752"].Name = [[Script]]
G2L["752"].Parent = G2L["751"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["753"].Name = [[LocalScript]]
G2L["753"].Parent = G2L["751"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["754"].Name = [[GetScript]]
G2L["754"].Parent = G2L["751"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["755"].Name = [[TextButton]]
G2L["755"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["755"].Text = [[Anti-Gay Sky]]
G2L["755"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["755"].TextScaled = true
G2L["755"].TextSize = 14
G2L["755"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["755"].TextStrokeTransparency = 1
G2L["755"].TextWrapped = true
G2L["755"].TextXAlignment = Enum.TextXAlignment.Center
G2L["755"].TextYAlignment = Enum.TextYAlignment.Center
G2L["755"].Active = true
G2L["755"].AnchorPoint = Vector2.new(0, 0)
G2L["755"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["755"].BackgroundTransparency = 0
G2L["755"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["755"].BorderSizePixel = 3
G2L["755"].ClipsDescendants = false
G2L["755"].Draggable = false
G2L["755"].Position = UDim2.new(0.48168498, 0, 0, 0)
G2L["755"].Rotation = 0
G2L["755"].Selectable = true
G2L["755"].SelectionOrder = 0
G2L["755"].Size = UDim2.new(0, 121, 0, 30)
G2L["755"].Visible = true
G2L["755"].ZIndex = 1
G2L["755"].Parent = G2L["742"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["756"].Name = [[Script]]
G2L["756"].Parent = G2L["755"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["757"].Name = [[LocalScript]]
G2L["757"].Parent = G2L["755"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["758"].Name = [[GetScript]]
G2L["758"].Parent = G2L["755"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["759"].Name = [[TextButton]]
G2L["759"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["759"].Text = [[secret by j01taro]]
G2L["759"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["759"].TextScaled = true
G2L["759"].TextSize = 14
G2L["759"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["759"].TextStrokeTransparency = 1
G2L["759"].TextWrapped = true
G2L["759"].TextXAlignment = Enum.TextXAlignment.Center
G2L["759"].TextYAlignment = Enum.TextYAlignment.Center
G2L["759"].Active = true
G2L["759"].AnchorPoint = Vector2.new(0, 0)
G2L["759"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["759"].BackgroundTransparency = 0
G2L["759"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["759"].BorderSizePixel = 3
G2L["759"].ClipsDescendants = false
G2L["759"].Draggable = false
G2L["759"].Position = UDim2.new(0.71428573, 0, 0, 0)
G2L["759"].Rotation = 0
G2L["759"].Selectable = true
G2L["759"].SelectionOrder = 0
G2L["759"].Size = UDim2.new(0, 121, 0, 30)
G2L["759"].Visible = true
G2L["759"].ZIndex = 1
G2L["759"].Parent = G2L["742"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["760"].Name = [[Script]]
G2L["760"].Parent = G2L["759"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["761"].Name = [[LocalScript]]
G2L["761"].Parent = G2L["759"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["762"].Name = [[GetScript]]
G2L["762"].Parent = G2L["759"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["763"].Name = [[TextButton]]
G2L["763"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["763"].Text = [[v4]]
G2L["763"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["763"].TextScaled = true
G2L["763"].TextSize = 14
G2L["763"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["763"].TextStrokeTransparency = 1
G2L["763"].TextWrapped = true
G2L["763"].TextXAlignment = Enum.TextXAlignment.Center
G2L["763"].TextYAlignment = Enum.TextYAlignment.Center
G2L["763"].Active = true
G2L["763"].AnchorPoint = Vector2.new(0, 0)
G2L["763"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["763"].BackgroundTransparency = 0
G2L["763"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["763"].BorderSizePixel = 3
G2L["763"].ClipsDescendants = false
G2L["763"].Draggable = false
G2L["763"].Position = UDim2.new(0.0054945056, 0, 0.42666668, 0)
G2L["763"].Rotation = 0
G2L["763"].Selectable = true
G2L["763"].SelectionOrder = 0
G2L["763"].Size = UDim2.new(0, 121, 0, 30)
G2L["763"].Visible = true
G2L["763"].ZIndex = 1
G2L["763"].Parent = G2L["742"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["764"].Name = [[Script]]
G2L["764"].Parent = G2L["763"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["765"].Name = [[LocalScript]]
G2L["765"].Parent = G2L["763"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["766"].Name = [[GetScript]]
G2L["766"].Parent = G2L["763"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton
G2L["767"].Name = [[TextButton]]
G2L["767"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["767"].Text = [[skeletons undetectable]]
G2L["767"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["767"].TextScaled = true
G2L["767"].TextSize = 14
G2L["767"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["767"].TextStrokeTransparency = 1
G2L["767"].TextWrapped = true
G2L["767"].TextXAlignment = Enum.TextXAlignment.Center
G2L["767"].TextYAlignment = Enum.TextYAlignment.Center
G2L["767"].Active = true
G2L["767"].AnchorPoint = Vector2.new(0, 0)
G2L["767"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["767"].BackgroundTransparency = 0
G2L["767"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["767"].BorderSizePixel = 3
G2L["767"].ClipsDescendants = false
G2L["767"].Draggable = false
G2L["767"].Position = UDim2.new(0.24908425, 0, 0.42666668, 0)
G2L["767"].Rotation = 0
G2L["767"].Selectable = true
G2L["767"].SelectionOrder = 0
G2L["767"].Size = UDim2.new(0, 121, 0, 30)
G2L["767"].Visible = true
G2L["767"].ZIndex = 1
G2L["767"].Parent = G2L["742"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.Script
G2L["768"].Name = [[Script]]
G2L["768"].Parent = G2L["767"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
G2L["769"].Name = [[LocalScript]]
G2L["769"].Parent = G2L["767"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.GetScript
G2L["770"].Name = [[GetScript]]
G2L["770"].Parent = G2L["767"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces
G2L["771"].Name = [[faces]]
G2L["771"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces
G2L["772"].Name = [[Faces]]
G2L["772"].Active = false
G2L["772"].AnchorPoint = Vector2.new(0, 0)
G2L["772"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["772"].BackgroundTransparency = 0
G2L["772"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["772"].BorderSizePixel = 2
G2L["772"].ClipsDescendants = false
G2L["772"].Draggable = false
G2L["772"].Position = UDim2.new(0.031948883, 0, 0.78018373, 0)
G2L["772"].Rotation = 0
G2L["772"].Selectable = false
G2L["772"].SelectionOrder = 0
G2L["772"].Size = UDim2.new(0, 492, 0, 150)
G2L["772"].Visible = false
G2L["772"].ZIndex = 1
G2L["772"].Parent = G2L["771"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["773"].Name = [[TextButton]]
G2L["773"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["773"].Text = [[anonymous]]
G2L["773"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["773"].TextScaled = false
G2L["773"].TextSize = 14
G2L["773"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["773"].TextStrokeTransparency = 1
G2L["773"].TextWrapped = false
G2L["773"].TextXAlignment = Enum.TextXAlignment.Center
G2L["773"].TextYAlignment = Enum.TextYAlignment.Center
G2L["773"].Active = true
G2L["773"].AnchorPoint = Vector2.new(0, 0)
G2L["773"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["773"].BackgroundTransparency = 0
G2L["773"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["773"].BorderSizePixel = 2
G2L["773"].ClipsDescendants = false
G2L["773"].Draggable = false
G2L["773"].Position = UDim2.new(0.59671026, 0, 0.73282653, 0)
G2L["773"].Rotation = 0
G2L["773"].Selectable = true
G2L["773"].SelectionOrder = 0
G2L["773"].Size = UDim2.new(0, 144, 0, 24)
G2L["773"].Visible = true
G2L["773"].ZIndex = 1
G2L["773"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["774"].Name = [[Script]]
G2L["774"].Parent = G2L["773"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["775"].Name = [[TextButton]]
G2L["775"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["775"].Text = [[pennywise]]
G2L["775"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["775"].TextScaled = false
G2L["775"].TextSize = 14
G2L["775"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["775"].TextStrokeTransparency = 1
G2L["775"].TextWrapped = false
G2L["775"].TextXAlignment = Enum.TextXAlignment.Center
G2L["775"].TextYAlignment = Enum.TextYAlignment.Center
G2L["775"].Active = true
G2L["775"].AnchorPoint = Vector2.new(0, 0)
G2L["775"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["775"].BackgroundTransparency = 0
G2L["775"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["775"].BorderSizePixel = 2
G2L["775"].ClipsDescendants = false
G2L["775"].Draggable = false
G2L["775"].Position = UDim2.new(-0.0037598338, 0, 0.7800985, 0)
G2L["775"].Rotation = 0
G2L["775"].Selectable = true
G2L["775"].SelectionOrder = 0
G2L["775"].Size = UDim2.new(0, 144, 0, 24)
G2L["775"].Visible = true
G2L["775"].ZIndex = 1
G2L["775"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["776"].Name = [[Script]]
G2L["776"].Parent = G2L["775"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["777"].Name = [[TextButton]]
G2L["777"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["777"].Text = [[c00lkidd (custom)]]
G2L["777"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["777"].TextScaled = false
G2L["777"].TextSize = 14
G2L["777"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["777"].TextStrokeTransparency = 1
G2L["777"].TextWrapped = false
G2L["777"].TextXAlignment = Enum.TextXAlignment.Center
G2L["777"].TextYAlignment = Enum.TextYAlignment.Center
G2L["777"].Active = true
G2L["777"].AnchorPoint = Vector2.new(0, 0)
G2L["777"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["777"].BackgroundTransparency = 0
G2L["777"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["777"].BorderSizePixel = 2
G2L["777"].ClipsDescendants = false
G2L["777"].Draggable = false
G2L["777"].Position = UDim2.new(0.29095557, 0, 0.7297101, 0)
G2L["777"].Rotation = 0
G2L["777"].Selectable = true
G2L["777"].SelectionOrder = 0
G2L["777"].Size = UDim2.new(0, 144, 0, 24)
G2L["777"].Visible = true
G2L["777"].ZIndex = 1
G2L["777"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["778"].Name = [[Script]]
G2L["778"].Parent = G2L["777"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["779"].Name = [[TextButton]]
G2L["779"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["779"].Text = [[freddy]]
G2L["779"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["779"].TextScaled = false
G2L["779"].TextSize = 14
G2L["779"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["779"].TextStrokeTransparency = 1
G2L["779"].TextWrapped = false
G2L["779"].TextXAlignment = Enum.TextXAlignment.Center
G2L["779"].TextYAlignment = Enum.TextYAlignment.Center
G2L["779"].Active = true
G2L["779"].AnchorPoint = Vector2.new(0, 0)
G2L["779"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["779"].BackgroundTransparency = 0
G2L["779"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["779"].BorderSizePixel = 2
G2L["779"].ClipsDescendants = false
G2L["779"].Draggable = false
G2L["779"].Position = UDim2.new(0.5842944, 0, 0.5277012, 0)
G2L["779"].Rotation = 0
G2L["779"].Selectable = true
G2L["779"].SelectionOrder = 0
G2L["779"].Size = UDim2.new(0, 144, 0, 24)
G2L["779"].Visible = true
G2L["779"].ZIndex = 1
G2L["779"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["780"].Name = [[Script]]
G2L["780"].Parent = G2L["779"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["781"].Name = [[TextButton]]
G2L["781"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["781"].Text = [[nerd]]
G2L["781"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["781"].TextScaled = false
G2L["781"].TextSize = 14
G2L["781"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["781"].TextStrokeTransparency = 1
G2L["781"].TextWrapped = false
G2L["781"].TextXAlignment = Enum.TextXAlignment.Center
G2L["781"].TextYAlignment = Enum.TextYAlignment.Center
G2L["781"].Active = true
G2L["781"].AnchorPoint = Vector2.new(0, 0)
G2L["781"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["781"].BackgroundTransparency = 0
G2L["781"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["781"].BorderSizePixel = 2
G2L["781"].ClipsDescendants = false
G2L["781"].Draggable = false
G2L["781"].Position = UDim2.new(0.2918322, 0, 0.5695998, 0)
G2L["781"].Rotation = 0
G2L["781"].Selectable = true
G2L["781"].SelectionOrder = 0
G2L["781"].Size = UDim2.new(0, 144, 0, 24)
G2L["781"].Visible = true
G2L["781"].ZIndex = 1
G2L["781"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["782"].Name = [[Script]]
G2L["782"].Parent = G2L["781"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["783"].Name = [[TextButton]]
G2L["783"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["783"].Text = [[sigma]]
G2L["783"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["783"].TextScaled = false
G2L["783"].TextSize = 14
G2L["783"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["783"].TextStrokeTransparency = 1
G2L["783"].TextWrapped = false
G2L["783"].TextXAlignment = Enum.TextXAlignment.Center
G2L["783"].TextYAlignment = Enum.TextYAlignment.Center
G2L["783"].Active = true
G2L["783"].AnchorPoint = Vector2.new(0, 0)
G2L["783"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["783"].BackgroundTransparency = 0
G2L["783"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["783"].BorderSizePixel = 2
G2L["783"].ClipsDescendants = false
G2L["783"].Draggable = false
G2L["783"].Position = UDim2.new(-0.0017273135, 0, 0.5732619, 0)
G2L["783"].Rotation = 0
G2L["783"].Selectable = true
G2L["783"].SelectionOrder = 0
G2L["783"].Size = UDim2.new(0, 144, 0, 24)
G2L["783"].Visible = true
G2L["783"].ZIndex = 1
G2L["783"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["784"].Name = [[Script]]
G2L["784"].Parent = G2L["783"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["785"].Name = [[TextButton]]
G2L["785"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["785"].Text = [[dreamybull]]
G2L["785"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["785"].TextScaled = false
G2L["785"].TextSize = 14
G2L["785"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["785"].TextStrokeTransparency = 1
G2L["785"].TextWrapped = false
G2L["785"].TextXAlignment = Enum.TextXAlignment.Center
G2L["785"].TextYAlignment = Enum.TextYAlignment.Center
G2L["785"].Active = true
G2L["785"].AnchorPoint = Vector2.new(0, 0)
G2L["785"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["785"].BackgroundTransparency = 0
G2L["785"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["785"].BorderSizePixel = 2
G2L["785"].ClipsDescendants = false
G2L["785"].Draggable = false
G2L["785"].Position = UDim2.new(0.58226186, 0, 0.366462, 0)
G2L["785"].Rotation = 0
G2L["785"].Selectable = true
G2L["785"].SelectionOrder = 0
G2L["785"].Size = UDim2.new(0, 144, 0, 24)
G2L["785"].Visible = true
G2L["785"].ZIndex = 1
G2L["785"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["786"].Name = [[Script]]
G2L["786"].Parent = G2L["785"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["787"].Name = [[TextButton]]
G2L["787"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["787"].Text = [[C:]]
G2L["787"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["787"].TextScaled = false
G2L["787"].TextSize = 14
G2L["787"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["787"].TextStrokeTransparency = 1
G2L["787"].TextWrapped = false
G2L["787"].TextXAlignment = Enum.TextXAlignment.Center
G2L["787"].TextYAlignment = Enum.TextYAlignment.Center
G2L["787"].Active = true
G2L["787"].AnchorPoint = Vector2.new(0, 0)
G2L["787"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["787"].BackgroundTransparency = 0
G2L["787"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["787"].BorderSizePixel = 2
G2L["787"].ClipsDescendants = false
G2L["787"].Draggable = false
G2L["787"].Position = UDim2.new(-0.002883229, 0, 0.37029135, 0)
G2L["787"].Rotation = 0
G2L["787"].Selectable = true
G2L["787"].SelectionOrder = 0
G2L["787"].Size = UDim2.new(0, 144, 0, 24)
G2L["787"].Visible = true
G2L["787"].ZIndex = 1
G2L["787"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["788"].Name = [[Script]]
G2L["788"].Parent = G2L["787"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["789"].Name = [[TextButton]]
G2L["789"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["789"].Text = [[Biggie Cheese]]
G2L["789"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["789"].TextScaled = false
G2L["789"].TextSize = 14
G2L["789"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["789"].TextStrokeTransparency = 1
G2L["789"].TextWrapped = false
G2L["789"].TextXAlignment = Enum.TextXAlignment.Center
G2L["789"].TextYAlignment = Enum.TextYAlignment.Center
G2L["789"].Active = true
G2L["789"].AnchorPoint = Vector2.new(0, 0)
G2L["789"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["789"].BackgroundTransparency = 0
G2L["789"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["789"].BorderSizePixel = 2
G2L["789"].ClipsDescendants = false
G2L["789"].Draggable = false
G2L["789"].Position = UDim2.new(0.29161146, 0, 0.17679708, 0)
G2L["789"].Rotation = 0
G2L["789"].Selectable = true
G2L["789"].SelectionOrder = 0
G2L["789"].Size = UDim2.new(0, 144, 0, 24)
G2L["789"].Visible = true
G2L["789"].ZIndex = 1
G2L["789"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["790"].Name = [[Script]]
G2L["790"].Parent = G2L["789"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["791"].Name = [[TextButton]]
G2L["791"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["791"].Text = [[pennywise]]
G2L["791"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["791"].TextScaled = false
G2L["791"].TextSize = 14
G2L["791"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["791"].TextStrokeTransparency = 1
G2L["791"].TextWrapped = false
G2L["791"].TextXAlignment = Enum.TextXAlignment.Center
G2L["791"].TextYAlignment = Enum.TextYAlignment.Center
G2L["791"].Active = true
G2L["791"].AnchorPoint = Vector2.new(0, 0)
G2L["791"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["791"].BackgroundTransparency = 0
G2L["791"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["791"].BorderSizePixel = 2
G2L["791"].ClipsDescendants = false
G2L["791"].Draggable = false
G2L["791"].Position = UDim2.new(0.28957894, 0, 0.3728827, 0)
G2L["791"].Rotation = 0
G2L["791"].Selectable = true
G2L["791"].SelectionOrder = 0
G2L["791"].Size = UDim2.new(0, 144, 0, 24)
G2L["791"].Visible = true
G2L["791"].ZIndex = 1
G2L["791"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["792"].Name = [[Script]]
G2L["792"].Parent = G2L["791"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["793"].Name = [[TextButton]]
G2L["793"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["793"].Text = [[Creeper]]
G2L["793"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["793"].TextScaled = false
G2L["793"].TextSize = 14
G2L["793"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["793"].TextStrokeTransparency = 1
G2L["793"].TextWrapped = false
G2L["793"].TextXAlignment = Enum.TextXAlignment.Center
G2L["793"].TextYAlignment = Enum.TextYAlignment.Center
G2L["793"].Active = true
G2L["793"].AnchorPoint = Vector2.new(0, 0)
G2L["793"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["793"].BackgroundTransparency = 0
G2L["793"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["793"].BorderSizePixel = 2
G2L["793"].ClipsDescendants = false
G2L["793"].Draggable = false
G2L["793"].Position = UDim2.new(-0.0008507085, 0, 0.021930136, 0)
G2L["793"].Rotation = 0
G2L["793"].Selectable = true
G2L["793"].SelectionOrder = 0
G2L["793"].Size = UDim2.new(0, 144, 0, 24)
G2L["793"].Visible = true
G2L["793"].ZIndex = 1
G2L["793"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["794"].Name = [[Script]]
G2L["794"].Parent = G2L["793"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["795"].Name = [[TextButton]]
G2L["795"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["795"].Text = [[Scary Maze Ghost]]
G2L["795"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["795"].TextScaled = false
G2L["795"].TextSize = 14
G2L["795"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["795"].TextStrokeTransparency = 1
G2L["795"].TextWrapped = false
G2L["795"].TextXAlignment = Enum.TextXAlignment.Center
G2L["795"].TextYAlignment = Enum.TextYAlignment.Center
G2L["795"].Active = true
G2L["795"].AnchorPoint = Vector2.new(0, 0)
G2L["795"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["795"].BackgroundTransparency = 0
G2L["795"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["795"].BorderSizePixel = 2
G2L["795"].ClipsDescendants = false
G2L["795"].Draggable = false
G2L["795"].Position = UDim2.new(0.2918322, 0, 0.018207805, 0)
G2L["795"].Rotation = 0
G2L["795"].Selectable = true
G2L["795"].SelectionOrder = 0
G2L["795"].Size = UDim2.new(0, 144, 0, 24)
G2L["795"].Visible = true
G2L["795"].ZIndex = 1
G2L["795"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["796"].Name = [[Script]]
G2L["796"].Parent = G2L["795"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["797"].Name = [[TextButton]]
G2L["797"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["797"].Text = [[Jeffy Jeffy]]
G2L["797"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["797"].TextScaled = false
G2L["797"].TextSize = 14
G2L["797"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["797"].TextStrokeTransparency = 1
G2L["797"].TextWrapped = false
G2L["797"].TextXAlignment = Enum.TextXAlignment.Center
G2L["797"].TextYAlignment = Enum.TextYAlignment.Center
G2L["797"].Active = true
G2L["797"].AnchorPoint = Vector2.new(0, 0)
G2L["797"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["797"].BackgroundTransparency = 0
G2L["797"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["797"].BorderSizePixel = 2
G2L["797"].ClipsDescendants = false
G2L["797"].Draggable = false
G2L["797"].Position = UDim2.new(0.58226186, 0, 0.17733602, 0)
G2L["797"].Rotation = 0
G2L["797"].Selectable = true
G2L["797"].SelectionOrder = 0
G2L["797"].Size = UDim2.new(0, 144, 0, 24)
G2L["797"].Visible = true
G2L["797"].ZIndex = 1
G2L["797"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["798"].Name = [[Script]]
G2L["798"].Parent = G2L["797"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["799"].Name = [[TextButton]]
G2L["799"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["799"].Text = [[More]]
G2L["799"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["799"].TextScaled = true
G2L["799"].TextSize = 14
G2L["799"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["799"].TextStrokeTransparency = 1
G2L["799"].TextWrapped = true
G2L["799"].TextXAlignment = Enum.TextXAlignment.Center
G2L["799"].TextYAlignment = Enum.TextYAlignment.Center
G2L["799"].Active = true
G2L["799"].AnchorPoint = Vector2.new(0, 0)
G2L["799"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["799"].BackgroundTransparency = 0
G2L["799"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["799"].BorderSizePixel = 3
G2L["799"].ClipsDescendants = false
G2L["799"].Draggable = false
G2L["799"].Position = UDim2.new(-0.0009545427, 0, 0.99415284, 0)
G2L["799"].Rotation = 0
G2L["799"].Selectable = true
G2L["799"].SelectionOrder = 0
G2L["799"].Size = UDim2.new(0, 113, 0, 17)
G2L["799"].Visible = true
G2L["799"].ZIndex = 1
G2L["799"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.LocalScript
G2L["800"].Name = [[LocalScript]]
G2L["800"].Parent = G2L["799"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.UICorner
G2L["801"].Name = [[UICorner]]
G2L["801"].CornerRadius = UDim.new(0, 8)
G2L["801"].Parent = G2L["799"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.UIGradient
G2L["802"].Name = [[UIGradient]]
G2L["802"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["802"].Enabled = true
G2L["802"].Rotation = 0
G2L["802"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["802"].Parent = G2L["799"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["803"].Name = [[TextButton]]
G2L["803"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["803"].Text = [[jondow6665]]
G2L["803"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["803"].TextScaled = false
G2L["803"].TextSize = 14
G2L["803"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["803"].TextStrokeTransparency = 1
G2L["803"].TextWrapped = false
G2L["803"].TextXAlignment = Enum.TextXAlignment.Center
G2L["803"].TextYAlignment = Enum.TextYAlignment.Center
G2L["803"].Active = true
G2L["803"].AnchorPoint = Vector2.new(0, 0)
G2L["803"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["803"].BackgroundTransparency = 0
G2L["803"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["803"].BorderSizePixel = 2
G2L["803"].ClipsDescendants = false
G2L["803"].Draggable = false
G2L["803"].Position = UDim2.new(-0.0017273135, 0, 0.17652486, 0)
G2L["803"].Rotation = 0
G2L["803"].Selectable = true
G2L["803"].SelectionOrder = 0
G2L["803"].Size = UDim2.new(0, 144, 0, 24)
G2L["803"].Visible = true
G2L["803"].ZIndex = 1
G2L["803"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["804"].Name = [[Script]]
G2L["804"].Parent = G2L["803"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton
G2L["805"].Name = [[TextButton]]
G2L["805"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["805"].Text = [[Jeffy Jeffy]]
G2L["805"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["805"].TextScaled = false
G2L["805"].TextSize = 14
G2L["805"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["805"].TextStrokeTransparency = 1
G2L["805"].TextWrapped = false
G2L["805"].TextXAlignment = Enum.TextXAlignment.Center
G2L["805"].TextYAlignment = Enum.TextYAlignment.Center
G2L["805"].Active = true
G2L["805"].AnchorPoint = Vector2.new(0, 0)
G2L["805"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["805"].BackgroundTransparency = 0
G2L["805"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["805"].BorderSizePixel = 2
G2L["805"].ClipsDescendants = false
G2L["805"].Draggable = false
G2L["805"].Position = UDim2.new(0.5836385, 0, 0.016554158, 0)
G2L["805"].Rotation = 0
G2L["805"].Selectable = true
G2L["805"].SelectionOrder = 0
G2L["805"].Size = UDim2.new(0, 144, 0, 24)
G2L["805"].Visible = true
G2L["805"].ZIndex = 1
G2L["805"].Parent = G2L["772"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.Script
G2L["806"].Name = [[Script]]
G2L["806"].Parent = G2L["805"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2
G2L["807"].Name = [[Faces2]]
G2L["807"].Active = false
G2L["807"].AnchorPoint = Vector2.new(0, 0)
G2L["807"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["807"].BackgroundTransparency = 0
G2L["807"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["807"].BorderSizePixel = 2
G2L["807"].ClipsDescendants = false
G2L["807"].Draggable = false
G2L["807"].Position = UDim2.new(0.11661342, 0, 0.7799719, 0)
G2L["807"].Rotation = 0
G2L["807"].Selectable = false
G2L["807"].SelectionOrder = 0
G2L["807"].Size = UDim2.new(0, 492, 0, 150)
G2L["807"].Visible = true
G2L["807"].ZIndex = 1
G2L["807"].Parent = G2L["771"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton
G2L["808"].Name = [[TextButton]]
G2L["808"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["808"].Text = [[Back]]
G2L["808"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["808"].TextScaled = true
G2L["808"].TextSize = 14
G2L["808"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["808"].TextStrokeTransparency = 1
G2L["808"].TextWrapped = true
G2L["808"].TextXAlignment = Enum.TextXAlignment.Center
G2L["808"].TextYAlignment = Enum.TextYAlignment.Center
G2L["808"].Active = true
G2L["808"].AnchorPoint = Vector2.new(0, 0)
G2L["808"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["808"].BackgroundTransparency = 0
G2L["808"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["808"].BorderSizePixel = 3
G2L["808"].ClipsDescendants = false
G2L["808"].Draggable = false
G2L["808"].Position = UDim2.new(-0.0009545427, 0, 0.99415284, 0)
G2L["808"].Rotation = 0
G2L["808"].Selectable = true
G2L["808"].SelectionOrder = 0
G2L["808"].Size = UDim2.new(0, 113, 0, 17)
G2L["808"].Visible = true
G2L["808"].ZIndex = 1
G2L["808"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton.LocalScript
G2L["809"].Name = [[LocalScript]]
G2L["809"].Parent = G2L["808"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton.UICorner
G2L["810"].Name = [[UICorner]]
G2L["810"].CornerRadius = UDim.new(0, 8)
G2L["810"].Parent = G2L["808"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton.UIGradient
G2L["811"].Name = [[UIGradient]]
G2L["811"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["811"].Enabled = true
G2L["811"].Rotation = 0
G2L["811"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["811"].Parent = G2L["808"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["812"].Name = [[face]]
G2L["812"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["812"].Text = [[Kirby]]
G2L["812"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["812"].TextScaled = false
G2L["812"].TextSize = 14
G2L["812"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["812"].TextStrokeTransparency = 1
G2L["812"].TextWrapped = false
G2L["812"].TextXAlignment = Enum.TextXAlignment.Center
G2L["812"].TextYAlignment = Enum.TextYAlignment.Center
G2L["812"].Active = true
G2L["812"].AnchorPoint = Vector2.new(0, 0)
G2L["812"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["812"].BackgroundTransparency = 0
G2L["812"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["812"].BorderSizePixel = 2
G2L["812"].ClipsDescendants = false
G2L["812"].Draggable = false
G2L["812"].Position = UDim2.new(-0.002883229, 0, 0.019493205, 0)
G2L["812"].Rotation = 0
G2L["812"].Selectable = true
G2L["812"].SelectionOrder = 0
G2L["812"].Size = UDim2.new(0, 144, 0, 24)
G2L["812"].Visible = true
G2L["812"].ZIndex = 1
G2L["812"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["813"].Name = [[Script]]
G2L["813"].Parent = G2L["812"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["814"].Name = [[face]]
G2L["814"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["814"].Text = [[Amogus]]
G2L["814"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["814"].TextScaled = false
G2L["814"].TextSize = 14
G2L["814"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["814"].TextStrokeTransparency = 1
G2L["814"].TextWrapped = false
G2L["814"].TextXAlignment = Enum.TextXAlignment.Center
G2L["814"].TextYAlignment = Enum.TextYAlignment.Center
G2L["814"].Active = true
G2L["814"].AnchorPoint = Vector2.new(0, 0)
G2L["814"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["814"].BackgroundTransparency = 0
G2L["814"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["814"].BorderSizePixel = 2
G2L["814"].ClipsDescendants = false
G2L["814"].Draggable = false
G2L["814"].Position = UDim2.new(0.2897997, 0, 0.019493205, 0)
G2L["814"].Rotation = 0
G2L["814"].Selectable = true
G2L["814"].SelectionOrder = 0
G2L["814"].Size = UDim2.new(0, 144, 0, 24)
G2L["814"].Visible = true
G2L["814"].ZIndex = 1
G2L["814"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["815"].Name = [[Script]]
G2L["815"].Parent = G2L["814"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["816"].Name = [[face]]
G2L["816"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["816"].Text = [[Fire In The Hole]]
G2L["816"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["816"].TextScaled = false
G2L["816"].TextSize = 14
G2L["816"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["816"].TextStrokeTransparency = 1
G2L["816"].TextWrapped = false
G2L["816"].TextXAlignment = Enum.TextXAlignment.Center
G2L["816"].TextYAlignment = Enum.TextYAlignment.Center
G2L["816"].Active = true
G2L["816"].AnchorPoint = Vector2.new(0, 0)
G2L["816"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["816"].BackgroundTransparency = 0
G2L["816"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["816"].BorderSizePixel = 2
G2L["816"].ClipsDescendants = false
G2L["816"].Draggable = false
G2L["816"].Position = UDim2.new(0.58248264, 0, 0.019493205, 0)
G2L["816"].Rotation = 0
G2L["816"].Selectable = true
G2L["816"].SelectionOrder = 0
G2L["816"].Size = UDim2.new(0, 144, 0, 24)
G2L["816"].Visible = true
G2L["816"].ZIndex = 1
G2L["816"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["817"].Name = [[Script]]
G2L["817"].Parent = G2L["816"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["818"].Name = [[face]]
G2L["818"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["818"].Text = [[LTG]]
G2L["818"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["818"].TextScaled = false
G2L["818"].TextSize = 14
G2L["818"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["818"].TextStrokeTransparency = 1
G2L["818"].TextWrapped = false
G2L["818"].TextXAlignment = Enum.TextXAlignment.Center
G2L["818"].TextYAlignment = Enum.TextYAlignment.Center
G2L["818"].Active = true
G2L["818"].AnchorPoint = Vector2.new(0, 0)
G2L["818"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["818"].BackgroundTransparency = 0
G2L["818"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["818"].BorderSizePixel = 2
G2L["818"].ClipsDescendants = false
G2L["818"].Draggable = false
G2L["818"].Position = UDim2.new(-0.002883229, 0, 0.1794932, 0)
G2L["818"].Rotation = 0
G2L["818"].Selectable = true
G2L["818"].SelectionOrder = 0
G2L["818"].Size = UDim2.new(0, 144, 0, 24)
G2L["818"].Visible = true
G2L["818"].ZIndex = 1
G2L["818"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["819"].Name = [[Script]]
G2L["819"].Parent = G2L["818"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["820"].Name = [[face]]
G2L["820"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["820"].Text = [[Kanye]]
G2L["820"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["820"].TextScaled = false
G2L["820"].TextSize = 14
G2L["820"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["820"].TextStrokeTransparency = 1
G2L["820"].TextWrapped = false
G2L["820"].TextXAlignment = Enum.TextXAlignment.Center
G2L["820"].TextYAlignment = Enum.TextYAlignment.Center
G2L["820"].Active = true
G2L["820"].AnchorPoint = Vector2.new(0, 0)
G2L["820"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["820"].BackgroundTransparency = 0
G2L["820"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["820"].BorderSizePixel = 2
G2L["820"].ClipsDescendants = false
G2L["820"].Draggable = false
G2L["820"].Position = UDim2.new(0.2897997, 0, 0.1794932, 0)
G2L["820"].Rotation = 0
G2L["820"].Selectable = true
G2L["820"].SelectionOrder = 0
G2L["820"].Size = UDim2.new(0, 144, 0, 24)
G2L["820"].Visible = true
G2L["820"].ZIndex = 1
G2L["820"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["821"].Name = [[Script]]
G2L["821"].Parent = G2L["820"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["822"].Name = [[face]]
G2L["822"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["822"].Text = [[MrBean]]
G2L["822"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["822"].TextScaled = false
G2L["822"].TextSize = 14
G2L["822"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["822"].TextStrokeTransparency = 1
G2L["822"].TextWrapped = false
G2L["822"].TextXAlignment = Enum.TextXAlignment.Center
G2L["822"].TextYAlignment = Enum.TextYAlignment.Center
G2L["822"].Active = true
G2L["822"].AnchorPoint = Vector2.new(0, 0)
G2L["822"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["822"].BackgroundTransparency = 0
G2L["822"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["822"].BorderSizePixel = 2
G2L["822"].ClipsDescendants = false
G2L["822"].Draggable = false
G2L["822"].Position = UDim2.new(0.58248264, 0, 0.1794932, 0)
G2L["822"].Rotation = 0
G2L["822"].Selectable = true
G2L["822"].SelectionOrder = 0
G2L["822"].Size = UDim2.new(0, 144, 0, 24)
G2L["822"].Visible = true
G2L["822"].ZIndex = 1
G2L["822"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["823"].Name = [[Script]]
G2L["823"].Parent = G2L["822"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["824"].Name = [[face]]
G2L["824"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["824"].Text = [[The Rock]]
G2L["824"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["824"].TextScaled = false
G2L["824"].TextSize = 14
G2L["824"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["824"].TextStrokeTransparency = 1
G2L["824"].TextWrapped = false
G2L["824"].TextXAlignment = Enum.TextXAlignment.Center
G2L["824"].TextYAlignment = Enum.TextYAlignment.Center
G2L["824"].Active = true
G2L["824"].AnchorPoint = Vector2.new(0, 0)
G2L["824"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["824"].BackgroundTransparency = 0
G2L["824"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["824"].BorderSizePixel = 2
G2L["824"].ClipsDescendants = false
G2L["824"].Draggable = false
G2L["824"].Position = UDim2.new(-0.002883229, 0, 0.37282655, 0)
G2L["824"].Rotation = 0
G2L["824"].Selectable = true
G2L["824"].SelectionOrder = 0
G2L["824"].Size = UDim2.new(0, 144, 0, 24)
G2L["824"].Visible = true
G2L["824"].ZIndex = 1
G2L["824"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["825"].Name = [[Script]]
G2L["825"].Parent = G2L["824"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["826"].Name = [[face]]
G2L["826"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["826"].Text = [[Bruh]]
G2L["826"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["826"].TextScaled = false
G2L["826"].TextSize = 14
G2L["826"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["826"].TextStrokeTransparency = 1
G2L["826"].TextWrapped = false
G2L["826"].TextXAlignment = Enum.TextXAlignment.Center
G2L["826"].TextYAlignment = Enum.TextYAlignment.Center
G2L["826"].Active = true
G2L["826"].AnchorPoint = Vector2.new(0, 0)
G2L["826"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["826"].BackgroundTransparency = 0
G2L["826"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["826"].BorderSizePixel = 2
G2L["826"].ClipsDescendants = false
G2L["826"].Draggable = false
G2L["826"].Position = UDim2.new(0.2897997, 0, 0.37282655, 0)
G2L["826"].Rotation = 0
G2L["826"].Selectable = true
G2L["826"].SelectionOrder = 0
G2L["826"].Size = UDim2.new(0, 144, 0, 24)
G2L["826"].Visible = true
G2L["826"].ZIndex = 1
G2L["826"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["827"].Name = [[Script]]
G2L["827"].Parent = G2L["826"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["828"].Name = [[face]]
G2L["828"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["828"].Text = [[Sanic]]
G2L["828"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["828"].TextScaled = false
G2L["828"].TextSize = 14
G2L["828"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["828"].TextStrokeTransparency = 1
G2L["828"].TextWrapped = false
G2L["828"].TextXAlignment = Enum.TextXAlignment.Center
G2L["828"].TextYAlignment = Enum.TextYAlignment.Center
G2L["828"].Active = true
G2L["828"].AnchorPoint = Vector2.new(0, 0)
G2L["828"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["828"].BackgroundTransparency = 0
G2L["828"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["828"].BorderSizePixel = 2
G2L["828"].ClipsDescendants = false
G2L["828"].Draggable = false
G2L["828"].Position = UDim2.new(0.58248264, 0, 0.37282655, 0)
G2L["828"].Rotation = 0
G2L["828"].Selectable = true
G2L["828"].SelectionOrder = 0
G2L["828"].Size = UDim2.new(0, 144, 0, 24)
G2L["828"].Visible = true
G2L["828"].ZIndex = 1
G2L["828"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["829"].Name = [[Script]]
G2L["829"].Parent = G2L["828"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face
G2L["830"].Name = [[face]]
G2L["830"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["830"].Text = [[Big Chungus]]
G2L["830"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["830"].TextScaled = false
G2L["830"].TextSize = 14
G2L["830"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["830"].TextStrokeTransparency = 1
G2L["830"].TextWrapped = false
G2L["830"].TextXAlignment = Enum.TextXAlignment.Center
G2L["830"].TextYAlignment = Enum.TextYAlignment.Center
G2L["830"].Active = true
G2L["830"].AnchorPoint = Vector2.new(0, 0)
G2L["830"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["830"].BackgroundTransparency = 0
G2L["830"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["830"].BorderSizePixel = 2
G2L["830"].ClipsDescendants = false
G2L["830"].Draggable = false
G2L["830"].Position = UDim2.new(-0.0008507085, 0, 0.57282656, 0)
G2L["830"].Rotation = 0
G2L["830"].Selectable = true
G2L["830"].SelectionOrder = 0
G2L["830"].Size = UDim2.new(0, 144, 0, 24)
G2L["830"].Visible = true
G2L["830"].ZIndex = 1
G2L["830"].Parent = G2L["807"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.face.Script
G2L["831"].Name = [[Script]]
G2L["831"].Parent = G2L["830"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.stamp
G2L["832"].Name = [[stamp]]
G2L["832"].Image = [[http://www.roblox.com/asset/?id=16218312317]]
G2L["832"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["832"].ScaleType = Enum.ScaleType.Stretch
G2L["832"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["832"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["832"].Active = false
G2L["832"].AnchorPoint = Vector2.new(0, 0)
G2L["832"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["832"].BackgroundTransparency = 0
G2L["832"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["832"].BorderSizePixel = 0
G2L["832"].ClipsDescendants = false
G2L["832"].Draggable = false
G2L["832"].Position = UDim2.new(0.77830935, 0, 0.9376943, 0)
G2L["832"].Rotation = 25
G2L["832"].Selectable = false
G2L["832"].SelectionOrder = 0
G2L["832"].Size = UDim2.new(0, 59, 0, 53)
G2L["832"].Visible = true
G2L["832"].ZIndex = 1
G2L["832"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.SynapseButton
G2L["833"].Name = [[SynapseButton]]
G2L["833"].Image = [[rbxassetid://11330378074]]
G2L["833"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["833"].ScaleType = Enum.ScaleType.Stretch
G2L["833"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["833"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["833"].Active = true
G2L["833"].AnchorPoint = Vector2.new(0, 0)
G2L["833"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["833"].BackgroundTransparency = 0
G2L["833"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["833"].BorderSizePixel = 0
G2L["833"].ClipsDescendants = false
G2L["833"].Draggable = false
G2L["833"].Position = UDim2.new(-0.001177608, 0, -0.0030081472, 0)
G2L["833"].Rotation = 25
G2L["833"].Selectable = true
G2L["833"].SelectionOrder = 0
G2L["833"].Size = UDim2.new(0, 44, 0, 43)
G2L["833"].Visible = true
G2L["833"].ZIndex = 1
G2L["833"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.SynapseButton.LocalScript
G2L["834"].Name = [[LocalScript]]
G2L["834"].Parent = G2L["833"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.icon
G2L["835"].Name = [[icon]]
G2L["835"].Image = [[rbxassetid://4998267428]]
G2L["835"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["835"].ScaleType = Enum.ScaleType.Stretch
G2L["835"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["835"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["835"].Active = true
G2L["835"].AnchorPoint = Vector2.new(0, 0)
G2L["835"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["835"].BackgroundTransparency = 0
G2L["835"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["835"].BorderSizePixel = 0
G2L["835"].ClipsDescendants = false
G2L["835"].Draggable = false
G2L["835"].Position = UDim2.new(0.92667806, 0, -0.0005410143, 0)
G2L["835"].Rotation = 25
G2L["835"].Selectable = true
G2L["835"].SelectionOrder = 0
G2L["835"].Size = UDim2.new(0, 34, 0, 34)
G2L["835"].Visible = true
G2L["835"].ZIndex = 1
G2L["835"].Parent = G2L["556"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.icon.LocalScript
G2L["836"].Name = [[LocalScript]]
G2L["836"].Parent = G2L["835"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2
G2L["837"].Name = [[Page 2]]
G2L["837"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["837"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["837"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["837"].ScrollBarThickness = 12
G2L["837"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["837"].Active = true
G2L["837"].AnchorPoint = Vector2.new(0, 0)
G2L["837"].BackgroundColor3 = Color3.fromRGB(51.000004, 50.000004, 52.000004)
G2L["837"].BackgroundTransparency = 0
G2L["837"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["837"].BorderSizePixel = 0
G2L["837"].ClipsDescendants = true
G2L["837"].Draggable = false
G2L["837"].Position = UDim2.new(-5.334492E-05, 0, 0.11954465, 0)
G2L["837"].Rotation = 25
G2L["837"].Selectable = true
G2L["837"].SelectionOrder = 0
G2L["837"].Size = UDim2.new(0, 624, 0, 464)
G2L["837"].Visible = false
G2L["837"].ZIndex = 1
G2L["837"].Parent = G2L["554"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back
G2L["838"].Name = [[back]]
G2L["838"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["838"].Text = [[Back]]
G2L["838"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["838"].TextScaled = true
G2L["838"].TextSize = 14
G2L["838"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["838"].TextStrokeTransparency = 1
G2L["838"].TextWrapped = true
G2L["838"].TextXAlignment = Enum.TextXAlignment.Center
G2L["838"].TextYAlignment = Enum.TextYAlignment.Center
G2L["838"].Active = true
G2L["838"].AnchorPoint = Vector2.new(0, 0)
G2L["838"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["838"].BackgroundTransparency = 0
G2L["838"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["838"].BorderSizePixel = 3
G2L["838"].ClipsDescendants = false
G2L["838"].Draggable = false
G2L["838"].Position = UDim2.new(0.47435898, 0, 0.9405098, 0)
G2L["838"].Rotation = 25
G2L["838"].Selectable = true
G2L["838"].SelectionOrder = 0
G2L["838"].Size = UDim2.new(0, 200, 0, 50)
G2L["838"].Visible = true
G2L["838"].ZIndex = 1
G2L["838"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back.LocalScript
G2L["839"].Name = [[LocalScript]]
G2L["839"].Parent = G2L["838"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back.UIGradient
G2L["840"].Name = [[UIGradient]]
G2L["840"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["840"].Enabled = true
G2L["840"].Rotation = 0
G2L["840"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["840"].Parent = G2L["838"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back.UICorner
G2L["841"].Name = [[UICorner]]
G2L["841"].CornerRadius = UDim.new(0, 8)
G2L["841"].Parent = G2L["838"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints
G2L["842"].Name = [[Hints]]
G2L["842"].Active = false
G2L["842"].AnchorPoint = Vector2.new(0, 0)
G2L["842"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["842"].BackgroundTransparency = 0.25
G2L["842"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["842"].BorderSizePixel = 2
G2L["842"].ClipsDescendants = false
G2L["842"].Draggable = false
G2L["842"].Position = UDim2.new(0.111736834, 0, 0.0006538753, 0)
G2L["842"].Rotation = 25
G2L["842"].Selectable = false
G2L["842"].SelectionOrder = 0
G2L["842"].Size = UDim2.new(0, 476, 0, 54)
G2L["842"].Visible = true
G2L["842"].ZIndex = 1
G2L["842"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.UICorner
G2L["843"].Name = [[UICorner]]
G2L["843"].CornerRadius = UDim.new(0, 200)
G2L["843"].Parent = G2L["842"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.TextLabel
G2L["844"].Name = [[TextLabel]]
G2L["844"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["844"].Text = [[Spams]]
G2L["844"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["844"].TextScaled = true
G2L["844"].TextSize = 14
G2L["844"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["844"].TextStrokeTransparency = 1
G2L["844"].TextWrapped = true
G2L["844"].TextXAlignment = Enum.TextXAlignment.Center
G2L["844"].TextYAlignment = Enum.TextYAlignment.Center
G2L["844"].Active = false
G2L["844"].AnchorPoint = Vector2.new(0, 0)
G2L["844"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["844"].BackgroundTransparency = 1
G2L["844"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["844"].BorderSizePixel = 0
G2L["844"].ClipsDescendants = false
G2L["844"].Draggable = false
G2L["844"].Position = UDim2.new(0.28991598, 0, 0, 0)
G2L["844"].Rotation = 0
G2L["844"].Selectable = false
G2L["844"].SelectionOrder = 0
G2L["844"].Size = UDim2.new(0, 200, 0, 50)
G2L["844"].Visible = true
G2L["844"].ZIndex = 1
G2L["844"].Parent = G2L["842"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams
G2L["845"].Name = [[Spams]]
G2L["845"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["846"].Name = [[TextButton]]
G2L["846"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["846"].Text = [[Duolingo Spam]]
G2L["846"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["846"].TextScaled = true
G2L["846"].TextSize = 14
G2L["846"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["846"].TextStrokeTransparency = 1
G2L["846"].TextWrapped = true
G2L["846"].TextXAlignment = Enum.TextXAlignment.Center
G2L["846"].TextYAlignment = Enum.TextYAlignment.Center
G2L["846"].Active = true
G2L["846"].AnchorPoint = Vector2.new(0, 0)
G2L["846"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["846"].BackgroundTransparency = 0
G2L["846"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["846"].BorderSizePixel = 2
G2L["846"].ClipsDescendants = false
G2L["846"].Draggable = false
G2L["846"].Position = UDim2.new(0.032051284, 0, 0.061369993, 0)
G2L["846"].Rotation = 0
G2L["846"].Selectable = true
G2L["846"].SelectionOrder = 0
G2L["846"].Size = UDim2.new(0, 121, 0, 18)
G2L["846"].Visible = true
G2L["846"].ZIndex = 1
G2L["846"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["847"].Name = [[Script]]
G2L["847"].Parent = G2L["846"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["848"].Name = [[Script]]
G2L["848"].Parent = G2L["846"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["849"].Name = [[TextButton]]
G2L["849"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["849"].Text = [[Cartman Spam]]
G2L["849"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["849"].TextScaled = true
G2L["849"].TextSize = 14
G2L["849"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["849"].TextStrokeTransparency = 1
G2L["849"].TextWrapped = true
G2L["849"].TextXAlignment = Enum.TextXAlignment.Center
G2L["849"].TextYAlignment = Enum.TextYAlignment.Center
G2L["849"].Active = true
G2L["849"].AnchorPoint = Vector2.new(0, 0)
G2L["849"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["849"].BackgroundTransparency = 0
G2L["849"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["849"].BorderSizePixel = 2
G2L["849"].ClipsDescendants = false
G2L["849"].Draggable = false
G2L["849"].Position = UDim2.new(0.2596154, 0, 0.061818913, 0)
G2L["849"].Rotation = 0
G2L["849"].Selectable = true
G2L["849"].SelectionOrder = 0
G2L["849"].Size = UDim2.new(0, 121, 0, 18)
G2L["849"].Visible = true
G2L["849"].ZIndex = 1
G2L["849"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["850"].Name = [[Script]]
G2L["850"].Parent = G2L["849"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["851"].Name = [[Script]]
G2L["851"].Parent = G2L["849"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["852"].Name = [[TextButton]]
G2L["852"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["852"].Text = [[Cat Spam]]
G2L["852"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["852"].TextScaled = true
G2L["852"].TextSize = 14
G2L["852"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["852"].TextStrokeTransparency = 1
G2L["852"].TextWrapped = true
G2L["852"].TextXAlignment = Enum.TextXAlignment.Center
G2L["852"].TextYAlignment = Enum.TextYAlignment.Center
G2L["852"].Active = true
G2L["852"].AnchorPoint = Vector2.new(0, 0)
G2L["852"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["852"].BackgroundTransparency = 0
G2L["852"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["852"].BorderSizePixel = 2
G2L["852"].ClipsDescendants = false
G2L["852"].Draggable = false
G2L["852"].Position = UDim2.new(0.48076922, 0, 0.06283865, 0)
G2L["852"].Rotation = 0
G2L["852"].Selectable = true
G2L["852"].SelectionOrder = 0
G2L["852"].Size = UDim2.new(0, 121, 0, 18)
G2L["852"].Visible = true
G2L["852"].ZIndex = 1
G2L["852"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["853"].Name = [[Script]]
G2L["853"].Parent = G2L["852"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["854"].Name = [[Script]]
G2L["854"].Parent = G2L["852"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["855"].Name = [[TextButton]]
G2L["855"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["855"].Text = [[Patrick Spam]]
G2L["855"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["855"].TextScaled = true
G2L["855"].TextSize = 14
G2L["855"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["855"].TextStrokeTransparency = 1
G2L["855"].TextWrapped = true
G2L["855"].TextXAlignment = Enum.TextXAlignment.Center
G2L["855"].TextYAlignment = Enum.TextYAlignment.Center
G2L["855"].Active = true
G2L["855"].AnchorPoint = Vector2.new(0, 0)
G2L["855"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["855"].BackgroundTransparency = 0
G2L["855"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["855"].BorderSizePixel = 2
G2L["855"].ClipsDescendants = false
G2L["855"].Draggable = false
G2L["855"].Position = UDim2.new(0.701923, 0, 0.06299986, 0)
G2L["855"].Rotation = 0
G2L["855"].Selectable = true
G2L["855"].SelectionOrder = 0
G2L["855"].Size = UDim2.new(0, 121, 0, 18)
G2L["855"].Visible = true
G2L["855"].ZIndex = 1
G2L["855"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["856"].Name = [[Script]]
G2L["856"].Parent = G2L["855"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["857"].Name = [[Script]]
G2L["857"].Parent = G2L["855"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["858"].Name = [[TextButton]]
G2L["858"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["858"].Text = [[Poop Spam]]
G2L["858"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["858"].TextScaled = true
G2L["858"].TextSize = 14
G2L["858"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["858"].TextStrokeTransparency = 1
G2L["858"].TextWrapped = true
G2L["858"].TextXAlignment = Enum.TextXAlignment.Center
G2L["858"].TextYAlignment = Enum.TextYAlignment.Center
G2L["858"].Active = true
G2L["858"].AnchorPoint = Vector2.new(0, 0)
G2L["858"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["858"].BackgroundTransparency = 0
G2L["858"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["858"].BorderSizePixel = 2
G2L["858"].ClipsDescendants = false
G2L["858"].Draggable = false
G2L["858"].Position = UDim2.new(0.03205123, 0, 0.08707296, 0)
G2L["858"].Rotation = 0
G2L["858"].Selectable = true
G2L["858"].SelectionOrder = 0
G2L["858"].Size = UDim2.new(0, 121, 0, 18)
G2L["858"].Visible = true
G2L["858"].ZIndex = 1
G2L["858"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["859"].Name = [[Script]]
G2L["859"].Parent = G2L["858"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["860"].Name = [[Script]]
G2L["860"].Parent = G2L["858"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["861"].Name = [[TextButton]]
G2L["861"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["861"].Text = [[Epic Spam]]
G2L["861"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["861"].TextScaled = true
G2L["861"].TextSize = 14
G2L["861"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["861"].TextStrokeTransparency = 1
G2L["861"].TextWrapped = true
G2L["861"].TextXAlignment = Enum.TextXAlignment.Center
G2L["861"].TextYAlignment = Enum.TextYAlignment.Center
G2L["861"].Active = true
G2L["861"].AnchorPoint = Vector2.new(0, 0)
G2L["861"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["861"].BackgroundTransparency = 0
G2L["861"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["861"].BorderSizePixel = 2
G2L["861"].ClipsDescendants = false
G2L["861"].Draggable = false
G2L["861"].Position = UDim2.new(0.25961533, 0, 0.087876946, 0)
G2L["861"].Rotation = 0
G2L["861"].Selectable = true
G2L["861"].SelectionOrder = 0
G2L["861"].Size = UDim2.new(0, 121, 0, 18)
G2L["861"].Visible = true
G2L["861"].ZIndex = 1
G2L["861"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["862"].Name = [[Script]]
G2L["862"].Parent = G2L["861"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["863"].Name = [[Script]]
G2L["863"].Parent = G2L["861"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["864"].Name = [[TextButton]]
G2L["864"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["864"].Text = [[USA Spam]]
G2L["864"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["864"].TextScaled = true
G2L["864"].TextSize = 14
G2L["864"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["864"].TextStrokeTransparency = 1
G2L["864"].TextWrapped = true
G2L["864"].TextXAlignment = Enum.TextXAlignment.Center
G2L["864"].TextYAlignment = Enum.TextYAlignment.Center
G2L["864"].Active = true
G2L["864"].AnchorPoint = Vector2.new(0, 0)
G2L["864"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["864"].BackgroundTransparency = 0
G2L["864"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["864"].BorderSizePixel = 2
G2L["864"].ClipsDescendants = false
G2L["864"].Draggable = false
G2L["864"].Position = UDim2.new(0.4807692, 0, 0.08754806, 0)
G2L["864"].Rotation = 0
G2L["864"].Selectable = true
G2L["864"].SelectionOrder = 0
G2L["864"].Size = UDim2.new(0, 121, 0, 18)
G2L["864"].Visible = true
G2L["864"].ZIndex = 1
G2L["864"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["865"].Name = [[Script]]
G2L["865"].Parent = G2L["864"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["866"].Name = [[Script]]
G2L["866"].Parent = G2L["864"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["867"].Name = [[TextButton]]
G2L["867"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["867"].Text = [[USSR Spam]]
G2L["867"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["867"].TextScaled = true
G2L["867"].TextSize = 14
G2L["867"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["867"].TextStrokeTransparency = 1
G2L["867"].TextWrapped = true
G2L["867"].TextXAlignment = Enum.TextXAlignment.Center
G2L["867"].TextYAlignment = Enum.TextYAlignment.Center
G2L["867"].Active = true
G2L["867"].AnchorPoint = Vector2.new(0, 0)
G2L["867"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["867"].BackgroundTransparency = 0
G2L["867"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["867"].BorderSizePixel = 2
G2L["867"].ClipsDescendants = false
G2L["867"].Draggable = false
G2L["867"].Position = UDim2.new(0.701923, 0, 0.086801, 0)
G2L["867"].Rotation = 0
G2L["867"].Selectable = true
G2L["867"].SelectionOrder = 0
G2L["867"].Size = UDim2.new(0, 121, 0, 18)
G2L["867"].Visible = true
G2L["867"].ZIndex = 1
G2L["867"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["868"].Name = [[Script]]
G2L["868"].Parent = G2L["867"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["869"].Name = [[Script]]
G2L["869"].Parent = G2L["867"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["870"].Name = [[TextButton]]
G2L["870"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["870"].Text = [[Russia Spam]]
G2L["870"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["870"].TextScaled = true
G2L["870"].TextSize = 14
G2L["870"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["870"].TextStrokeTransparency = 1
G2L["870"].TextWrapped = true
G2L["870"].TextXAlignment = Enum.TextXAlignment.Center
G2L["870"].TextYAlignment = Enum.TextYAlignment.Center
G2L["870"].Active = true
G2L["870"].AnchorPoint = Vector2.new(0, 0)
G2L["870"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["870"].BackgroundTransparency = 0
G2L["870"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["870"].BorderSizePixel = 2
G2L["870"].ClipsDescendants = false
G2L["870"].Draggable = false
G2L["870"].Position = UDim2.new(0.03205123, 0, 0.11588985, 0)
G2L["870"].Rotation = 0
G2L["870"].Selectable = true
G2L["870"].SelectionOrder = 0
G2L["870"].Size = UDim2.new(0, 121, 0, 18)
G2L["870"].Visible = true
G2L["870"].ZIndex = 1
G2L["870"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["871"].Name = [[Script]]
G2L["871"].Parent = G2L["870"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["872"].Name = [[Script]]
G2L["872"].Parent = G2L["870"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["873"].Name = [[TextButton]]
G2L["873"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["873"].Text = [[Anime Girl Spam]]
G2L["873"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["873"].TextScaled = true
G2L["873"].TextSize = 14
G2L["873"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["873"].TextStrokeTransparency = 1
G2L["873"].TextWrapped = true
G2L["873"].TextXAlignment = Enum.TextXAlignment.Center
G2L["873"].TextYAlignment = Enum.TextYAlignment.Center
G2L["873"].Active = true
G2L["873"].AnchorPoint = Vector2.new(0, 0)
G2L["873"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["873"].BackgroundTransparency = 0
G2L["873"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["873"].BorderSizePixel = 2
G2L["873"].ClipsDescendants = false
G2L["873"].Draggable = false
G2L["873"].Position = UDim2.new(0.25961533, 0, 0.116698034, 0)
G2L["873"].Rotation = 0
G2L["873"].Selectable = true
G2L["873"].SelectionOrder = 0
G2L["873"].Size = UDim2.new(0, 121, 0, 18)
G2L["873"].Visible = true
G2L["873"].ZIndex = 1
G2L["873"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["874"].Name = [[Script]]
G2L["874"].Parent = G2L["873"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["875"].Name = [[Script]]
G2L["875"].Parent = G2L["873"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["876"].Name = [[TextButton]]
G2L["876"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["876"].Text = [[c00lkidd Spam]]
G2L["876"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["876"].TextScaled = true
G2L["876"].TextSize = 14
G2L["876"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["876"].TextStrokeTransparency = 1
G2L["876"].TextWrapped = true
G2L["876"].TextXAlignment = Enum.TextXAlignment.Center
G2L["876"].TextYAlignment = Enum.TextYAlignment.Center
G2L["876"].Active = true
G2L["876"].AnchorPoint = Vector2.new(0, 0)
G2L["876"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["876"].BackgroundTransparency = 0
G2L["876"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["876"].BorderSizePixel = 2
G2L["876"].ClipsDescendants = false
G2L["876"].Draggable = false
G2L["876"].Position = UDim2.new(0.4807692, 0, 0.11637872, 0)
G2L["876"].Rotation = 0
G2L["876"].Selectable = true
G2L["876"].SelectionOrder = 0
G2L["876"].Size = UDim2.new(0, 121, 0, 18)
G2L["876"].Visible = true
G2L["876"].ZIndex = 1
G2L["876"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["877"].Name = [[Script]]
G2L["877"].Parent = G2L["876"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["878"].Name = [[Script]]
G2L["878"].Parent = G2L["876"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["879"].Name = [[TextButton]]
G2L["879"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["879"].Text = [[Mrbeast Spam]]
G2L["879"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["879"].TextScaled = true
G2L["879"].TextSize = 14
G2L["879"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["879"].TextStrokeTransparency = 1
G2L["879"].TextWrapped = true
G2L["879"].TextXAlignment = Enum.TextXAlignment.Center
G2L["879"].TextYAlignment = Enum.TextYAlignment.Center
G2L["879"].Active = true
G2L["879"].AnchorPoint = Vector2.new(0, 0)
G2L["879"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["879"].BackgroundTransparency = 0
G2L["879"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["879"].BorderSizePixel = 2
G2L["879"].ClipsDescendants = false
G2L["879"].Draggable = false
G2L["879"].Position = UDim2.new(0.701923, 0, 0.11674618, 0)
G2L["879"].Rotation = 0
G2L["879"].Selectable = true
G2L["879"].SelectionOrder = 0
G2L["879"].Size = UDim2.new(0, 121, 0, 18)
G2L["879"].Visible = true
G2L["879"].ZIndex = 1
G2L["879"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["880"].Name = [[Script]]
G2L["880"].Parent = G2L["879"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["881"].Name = [[Script]]
G2L["881"].Parent = G2L["879"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton
G2L["882"].Name = [[TextButton]]
G2L["882"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["882"].Text = [[Shrek Spam]]
G2L["882"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["882"].TextScaled = true
G2L["882"].TextSize = 14
G2L["882"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["882"].TextStrokeTransparency = 1
G2L["882"].TextWrapped = true
G2L["882"].TextXAlignment = Enum.TextXAlignment.Center
G2L["882"].TextYAlignment = Enum.TextYAlignment.Center
G2L["882"].Active = true
G2L["882"].AnchorPoint = Vector2.new(0, 0)
G2L["882"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["882"].BackgroundTransparency = 0
G2L["882"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["882"].BorderSizePixel = 2
G2L["882"].ClipsDescendants = false
G2L["882"].Draggable = false
G2L["882"].Position = UDim2.new(0.03205123, 0, 0.14235017, 0)
G2L["882"].Rotation = 0
G2L["882"].Selectable = true
G2L["882"].SelectionOrder = 0
G2L["882"].Size = UDim2.new(0, 121, 0, 18)
G2L["882"].Visible = true
G2L["882"].ZIndex = 1
G2L["882"].Parent = G2L["845"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["883"].Name = [[Script]]
G2L["883"].Parent = G2L["882"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Spams.TextButton.Script
G2L["884"].Name = [[Script]]
G2L["884"].Parent = G2L["882"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints
G2L["885"].Name = [[Hints]]
G2L["885"].Active = false
G2L["885"].AnchorPoint = Vector2.new(0, 0)
G2L["885"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["885"].BackgroundTransparency = 0.25
G2L["885"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["885"].BorderSizePixel = 2
G2L["885"].ClipsDescendants = false
G2L["885"].Draggable = false
G2L["885"].Position = UDim2.new(0.110134274, 0, 0.17673525, 0)
G2L["885"].Rotation = 25
G2L["885"].Selectable = false
G2L["885"].SelectionOrder = 0
G2L["885"].Size = UDim2.new(0, 476, 0, 54)
G2L["885"].Visible = true
G2L["885"].ZIndex = 1
G2L["885"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.UICorner
G2L["886"].Name = [[UICorner]]
G2L["886"].CornerRadius = UDim.new(0, 200)
G2L["886"].Parent = G2L["885"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Hints.TextLabel
G2L["887"].Name = [[TextLabel]]
G2L["887"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["887"].Text = [[Particles]]
G2L["887"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["887"].TextScaled = true
G2L["887"].TextSize = 14
G2L["887"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["887"].TextStrokeTransparency = 1
G2L["887"].TextWrapped = true
G2L["887"].TextXAlignment = Enum.TextXAlignment.Center
G2L["887"].TextYAlignment = Enum.TextYAlignment.Center
G2L["887"].Active = false
G2L["887"].AnchorPoint = Vector2.new(0, 0)
G2L["887"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["887"].BackgroundTransparency = 1
G2L["887"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["887"].BorderSizePixel = 0
G2L["887"].ClipsDescendants = false
G2L["887"].Draggable = false
G2L["887"].Position = UDim2.new(0.30042017, 0, 0, 0)
G2L["887"].Rotation = 0
G2L["887"].Selectable = false
G2L["887"].SelectionOrder = 0
G2L["887"].Size = UDim2.new(0, 200, 0, 50)
G2L["887"].Visible = true
G2L["887"].ZIndex = 1
G2L["887"].Parent = G2L["885"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles
G2L["888"].Name = [[Particles]]
G2L["888"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["889"].Name = [[TextButton]]
G2L["889"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["889"].Text = [[Trump]]
G2L["889"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["889"].TextScaled = false
G2L["889"].TextSize = 14
G2L["889"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["889"].TextStrokeTransparency = 1
G2L["889"].TextWrapped = false
G2L["889"].TextXAlignment = Enum.TextXAlignment.Center
G2L["889"].TextYAlignment = Enum.TextYAlignment.Center
G2L["889"].Active = true
G2L["889"].AnchorPoint = Vector2.new(0, 0)
G2L["889"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["889"].BackgroundTransparency = 0
G2L["889"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["889"].BorderSizePixel = 3
G2L["889"].ClipsDescendants = false
G2L["889"].Draggable = false
G2L["889"].Position = UDim2.new(0.060897436, 0, 0.25024447, 0)
G2L["889"].Rotation = 0
G2L["889"].Selectable = true
G2L["889"].SelectionOrder = 0
G2L["889"].Size = UDim2.new(0, 114, 0, 34)
G2L["889"].Visible = true
G2L["889"].ZIndex = 1
G2L["889"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["890"].Name = [[Script]]
G2L["890"].Parent = G2L["889"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["891"].Name = [[TextButton]]
G2L["891"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["891"].Text = [[USA]]
G2L["891"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["891"].TextScaled = false
G2L["891"].TextSize = 14
G2L["891"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["891"].TextStrokeTransparency = 1
G2L["891"].TextWrapped = false
G2L["891"].TextXAlignment = Enum.TextXAlignment.Center
G2L["891"].TextYAlignment = Enum.TextYAlignment.Center
G2L["891"].Active = true
G2L["891"].AnchorPoint = Vector2.new(0, 0)
G2L["891"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["891"].BackgroundTransparency = 0
G2L["891"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["891"].BorderSizePixel = 3
G2L["891"].ClipsDescendants = false
G2L["891"].Draggable = false
G2L["891"].Position = UDim2.new(0.27083334, 0, 0.25024447, 0)
G2L["891"].Rotation = 0
G2L["891"].Selectable = true
G2L["891"].SelectionOrder = 0
G2L["891"].Size = UDim2.new(0, 114, 0, 34)
G2L["891"].Visible = true
G2L["891"].ZIndex = 1
G2L["891"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["892"].Name = [[Script]]
G2L["892"].Parent = G2L["891"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["893"].Name = [[TextButton]]
G2L["893"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["893"].Text = [[Spongebob]]
G2L["893"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["893"].TextScaled = false
G2L["893"].TextSize = 14
G2L["893"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["893"].TextStrokeTransparency = 1
G2L["893"].TextWrapped = false
G2L["893"].TextXAlignment = Enum.TextXAlignment.Center
G2L["893"].TextYAlignment = Enum.TextYAlignment.Center
G2L["893"].Active = true
G2L["893"].AnchorPoint = Vector2.new(0, 0)
G2L["893"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["893"].BackgroundTransparency = 0
G2L["893"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["893"].BorderSizePixel = 3
G2L["893"].ClipsDescendants = false
G2L["893"].Draggable = false
G2L["893"].Position = UDim2.new(0.47596154, 0, 0.24947771, 0)
G2L["893"].Rotation = 0
G2L["893"].Selectable = true
G2L["893"].SelectionOrder = 0
G2L["893"].Size = UDim2.new(0, 114, 0, 34)
G2L["893"].Visible = true
G2L["893"].ZIndex = 1
G2L["893"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["894"].Name = [[Script]]
G2L["894"].Parent = G2L["893"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["895"].Name = [[TextButton]]
G2L["895"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["895"].Text = [[Patrick]]
G2L["895"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["895"].TextScaled = false
G2L["895"].TextSize = 14
G2L["895"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["895"].TextStrokeTransparency = 1
G2L["895"].TextWrapped = false
G2L["895"].TextXAlignment = Enum.TextXAlignment.Center
G2L["895"].TextYAlignment = Enum.TextYAlignment.Center
G2L["895"].Active = true
G2L["895"].AnchorPoint = Vector2.new(0, 0)
G2L["895"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["895"].BackgroundTransparency = 0
G2L["895"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["895"].BorderSizePixel = 3
G2L["895"].ClipsDescendants = false
G2L["895"].Draggable = false
G2L["895"].Position = UDim2.new(0.69070506, 0, 0.24989122, 0)
G2L["895"].Rotation = 0
G2L["895"].Selectable = true
G2L["895"].SelectionOrder = 0
G2L["895"].Size = UDim2.new(0, 114, 0, 34)
G2L["895"].Visible = true
G2L["895"].ZIndex = 1
G2L["895"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["896"].Name = [[Script]]
G2L["896"].Parent = G2L["895"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["897"].Name = [[TextButton]]
G2L["897"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["897"].Text = [[Chris]]
G2L["897"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["897"].TextScaled = false
G2L["897"].TextSize = 14
G2L["897"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["897"].TextStrokeTransparency = 1
G2L["897"].TextWrapped = false
G2L["897"].TextXAlignment = Enum.TextXAlignment.Center
G2L["897"].TextYAlignment = Enum.TextYAlignment.Center
G2L["897"].Active = true
G2L["897"].AnchorPoint = Vector2.new(0, 0)
G2L["897"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["897"].BackgroundTransparency = 0
G2L["897"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["897"].BorderSizePixel = 3
G2L["897"].ClipsDescendants = false
G2L["897"].Draggable = false
G2L["897"].Position = UDim2.new(0.06249995, 0, 0.2874684, 0)
G2L["897"].Rotation = 0
G2L["897"].Selectable = true
G2L["897"].SelectionOrder = 0
G2L["897"].Size = UDim2.new(0, 114, 0, 34)
G2L["897"].Visible = true
G2L["897"].ZIndex = 1
G2L["897"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["898"].Name = [[Script]]
G2L["898"].Parent = G2L["897"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["899"].Name = [[TextButton]]
G2L["899"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["899"].Text = [[MR BEAST!]]
G2L["899"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["899"].TextScaled = false
G2L["899"].TextSize = 14
G2L["899"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["899"].TextStrokeTransparency = 1
G2L["899"].TextWrapped = false
G2L["899"].TextXAlignment = Enum.TextXAlignment.Center
G2L["899"].TextYAlignment = Enum.TextYAlignment.Center
G2L["899"].Active = true
G2L["899"].AnchorPoint = Vector2.new(0, 0)
G2L["899"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["899"].BackgroundTransparency = 0
G2L["899"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["899"].BorderSizePixel = 3
G2L["899"].ClipsDescendants = false
G2L["899"].Draggable = false
G2L["899"].Position = UDim2.new(0.27083328, 0, 0.2887752, 0)
G2L["899"].Rotation = 0
G2L["899"].Selectable = true
G2L["899"].SelectionOrder = 0
G2L["899"].Size = UDim2.new(0, 114, 0, 34)
G2L["899"].Visible = true
G2L["899"].ZIndex = 1
G2L["899"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["900"].Name = [[Script]]
G2L["900"].Parent = G2L["899"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["901"].Name = [[TextButton]]
G2L["901"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["901"].Text = [[jondow6665]]
G2L["901"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["901"].TextScaled = false
G2L["901"].TextSize = 14
G2L["901"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["901"].TextStrokeTransparency = 1
G2L["901"].TextWrapped = false
G2L["901"].TextXAlignment = Enum.TextXAlignment.Center
G2L["901"].TextYAlignment = Enum.TextYAlignment.Center
G2L["901"].Active = true
G2L["901"].AnchorPoint = Vector2.new(0, 0)
G2L["901"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["901"].BackgroundTransparency = 0
G2L["901"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["901"].BorderSizePixel = 3
G2L["901"].ClipsDescendants = false
G2L["901"].Draggable = false
G2L["901"].Position = UDim2.new(0.47596148, 0, 0.28743336, 0)
G2L["901"].Rotation = 0
G2L["901"].Selectable = true
G2L["901"].SelectionOrder = 0
G2L["901"].Size = UDim2.new(0, 114, 0, 34)
G2L["901"].Visible = true
G2L["901"].ZIndex = 1
G2L["901"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["902"].Name = [[Script]]
G2L["902"].Parent = G2L["901"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["903"].Name = [[TextButton]]
G2L["903"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["903"].Text = [[USSR]]
G2L["903"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["903"].TextScaled = false
G2L["903"].TextSize = 14
G2L["903"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["903"].TextStrokeTransparency = 1
G2L["903"].TextWrapped = false
G2L["903"].TextXAlignment = Enum.TextXAlignment.Center
G2L["903"].TextYAlignment = Enum.TextYAlignment.Center
G2L["903"].Active = true
G2L["903"].AnchorPoint = Vector2.new(0, 0)
G2L["903"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["903"].BackgroundTransparency = 0
G2L["903"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["903"].BorderSizePixel = 3
G2L["903"].ClipsDescendants = false
G2L["903"].Draggable = false
G2L["903"].Position = UDim2.new(0.69070506, 0, 0.28863657, 0)
G2L["903"].Rotation = 0
G2L["903"].Selectable = true
G2L["903"].SelectionOrder = 0
G2L["903"].Size = UDim2.new(0, 114, 0, 34)
G2L["903"].Visible = true
G2L["903"].ZIndex = 1
G2L["903"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["904"].Name = [[Script]]
G2L["904"].Parent = G2L["903"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["905"].Name = [[TextButton]]
G2L["905"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["905"].Text = [[Popcat]]
G2L["905"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["905"].TextScaled = false
G2L["905"].TextSize = 14
G2L["905"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["905"].TextStrokeTransparency = 1
G2L["905"].TextWrapped = false
G2L["905"].TextXAlignment = Enum.TextXAlignment.Center
G2L["905"].TextYAlignment = Enum.TextYAlignment.Center
G2L["905"].Active = true
G2L["905"].AnchorPoint = Vector2.new(0, 0)
G2L["905"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["905"].BackgroundTransparency = 0
G2L["905"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["905"].BorderSizePixel = 3
G2L["905"].ClipsDescendants = false
G2L["905"].Draggable = false
G2L["905"].Position = UDim2.new(0.69070506, 0, 0.32160115, 0)
G2L["905"].Rotation = 0
G2L["905"].Selectable = true
G2L["905"].SelectionOrder = 0
G2L["905"].Size = UDim2.new(0, 114, 0, 34)
G2L["905"].Visible = true
G2L["905"].ZIndex = 1
G2L["905"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["906"].Name = [[Script]]
G2L["906"].Parent = G2L["905"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["907"].Name = [[TextButton]]
G2L["907"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["907"].Text = [[Floppa]]
G2L["907"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["907"].TextScaled = false
G2L["907"].TextSize = 14
G2L["907"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["907"].TextStrokeTransparency = 1
G2L["907"].TextWrapped = false
G2L["907"].TextXAlignment = Enum.TextXAlignment.Center
G2L["907"].TextYAlignment = Enum.TextYAlignment.Center
G2L["907"].Active = true
G2L["907"].AnchorPoint = Vector2.new(0, 0)
G2L["907"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["907"].BackgroundTransparency = 0
G2L["907"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["907"].BorderSizePixel = 3
G2L["907"].ClipsDescendants = false
G2L["907"].Draggable = false
G2L["907"].Position = UDim2.new(0.47596148, 0, 0.32320607, 0)
G2L["907"].Rotation = 0
G2L["907"].Selectable = true
G2L["907"].SelectionOrder = 0
G2L["907"].Size = UDim2.new(0, 114, 0, 34)
G2L["907"].Visible = true
G2L["907"].ZIndex = 1
G2L["907"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["908"].Name = [[Script]]
G2L["908"].Parent = G2L["907"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["909"].Name = [[TextButton]]
G2L["909"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["909"].Text = [[Doritos]]
G2L["909"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["909"].TextScaled = false
G2L["909"].TextSize = 14
G2L["909"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["909"].TextStrokeTransparency = 1
G2L["909"].TextWrapped = false
G2L["909"].TextXAlignment = Enum.TextXAlignment.Center
G2L["909"].TextYAlignment = Enum.TextYAlignment.Center
G2L["909"].Active = true
G2L["909"].AnchorPoint = Vector2.new(0, 0)
G2L["909"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["909"].BackgroundTransparency = 0
G2L["909"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["909"].BorderSizePixel = 3
G2L["909"].ClipsDescendants = false
G2L["909"].Draggable = false
G2L["909"].Position = UDim2.new(0.27083328, 0, 0.32254133, 0)
G2L["909"].Rotation = 0
G2L["909"].Selectable = true
G2L["909"].SelectionOrder = 0
G2L["909"].Size = UDim2.new(0, 114, 0, 34)
G2L["909"].Visible = true
G2L["909"].ZIndex = 1
G2L["909"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["910"].Name = [[Script]]
G2L["910"].Parent = G2L["909"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["911"].Name = [[TextButton]]
G2L["911"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["911"].Text = [[MLG]]
G2L["911"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["911"].TextScaled = false
G2L["911"].TextSize = 14
G2L["911"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["911"].TextStrokeTransparency = 1
G2L["911"].TextWrapped = false
G2L["911"].TextXAlignment = Enum.TextXAlignment.Center
G2L["911"].TextYAlignment = Enum.TextYAlignment.Center
G2L["911"].Active = true
G2L["911"].AnchorPoint = Vector2.new(0, 0)
G2L["911"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["911"].BackgroundTransparency = 0
G2L["911"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["911"].BorderSizePixel = 3
G2L["911"].ClipsDescendants = false
G2L["911"].Draggable = false
G2L["911"].Position = UDim2.new(0.06249995, 0, 0.32318655, 0)
G2L["911"].Rotation = 0
G2L["911"].Selectable = true
G2L["911"].SelectionOrder = 0
G2L["911"].Size = UDim2.new(0, 114, 0, 34)
G2L["911"].Visible = true
G2L["911"].ZIndex = 1
G2L["911"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["912"].Name = [[Script]]
G2L["912"].Parent = G2L["911"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["913"].Name = [[TextButton]]
G2L["913"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["913"].Text = [[Creeper]]
G2L["913"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["913"].TextScaled = false
G2L["913"].TextSize = 14
G2L["913"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["913"].TextStrokeTransparency = 1
G2L["913"].TextWrapped = false
G2L["913"].TextXAlignment = Enum.TextXAlignment.Center
G2L["913"].TextYAlignment = Enum.TextYAlignment.Center
G2L["913"].Active = true
G2L["913"].AnchorPoint = Vector2.new(0, 0)
G2L["913"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["913"].BackgroundTransparency = 0
G2L["913"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["913"].BorderSizePixel = 3
G2L["913"].ClipsDescendants = false
G2L["913"].Draggable = false
G2L["913"].Position = UDim2.new(0.69070506, 0, 0.3612901, 0)
G2L["913"].Rotation = 0
G2L["913"].Selectable = true
G2L["913"].SelectionOrder = 0
G2L["913"].Size = UDim2.new(0, 114, 0, 34)
G2L["913"].Visible = true
G2L["913"].ZIndex = 1
G2L["913"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["914"].Name = [[Script]]
G2L["914"].Parent = G2L["913"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["915"].Name = [[TextButton]]
G2L["915"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["915"].Text = [[666]]
G2L["915"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["915"].TextScaled = false
G2L["915"].TextSize = 14
G2L["915"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["915"].TextStrokeTransparency = 1
G2L["915"].TextWrapped = false
G2L["915"].TextXAlignment = Enum.TextXAlignment.Center
G2L["915"].TextYAlignment = Enum.TextYAlignment.Center
G2L["915"].Active = true
G2L["915"].AnchorPoint = Vector2.new(0, 0)
G2L["915"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["915"].BackgroundTransparency = 0
G2L["915"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["915"].BorderSizePixel = 3
G2L["915"].ClipsDescendants = false
G2L["915"].Draggable = false
G2L["915"].Position = UDim2.new(0.47596148, 0, 0.36027125, 0)
G2L["915"].Rotation = 0
G2L["915"].Selectable = true
G2L["915"].SelectionOrder = 0
G2L["915"].Size = UDim2.new(0, 114, 0, 34)
G2L["915"].Visible = true
G2L["915"].ZIndex = 1
G2L["915"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["916"].Name = [[Script]]
G2L["916"].Parent = G2L["915"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["917"].Name = [[TextButton]]
G2L["917"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["917"].Text = [[c00lkidd]]
G2L["917"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["917"].TextScaled = false
G2L["917"].TextSize = 14
G2L["917"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["917"].TextStrokeTransparency = 1
G2L["917"].TextWrapped = false
G2L["917"].TextXAlignment = Enum.TextXAlignment.Center
G2L["917"].TextYAlignment = Enum.TextYAlignment.Center
G2L["917"].Active = true
G2L["917"].AnchorPoint = Vector2.new(0, 0)
G2L["917"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["917"].BackgroundTransparency = 0
G2L["917"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["917"].BorderSizePixel = 3
G2L["917"].ClipsDescendants = false
G2L["917"].Draggable = false
G2L["917"].Position = UDim2.new(0.27083328, 0, 0.3614782, 0)
G2L["917"].Rotation = 0
G2L["917"].Selectable = true
G2L["917"].SelectionOrder = 0
G2L["917"].Size = UDim2.new(0, 114, 0, 34)
G2L["917"].Visible = true
G2L["917"].ZIndex = 1
G2L["917"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["918"].Name = [[Script]]
G2L["918"].Parent = G2L["917"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton
G2L["919"].Name = [[TextButton]]
G2L["919"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["919"].Text = [[Poop]]
G2L["919"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["919"].TextScaled = false
G2L["919"].TextSize = 14
G2L["919"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["919"].TextStrokeTransparency = 1
G2L["919"].TextWrapped = false
G2L["919"].TextXAlignment = Enum.TextXAlignment.Center
G2L["919"].TextYAlignment = Enum.TextYAlignment.Center
G2L["919"].Active = true
G2L["919"].AnchorPoint = Vector2.new(0, 0)
G2L["919"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["919"].BackgroundTransparency = 0
G2L["919"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["919"].BorderSizePixel = 3
G2L["919"].ClipsDescendants = false
G2L["919"].Draggable = false
G2L["919"].Position = UDim2.new(0.06249995, 0, 0.36206475, 0)
G2L["919"].Rotation = 0
G2L["919"].Selectable = true
G2L["919"].SelectionOrder = 0
G2L["919"].Size = UDim2.new(0, 114, 0, 34)
G2L["919"].Visible = true
G2L["919"].ZIndex = 1
G2L["919"].Parent = G2L["888"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.Particles.TextButton.Script
G2L["920"].Name = [[Script]]
G2L["920"].Parent = G2L["919"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits
G2L["921"].Name = [[credits]]
G2L["921"].Active = false
G2L["921"].AnchorPoint = Vector2.new(0, 0)
G2L["921"].BackgroundColor3 = Color3.fromRGB(176, 176, 176)
G2L["921"].BackgroundTransparency = 1
G2L["921"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["921"].BorderSizePixel = 0
G2L["921"].ClipsDescendants = false
G2L["921"].Draggable = false
G2L["921"].Position = UDim2.new(0.34978673, 0, 0.32632598, 0)
G2L["921"].Rotation = 25
G2L["921"].Selectable = false
G2L["921"].SelectionOrder = 0
G2L["921"].Size = UDim2.new(0, 275, 0, 165)
G2L["921"].Visible = true
G2L["921"].ZIndex = 1
G2L["921"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.ImageLabel
G2L["922"].Name = [[ImageLabel]]
G2L["922"].Image = [[rbxassetid://14801957514]]
G2L["922"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["922"].ScaleType = Enum.ScaleType.Stretch
G2L["922"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["922"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["922"].Active = false
G2L["922"].AnchorPoint = Vector2.new(0, 0)
G2L["922"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["922"].BackgroundTransparency = 0
G2L["922"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["922"].BorderSizePixel = 0
G2L["922"].ClipsDescendants = false
G2L["922"].Draggable = false
G2L["922"].Position = UDim2.new(-0.78909093, 0, 3.9939394, 0)
G2L["922"].Rotation = 0
G2L["922"].Selectable = false
G2L["922"].SelectionOrder = 0
G2L["922"].Size = UDim2.new(0, 52, 0, 48)
G2L["922"].Visible = true
G2L["922"].ZIndex = 1
G2L["922"].Parent = G2L["921"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.ImageLabel.UIGradient
G2L["923"].Name = [[UIGradient]]
G2L["923"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(235, 8, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(235, 8, 0))};
G2L["923"].Enabled = true
G2L["923"].Rotation = 0
G2L["923"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["923"].Parent = G2L["922"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel
G2L["924"].Name = [[TextLabel]]
G2L["924"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["924"].Text = [[made by mario.ss & enitytest]]
G2L["924"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["924"].TextScaled = true
G2L["924"].TextSize = 42
G2L["924"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["924"].TextStrokeTransparency = 1
G2L["924"].TextWrapped = true
G2L["924"].TextXAlignment = Enum.TextXAlignment.Center
G2L["924"].TextYAlignment = Enum.TextYAlignment.Center
G2L["924"].Active = false
G2L["924"].AnchorPoint = Vector2.new(0, 0)
G2L["924"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["924"].BackgroundTransparency = 0
G2L["924"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["924"].BorderSizePixel = 2
G2L["924"].ClipsDescendants = false
G2L["924"].Draggable = false
G2L["924"].Position = UDim2.new(-0.60354406, 0, 4.084246, 0)
G2L["924"].Rotation = 0
G2L["924"].Selectable = false
G2L["924"].SelectionOrder = 0
G2L["924"].Size = UDim2.new(0, 194, 0, 25)
G2L["924"].Visible = true
G2L["924"].ZIndex = 1
G2L["924"].Parent = G2L["921"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel.LocalScript
G2L["925"].Name = [[LocalScript]]
G2L["925"].Parent = G2L["924"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel.UICorner
G2L["926"].Name = [[UICorner]]
G2L["926"].CornerRadius = UDim.new(0, 200)
G2L["926"].Parent = G2L["924"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits
G2L["927"].Name = [[credits]]
G2L["927"].Active = false
G2L["927"].AnchorPoint = Vector2.new(0, 0)
G2L["927"].BackgroundColor3 = Color3.fromRGB(130, 15.000001, 0)
G2L["927"].BackgroundTransparency = 0
G2L["927"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["927"].BorderSizePixel = 2
G2L["927"].ClipsDescendants = false
G2L["927"].Draggable = false
G2L["927"].Position = UDim2.new(0.25801286, 0, 0.4308354, 0)
G2L["927"].Rotation = 25
G2L["927"].Selectable = false
G2L["927"].SelectionOrder = 0
G2L["927"].Size = UDim2.new(0, 320, 0, 357)
G2L["927"].Visible = true
G2L["927"].ZIndex = 1
G2L["927"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.ImageLabel
G2L["928"].Name = [[ImageLabel]]
G2L["928"].Image = [[rbxassetid://14726883331]]
G2L["928"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["928"].ScaleType = Enum.ScaleType.Stretch
G2L["928"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["928"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["928"].Active = false
G2L["928"].AnchorPoint = Vector2.new(0, 0)
G2L["928"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["928"].BackgroundTransparency = 0
G2L["928"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["928"].BorderSizePixel = 0
G2L["928"].ClipsDescendants = false
G2L["928"].Draggable = false
G2L["928"].Position = UDim2.new(0.025, 0, 0.02409897, 0)
G2L["928"].Rotation = 0
G2L["928"].Selectable = false
G2L["928"].SelectionOrder = 0
G2L["928"].Size = UDim2.new(0, 305, 0, 343)
G2L["928"].Visible = true
G2L["928"].ZIndex = 1
G2L["928"].Parent = G2L["927"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.title
G2L["929"].Name = [[title]]
G2L["929"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["929"].Text = [[Credits]]
G2L["929"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["929"].TextScaled = true
G2L["929"].TextSize = 14
G2L["929"].TextStrokeColor3 = Color3.fromRGB(190, 0, 0)
G2L["929"].TextStrokeTransparency = 1
G2L["929"].TextWrapped = true
G2L["929"].TextXAlignment = Enum.TextXAlignment.Center
G2L["929"].TextYAlignment = Enum.TextYAlignment.Center
G2L["929"].Active = false
G2L["929"].AnchorPoint = Vector2.new(0, 0)
G2L["929"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["929"].BackgroundTransparency = 1
G2L["929"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["929"].BorderSizePixel = 0
G2L["929"].ClipsDescendants = false
G2L["929"].Draggable = false
G2L["929"].Position = UDim2.new(0.046875, 0, 0.022127466, 0)
G2L["929"].Rotation = 0
G2L["929"].Selectable = false
G2L["929"].SelectionOrder = 0
G2L["929"].Size = UDim2.new(0, 298, 0, 58)
G2L["929"].Visible = true
G2L["929"].ZIndex = 1
G2L["929"].Parent = G2L["927"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel
G2L["930"].Name = [[TextLabel]]
G2L["930"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["930"].Text = [[g00byd0lan/hark, jondow6665,enitytest (owner), c0em3r (map require script) ]]
G2L["930"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["930"].TextScaled = true
G2L["930"].TextSize = 14
G2L["930"].TextStrokeColor3 = Color3.fromRGB(190, 0, 0)
G2L["930"].TextStrokeTransparency = 1
G2L["930"].TextWrapped = true
G2L["930"].TextXAlignment = Enum.TextXAlignment.Center
G2L["930"].TextYAlignment = Enum.TextYAlignment.Center
G2L["930"].Active = false
G2L["930"].AnchorPoint = Vector2.new(0, 0)
G2L["930"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["930"].BackgroundTransparency = 1
G2L["930"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["930"].BorderSizePixel = 0
G2L["930"].ClipsDescendants = false
G2L["930"].Draggable = false
G2L["930"].Position = UDim2.new(0.09375, 0, 0.26358384, 0)
G2L["930"].Rotation = 0
G2L["930"].Selectable = false
G2L["930"].SelectionOrder = 0
G2L["930"].Size = UDim2.new(0, 268, 0, 72)
G2L["930"].Visible = true
G2L["930"].ZIndex = 1
G2L["930"].Parent = G2L["927"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg
G2L["931"].Name = [[pg]]
G2L["931"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["931"].Text = [[Next Page]]
G2L["931"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["931"].TextScaled = true
G2L["931"].TextSize = 14
G2L["931"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["931"].TextStrokeTransparency = 1
G2L["931"].TextWrapped = true
G2L["931"].TextXAlignment = Enum.TextXAlignment.Center
G2L["931"].TextYAlignment = Enum.TextYAlignment.Center
G2L["931"].Active = true
G2L["931"].AnchorPoint = Vector2.new(0, 0)
G2L["931"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["931"].BackgroundTransparency = 0
G2L["931"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["931"].BorderSizePixel = 3
G2L["931"].ClipsDescendants = false
G2L["931"].Draggable = false
G2L["931"].Position = UDim2.new(0.47435898, 0, 0.8842614, 0)
G2L["931"].Rotation = 25
G2L["931"].Selectable = true
G2L["931"].SelectionOrder = 0
G2L["931"].Size = UDim2.new(0, 200, 0, 50)
G2L["931"].Visible = true
G2L["931"].ZIndex = 1
G2L["931"].Parent = G2L["837"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg.LocalScript
G2L["932"].Name = [[LocalScript]]
G2L["932"].Parent = G2L["931"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg.UIGradient
G2L["933"].Name = [[UIGradient]]
G2L["933"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["933"].Enabled = true
G2L["933"].Rotation = 0
G2L["933"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["933"].Parent = G2L["931"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg.UICorner
G2L["934"].Name = [[UICorner]]
G2L["934"].CornerRadius = UDim.new(0, 8)
G2L["934"].Parent = G2L["931"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3
G2L["935"].Name = [[Page 3]]
G2L["935"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["935"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["935"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["935"].ScrollBarThickness = 12
G2L["935"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["935"].Active = true
G2L["935"].AnchorPoint = Vector2.new(0, 0)
G2L["935"].BackgroundColor3 = Color3.fromRGB(51.000004, 50.000004, 52.000004)
G2L["935"].BackgroundTransparency = 0
G2L["935"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["935"].BorderSizePixel = 0
G2L["935"].ClipsDescendants = true
G2L["935"].Draggable = false
G2L["935"].Position = UDim2.new(-0.0019999966, 0, 0.10436427, 0)
G2L["935"].Rotation = 25
G2L["935"].Selectable = true
G2L["935"].SelectionOrder = 0
G2L["935"].Size = UDim2.new(0, 627, 0, 475)
G2L["935"].Visible = false
G2L["935"].ZIndex = 1
G2L["935"].Parent = G2L["554"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["936"].Name = [[Hints]]
G2L["936"].Active = false
G2L["936"].AnchorPoint = Vector2.new(0, 0)
G2L["936"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["936"].BackgroundTransparency = 0.25
G2L["936"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["936"].BorderSizePixel = 2
G2L["936"].ClipsDescendants = false
G2L["936"].Draggable = false
G2L["936"].Position = UDim2.new(0.11013426, 0, 0.0005960709, 0)
G2L["936"].Rotation = 25
G2L["936"].Selectable = false
G2L["936"].SelectionOrder = 0
G2L["936"].Size = UDim2.new(0, 476, 0, 54)
G2L["936"].Visible = true
G2L["936"].ZIndex = 1
G2L["936"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["937"].Name = [[UICorner]]
G2L["937"].CornerRadius = UDim.new(0, 200)
G2L["937"].Parent = G2L["936"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["938"].Name = [[TextLabel]]
G2L["938"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["938"].Text = [[ISIS ]]
G2L["938"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["938"].TextScaled = true
G2L["938"].TextSize = 14
G2L["938"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["938"].TextStrokeTransparency = 1
G2L["938"].TextWrapped = true
G2L["938"].TextXAlignment = Enum.TextXAlignment.Center
G2L["938"].TextYAlignment = Enum.TextYAlignment.Center
G2L["938"].Active = false
G2L["938"].AnchorPoint = Vector2.new(0, 0)
G2L["938"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["938"].BackgroundTransparency = 1
G2L["938"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["938"].BorderSizePixel = 0
G2L["938"].ClipsDescendants = false
G2L["938"].Draggable = false
G2L["938"].Position = UDim2.new(0.30042017, 0, 0, 0)
G2L["938"].Rotation = 0
G2L["938"].Selectable = false
G2L["938"].SelectionOrder = 0
G2L["938"].Size = UDim2.new(0, 200, 0, 50)
G2L["938"].Visible = true
G2L["938"].ZIndex = 1
G2L["938"].Parent = G2L["936"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy
G2L["939"].Name = [[goofy]]
G2L["939"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["939"].Text = [[Jumpscare]]
G2L["939"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["939"].TextScaled = true
G2L["939"].TextSize = 14
G2L["939"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["939"].TextStrokeTransparency = 1
G2L["939"].TextWrapped = true
G2L["939"].TextXAlignment = Enum.TextXAlignment.Center
G2L["939"].TextYAlignment = Enum.TextYAlignment.Center
G2L["939"].Active = true
G2L["939"].AnchorPoint = Vector2.new(0, 0)
G2L["939"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["939"].BackgroundTransparency = 0
G2L["939"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["939"].BorderSizePixel = 3
G2L["939"].ClipsDescendants = false
G2L["939"].Draggable = false
G2L["939"].Position = UDim2.new(0.10882691, 0, 0.056648057, 0)
G2L["939"].Rotation = 25
G2L["939"].Selectable = true
G2L["939"].SelectionOrder = 0
G2L["939"].Size = UDim2.new(0, 179, 0, 28)
G2L["939"].Visible = true
G2L["939"].ZIndex = 1
G2L["939"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["940"].Name = [[Script]]
G2L["940"].Parent = G2L["939"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back
G2L["941"].Name = [[back]]
G2L["941"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["941"].Text = [[Back]]
G2L["941"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["941"].TextScaled = true
G2L["941"].TextSize = 14
G2L["941"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["941"].TextStrokeTransparency = 1
G2L["941"].TextWrapped = true
G2L["941"].TextXAlignment = Enum.TextXAlignment.Center
G2L["941"].TextYAlignment = Enum.TextYAlignment.Center
G2L["941"].Active = true
G2L["941"].AnchorPoint = Vector2.new(0, 0)
G2L["941"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["941"].BackgroundTransparency = 0
G2L["941"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["941"].BorderSizePixel = 3
G2L["941"].ClipsDescendants = false
G2L["941"].Draggable = false
G2L["941"].Position = UDim2.new(0.47435898, 0, 0.9405098, 0)
G2L["941"].Rotation = 25
G2L["941"].Selectable = true
G2L["941"].SelectionOrder = 0
G2L["941"].Size = UDim2.new(0, 200, 0, 50)
G2L["941"].Visible = true
G2L["941"].ZIndex = 1
G2L["941"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back.LocalScript
G2L["942"].Name = [[LocalScript]]
G2L["942"].Parent = G2L["941"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back.UIGradient
G2L["943"].Name = [[UIGradient]]
G2L["943"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["943"].Enabled = true
G2L["943"].Rotation = 0
G2L["943"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["943"].Parent = G2L["941"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back.UICorner
G2L["944"].Name = [[UICorner]]
G2L["944"].CornerRadius = UDim.new(0, 8)
G2L["944"].Parent = G2L["941"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy
G2L["945"].Name = [[goofy]]
G2L["945"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["945"].Text = [[ Particles]]
G2L["945"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["945"].TextScaled = false
G2L["945"].TextSize = 28
G2L["945"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["945"].TextStrokeTransparency = 1
G2L["945"].TextWrapped = false
G2L["945"].TextXAlignment = Enum.TextXAlignment.Center
G2L["945"].TextYAlignment = Enum.TextYAlignment.Center
G2L["945"].Active = true
G2L["945"].AnchorPoint = Vector2.new(0, 0)
G2L["945"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["945"].BackgroundTransparency = 0
G2L["945"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["945"].BorderSizePixel = 5
G2L["945"].ClipsDescendants = false
G2L["945"].Draggable = false
G2L["945"].Position = UDim2.new(0.40079, 0, 0.050266884, 0)
G2L["945"].Rotation = 25
G2L["945"].Selectable = true
G2L["945"].SelectionOrder = 0
G2L["945"].Size = UDim2.new(0, 162, 0, 38)
G2L["945"].Visible = true
G2L["945"].ZIndex = 1
G2L["945"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["946"].Name = [[Script]]
G2L["946"].Parent = G2L["945"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy
G2L["947"].Name = [[goofy]]
G2L["947"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["947"].Text = [[Decal Spam]]
G2L["947"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["947"].TextScaled = false
G2L["947"].TextSize = 28
G2L["947"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["947"].TextStrokeTransparency = 1
G2L["947"].TextWrapped = false
G2L["947"].TextXAlignment = Enum.TextXAlignment.Center
G2L["947"].TextYAlignment = Enum.TextYAlignment.Center
G2L["947"].Active = true
G2L["947"].AnchorPoint = Vector2.new(0, 0)
G2L["947"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["947"].BackgroundTransparency = 0
G2L["947"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["947"].BorderSizePixel = 5
G2L["947"].ClipsDescendants = false
G2L["947"].Draggable = false
G2L["947"].Position = UDim2.new(0.66124016, 0, 0.051612657, 0)
G2L["947"].Rotation = 25
G2L["947"].Selectable = true
G2L["947"].SelectionOrder = 0
G2L["947"].Size = UDim2.new(0, 142, 0, 38)
G2L["947"].Visible = true
G2L["947"].ZIndex = 1
G2L["947"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["948"].Name = [[Script]]
G2L["948"].Parent = G2L["947"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.goofy.Script
G2L["949"].Name = [[Script]]
G2L["949"].Parent = G2L["947"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits
G2L["950"].Name = [[credits]]
G2L["950"].Active = false
G2L["950"].AnchorPoint = Vector2.new(0, 0)
G2L["950"].BackgroundColor3 = Color3.fromRGB(176, 176, 176)
G2L["950"].BackgroundTransparency = 1
G2L["950"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["950"].BorderSizePixel = 0
G2L["950"].ClipsDescendants = false
G2L["950"].Draggable = false
G2L["950"].Position = UDim2.new(0.34978673, 0, 0.32632598, 0)
G2L["950"].Rotation = 25
G2L["950"].Selectable = false
G2L["950"].SelectionOrder = 0
G2L["950"].Size = UDim2.new(0, 275, 0, 165)
G2L["950"].Visible = true
G2L["950"].ZIndex = 1
G2L["950"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.ImageLabel
G2L["951"].Name = [[ImageLabel]]
G2L["951"].Image = [[rbxassetid://14801957514]]
G2L["951"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["951"].ScaleType = Enum.ScaleType.Stretch
G2L["951"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["951"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["951"].Active = false
G2L["951"].AnchorPoint = Vector2.new(0, 0)
G2L["951"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["951"].BackgroundTransparency = 0
G2L["951"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["951"].BorderSizePixel = 0
G2L["951"].ClipsDescendants = false
G2L["951"].Draggable = false
G2L["951"].Position = UDim2.new(-0.78909093, 0, 3.9939394, 0)
G2L["951"].Rotation = 0
G2L["951"].Selectable = false
G2L["951"].SelectionOrder = 0
G2L["951"].Size = UDim2.new(0, 52, 0, 48)
G2L["951"].Visible = true
G2L["951"].ZIndex = 1
G2L["951"].Parent = G2L["950"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.ImageLabel.UIGradient
G2L["952"].Name = [[UIGradient]]
G2L["952"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(235, 8, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(235, 8, 0))};
G2L["952"].Enabled = true
G2L["952"].Rotation = 0
G2L["952"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["952"].Parent = G2L["951"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.TextLabel
G2L["953"].Name = [[TextLabel]]
G2L["953"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["953"].Text = [[made by mario.ss & enitytest]]
G2L["953"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["953"].TextScaled = true
G2L["953"].TextSize = 42
G2L["953"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["953"].TextStrokeTransparency = 1
G2L["953"].TextWrapped = true
G2L["953"].TextXAlignment = Enum.TextXAlignment.Center
G2L["953"].TextYAlignment = Enum.TextYAlignment.Center
G2L["953"].Active = false
G2L["953"].AnchorPoint = Vector2.new(0, 0)
G2L["953"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["953"].BackgroundTransparency = 0
G2L["953"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["953"].BorderSizePixel = 2
G2L["953"].ClipsDescendants = false
G2L["953"].Draggable = false
G2L["953"].Position = UDim2.new(-0.60354406, 0, 4.084246, 0)
G2L["953"].Rotation = 0
G2L["953"].Selectable = false
G2L["953"].SelectionOrder = 0
G2L["953"].Size = UDim2.new(0, 194, 0, 25)
G2L["953"].Visible = true
G2L["953"].ZIndex = 1
G2L["953"].Parent = G2L["950"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.TextLabel.LocalScript
G2L["954"].Name = [[LocalScript]]
G2L["954"].Parent = G2L["953"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.TextLabel.UICorner
G2L["955"].Name = [[UICorner]]
G2L["955"].CornerRadius = UDim.new(0, 200)
G2L["955"].Parent = G2L["953"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["956"].Name = [[Hints]]
G2L["956"].Active = false
G2L["956"].AnchorPoint = Vector2.new(0, 0)
G2L["956"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["956"].BackgroundTransparency = 0.25
G2L["956"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["956"].BorderSizePixel = 2
G2L["956"].ClipsDescendants = false
G2L["956"].Draggable = false
G2L["956"].Position = UDim2.new(0.11013426, 0, 0.09535954, 0)
G2L["956"].Rotation = 25
G2L["956"].Selectable = false
G2L["956"].SelectionOrder = 0
G2L["956"].Size = UDim2.new(0, 476, 0, 54)
G2L["956"].Visible = true
G2L["956"].ZIndex = 1
G2L["956"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["957"].Name = [[UICorner]]
G2L["957"].CornerRadius = UDim.new(0, 200)
G2L["957"].Parent = G2L["956"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["958"].Name = [[TextLabel]]
G2L["958"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["958"].Text = [[Map]]
G2L["958"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["958"].TextScaled = true
G2L["958"].TextSize = 14
G2L["958"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["958"].TextStrokeTransparency = 1
G2L["958"].TextWrapped = true
G2L["958"].TextXAlignment = Enum.TextXAlignment.Center
G2L["958"].TextYAlignment = Enum.TextYAlignment.Center
G2L["958"].Active = false
G2L["958"].AnchorPoint = Vector2.new(0, 0)
G2L["958"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["958"].BackgroundTransparency = 1
G2L["958"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["958"].BorderSizePixel = 0
G2L["958"].ClipsDescendants = false
G2L["958"].Draggable = false
G2L["958"].Position = UDim2.new(0.29831934, 0, 0.037037037, 0)
G2L["958"].Rotation = 0
G2L["958"].Selectable = false
G2L["958"].SelectionOrder = 0
G2L["958"].Size = UDim2.new(0, 200, 0, 50)
G2L["958"].Visible = true
G2L["958"].ZIndex = 1
G2L["958"].Parent = G2L["956"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map
G2L["959"].Name = [[Map]]
G2L["959"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["959"].Text = [[EnityTest's Desert]]
G2L["959"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["959"].TextScaled = true
G2L["959"].TextSize = 14
G2L["959"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["959"].TextStrokeTransparency = 1
G2L["959"].TextWrapped = true
G2L["959"].TextXAlignment = Enum.TextXAlignment.Center
G2L["959"].TextYAlignment = Enum.TextYAlignment.Center
G2L["959"].Active = true
G2L["959"].AnchorPoint = Vector2.new(0, 0)
G2L["959"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["959"].BackgroundTransparency = 0
G2L["959"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["959"].BorderSizePixel = 3
G2L["959"].ClipsDescendants = false
G2L["959"].Draggable = false
G2L["959"].Position = UDim2.new(0.13810588, 0, 0.15087786, 0)
G2L["959"].Rotation = 25
G2L["959"].Selectable = true
G2L["959"].SelectionOrder = 0
G2L["959"].Size = UDim2.new(0, 124, 0, 41)
G2L["959"].Visible = true
G2L["959"].ZIndex = 1
G2L["959"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map.Script
G2L["960"].Name = [[Script]]
G2L["960"].Parent = G2L["959"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map.GetScript
G2L["961"].Name = [[GetScript]]
G2L["961"].Parent = G2L["959"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map.LocalScript
G2L["962"].Name = [[LocalScript]]
G2L["962"].Parent = G2L["959"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map
G2L["963"].Name = [[map]]
G2L["963"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["963"].Text = [[MeepCity 5 (g00byd0lan relam)]]
G2L["963"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["963"].TextScaled = false
G2L["963"].TextSize = 14
G2L["963"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["963"].TextStrokeTransparency = 1
G2L["963"].TextWrapped = true
G2L["963"].TextXAlignment = Enum.TextXAlignment.Center
G2L["963"].TextYAlignment = Enum.TextYAlignment.Center
G2L["963"].Active = true
G2L["963"].AnchorPoint = Vector2.new(0, 0)
G2L["963"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["963"].BackgroundTransparency = 0
G2L["963"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["963"].BorderSizePixel = 0
G2L["963"].ClipsDescendants = false
G2L["963"].Draggable = false
G2L["963"].Position = UDim2.new(0.35994124, 0, 0.15121825, 0)
G2L["963"].Rotation = 25
G2L["963"].Selectable = true
G2L["963"].SelectionOrder = 0
G2L["963"].Size = UDim2.new(0, 124, 0, 41)
G2L["963"].Visible = true
G2L["963"].ZIndex = 1
G2L["963"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["964"].Name = [[Frame]]
G2L["964"].Active = false
G2L["964"].AnchorPoint = Vector2.new(0, 0)
G2L["964"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["964"].BackgroundTransparency = 0
G2L["964"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["964"].BorderSizePixel = 0
G2L["964"].ClipsDescendants = false
G2L["964"].Draggable = false
G2L["964"].Position = UDim2.new(0, 0, 0, 0)
G2L["964"].Rotation = 0
G2L["964"].Selectable = false
G2L["964"].SelectionOrder = 0
G2L["964"].Size = UDim2.new(0, 122, 0, 6)
G2L["964"].Visible = true
G2L["964"].ZIndex = 1
G2L["964"].Parent = G2L["963"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["965"].Name = [[Frame]]
G2L["965"].Active = false
G2L["965"].AnchorPoint = Vector2.new(0, 0)
G2L["965"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["965"].BackgroundTransparency = 0
G2L["965"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["965"].BorderSizePixel = 0
G2L["965"].ClipsDescendants = false
G2L["965"].Draggable = false
G2L["965"].Position = UDim2.new(0, 0, 1.8608279E-07, 0)
G2L["965"].Rotation = 0
G2L["965"].Selectable = false
G2L["965"].SelectionOrder = 0
G2L["965"].Size = UDim2.new(0, 6, 0, 42)
G2L["965"].Visible = true
G2L["965"].ZIndex = 1
G2L["965"].Parent = G2L["963"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["966"].Name = [[Frame]]
G2L["966"].Active = false
G2L["966"].AnchorPoint = Vector2.new(0, 0)
G2L["966"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["966"].BackgroundTransparency = 0
G2L["966"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["966"].BorderSizePixel = 0
G2L["966"].ClipsDescendants = false
G2L["966"].Draggable = false
G2L["966"].Position = UDim2.new(0.9433963, 0, 0, 0)
G2L["966"].Rotation = 0
G2L["966"].Selectable = false
G2L["966"].SelectionOrder = 0
G2L["966"].Size = UDim2.new(0, 7, 0, 42)
G2L["966"].Visible = true
G2L["966"].ZIndex = 1
G2L["966"].Parent = G2L["963"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Frame
G2L["967"].Name = [[Frame]]
G2L["967"].Active = false
G2L["967"].AnchorPoint = Vector2.new(0, 0)
G2L["967"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["967"].BackgroundTransparency = 0
G2L["967"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["967"].BorderSizePixel = 0
G2L["967"].ClipsDescendants = false
G2L["967"].Draggable = false
G2L["967"].Position = UDim2.new(0, 0, 1, 0)
G2L["967"].Rotation = 0
G2L["967"].Selectable = false
G2L["967"].SelectionOrder = 0
G2L["967"].Size = UDim2.new(0, 124, 0, 6)
G2L["967"].Visible = true
G2L["967"].ZIndex = 1
G2L["967"].Parent = G2L["963"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.Script
G2L["968"].Name = [[Script]]
G2L["968"].Parent = G2L["963"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.GetScript
G2L["969"].Name = [[GetScript]]
G2L["969"].Parent = G2L["963"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.LocalScript
G2L["970"].Name = [[LocalScript]]
G2L["970"].Parent = G2L["963"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["971"].Name = [[Hints]]
G2L["971"].Active = false
G2L["971"].AnchorPoint = Vector2.new(0, 0)
G2L["971"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["971"].BackgroundTransparency = 0.25
G2L["971"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["971"].BorderSizePixel = 2
G2L["971"].ClipsDescendants = false
G2L["971"].Draggable = false
G2L["971"].Position = UDim2.new(0.10852654, 0, 0.23613025, 0)
G2L["971"].Rotation = 25
G2L["971"].Selectable = false
G2L["971"].SelectionOrder = 0
G2L["971"].Size = UDim2.new(0, 476, 0, 54)
G2L["971"].Visible = true
G2L["971"].ZIndex = 1
G2L["971"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["972"].Name = [[UICorner]]
G2L["972"].CornerRadius = UDim.new(0, 200)
G2L["972"].Parent = G2L["971"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["973"].Name = [[TextLabel]]
G2L["973"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["973"].Text = [[Toadroast's]]
G2L["973"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["973"].TextScaled = true
G2L["973"].TextSize = 14
G2L["973"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["973"].TextStrokeTransparency = 1
G2L["973"].TextWrapped = true
G2L["973"].TextXAlignment = Enum.TextXAlignment.Center
G2L["973"].TextYAlignment = Enum.TextYAlignment.Center
G2L["973"].Active = false
G2L["973"].AnchorPoint = Vector2.new(0, 0)
G2L["973"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["973"].BackgroundTransparency = 1
G2L["973"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["973"].BorderSizePixel = 0
G2L["973"].ClipsDescendants = false
G2L["973"].Draggable = false
G2L["973"].Position = UDim2.new(0.28991598, 0, 0.074074075, 0)
G2L["973"].Rotation = 0
G2L["973"].Selectable = false
G2L["973"].SelectionOrder = 0
G2L["973"].Size = UDim2.new(0, 200, 0, 50)
G2L["973"].Visible = true
G2L["973"].ZIndex = 1
G2L["973"].Parent = G2L["971"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton
G2L["974"].Name = [[TextButton]]
G2L["974"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["974"].Text = [[tr1]]
G2L["974"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["974"].TextScaled = true
G2L["974"].TextSize = 14
G2L["974"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["974"].TextStrokeTransparency = 1
G2L["974"].TextWrapped = true
G2L["974"].TextXAlignment = Enum.TextXAlignment.Center
G2L["974"].TextYAlignment = Enum.TextYAlignment.Center
G2L["974"].Active = true
G2L["974"].AnchorPoint = Vector2.new(0, 0)
G2L["974"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["974"].BackgroundTransparency = 0
G2L["974"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["974"].BorderSizePixel = 3
G2L["974"].ClipsDescendants = false
G2L["974"].Draggable = false
G2L["974"].Position = UDim2.new(-0.073529415, 0, 0.9985272, 0)
G2L["974"].Rotation = 0
G2L["974"].Selectable = true
G2L["974"].SelectionOrder = 0
G2L["974"].Size = UDim2.new(0, 162, 0, 33)
G2L["974"].Visible = true
G2L["974"].ZIndex = 1
G2L["974"].Parent = G2L["971"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
G2L["975"].Name = [[LocalScript]]
G2L["975"].Parent = G2L["974"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.Script
G2L["976"].Name = [[Script]]
G2L["976"].Parent = G2L["974"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton
G2L["977"].Name = [[TextButton]]
G2L["977"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["977"].Text = [[tr2]]
G2L["977"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["977"].TextScaled = true
G2L["977"].TextSize = 14
G2L["977"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["977"].TextStrokeTransparency = 1
G2L["977"].TextWrapped = true
G2L["977"].TextXAlignment = Enum.TextXAlignment.Center
G2L["977"].TextYAlignment = Enum.TextYAlignment.Center
G2L["977"].Active = true
G2L["977"].AnchorPoint = Vector2.new(0, 0)
G2L["977"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["977"].BackgroundTransparency = 0
G2L["977"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["977"].BorderSizePixel = 3
G2L["977"].ClipsDescendants = false
G2L["977"].Draggable = false
G2L["977"].Position = UDim2.new(0.29831934, 0, 0.9985272, 0)
G2L["977"].Rotation = 0
G2L["977"].Selectable = true
G2L["977"].SelectionOrder = 0
G2L["977"].Size = UDim2.new(0, 162, 0, 33)
G2L["977"].Visible = true
G2L["977"].ZIndex = 1
G2L["977"].Parent = G2L["971"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
G2L["978"].Name = [[LocalScript]]
G2L["978"].Parent = G2L["977"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.Script
G2L["979"].Name = [[Script]]
G2L["979"].Parent = G2L["977"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton
G2L["980"].Name = [[TextButton]]
G2L["980"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["980"].Text = [[Shrek]]
G2L["980"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["980"].TextScaled = true
G2L["980"].TextSize = 14
G2L["980"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["980"].TextStrokeTransparency = 1
G2L["980"].TextWrapped = true
G2L["980"].TextXAlignment = Enum.TextXAlignment.Center
G2L["980"].TextYAlignment = Enum.TextYAlignment.Center
G2L["980"].Active = true
G2L["980"].AnchorPoint = Vector2.new(0, 0)
G2L["980"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["980"].BackgroundTransparency = 0
G2L["980"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["980"].BorderSizePixel = 3
G2L["980"].ClipsDescendants = false
G2L["980"].Draggable = false
G2L["980"].Position = UDim2.new(0.6617647, 0, 0.9985272, 0)
G2L["980"].Rotation = 0
G2L["980"].Selectable = true
G2L["980"].SelectionOrder = 0
G2L["980"].Size = UDim2.new(0, 162, 0, 33)
G2L["980"].Visible = true
G2L["980"].ZIndex = 1
G2L["980"].Parent = G2L["971"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
G2L["981"].Name = [[LocalScript]]
G2L["981"].Parent = G2L["980"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.Script
G2L["982"].Name = [[Script]]
G2L["982"].Parent = G2L["980"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints
G2L["983"].Name = [[Hints]]
G2L["983"].Active = false
G2L["983"].AnchorPoint = Vector2.new(0, 0)
G2L["983"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["983"].BackgroundTransparency = 0.25
G2L["983"].BorderColor3 = Color3.fromRGB(182, 176, 0)
G2L["983"].BorderSizePixel = 2
G2L["983"].ClipsDescendants = false
G2L["983"].Draggable = false
G2L["983"].Position = UDim2.new(0.10531111, 0, 0.32453266, 0)
G2L["983"].Rotation = 25
G2L["983"].Selectable = false
G2L["983"].SelectionOrder = 0
G2L["983"].Size = UDim2.new(0, 476, 0, 54)
G2L["983"].Visible = true
G2L["983"].ZIndex = 1
G2L["983"].Parent = G2L["935"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.UICorner
G2L["984"].Name = [[UICorner]]
G2L["984"].CornerRadius = UDim.new(0, 200)
G2L["984"].Parent = G2L["983"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextLabel
G2L["985"].Name = [[TextLabel]]
G2L["985"].FontFace = Font.new([[rbxasset://fonts/families/Fondamento.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["985"].Text = [[Bonus!]]
G2L["985"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["985"].TextScaled = true
G2L["985"].TextSize = 14
G2L["985"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["985"].TextStrokeTransparency = 1
G2L["985"].TextWrapped = true
G2L["985"].TextXAlignment = Enum.TextXAlignment.Center
G2L["985"].TextYAlignment = Enum.TextYAlignment.Center
G2L["985"].Active = false
G2L["985"].AnchorPoint = Vector2.new(0, 0)
G2L["985"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["985"].BackgroundTransparency = 1
G2L["985"].BorderColor3 = Color3.fromRGB(255, 255, 255)
G2L["985"].BorderSizePixel = 0
G2L["985"].ClipsDescendants = false
G2L["985"].Draggable = false
G2L["985"].Position = UDim2.new(0.28991598, 0, 0.074074075, 0)
G2L["985"].Rotation = 0
G2L["985"].Selectable = false
G2L["985"].SelectionOrder = 0
G2L["985"].Size = UDim2.new(0, 200, 0, 50)
G2L["985"].Visible = true
G2L["985"].ZIndex = 1
G2L["985"].Parent = G2L["983"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook
G2L["986"].Name = [[Nook]]
G2L["986"].Image = [[rbxassetid://59820288]]
G2L["986"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["986"].ScaleType = Enum.ScaleType.Stretch
G2L["986"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["986"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["986"].Active = true
G2L["986"].AnchorPoint = Vector2.new(0, 0)
G2L["986"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["986"].BackgroundTransparency = 0
G2L["986"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["986"].BorderSizePixel = 0
G2L["986"].ClipsDescendants = false
G2L["986"].Draggable = false
G2L["986"].Position = UDim2.new(0.29285365, 0, 1.1296296, 0)
G2L["986"].Rotation = 0
G2L["986"].Selectable = true
G2L["986"].SelectionOrder = 0
G2L["986"].Size = UDim2.new(0, 176, 0, 166)
G2L["986"].Visible = true
G2L["986"].ZIndex = 1
G2L["986"].Parent = G2L["983"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["987"].Name = [[Script]]
G2L["987"].Parent = G2L["986"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["988"].Name = [[Script]]
G2L["988"].Parent = G2L["986"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["989"].Name = [[Script]]
G2L["989"].Parent = G2L["986"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.Script
G2L["990"].Name = [[Script]]
G2L["990"].Parent = G2L["986"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.UICorner
G2L["991"].Name = [[UICorner]]
G2L["991"].CornerRadius = UDim.new(0, 200)
G2L["991"].Parent = G2L["986"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.Nook.TextLabel
G2L["992"].Name = [[TextLabel]]
G2L["992"].FontFace = Font.new([[rbxasset://fonts/families/LuckiestGuy.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["992"].Text = [[Nuke]]
G2L["992"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["992"].TextScaled = true
G2L["992"].TextSize = 14
G2L["992"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["992"].TextStrokeTransparency = 0
G2L["992"].TextWrapped = true
G2L["992"].TextXAlignment = Enum.TextXAlignment.Center
G2L["992"].TextYAlignment = Enum.TextYAlignment.Center
G2L["992"].Active = false
G2L["992"].AnchorPoint = Vector2.new(0, 0)
G2L["992"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["992"].BackgroundTransparency = 1
G2L["992"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["992"].BorderSizePixel = 0
G2L["992"].ClipsDescendants = false
G2L["992"].Draggable = false
G2L["992"].Position = UDim2.new(0.043191217, 0, 0.37349397, 0)
G2L["992"].Rotation = 0
G2L["992"].Selectable = false
G2L["992"].SelectionOrder = 0
G2L["992"].Size = UDim2.new(0, 159, 0, 50)
G2L["992"].Visible = true
G2L["992"].ZIndex = 1
G2L["992"].Parent = G2L["986"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.ImageLabel
G2L["993"].Name = [[ImageLabel]]
G2L["993"].Image = [[rbxassetid://12435505486]]
G2L["993"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["993"].ScaleType = Enum.ScaleType.Stretch
G2L["993"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["993"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["993"].Active = false
G2L["993"].AnchorPoint = Vector2.new(0, 0)
G2L["993"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["993"].BackgroundTransparency = 0
G2L["993"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["993"].BorderSizePixel = 0
G2L["993"].ClipsDescendants = false
G2L["993"].Draggable = false
G2L["993"].Position = UDim2.new(0.5105042, 0, 5.111111, 0)
G2L["993"].Rotation = 0
G2L["993"].Selectable = false
G2L["993"].SelectionOrder = 0
G2L["993"].Size = UDim2.new(0, 292, 0, 255)
G2L["993"].Visible = true
G2L["993"].ZIndex = 1
G2L["993"].Parent = G2L["983"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.ImageLabel.TextLabel
G2L["994"].Name = [[TextLabel]]
G2L["994"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["994"].Text = [[Animan Studios - Ballin]]
G2L["994"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["994"].TextScaled = true
G2L["994"].TextSize = 14
G2L["994"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["994"].TextStrokeTransparency = 1
G2L["994"].TextWrapped = true
G2L["994"].TextXAlignment = Enum.TextXAlignment.Center
G2L["994"].TextYAlignment = Enum.TextYAlignment.Center
G2L["994"].Active = false
G2L["994"].AnchorPoint = Vector2.new(0, 0)
G2L["994"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["994"].BackgroundTransparency = 0
G2L["994"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["994"].BorderSizePixel = 0
G2L["994"].ClipsDescendants = false
G2L["994"].Draggable = false
G2L["994"].Position = UDim2.new(-1, 0, 1, 0)
G2L["994"].Rotation = 0
G2L["994"].Selectable = false
G2L["994"].SelectionOrder = 0
G2L["994"].Size = UDim2.new(0, 584, 0, 50)
G2L["994"].Visible = true
G2L["994"].ZIndex = 1
G2L["994"].Parent = G2L["993"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.ImageLabel
G2L["995"].Name = [[ImageLabel]]
G2L["995"].Image = [[http://www.roblox.com/asset/?id=16218312317]]
G2L["995"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["995"].ScaleType = Enum.ScaleType.Stretch
G2L["995"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["995"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["995"].Active = false
G2L["995"].AnchorPoint = Vector2.new(0, 0)
G2L["995"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["995"].BackgroundTransparency = 0
G2L["995"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["995"].BorderSizePixel = 0
G2L["995"].ClipsDescendants = false
G2L["995"].Draggable = false
G2L["995"].Position = UDim2.new(-0.10294111, 0, 5.111111, 0)
G2L["995"].Rotation = 0
G2L["995"].Selectable = false
G2L["995"].SelectionOrder = 0
G2L["995"].Size = UDim2.new(0, 292, 0, 255)
G2L["995"].Visible = true
G2L["995"].ZIndex = 1
G2L["995"].Parent = G2L["983"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Title
G2L["996"].Name = [[Title]]
G2L["996"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["996"].Text = [[SS GUI V7 CURSED EDIT]]
G2L["996"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["996"].TextScaled = true
G2L["996"].TextSize = 76
G2L["996"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["996"].TextStrokeTransparency = 1
G2L["996"].TextWrapped = true
G2L["996"].TextXAlignment = Enum.TextXAlignment.Center
G2L["996"].TextYAlignment = Enum.TextYAlignment.Center
G2L["996"].Active = false
G2L["996"].AnchorPoint = Vector2.new(0, 0)
G2L["996"].BackgroundColor3 = Color3.fromRGB(20, 20, 20)
G2L["996"].BackgroundTransparency = 0
G2L["996"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["996"].BorderSizePixel = 1
G2L["996"].ClipsDescendants = false
G2L["996"].Draggable = false
G2L["996"].Position = UDim2.new(-0.0063795852, 0, 0.0056926, 0)
G2L["996"].Rotation = 25
G2L["996"].Selectable = false
G2L["996"].SelectionOrder = 0
G2L["996"].Size = UDim2.new(0, 627, 0, 55)
G2L["996"].Visible = true
G2L["996"].ZIndex = 1
G2L["996"].Parent = G2L["554"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Title.LocalScript
G2L["997"].Name = [[LocalScript]]
G2L["997"].Parent = G2L["996"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Title.ImageLabel
G2L["998"].Name = [[ImageLabel]]
G2L["998"].Image = [[http://www.roblox.com/asset/?id=16218312317]]
G2L["998"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["998"].ScaleType = Enum.ScaleType.Stretch
G2L["998"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["998"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["998"].Active = false
G2L["998"].AnchorPoint = Vector2.new(0, 0)
G2L["998"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["998"].BackgroundTransparency = 0
G2L["998"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["998"].BorderSizePixel = 0
G2L["998"].ClipsDescendants = false
G2L["998"].Draggable = false
G2L["998"].Position = UDim2.new(0.9090907, 0, -0.054545455, 0)
G2L["998"].Rotation = 25
G2L["998"].Selectable = false
G2L["998"].SelectionOrder = 0
G2L["998"].Size = UDim2.new(0, 59, 0, 55)
G2L["998"].Visible = true
G2L["998"].ZIndex = 1
G2L["998"].Parent = G2L["996"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy
G2L["999"].Name = [[goofy]]
G2L["999"].Active = false
G2L["999"].AnchorPoint = Vector2.new(0, 0)
G2L["999"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["999"].BackgroundTransparency = 0
G2L["999"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["999"].BorderSizePixel = 0
G2L["999"].ClipsDescendants = false
G2L["999"].Draggable = false
G2L["999"].Position = UDim2.new(1, 0, 0.10436433, 0)
G2L["999"].Rotation = 25
G2L["999"].Selectable = false
G2L["999"].SelectionOrder = 0
G2L["999"].Size = UDim2.new(0, 199, 0, 478)
G2L["999"].Visible = false
G2L["999"].ZIndex = 1
G2L["999"].Parent = G2L["554"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1000"].Name = [[goofy]]
G2L["1000"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1000"].Text = [[Troll Spam]]
G2L["1000"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1000"].TextScaled = false
G2L["1000"].TextSize = 28
G2L["1000"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1000"].TextStrokeTransparency = 1
G2L["1000"].TextWrapped = false
G2L["1000"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1000"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1000"].Active = true
G2L["1000"].AnchorPoint = Vector2.new(0, 0)
G2L["1000"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1000"].BackgroundTransparency = 0
G2L["1000"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1000"].BorderSizePixel = 5
G2L["1000"].ClipsDescendants = false
G2L["1000"].Draggable = false
G2L["1000"].Position = UDim2.new(-0.0011393229, 0, 0.35432026, 0)
G2L["1000"].Rotation = 25
G2L["1000"].Selectable = true
G2L["1000"].SelectionOrder = 0
G2L["1000"].Size = UDim2.new(0, 142, 0, 62)
G2L["1000"].Visible = true
G2L["1000"].ZIndex = 1
G2L["1000"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1001"].Name = [[Script]]
G2L["1001"].Parent = G2L["1000"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1002"].Name = [[Script]]
G2L["1002"].Parent = G2L["1000"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1003"].Name = [[goofy]]
G2L["1003"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1003"].Text = [[KSI Spam]]
G2L["1003"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1003"].TextScaled = false
G2L["1003"].TextSize = 28
G2L["1003"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1003"].TextStrokeTransparency = 1
G2L["1003"].TextWrapped = false
G2L["1003"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1003"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1003"].Active = true
G2L["1003"].AnchorPoint = Vector2.new(0, 0)
G2L["1003"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1003"].BackgroundTransparency = 0
G2L["1003"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1003"].BorderSizePixel = 5
G2L["1003"].ClipsDescendants = false
G2L["1003"].Draggable = false
G2L["1003"].Position = UDim2.new(-0.0011393229, 0, 0.22741394, 0)
G2L["1003"].Rotation = 25
G2L["1003"].Selectable = true
G2L["1003"].SelectionOrder = 0
G2L["1003"].Size = UDim2.new(0, 142, 0, 62)
G2L["1003"].Visible = true
G2L["1003"].ZIndex = 1
G2L["1003"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1004"].Name = [[Script]]
G2L["1004"].Parent = G2L["1003"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1005"].Name = [[Script]]
G2L["1005"].Parent = G2L["1003"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky
G2L["1006"].Name = [[Shedletsky]]
G2L["1006"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1006"].Text = [[Shedletsky]]
G2L["1006"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1006"].TextScaled = false
G2L["1006"].TextSize = 28
G2L["1006"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1006"].TextStrokeTransparency = 1
G2L["1006"].TextWrapped = false
G2L["1006"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1006"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1006"].Active = true
G2L["1006"].AnchorPoint = Vector2.new(0, 0)
G2L["1006"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1006"].BackgroundTransparency = 0
G2L["1006"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1006"].BorderSizePixel = 5
G2L["1006"].ClipsDescendants = false
G2L["1006"].Draggable = false
G2L["1006"].Position = UDim2.new(-0.0027340287, 0, 0.1134706, 0)
G2L["1006"].Rotation = 25
G2L["1006"].Selectable = true
G2L["1006"].SelectionOrder = 0
G2L["1006"].Size = UDim2.new(0, 143, 0, 62)
G2L["1006"].Visible = true
G2L["1006"].ZIndex = 1
G2L["1006"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky.Script
G2L["1007"].Name = [[Script]]
G2L["1007"].Parent = G2L["1006"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky.Script
G2L["1008"].Name = [[Script]]
G2L["1008"].Parent = G2L["1006"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.Shedletsky.ServerEventHandler
G2L["1009"].Name = [[ServerEventHandler]]
G2L["1009"].Parent = G2L["1006"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1010"].Name = [[goofy]]
G2L["1010"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1010"].Text = [[Scary Spam]]
G2L["1010"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1010"].TextScaled = false
G2L["1010"].TextSize = 28
G2L["1010"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1010"].TextStrokeTransparency = 1
G2L["1010"].TextWrapped = false
G2L["1010"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1010"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1010"].Active = true
G2L["1010"].AnchorPoint = Vector2.new(0, 0)
G2L["1010"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1010"].BackgroundTransparency = 0
G2L["1010"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1010"].BorderSizePixel = 5
G2L["1010"].ClipsDescendants = false
G2L["1010"].Draggable = false
G2L["1010"].Position = UDim2.new(0.00435817, 0, 0.4664118, 0)
G2L["1010"].Rotation = 25
G2L["1010"].Selectable = true
G2L["1010"].SelectionOrder = 0
G2L["1010"].Size = UDim2.new(0, 142, 0, 62)
G2L["1010"].Visible = true
G2L["1010"].ZIndex = 1
G2L["1010"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1011"].Name = [[Script]]
G2L["1011"].Parent = G2L["1010"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1012"].Name = [[Script]]
G2L["1012"].Parent = G2L["1010"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1013"].Name = [[goofy]]
G2L["1013"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1013"].Text = [[ Jumpscare]]
G2L["1013"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1013"].TextScaled = false
G2L["1013"].TextSize = 28
G2L["1013"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1013"].TextStrokeTransparency = 1
G2L["1013"].TextWrapped = false
G2L["1013"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1013"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1013"].Active = true
G2L["1013"].AnchorPoint = Vector2.new(0, 0)
G2L["1013"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1013"].BackgroundTransparency = 0
G2L["1013"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1013"].BorderSizePixel = 5
G2L["1013"].ClipsDescendants = false
G2L["1013"].Draggable = false
G2L["1013"].Position = UDim2.new(-0.0011393229, 0, 0.7988455, 0)
G2L["1013"].Rotation = 25
G2L["1013"].Selectable = true
G2L["1013"].SelectionOrder = 0
G2L["1013"].Size = UDim2.new(0, 142, 0, 62)
G2L["1013"].Visible = true
G2L["1013"].ZIndex = 1
G2L["1013"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1014"].Name = [[Script]]
G2L["1014"].Parent = G2L["1013"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1015"].Name = [[goofy]]
G2L["1015"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1015"].Text = [[ Hint]]
G2L["1015"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1015"].TextScaled = false
G2L["1015"].TextSize = 28
G2L["1015"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1015"].TextStrokeTransparency = 1
G2L["1015"].TextWrapped = false
G2L["1015"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1015"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1015"].Active = true
G2L["1015"].AnchorPoint = Vector2.new(0, 0)
G2L["1015"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1015"].BackgroundTransparency = 0
G2L["1015"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1015"].BorderSizePixel = 5
G2L["1015"].ClipsDescendants = false
G2L["1015"].Draggable = false
G2L["1015"].Position = UDim2.new(-0.0027340287, 0, 0.9127889, 0)
G2L["1015"].Rotation = 25
G2L["1015"].Selectable = true
G2L["1015"].SelectionOrder = 0
G2L["1015"].Size = UDim2.new(0, 143, 0, 33)
G2L["1015"].Visible = true
G2L["1015"].ZIndex = 1
G2L["1015"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1016"].Name = [[Script]]
G2L["1016"].Parent = G2L["1015"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1017"].Name = [[goofy]]
G2L["1017"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1017"].Text = [[ Particles]]
G2L["1017"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1017"].TextScaled = false
G2L["1017"].TextSize = 28
G2L["1017"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1017"].TextStrokeTransparency = 1
G2L["1017"].TextWrapped = false
G2L["1017"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1017"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1017"].Active = true
G2L["1017"].AnchorPoint = Vector2.new(0, 0)
G2L["1017"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1017"].BackgroundTransparency = 0
G2L["1017"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1017"].BorderSizePixel = 5
G2L["1017"].ClipsDescendants = false
G2L["1017"].Draggable = false
G2L["1017"].Position = UDim2.new(-0.0011393229, 0, 0.68305033, 0)
G2L["1017"].Rotation = 25
G2L["1017"].Selectable = true
G2L["1017"].SelectionOrder = 0
G2L["1017"].Size = UDim2.new(0, 142, 0, 62)
G2L["1017"].Visible = true
G2L["1017"].ZIndex = 1
G2L["1017"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.Script
G2L["1018"].Name = [[Script]]
G2L["1018"].Parent = G2L["1017"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1019"].Name = [[goofy]]
G2L["1019"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1019"].Text = [[ Music]]
G2L["1019"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1019"].TextScaled = false
G2L["1019"].TextSize = 28
G2L["1019"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1019"].TextStrokeTransparency = 1
G2L["1019"].TextWrapped = false
G2L["1019"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1019"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1019"].Active = true
G2L["1019"].AnchorPoint = Vector2.new(0, 0)
G2L["1019"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1019"].BackgroundTransparency = 0
G2L["1019"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1019"].BorderSizePixel = 5
G2L["1019"].ClipsDescendants = false
G2L["1019"].Draggable = false
G2L["1019"].Position = UDim2.new(0.00435817, 0, 0.5802181, 0)
G2L["1019"].Rotation = 25
G2L["1019"].Selectable = true
G2L["1019"].SelectionOrder = 0
G2L["1019"].Size = UDim2.new(0, 142, 0, 62)
G2L["1019"].Visible = true
G2L["1019"].ZIndex = 1
G2L["1019"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1020"].Name = [[LocalScript]]
G2L["1020"].Parent = G2L["1019"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1021"].Name = [[mario]]
G2L["1021"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1021"].Text = [[Mario Spam]]
G2L["1021"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1021"].TextScaled = false
G2L["1021"].TextSize = 28
G2L["1021"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1021"].TextStrokeTransparency = 1
G2L["1021"].TextWrapped = false
G2L["1021"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1021"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1021"].Active = true
G2L["1021"].AnchorPoint = Vector2.new(0, 0)
G2L["1021"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1021"].BackgroundTransparency = 0
G2L["1021"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1021"].BorderSizePixel = 5
G2L["1021"].ClipsDescendants = false
G2L["1021"].Draggable = false
G2L["1021"].Position = UDim2.new(-0.0011393229, 0, 0.008786499, 0)
G2L["1021"].Rotation = 25
G2L["1021"].Selectable = true
G2L["1021"].SelectionOrder = 0
G2L["1021"].Size = UDim2.new(0, 142, 0, 62)
G2L["1021"].Visible = true
G2L["1021"].ZIndex = 1
G2L["1021"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1022"].Name = [[Script]]
G2L["1022"].Parent = G2L["1021"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1023"].Name = [[Script]]
G2L["1023"].Parent = G2L["1021"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.TextLabel
G2L["1024"].Name = [[TextLabel]]
G2L["1024"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1024"].Text = [[Extras]]
G2L["1024"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1024"].TextScaled = false
G2L["1024"].TextSize = 29
G2L["1024"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1024"].TextStrokeTransparency = 1
G2L["1024"].TextWrapped = false
G2L["1024"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1024"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1024"].Active = false
G2L["1024"].AnchorPoint = Vector2.new(0, 0)
G2L["1024"].BackgroundColor3 = Color3.fromRGB(43, 43, 43)
G2L["1024"].BackgroundTransparency = 0
G2L["1024"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1024"].BorderSizePixel = 3
G2L["1024"].ClipsDescendants = false
G2L["1024"].Draggable = false
G2L["1024"].Position = UDim2.new(0.0043571126, 0, -0.09166668, 0)
G2L["1024"].Rotation = 25
G2L["1024"].Selectable = false
G2L["1024"].SelectionOrder = 0
G2L["1024"].Size = UDim2.new(0, 197, 0, 44)
G2L["1024"].Visible = true
G2L["1024"].ZIndex = 1
G2L["1024"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.TextLabel.LocalScript
G2L["1025"].Name = [[LocalScript]]
G2L["1025"].Parent = G2L["1024"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1026"].Name = [[goofy]]
G2L["1026"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1026"].Text = [[ arab]]
G2L["1026"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1026"].TextScaled = false
G2L["1026"].TextSize = 28
G2L["1026"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1026"].TextStrokeTransparency = 1
G2L["1026"].TextWrapped = false
G2L["1026"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1026"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1026"].Active = true
G2L["1026"].AnchorPoint = Vector2.new(0, 0)
G2L["1026"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1026"].BackgroundTransparency = 0
G2L["1026"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1026"].BorderSizePixel = 5
G2L["1026"].ClipsDescendants = false
G2L["1026"].Draggable = false
G2L["1026"].Position = UDim2.new(0.6859431, 0, 0.580218, 0)
G2L["1026"].Rotation = 25
G2L["1026"].Selectable = true
G2L["1026"].SelectionOrder = 0
G2L["1026"].Size = UDim2.new(0, 62, 0, 62)
G2L["1026"].Visible = true
G2L["1026"].ZIndex = 1
G2L["1026"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1027"].Name = [[LocalScript]]
G2L["1027"].Parent = G2L["1026"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1028"].Name = [[goofy]]
G2L["1028"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1028"].Text = [[ k00p]]
G2L["1028"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1028"].TextScaled = false
G2L["1028"].TextSize = 28
G2L["1028"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1028"].TextStrokeTransparency = 1
G2L["1028"].TextWrapped = false
G2L["1028"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1028"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1028"].Active = true
G2L["1028"].AnchorPoint = Vector2.new(0, 0)
G2L["1028"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1028"].BackgroundTransparency = 0
G2L["1028"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1028"].BorderSizePixel = 5
G2L["1028"].ClipsDescendants = false
G2L["1028"].Draggable = false
G2L["1028"].Position = UDim2.new(0.686759, 0, 0.7099251, 0)
G2L["1028"].Rotation = 25
G2L["1028"].Selectable = true
G2L["1028"].SelectionOrder = 0
G2L["1028"].Size = UDim2.new(0, 62, 0, 62)
G2L["1028"].Visible = true
G2L["1028"].ZIndex = 1
G2L["1028"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1029"].Name = [[LocalScript]]
G2L["1029"].Parent = G2L["1028"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1030"].Name = [[mario]]
G2L["1030"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1030"].Text = [[face]]
G2L["1030"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1030"].TextScaled = false
G2L["1030"].TextSize = 28
G2L["1030"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1030"].TextStrokeTransparency = 1
G2L["1030"].TextWrapped = false
G2L["1030"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1030"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1030"].Active = true
G2L["1030"].AnchorPoint = Vector2.new(0, 0)
G2L["1030"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1030"].BackgroundTransparency = 0
G2L["1030"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1030"].BorderSizePixel = 5
G2L["1030"].ClipsDescendants = false
G2L["1030"].Draggable = false
G2L["1030"].Position = UDim2.new(0.6822767, 0, 0.008786493, 0)
G2L["1030"].Rotation = 25
G2L["1030"].Selectable = true
G2L["1030"].SelectionOrder = 0
G2L["1030"].Size = UDim2.new(0, 63, 0, 62)
G2L["1030"].Visible = true
G2L["1030"].ZIndex = 1
G2L["1030"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1031"].Name = [[Script]]
G2L["1031"].Parent = G2L["1030"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1032"].Name = [[mario]]
G2L["1032"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1032"].Text = [[face]]
G2L["1032"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1032"].TextScaled = false
G2L["1032"].TextSize = 28
G2L["1032"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1032"].TextStrokeTransparency = 1
G2L["1032"].TextWrapped = false
G2L["1032"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1032"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1032"].Active = true
G2L["1032"].AnchorPoint = Vector2.new(0, 0)
G2L["1032"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1032"].BackgroundTransparency = 0
G2L["1032"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1032"].BorderSizePixel = 5
G2L["1032"].ClipsDescendants = false
G2L["1032"].Draggable = false
G2L["1032"].Position = UDim2.new(0.67725164, 0, 0.12384927, 0)
G2L["1032"].Rotation = 25
G2L["1032"].Selectable = true
G2L["1032"].SelectionOrder = 0
G2L["1032"].Size = UDim2.new(0, 63, 0, 57)
G2L["1032"].Visible = true
G2L["1032"].ZIndex = 1
G2L["1032"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1033"].Name = [[Script]]
G2L["1033"].Parent = G2L["1032"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1034"].Name = [[mario]]
G2L["1034"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1034"].Text = [[face]]
G2L["1034"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1034"].TextScaled = false
G2L["1034"].TextSize = 28
G2L["1034"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1034"].TextStrokeTransparency = 1
G2L["1034"].TextWrapped = false
G2L["1034"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1034"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1034"].Active = true
G2L["1034"].AnchorPoint = Vector2.new(0, 0)
G2L["1034"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1034"].BackgroundTransparency = 0
G2L["1034"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1034"].BorderSizePixel = 5
G2L["1034"].ClipsDescendants = false
G2L["1034"].Draggable = false
G2L["1034"].Position = UDim2.new(0.6822767, 0, 0.23472793, 0)
G2L["1034"].Rotation = 25
G2L["1034"].Selectable = true
G2L["1034"].SelectionOrder = 0
G2L["1034"].Size = UDim2.new(0, 63, 0, 57)
G2L["1034"].Visible = true
G2L["1034"].ZIndex = 1
G2L["1034"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1035"].Name = [[Script]]
G2L["1035"].Parent = G2L["1034"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1036"].Name = [[mario]]
G2L["1036"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1036"].Text = [[face]]
G2L["1036"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1036"].TextScaled = false
G2L["1036"].TextSize = 28
G2L["1036"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1036"].TextStrokeTransparency = 1
G2L["1036"].TextWrapped = false
G2L["1036"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1036"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1036"].Active = true
G2L["1036"].AnchorPoint = Vector2.new(0, 0)
G2L["1036"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1036"].BackgroundTransparency = 0
G2L["1036"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1036"].BorderSizePixel = 5
G2L["1036"].ClipsDescendants = false
G2L["1036"].Draggable = false
G2L["1036"].Position = UDim2.new(0.67725164, 0, 0.35606685, 0)
G2L["1036"].Rotation = 25
G2L["1036"].Selectable = true
G2L["1036"].SelectionOrder = 0
G2L["1036"].Size = UDim2.new(0, 63, 0, 57)
G2L["1036"].Visible = true
G2L["1036"].ZIndex = 1
G2L["1036"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1037"].Name = [[Script]]
G2L["1037"].Parent = G2L["1036"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario
G2L["1038"].Name = [[mario]]
G2L["1038"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1038"].Text = [[face]]
G2L["1038"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1038"].TextScaled = false
G2L["1038"].TextSize = 28
G2L["1038"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1038"].TextStrokeTransparency = 1
G2L["1038"].TextWrapped = false
G2L["1038"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1038"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1038"].Active = true
G2L["1038"].AnchorPoint = Vector2.new(0, 0)
G2L["1038"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1038"].BackgroundTransparency = 0
G2L["1038"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1038"].BorderSizePixel = 5
G2L["1038"].ClipsDescendants = false
G2L["1038"].Draggable = false
G2L["1038"].Position = UDim2.new(0.67725164, 0, 0.4753137, 0)
G2L["1038"].Rotation = 25
G2L["1038"].Selectable = true
G2L["1038"].SelectionOrder = 0
G2L["1038"].Size = UDim2.new(0, 63, 0, 57)
G2L["1038"].Visible = true
G2L["1038"].ZIndex = 1
G2L["1038"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.mario.Script
G2L["1039"].Name = [[Script]]
G2L["1039"].Parent = G2L["1038"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy
G2L["1040"].Name = [[goofy]]
G2L["1040"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1040"].Text = [[ taco]]
G2L["1040"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1040"].TextScaled = false
G2L["1040"].TextSize = 28
G2L["1040"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1040"].TextStrokeTransparency = 1
G2L["1040"].TextWrapped = false
G2L["1040"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1040"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1040"].Active = true
G2L["1040"].AnchorPoint = Vector2.new(0, 0)
G2L["1040"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1040"].BackgroundTransparency = 0
G2L["1040"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1040"].BorderSizePixel = 5
G2L["1040"].ClipsDescendants = false
G2L["1040"].Draggable = false
G2L["1040"].Position = UDim2.new(0.6859431, 0, 0.8396322, 0)
G2L["1040"].Rotation = 25
G2L["1040"].Selectable = true
G2L["1040"].SelectionOrder = 0
G2L["1040"].Size = UDim2.new(0, 62, 0, 62)
G2L["1040"].Visible = true
G2L["1040"].ZIndex = 1
G2L["1040"].Parent = G2L["999"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
G2L["1041"].Name = [[LocalScript]]
G2L["1041"].Parent = G2L["1040"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse
G2L["1042"].Name = [[Synapse]]
G2L["1042"].Active = false
G2L["1042"].AnchorPoint = Vector2.new(0, 0)
G2L["1042"].BackgroundColor3 = Color3.fromRGB(24.000002, 24.000002, 24.000002)
G2L["1042"].BackgroundTransparency = 0
G2L["1042"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1042"].BorderSizePixel = 0
G2L["1042"].ClipsDescendants = false
G2L["1042"].Draggable = false
G2L["1042"].Position = UDim2.new(-0.003189744, 0, 0.11764712, 0)
G2L["1042"].Rotation = 25
G2L["1042"].Selectable = false
G2L["1042"].SelectionOrder = 0
G2L["1042"].Size = UDim2.new(0, 626, 0, 465)
G2L["1042"].Visible = false
G2L["1042"].ZIndex = 1
G2L["1042"].Parent = G2L["554"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Logo
G2L["1043"].Name = [[Logo]]
G2L["1043"].Image = [[rbxassetid://11330378074]]
G2L["1043"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["1043"].ScaleType = Enum.ScaleType.Stretch
G2L["1043"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["1043"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["1043"].Active = false
G2L["1043"].AnchorPoint = Vector2.new(0, 0)
G2L["1043"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1043"].BackgroundTransparency = 0
G2L["1043"].BorderColor3 = Color3.fromRGB(136, 136, 136)
G2L["1043"].BorderSizePixel = 3
G2L["1043"].ClipsDescendants = false
G2L["1043"].Draggable = false
G2L["1043"].Position = UDim2.new(0.18370607, 0, 0.0048148865, 0)
G2L["1043"].Rotation = 0
G2L["1043"].Selectable = false
G2L["1043"].SelectionOrder = 0
G2L["1043"].Size = UDim2.new(0, 51, 0, 52)
G2L["1043"].Visible = true
G2L["1043"].ZIndex = 1
G2L["1043"].Parent = G2L["1042"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Logo.TextLabel
G2L["1044"].Name = [[TextLabel]]
G2L["1044"].FontFace = Font.new([[rbxasset://fonts/families/Roboto.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1044"].Text = [[Synapse X (Built - In)]]
G2L["1044"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1044"].TextScaled = true
G2L["1044"].TextSize = 14
G2L["1044"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1044"].TextStrokeTransparency = 1
G2L["1044"].TextWrapped = true
G2L["1044"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1044"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1044"].Active = false
G2L["1044"].AnchorPoint = Vector2.new(0, 0)
G2L["1044"].BackgroundColor3 = Color3.fromRGB(255, 124.00001, 48.000004)
G2L["1044"].BackgroundTransparency = 0
G2L["1044"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1044"].BorderSizePixel = 0
G2L["1044"].ClipsDescendants = false
G2L["1044"].Draggable = false
G2L["1044"].Position = UDim2.new(1.2156863, 0, 0.03846154, 0)
G2L["1044"].Rotation = 0
G2L["1044"].Selectable = false
G2L["1044"].SelectionOrder = 0
G2L["1044"].Size = UDim2.new(0, 423, 0, 50)
G2L["1044"].Visible = true
G2L["1044"].ZIndex = 1
G2L["1044"].Parent = G2L["1043"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Source
G2L["1045"].Name = [[Source]]
G2L["1045"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1045"].MultiLine = true
G2L["1045"].PlaceholderColor3 = Color3.new(0, 0, 0)
G2L["1045"].PlaceholderText = [[Script here]]
G2L["1045"].Text = [[]]
G2L["1045"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["1045"].TextScaled = false
G2L["1045"].TextSize = 14
G2L["1045"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1045"].TextStrokeTransparency = 1
G2L["1045"].TextWrapped = false
G2L["1045"].TextXAlignment = Enum.TextXAlignment.Left
G2L["1045"].TextYAlignment = Enum.TextYAlignment.Top
G2L["1045"].Active = true
G2L["1045"].AnchorPoint = Vector2.new(0, 0)
G2L["1045"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["1045"].BackgroundTransparency = 0.2
G2L["1045"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["1045"].BorderSizePixel = 1
G2L["1045"].ClipsDescendants = false
G2L["1045"].Draggable = false
G2L["1045"].Position = UDim2.new(0.18210863, 0, 0.22292034, 0)
G2L["1045"].Rotation = 0
G2L["1045"].Selectable = true
G2L["1045"].SelectionOrder = 0
G2L["1045"].Size = UDim2.new(0, 485, 0, 295)
G2L["1045"].Visible = true
G2L["1045"].ZIndex = 1
G2L["1045"].Parent = G2L["1042"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton
G2L["1046"].Name = [[TextButton]]
G2L["1046"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1046"].Text = [[Page 1]]
G2L["1046"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1046"].TextScaled = true
G2L["1046"].TextSize = 14
G2L["1046"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1046"].TextStrokeTransparency = 1
G2L["1046"].TextWrapped = true
G2L["1046"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1046"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1046"].Active = true
G2L["1046"].AnchorPoint = Vector2.new(0, 0)
G2L["1046"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1046"].BackgroundTransparency = 0
G2L["1046"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["1046"].BorderSizePixel = 3
G2L["1046"].ClipsDescendants = false
G2L["1046"].Draggable = false
G2L["1046"].Position = UDim2.new(0.007987221, 0, 0.1483968, 0)
G2L["1046"].Rotation = 0
G2L["1046"].Selectable = true
G2L["1046"].SelectionOrder = 0
G2L["1046"].Size = UDim2.new(0, 93, 0, 50)
G2L["1046"].Visible = true
G2L["1046"].ZIndex = 1
G2L["1046"].Parent = G2L["1042"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
G2L["1047"].Name = [[LocalScript]]
G2L["1047"].Parent = G2L["1046"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UICorner
G2L["1048"].Name = [[UICorner]]
G2L["1048"].CornerRadius = UDim.new(0, 8)
G2L["1048"].Parent = G2L["1046"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UIGradient
G2L["1049"].Name = [[UIGradient]]
G2L["1049"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))};
G2L["1049"].Enabled = true
G2L["1049"].Rotation = 0
G2L["1049"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["1049"].Parent = G2L["1046"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton
G2L["1050"].Name = [[TextButton]]
G2L["1050"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1050"].Text = [[Page 2]]
G2L["1050"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1050"].TextScaled = true
G2L["1050"].TextSize = 14
G2L["1050"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1050"].TextStrokeTransparency = 1
G2L["1050"].TextWrapped = true
G2L["1050"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1050"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1050"].Active = true
G2L["1050"].AnchorPoint = Vector2.new(0, 0)
G2L["1050"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1050"].BackgroundTransparency = 0
G2L["1050"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["1050"].BorderSizePixel = 3
G2L["1050"].ClipsDescendants = false
G2L["1050"].Draggable = false
G2L["1050"].Position = UDim2.new(0.007987221, 0, 0.26022476, 0)
G2L["1050"].Rotation = 0
G2L["1050"].Selectable = true
G2L["1050"].SelectionOrder = 0
G2L["1050"].Size = UDim2.new(0, 93, 0, 50)
G2L["1050"].Visible = true
G2L["1050"].ZIndex = 1
G2L["1050"].Parent = G2L["1042"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
G2L["1051"].Name = [[LocalScript]]
G2L["1051"].Parent = G2L["1050"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UICorner
G2L["1052"].Name = [[UICorner]]
G2L["1052"].CornerRadius = UDim.new(0, 8)
G2L["1052"].Parent = G2L["1050"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UIGradient
G2L["1053"].Name = [[UIGradient]]
G2L["1053"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(86, 200, 16)), ColorSequenceKeypoint.new(1, Color3.fromRGB(86, 200, 16))};
G2L["1053"].Enabled = true
G2L["1053"].Rotation = 0
G2L["1053"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["1053"].Parent = G2L["1050"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton
G2L["1054"].Name = [[TextButton]]
G2L["1054"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1054"].Text = [[Page 3]]
G2L["1054"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["1054"].TextScaled = true
G2L["1054"].TextSize = 14
G2L["1054"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1054"].TextStrokeTransparency = 1
G2L["1054"].TextWrapped = true
G2L["1054"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1054"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1054"].Active = true
G2L["1054"].AnchorPoint = Vector2.new(0, 0)
G2L["1054"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["1054"].BackgroundTransparency = 0
G2L["1054"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["1054"].BorderSizePixel = 3
G2L["1054"].ClipsDescendants = false
G2L["1054"].Draggable = false
G2L["1054"].Position = UDim2.new(0.007987221, 0, 0.37420326, 0)
G2L["1054"].Rotation = 0
G2L["1054"].Selectable = true
G2L["1054"].SelectionOrder = 0
G2L["1054"].Size = UDim2.new(0, 93, 0, 50)
G2L["1054"].Visible = true
G2L["1054"].ZIndex = 1
G2L["1054"].Parent = G2L["1042"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
G2L["1055"].Name = [[LocalScript]]
G2L["1055"].Parent = G2L["1054"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UICorner
G2L["1056"].Name = [[UICorner]]
G2L["1056"].CornerRadius = UDim.new(0, 8)
G2L["1056"].Parent = G2L["1054"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.UIGradient
G2L["1057"].Name = [[UIGradient]]
G2L["1057"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(200, 5, 5)), ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 5, 5))};
G2L["1057"].Enabled = true
G2L["1057"].Rotation = 0
G2L["1057"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["1057"].Parent = G2L["1054"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame
G2L["1058"].Name = [[Frame]]
G2L["1058"].Active = false
G2L["1058"].AnchorPoint = Vector2.new(0, 0)
G2L["1058"].BackgroundColor3 = Color3.fromRGB(36, 36, 36)
G2L["1058"].BackgroundTransparency = 0
G2L["1058"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1058"].BorderSizePixel = 0
G2L["1058"].ClipsDescendants = false
G2L["1058"].Draggable = false
G2L["1058"].Position = UDim2.new(0.18210863, 0, 0.8623656, 0)
G2L["1058"].Rotation = 0
G2L["1058"].Selectable = false
G2L["1058"].SelectionOrder = 0
G2L["1058"].Size = UDim2.new(0, 485, 0, 48)
G2L["1058"].Visible = true
G2L["1058"].ZIndex = 1
G2L["1058"].Parent = G2L["1042"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe
G2L["1059"].Name = [[exe]]
G2L["1059"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1059"].Text = [[Execute]]
G2L["1059"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["1059"].TextScaled = false
G2L["1059"].TextSize = 20
G2L["1059"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1059"].TextStrokeTransparency = 1
G2L["1059"].TextWrapped = true
G2L["1059"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1059"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1059"].Active = true
G2L["1059"].AnchorPoint = Vector2.new(0, 0)
G2L["1059"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["1059"].BackgroundTransparency = 0
G2L["1059"].BorderColor3 = Color3.fromRGB(80, 80, 80)
G2L["1059"].BorderSizePixel = 3
G2L["1059"].ClipsDescendants = false
G2L["1059"].Draggable = false
G2L["1059"].Position = UDim2.new(0.019055616, 0, 0.16911697, 0)
G2L["1059"].Rotation = 0
G2L["1059"].Selectable = true
G2L["1059"].SelectionOrder = 0
G2L["1059"].Size = UDim2.new(0, 165, 0, 34)
G2L["1059"].Visible = true
G2L["1059"].ZIndex = 1
G2L["1059"].Parent = G2L["1058"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.ExecuteScript
G2L["1060"].Name = [[ExecuteScript]]
G2L["1060"].Parent = G2L["1059"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.LocalScript
G2L["1061"].Name = [[LocalScript]]
G2L["1061"].Parent = G2L["1059"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script
G2L["1062"].Name = [[Script]]
G2L["1062"].Parent = G2L["1059"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring
G2L["1063"].Name = [[Loadstring]]
G2L["1063"].Parent = G2L["1062"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring.FiOne
G2L["1064"].Name = [[FiOne]]
G2L["1064"].Parent = G2L["1063"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring.Yueliang
G2L["1065"].Name = [[Yueliang]]
G2L["1065"].Parent = G2L["1063"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.cle
G2L["1066"].Name = [[cle]]
G2L["1066"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["1066"].Text = [[Clear]]
G2L["1066"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["1066"].TextScaled = false
G2L["1066"].TextSize = 20
G2L["1066"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["1066"].TextStrokeTransparency = 1
G2L["1066"].TextWrapped = true
G2L["1066"].TextXAlignment = Enum.TextXAlignment.Center
G2L["1066"].TextYAlignment = Enum.TextYAlignment.Center
G2L["1066"].Active = true
G2L["1066"].AnchorPoint = Vector2.new(0, 0)
G2L["1066"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["1066"].BackgroundTransparency = 0
G2L["1066"].BorderColor3 = Color3.fromRGB(103.00001, 103.00001, 103.00001)
G2L["1066"].BorderSizePixel = 3
G2L["1066"].ClipsDescendants = false
G2L["1066"].Draggable = false
G2L["1066"].Position = UDim2.new(0.6501251, 0, 0.16911697, 0)
G2L["1066"].Rotation = 0
G2L["1066"].Selectable = true
G2L["1066"].SelectionOrder = 0
G2L["1066"].Size = UDim2.new(0, 158, 0, 34)
G2L["1066"].Visible = true
G2L["1066"].ZIndex = 1
G2L["1066"].Parent = G2L["1058"]

--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.cle.LocalScript
G2L["1067"].Name = [[LocalScript]]
G2L["1067"].Parent = G2L["1066"]

--[[
    Scripts
--]]
--ScreenGui.Border.Drag
local function C_G2L_2()
local script = G2L["2"]
local UserInputService = game:GetService("UserInputService")

local gui = script.Parent

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
end
task.spawn(C_G2L_2)


--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
local function C_G2L_10()
local script = G2L["10"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.ssGUIv7.Visible = true
end)
end
task.spawn(C_G2L_10)


--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
local function C_G2L_14()
local script = G2L["14"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Parent.Parent.Parent.Frame.Visible = true
end)
end
task.spawn(C_G2L_14)


--ScreenGui.Border.Main.ImageLabel.ScrollingFrame.Option.ImageButton.LocalScript
local function C_G2L_18()
local script = G2L["18"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_18)


--ScreenGui.ssGUIv7.DraggableScript
local function C_G2L_41()
local script = G2L["41"]
--This script was created by Tiffblocks and uploaded by me :P
local UserInputService = game:GetService("UserInputService")

local gui = script.Parent

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
end
task.spawn(C_G2L_41)


--ScreenGui.ssGUIv7.pg1.credits.TextLabel.LocalScript
local function C_G2L_47()
local script = G2L["47"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_47)


--ScreenGui.ssGUIv7.pg1.TextButton.LocalScript
local function C_G2L_83()
local script = G2L["83"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 2"].Visible = true
end)
end
task.spawn(C_G2L_83)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_89()
local script = G2L["89"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_89)


--ScreenGui.ssGUIv7.pg1.code.mrbean.RippleClick
local function C_G2L_92()
local script = G2L["92"]
guiObject = script.Parent
mouse = game.Players.LocalPlayer:GetMouse()

guiObject.MouseButton1Down:connect(function()
	coroutine.resume(coroutine.create(function()
		guiObject.CliPlayersDescendants = true
		local Circle = script:WaitForChild("Circle"):Clone()
		Circle.Parent = guiObject
		local NewX = mouse.X - Circle.AbsolutePosition.X
		local NewY = mouse.Y - Circle.AbsolutePosition.Y
		Circle.Position = UDim2.new(0, NewX, 0, NewY)
		local Size = 0
		if guiObject.AbsoluteSize.X > guiObject.AbsoluteSize.Y then
			Size = guiObject.AbsoluteSize.X*1.5
		elseif guiObject.AbsoluteSize.X < guiObject.AbsoluteSize.Y then
			Size = guiObject.AbsoluteSize.Y*1.5
		elseif guiObject.AbsoluteSize.X == guiObject.AbsoluteSize.Y then
			Size = guiObject.AbsoluteSize.X*1.5
		end
		local Time = 0.5
		Circle:TweenSizeAndPosition(UDim2.new(0, Size, 0, Size), UDim2.new(0.5, -Size/2, 0.5, -Size/2), "Out", "Quad", Time, false, nil)
		for i=1,10 do
			Circle.ImageTransparency = Circle.ImageTransparency + 0.01
			wait(Time/10)
		end
		Circle:Destroy()
	end))
end)
end
task.spawn(C_G2L_92)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_97()
local script = G2L["97"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_97)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_101()
local script = G2L["101"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_101)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_105()
local script = G2L["105"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_105)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_109()
local script = G2L["109"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_109)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_113()
local script = G2L["113"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_113)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_117()
local script = G2L["117"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_117)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_121()
local script = G2L["121"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_121)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_125()
local script = G2L["125"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_125)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_129()
local script = G2L["129"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_129)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_133()
local script = G2L["133"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_133)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_137()
local script = G2L["137"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_137)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_141()
local script = G2L["141"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_141)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_145()
local script = G2L["145"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_145)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_149()
local script = G2L["149"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_149)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_153()
local script = G2L["153"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_153)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_157()
local script = G2L["157"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_157)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_161()
local script = G2L["161"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_161)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_165()
local script = G2L["165"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_165)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_169()
local script = G2L["169"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_169)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_173()
local script = G2L["173"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_173)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_177()
local script = G2L["177"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_177)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_181()
local script = G2L["181"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_181)


--ScreenGui.ssGUIv7.pg1.code.TextButton.LocalScript
local function C_G2L_189()
local script = G2L["189"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_189)


--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_202()
local script = G2L["202"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_202)


--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_206()
local script = G2L["206"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_206)


--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_210()
local script = G2L["210"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_210)


--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_214()
local script = G2L["214"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_214)


--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_218()
local script = G2L["218"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_218)


--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_221()
local script = G2L["221"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.Extra2.Visible = true
end)
end
task.spawn(C_G2L_221)


--ScreenGui.ssGUIv7.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_226()
local script = G2L["226"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_226)


--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_230()
local script = G2L["230"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.Extra2.Visible = true
end)
end
task.spawn(C_G2L_230)


--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_235()
local script = G2L["235"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_235)


--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_239()
local script = G2L["239"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_239)


--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_243()
local script = G2L["243"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_243)


--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_247()
local script = G2L["247"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_247)


--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_251()
local script = G2L["251"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_251)


--ScreenGui.ssGUIv7.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_255()
local script = G2L["255"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_255)


--ScreenGui.ssGUIv7.pg1.faces.Faces.TextButton.LocalScript
local function C_G2L_286()
local script = G2L["286"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Faces2"].Visible = true
end)
end
task.spawn(C_G2L_286)


--ScreenGui.ssGUIv7.pg1.faces.Faces2.TextButton.LocalScript
local function C_G2L_295()
local script = G2L["295"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Faces"].Visible = true
end)
end
task.spawn(C_G2L_295)


--ScreenGui.ssGUIv7.pg1.SynapseButton.LocalScript
local function C_G2L_320()
local script = G2L["320"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.Synapse.Visible = true
end)
end
task.spawn(C_G2L_320)


--ScreenGui.ssGUIv7.pg1.icon.LocalScript
local function C_G2L_322()
local script = G2L["322"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Parent.goofy.Visible = true
end)
end
task.spawn(C_G2L_322)


--ScreenGui.ssGUIv7.Page 2.back.LocalScript
local function C_G2L_325()
local script = G2L["325"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.pg1.Visible = true
end)
end
task.spawn(C_G2L_325)


--ScreenGui.ssGUIv7.Page 2.credits.TextLabel.LocalScript
local function C_G2L_411()
local script = G2L["411"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_411)


--ScreenGui.ssGUIv7.Page 2.pg.LocalScript
local function C_G2L_418()
local script = G2L["418"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 3"].Visible = true
end)
end
task.spawn(C_G2L_418)


--ScreenGui.ssGUIv7.Page 3.back.LocalScript
local function C_G2L_428()
local script = G2L["428"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 2"].Visible = true
end)
end
task.spawn(C_G2L_428)


--ScreenGui.ssGUIv7.Page 3.credits.TextLabel.LocalScript
local function C_G2L_440()
local script = G2L["440"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_440)


--ScreenGui.ssGUIv7.Page 3.Map.LocalScript
local function C_G2L_448()
local script = G2L["448"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_448)


--ScreenGui.ssGUIv7.Page 3.map.LocalScript
local function C_G2L_456()
local script = G2L["456"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_456)


--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
local function C_G2L_461()
local script = G2L["461"]
while wait() do
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_461)


--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
local function C_G2L_464()
local script = G2L["464"]
while wait() do
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_464)


--ScreenGui.ssGUIv7.Page 3.Hints.TextButton.LocalScript
local function C_G2L_467()
local script = G2L["467"]
while wait() do
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_467)


--ScreenGui.ssGUIv7.Title.LocalScript
local function C_G2L_483()
local script = G2L["483"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_483)


--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
local function C_G2L_506()
local script = G2L["506"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://1847661783"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_506)


--ScreenGui.ssGUIv7.goofy.TextLabel.LocalScript
local function C_G2L_511()
local script = G2L["511"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_511)


--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
local function C_G2L_513()
local script = G2L["513"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://247893371"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_513)


--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
local function C_G2L_515()
local script = G2L["515"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://1846575559"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_515)


--ScreenGui.ssGUIv7.goofy.goofy.LocalScript
local function C_G2L_527()
local script = G2L["527"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://142376088"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_527)


--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
local function C_G2L_533()
local script = G2L["533"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.pg1.Visible = true
end)
end
task.spawn(C_G2L_533)


--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
local function C_G2L_537()
local script = G2L["537"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 2"].Visible = true
end)
end
task.spawn(C_G2L_537)


--ScreenGui.ssGUIv7.Synapse.TextButton.LocalScript
local function C_G2L_541()
local script = G2L["541"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 3"].Visible = true
end)
end
task.spawn(C_G2L_541)


--ScreenGui.ssGUIv7.Synapse.Frame.exe.LocalScript
local function C_G2L_547()
local script = G2L["547"]
local RS = script.Parent.ExecuteScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer(script.Parent.Parent.Source.Text)
end)
end
task.spawn(C_G2L_547)


--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring
G2L_MODULES[G2L["549"]] = {
Closure = function()
local script = G2L["549"]
--[[
		Interested in improving your skills as a Developer? Needing help publishing and marketing your game?
		Join Bleu Pigs! The self improvement community built around you
		https://devforum.roblox.com/u/bleupigs/summary
		
		Join our Minecraft server: https://discord.gg/msXKffKWEt
		
		Support my future projects on Patreon: https://www.patreon.com/reinitialized
		---------------
		vLua 5.1 - Lua written in Lua Virtual Machine
		---------------
		vLua is a virtual machine and compiler for dynamically compiling and executing Lua.
		It'll work on both client and server, regardless of LoadStringEnabled. This module is
		designed to be a drop in replacement for loadstring, meaning you can do the following:
		
		Example:
			local loadstring = require(workspace.Loadstring)
			local executable, compileFailReason = loadstring("print('hello from vLua!')")
			executable()
		
		Please note, vLua IS SLOWER COMPARED TO vanilla Lua, although Luau does improve performance.
		Do not attemptp to run performance intensive tasks without testing first, otherwise you
		may have a bad time.
		
		Changelog:
			[1/18/2022]
				- updated FiOne to latest release - https://github.com/Rerumu/FiOne/commit/900413a8491a44daa7770d799c85ad6df8610eea
				- added link to Minecraft server Discord
			[1/1/2022]
				- fixed environment not being properly set for compiled function
			[11/12/2021]
				- removed previous changelogs
				- updated FiOne to latest release - https://github.com/Rerumu/FiOne/blob/f443116e947e5bb3fe8bb7e6abca78214a245145/source.lua
				- fixed attempt to call a nil value error
		
		Credits:
			- FiOne LBI (created by same author as Rerubi) - https://github.com/Rerumu/FiOne
			- Yueliang 5 (Lua compiler in Lua) - http://yueliang.luaforge.net/
			- Moonshine (improved version of Yeuliang) - https://github.com/gamesys/moonshine
]]
local compile = require(script:WaitForChild("Yueliang"))
local createExecutable = require(script:WaitForChild("FiOne"))
getfenv().script = nil

return function(source, env)
	local executable
	local env = env or getfenv(2)
	local name = (env.script and env.script:GetFullName())
	local ran, failureReason = pcall(function()
		local compiledBytecode = compile(source, name)
		executable = createExecutable(compiledBytecode, env)
	end)
	
	if ran then
		return setfenv(executable, env)
	end
	return nil, failureReason
end
end
}
--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring.FiOne
G2L_MODULES[G2L["550"]] = {
Closure = function()
local script = G2L["550"]
--[[
FiOne
Copyright (C) 2021  Rerumu

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
]] --
local bit = bit or bit32 or require('bit')

if not table.create then function table.create(_) return {} end end

if not table.unpack then table.unpack = unpack end

if not table.pack then function table.pack(...) return {n = select('#', ...), ...} end end

if not table.move then
	function table.move(src, first, last, offset, dst)
		for i = 0, last - first do dst[offset + i] = src[first + i] end
	end
end

local lua_bc_to_state
local lua_wrap_state
local stm_lua_func

-- SETLIST config
local FIELDS_PER_FLUSH = 50

-- remap for better lookup
local OPCODE_RM = {
	-- level 1
	[22] = 18, -- JMP
	[31] = 8, -- FORLOOP
	[33] = 28, -- TFORLOOP
	-- level 2
	[0] = 3, -- MOVE
	[1] = 13, -- LOADK
	[2] = 23, -- LOADBOOL
	[26] = 33, -- TEST
	-- level 3
	[12] = 1, -- ADD
	[13] = 6, -- SUB
	[14] = 10, -- MUL
	[15] = 16, -- DIV
	[16] = 20, -- MOD
	[17] = 26, -- POW
	[18] = 30, -- UNM
	[19] = 36, -- NOT
	-- level 4
	[3] = 0, -- LOADNIL
	[4] = 2, -- GETUPVAL
	[5] = 4, -- GETGLOBAL
	[6] = 7, -- GETTABLE
	[7] = 9, -- SETGLOBAL
	[8] = 12, -- SETUPVAL
	[9] = 14, -- SETTABLE
	[10] = 17, -- NEWTABLE
	[20] = 19, -- LEN
	[21] = 22, -- CONCAT
	[23] = 24, -- EQ
	[24] = 27, -- LT
	[25] = 29, -- LE
	[27] = 32, -- TESTSET
	[32] = 34, -- FORPREP
	[34] = 37, -- SETLIST
	-- level 5
	[11] = 5, -- SELF
	[28] = 11, -- CALL
	[29] = 15, -- TAILCALL
	[30] = 21, -- RETURN
	[35] = 25, -- CLOSE
	[36] = 31, -- CLOSURE
	[37] = 35, -- VARARG
}

-- opcode types for getting values
local OPCODE_T = {
	[0] = 'ABC',
	'ABx',
	'ABC',
	'ABC',
	'ABC',
	'ABx',
	'ABC',
	'ABx',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'AsBx',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'AsBx',
	'AsBx',
	'ABC',
	'ABC',
	'ABC',
	'ABx',
	'ABC',
}

local OPCODE_M = {
	[0] = {b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgR'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgR', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgN', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgN', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
}

-- int rd_int_basic(string src, int s, int e, int d)
-- @src - Source binary string
-- @s - Start index of a little endian integer
-- @e - End index of the integer
-- @d - Direction of the loop
local function rd_int_basic(src, s, e, d)
	local num = 0

	-- if bb[l] > 127 then -- signed negative
	-- 	num = num - 256 ^ l
	-- 	bb[l] = bb[l] - 128
	-- end

	for i = s, e, d do
		local mul = 256 ^ math.abs(i - s)

		num = num + mul * string.byte(src, i, i)
	end

	return num
end

-- float rd_flt_basic(byte f1..8)
-- @f1..4 - The 4 bytes composing a little endian float
local function rd_flt_basic(f1, f2, f3, f4)
	local sign = (-1) ^ bit.rshift(f4, 7)
	local exp = bit.rshift(f3, 7) + bit.lshift(bit.band(f4, 0x7F), 1)
	local frac = f1 + bit.lshift(f2, 8) + bit.lshift(bit.band(f3, 0x7F), 16)
	local normal = 1

	if exp == 0 then
		if frac == 0 then
			return sign * 0
		else
			normal = 0
			exp = 1
		end
	elseif exp == 0x7F then
		if frac == 0 then
			return sign * (1 / 0)
		else
			return sign * (0 / 0)
		end
	end

	return sign * 2 ^ (exp - 127) * (1 + normal / 2 ^ 23)
end

-- double rd_dbl_basic(byte f1..8)
-- @f1..8 - The 8 bytes composing a little endian double
local function rd_dbl_basic(f1, f2, f3, f4, f5, f6, f7, f8)
	local sign = (-1) ^ bit.rshift(f8, 7)
	local exp = bit.lshift(bit.band(f8, 0x7F), 4) + bit.rshift(f7, 4)
	local frac = bit.band(f7, 0x0F) * 2 ^ 48
	local normal = 1

	frac = frac + (f6 * 2 ^ 40) + (f5 * 2 ^ 32) + (f4 * 2 ^ 24) + (f3 * 2 ^ 16) + (f2 * 2 ^ 8) + f1 -- help

	if exp == 0 then
		if frac == 0 then
			return sign * 0
		else
			normal = 0
			exp = 1
		end
	elseif exp == 0x7FF then
		if frac == 0 then
			return sign * (1 / 0)
		else
			return sign * (0 / 0)
		end
	end

	return sign * 2 ^ (exp - 1023) * (normal + frac / 2 ^ 52)
end

-- int rd_int_le(string src, int s, int e)
-- @src - Source binary string
-- @s - Start index of a little endian integer
-- @e - End index of the integer
local function rd_int_le(src, s, e) return rd_int_basic(src, s, e - 1, 1) end

-- int rd_int_be(string src, int s, int e)
-- @src - Source binary string
-- @s - Start index of a big endian integer
-- @e - End index of the integer
local function rd_int_be(src, s, e) return rd_int_basic(src, e - 1, s, -1) end

-- float rd_flt_le(string src, int s)
-- @src - Source binary string
-- @s - Start index of little endian float
local function rd_flt_le(src, s) return rd_flt_basic(string.byte(src, s, s + 3)) end

-- float rd_flt_be(string src, int s)
-- @src - Source binary string
-- @s - Start index of big endian float
local function rd_flt_be(src, s)
	local f1, f2, f3, f4 = string.byte(src, s, s + 3)
	return rd_flt_basic(f4, f3, f2, f1)
end

-- double rd_dbl_le(string src, int s)
-- @src - Source binary string
-- @s - Start index of little endian double
local function rd_dbl_le(src, s) return rd_dbl_basic(string.byte(src, s, s + 7)) end

-- double rd_dbl_be(string src, int s)
-- @src - Source binary string
-- @s - Start index of big endian double
local function rd_dbl_be(src, s)
	local f1, f2, f3, f4, f5, f6, f7, f8 = string.byte(src, s, s + 7) -- same
	return rd_dbl_basic(f8, f7, f6, f5, f4, f3, f2, f1)
end

-- to avoid nested ifs in deserializing
local float_types = {
	[4] = {little = rd_flt_le, big = rd_flt_be},
	[8] = {little = rd_dbl_le, big = rd_dbl_be},
}

-- byte stm_byte(Stream S)
-- @S - Stream object to read from
local function stm_byte(S)
	local idx = S.index
	local bt = string.byte(S.source, idx, idx)

	S.index = idx + 1
	return bt
end

-- string stm_string(Stream S, int len)
-- @S - Stream object to read from
-- @len - Length of string being read
local function stm_string(S, len)
	local pos = S.index + len
	local str = string.sub(S.source, S.index, pos - 1)

	S.index = pos
	return str
end

-- string stm_lstring(Stream S)
-- @S - Stream object to read from
local function stm_lstring(S)
	local len = S:s_szt()
	local str

	if len ~= 0 then str = string.sub(stm_string(S, len), 1, -2) end

	return str
end

-- fn cst_int_rdr(string src, int len, fn func)
-- @len - Length of type for reader
-- @func - Reader callback
local function cst_int_rdr(len, func)
	return function(S)
		local pos = S.index + len
		local int = func(S.source, S.index, pos)
		S.index = pos

		return int
	end
end

-- fn cst_flt_rdr(string src, int len, fn func)
-- @len - Length of type for reader
-- @func - Reader callback
local function cst_flt_rdr(len, func)
	return function(S)
		local flt = func(S.source, S.index)
		S.index = S.index + len

		return flt
	end
end

local function stm_inst_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		local ins = S:s_ins()
		local op = bit.band(ins, 0x3F)
		local args = OPCODE_T[op]
		local mode = OPCODE_M[op]
		local data = {value = ins, op = OPCODE_RM[op], A = bit.band(bit.rshift(ins, 6), 0xFF)}

		if args == 'ABC' then
			data.B = bit.band(bit.rshift(ins, 23), 0x1FF)
			data.C = bit.band(bit.rshift(ins, 14), 0x1FF)
			data.is_KB = mode.b == 'OpArgK' and data.B > 0xFF -- post process optimization
			data.is_KC = mode.c == 'OpArgK' and data.C > 0xFF
		elseif args == 'ABx' then
			data.Bx = bit.band(bit.rshift(ins, 14), 0x3FFFF)
			data.is_K = mode.b == 'OpArgK'
		elseif args == 'AsBx' then
			data.sBx = bit.band(bit.rshift(ins, 14), 0x3FFFF) - 131071
		end

		list[i] = data
	end

	return list
end

local function stm_const_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		local tt = stm_byte(S)
		local k

		if tt == 1 then
			k = stm_byte(S) ~= 0
		elseif tt == 3 then
			k = S:s_num()
		elseif tt == 4 then
			k = stm_lstring(S)
		end

		list[i] = k -- offset +1 during instruction decode
	end

	return list
end

local function stm_sub_list(S, src)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		list[i] = stm_lua_func(S, src) -- offset +1 in CLOSURE
	end

	return list
end

local function stm_line_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = S:s_int() end

	return list
end

local function stm_loc_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = {varname = stm_lstring(S), startpc = S:s_int(), endpc = S:s_int()} end

	return list
end

local function stm_upval_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = stm_lstring(S) end

	return list
end

function stm_lua_func(S, psrc)
	local proto = {}
	local src = stm_lstring(S) or psrc -- source is propagated

	proto.source = src -- source name

	S:s_int() -- line defined
	S:s_int() -- last line defined

	proto.num_upval = stm_byte(S) -- num upvalues
	proto.num_param = stm_byte(S) -- num params

	stm_byte(S) -- vararg flag
	proto.max_stack = stm_byte(S) -- max stack size

	proto.code = stm_inst_list(S)
	proto.const = stm_const_list(S)
	proto.subs = stm_sub_list(S, src)
	proto.lines = stm_line_list(S)

	stm_loc_list(S)
	stm_upval_list(S)

	-- post process optimization
	for _, v in ipairs(proto.code) do
		if v.is_K then
			v.const = proto.const[v.Bx + 1] -- offset for 1 based index
		else
			if v.is_KB then v.const_B = proto.const[v.B - 0xFF] end

			if v.is_KC then v.const_C = proto.const[v.C - 0xFF] end
		end
	end

	return proto
end

function lua_bc_to_state(src)
	-- func reader
	local rdr_func

	-- header flags
	local little
	local size_int
	local size_szt
	local size_ins
	local size_num
	local flag_int

	-- stream object
	local stream = {
		-- data
		index = 1,
		source = src,
	}

	assert(stm_string(stream, 4) == '\27Lua', 'invalid Lua signature')
	assert(stm_byte(stream) == 0x51, 'invalid Lua version')
	assert(stm_byte(stream) == 0, 'invalid Lua format')

	little = stm_byte(stream) ~= 0
	size_int = stm_byte(stream)
	size_szt = stm_byte(stream)
	size_ins = stm_byte(stream)
	size_num = stm_byte(stream)
	flag_int = stm_byte(stream) ~= 0

	rdr_func = little and rd_int_le or rd_int_be
	stream.s_int = cst_int_rdr(size_int, rdr_func)
	stream.s_szt = cst_int_rdr(size_szt, rdr_func)
	stream.s_ins = cst_int_rdr(size_ins, rdr_func)

	if flag_int then
		stream.s_num = cst_int_rdr(size_num, rdr_func)
	elseif float_types[size_num] then
		stream.s_num = cst_flt_rdr(size_num, float_types[size_num][little and 'little' or 'big'])
	else
		error('unsupported float size')
	end

	return stm_lua_func(stream, '@virtual')
end

local function close_lua_upvalues(list, index)
	for i, uv in pairs(list) do
		if uv.index >= index then
			uv.value = uv.store[uv.index] -- store value
			uv.store = uv
			uv.index = 'value' -- self reference
			list[i] = nil
		end
	end
end

local function open_lua_upvalue(list, index, memory)
	local prev = list[index]

	if not prev then
		prev = {index = index, store = memory}
		list[index] = prev
	end

	return prev
end

local function on_lua_error(failed, err)
	local src = failed.source
	local line = failed.lines[failed.pc - 1]

	error(string.format('%s:%i: %s', src, line, err), 0)
end

local function run_lua_func(state, env, upvals)
	local code = state.code
	local subs = state.subs
	local vararg = state.vararg

	local top_index = -1
	local open_list = {}
	local memory = state.memory
	local pc = state.pc

	while true do
		local inst = code[pc]
		local op = inst.op
		pc = pc + 1

		if op < 18 then
			if op < 8 then
				if op < 3 then
					if op < 1 then
						--[[LOADNIL]]
						for i = inst.A, inst.B do memory[i] = nil end
					elseif op > 1 then
						--[[GETUPVAL]]
						local uv = upvals[inst.B]

						memory[inst.A] = uv.store[uv.index]
					else
						--[[ADD]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs + rhs
					end
				elseif op > 3 then
					if op < 6 then
						if op > 4 then
							--[[SELF]]
							local A = inst.A
							local B = inst.B
							local index

							if inst.is_KC then
								index = inst.const_C
							else
								index = memory[inst.C]
							end

							memory[A + 1] = memory[B]
							memory[A] = memory[B][index]
						else
							--[[GETGLOBAL]]
							memory[inst.A] = env[inst.const]
						end
					elseif op > 6 then
						--[[GETTABLE]]
						local index

						if inst.is_KC then
							index = inst.const_C
						else
							index = memory[inst.C]
						end

						memory[inst.A] = memory[inst.B][index]
					else
						--[[SUB]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs - rhs
					end
				else --[[MOVE]]
					memory[inst.A] = memory[inst.B]
				end
			elseif op > 8 then
				if op < 13 then
					if op < 10 then
						--[[SETGLOBAL]]
						env[inst.const] = memory[inst.A]
					elseif op > 10 then
						if op < 12 then
							--[[CALL]]
							local A = inst.A
							local B = inst.B
							local C = inst.C
							local params

							if B == 0 then
								params = top_index - A
							else
								params = B - 1
							end

							local ret_list = table.pack(memory[A](table.unpack(memory, A + 1, A + params)))
							local ret_num = ret_list.n

							if C == 0 then
								top_index = A + ret_num - 1
							else
								ret_num = C - 1
							end

							table.move(ret_list, 1, ret_num, A, memory)
						else
							--[[SETUPVAL]]
							local uv = upvals[inst.B]

							uv.store[uv.index] = memory[inst.A]
						end
					else
						--[[MUL]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs * rhs
					end
				elseif op > 13 then
					if op < 16 then
						if op > 14 then
							--[[TAILCALL]]
							local A = inst.A
							local B = inst.B
							local params

							if B == 0 then
								params = top_index - A
							else
								params = B - 1
							end

							close_lua_upvalues(open_list, 0)

							return memory[A](table.unpack(memory, A + 1, A + params))
						else
							--[[SETTABLE]]
							local index, value

							if inst.is_KB then
								index = inst.const_B
							else
								index = memory[inst.B]
							end

							if inst.is_KC then
								value = inst.const_C
							else
								value = memory[inst.C]
							end

							memory[inst.A][index] = value
						end
					elseif op > 16 then
						--[[NEWTABLE]]
						memory[inst.A] = {}
					else
						--[[DIV]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs / rhs
					end
				else
					--[[LOADK]]
					memory[inst.A] = inst.const
				end
			else
				--[[FORLOOP]]
				local A = inst.A
				local step = memory[A + 2]
				local index = memory[A] + step
				local limit = memory[A + 1]
				local loops

				if step == math.abs(step) then
					loops = index <= limit
				else
					loops = index >= limit
				end

				if loops then
					memory[inst.A] = index
					memory[inst.A + 3] = index
					pc = pc + inst.sBx
				end
			end
		elseif op > 18 then
			if op < 28 then
				if op < 23 then
					if op < 20 then
						--[[LEN]]
						memory[inst.A] = #memory[inst.B]
					elseif op > 20 then
						if op < 22 then
							--[[RETURN]]
							local A = inst.A
							local B = inst.B
							local len

							if B == 0 then
								len = top_index - A + 1
							else
								len = B - 1
							end

							close_lua_upvalues(open_list, 0)

							return table.unpack(memory, A, A + len - 1)
						else
							--[[CONCAT]]
							local str = memory[inst.B]

							for i = inst.B + 1, inst.C do str = str .. memory[i] end

							memory[inst.A] = str
						end
					else
						--[[MOD]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs % rhs
					end
				elseif op > 23 then
					if op < 26 then
						if op > 24 then
							--[[CLOSE]]
							close_lua_upvalues(open_list, inst.A)
						else
							--[[EQ]]
							local lhs, rhs

							if inst.is_KB then
								lhs = inst.const_B
							else
								lhs = memory[inst.B]
							end

							if inst.is_KC then
								rhs = inst.const_C
							else
								rhs = memory[inst.C]
							end

							if (lhs == rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

							pc = pc + 1
						end
					elseif op > 26 then
						--[[LT]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						if (lhs < rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

						pc = pc + 1
					else
						--[[POW]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs ^ rhs
					end
				else
					--[[LOADBOOL]]
					memory[inst.A] = inst.B ~= 0

					if inst.C ~= 0 then pc = pc + 1 end
				end
			elseif op > 28 then
				if op < 33 then
					if op < 30 then
						--[[LE]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						if (lhs <= rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

						pc = pc + 1
					elseif op > 30 then
						if op < 32 then
							--[[CLOSURE]]
							local sub = subs[inst.Bx + 1] -- offset for 1 based index
							local nups = sub.num_upval
							local uvlist

							if nups ~= 0 then
								uvlist = {}

								for i = 1, nups do
									local pseudo = code[pc + i - 1]

									if pseudo.op == OPCODE_RM[0] then -- @MOVE
										uvlist[i - 1] = open_lua_upvalue(open_list, pseudo.B, memory)
									elseif pseudo.op == OPCODE_RM[4] then -- @GETUPVAL
										uvlist[i - 1] = upvals[pseudo.B]
									end
								end

								pc = pc + nups
							end

							memory[inst.A] = lua_wrap_state(sub, env, uvlist)
						else
							--[[TESTSET]]
							local A = inst.A
							local B = inst.B

							if (not memory[B]) ~= (inst.C ~= 0) then
								memory[A] = memory[B]
								pc = pc + code[pc].sBx
							end
							pc = pc + 1
						end
					else
						--[[UNM]]
						memory[inst.A] = -memory[inst.B]
					end
				elseif op > 33 then
					if op < 36 then
						if op > 34 then
							--[[VARARG]]
							local A = inst.A
							local len = inst.B

							if len == 0 then
								len = vararg.len
								top_index = A + len - 1
							end

							table.move(vararg.list, 1, len, A, memory)
						else
							--[[FORPREP]]
							local A = inst.A
							local init, limit, step

							init = assert(tonumber(memory[A]), '`for` initial value must be a number')
							limit = assert(tonumber(memory[A + 1]), '`for` limit must be a number')
							step = assert(tonumber(memory[A + 2]), '`for` step must be a number')

							memory[A] = init - step
							memory[A + 1] = limit
							memory[A + 2] = step

							pc = pc + inst.sBx
						end
					elseif op > 36 then
						--[[SETLIST]]
						local A = inst.A
						local C = inst.C
						local len = inst.B
						local tab = memory[A]
						local offset

						if len == 0 then len = top_index - A end

						if C == 0 then
							C = inst[pc].value
							pc = pc + 1
						end

						offset = (C - 1) * FIELDS_PER_FLUSH

						table.move(memory, A + 1, A + len, offset + 1, tab)
					else
						--[[NOT]]
						memory[inst.A] = not memory[inst.B]
					end
				else
					--[[TEST]]
					if (not memory[inst.A]) ~= (inst.C ~= 0) then pc = pc + code[pc].sBx end
					pc = pc + 1
				end
			else
				--[[TFORLOOP]]
				local A = inst.A
				local base = A + 3

				local vals = {memory[A](memory[A + 1], memory[A + 2])}

				table.move(vals, 1, inst.C, base, memory)

				if memory[base] ~= nil then
					memory[A + 2] = memory[base]
					pc = pc + code[pc].sBx
				end

				pc = pc + 1
			end
		else
			--[[JMP]]
			pc = pc + inst.sBx
		end

		state.pc = pc
	end
end

function lua_wrap_state(proto, env, upval)
	local function wrapped(...)
		local passed = table.pack(...)
		local memory = table.create(proto.max_stack)
		local vararg = {len = 0, list = {}}

		table.move(passed, 1, proto.num_param, 0, memory)

		if proto.num_param < passed.n then
			local start = proto.num_param + 1
			local len = passed.n - proto.num_param

			vararg.len = len
			table.move(passed, start, start + len - 1, 1, vararg.list)
		end

		local state = {vararg = vararg, memory = memory, code = proto.code, subs = proto.subs, pc = 1}

		local result = table.pack(pcall(run_lua_func, state, env, upval))

		if result[1] then
			return table.unpack(result, 2, result.n)
		else
			local failed = {pc = state.pc, source = proto.source, lines = proto.lines}

			on_lua_error(failed, result[2])

			return
		end
	end

	return wrapped
end

return function(bCode, env)
	return lua_wrap_state(lua_bc_to_state(bCode), env or getfenv(0))
end
end
}
--ScreenGui.ssGUIv7.Synapse.Frame.exe.Script.Loadstring.Yueliang
G2L_MODULES[G2L["551"]] = {
Closure = function()
local script = G2L["551"]
-- Adapted from the amazing Yueliang project
-- http://yueliang.luaforge.net/


--[[--------------------------------------------------------------------

luac.lua
Primitive luac in Lua
This file is part of Yueliang.

Copyright (c) 2005-2007 Kein-Hong Man <khman@users.sf.net>
The COPYRIGHT file describes the conditions
under which this software may be distributed.

See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * based on luac.lua in the test directory of the 5.1.2 distribution
-- * usage: lua luac.lua file.lua
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- load and initialize the required modules
------------------------------------------------------------------------
local luaZ = {}
local luaY = {}
local luaX = {}
local luaP = {}
local luaU = {}
local luaK = {}
local size_size_t = 8


-- currently asserts are enabled because the codebase hasn't been tested
-- much (if you don't want asserts, just comment them out)
local function lua_assert(test)
	if not test then error("assertion failed!") end
end



-- dofile("lzio.lua")


------------------------------------------------------------------------
-- * reader() should return a string, or nil if nothing else to parse.
--   Additional data can be set only during stream initialization
-- * Readers are handled in lauxlib.c, see luaL_load(file|buffer|string)
-- * LUAL_BUFFERSIZE=BUFSIZ=512 in make_getF() (located in luaconf.h)
-- * Original Reader typedef:
--   const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);
-- * This Lua chunk reader implementation:
--   returns string or nil, no arguments to function
------------------------------------------------------------------------

------------------------------------------------------------------------
-- create a chunk reader from a source string
------------------------------------------------------------------------
function luaZ:make_getS(buff)
	local b = buff
	return function() -- chunk reader anonymous function here
		if not b then return nil end
		local data = b
		b = nil
		return data
	end
end

------------------------------------------------------------------------
-- create a chunk reader from a source file
------------------------------------------------------------------------
-- function luaZ:make_getF(filename)
--   local LUAL_BUFFERSIZE = 512
--   local h = io.open(filename, "r")
--   if not h then return nil end
--   return function() -- chunk reader anonymous function here
--     if not h or io.type(h) == "closed file" then return nil end
--     local buff = h:read(LUAL_BUFFERSIZE)
--     if not buff then h:close(); h = nil end
--     return buff
--   end
-- end

function luaZ:make_getF(source)
	local LUAL_BUFFERSIZE = 512
	local pos = 1

	return function() -- chunk reader anonymous function here
		local buff = source:sub(pos, pos + LUAL_BUFFERSIZE - 1)
		pos = math.min(#source + 1, pos + LUAL_BUFFERSIZE)
		return buff
	end
end


------------------------------------------------------------------------
-- creates a zio input stream
-- returns the ZIO structure, z
------------------------------------------------------------------------
function luaZ:init(reader, data)
	if not reader then return end
	local z = {}
	z.reader = reader
	z.data = data or ""
	z.name = name
	-- set up additional data for reading
	if not data or data == "" then z.n = 0 else z.n = #data end
	z.p = 0
	return z
end

------------------------------------------------------------------------
-- fill up input buffer
------------------------------------------------------------------------
function luaZ:fill(z)
	local buff = z.reader()
	z.data = buff
	if not buff or buff == "" then return "EOZ" end
	z.n, z.p = #buff - 1, 1
	return string.sub(buff, 1, 1)
end

------------------------------------------------------------------------
-- get next character from the input stream
-- * local n, p are used to optimize code generation
------------------------------------------------------------------------
function luaZ:zgetc(z)
	local n, p = z.n, z.p + 1
	if n > 0 then
		z.n, z.p = n - 1, p
		return string.sub(z.data, p, p)
	else
		return self:fill(z)
	end
end





-- dofile("llex.lua")

-- FIRST_RESERVED is not required as tokens are manipulated as strings
-- TOKEN_LEN deleted; maximum length of a reserved word not needed

------------------------------------------------------------------------
-- "ORDER RESERVED" deleted; enumeration in one place: luaX.RESERVED
------------------------------------------------------------------------

-- terminal symbols denoted by reserved words: TK_AND to TK_WHILE
-- other terminal symbols: TK_NAME to TK_EOS
luaX.RESERVED = [[
TK_AND and
TK_BREAK break
TK_DO do
TK_ELSE else
TK_ELSEIF elseif
TK_END end
TK_FALSE false
TK_FOR for
TK_FUNCTION function
TK_IF if
TK_IN in
TK_LOCAL local
TK_NIL nil
TK_NOT not
TK_OR or
TK_REPEAT repeat
TK_RETURN return
TK_THEN then
TK_TRUE true
TK_UNTIL until
TK_WHILE while
TK_CONCAT ..
TK_DOTS ...
TK_EQ ==
TK_GE >=
TK_LE <=
TK_NE ~=
TK_NAME <name>
TK_NUMBER <number>
TK_STRING <string>
TK_EOS <eof>]]

-- NUM_RESERVED is not required; number of reserved words

--[[--------------------------------------------------------------------
-- Instead of passing seminfo, the Token struct (e.g. ls.t) is passed
-- so that lexer functions can use its table element, ls.t.seminfo
--
-- SemInfo (struct no longer needed, a mixed-type value is used)
--
-- Token (struct of ls.t and ls.lookahead):
--   token  -- token symbol
--   seminfo  -- semantics information
--
-- LexState (struct of ls; ls is initialized by luaX:setinput):
--   current  -- current character (charint)
--   linenumber  -- input line counter
--   lastline  -- line of last token 'consumed'
--   t  -- current token (table: struct Token)
--   lookahead  -- look ahead token (table: struct Token)
--   fs  -- 'FuncState' is private to the parser
--   L -- LuaState
--   z  -- input stream
--   buff  -- buffer for tokens
--   source  -- current source name
--   decpoint -- locale decimal point
--   nestlevel  -- level of nested non-terminals
----------------------------------------------------------------------]]

-- luaX.tokens (was luaX_tokens) is now a hash; see luaX:init

luaX.MAXSRC = 80
luaX.MAX_INT = 2147483645       -- constants from elsewhere (see above)
luaX.LUA_QS = "'%s'"
luaX.LUA_COMPAT_LSTR = 1
--luaX.MAX_SIZET = 4294967293

------------------------------------------------------------------------
-- initialize lexer
-- * original luaX_init has code to create and register token strings
-- * luaX.tokens: TK_* -> token
-- * luaX.enums:  token -> TK_* (used in luaX:llex)
------------------------------------------------------------------------
function luaX:init()
	local tokens, enums = {}, {}
	for v in string.gmatch(self.RESERVED, "[^\n]+") do
		local _, _, tok, str = string.find(v, "(%S+)%s+(%S+)")
		tokens[tok] = str
		enums[str] = tok
	end
	self.tokens = tokens
	self.enums = enums
end

------------------------------------------------------------------------
-- returns a suitably-formatted chunk name or id
-- * from lobject.c, used in llex.c and ldebug.c
-- * the result, out, is returned (was first argument)
------------------------------------------------------------------------
function luaX:chunkid(source, bufflen)
	local out
	local first = string.sub(source, 1, 1)
	if first == "=" then
		out = string.sub(source, 2, bufflen)  -- remove first char
	else  -- out = "source", or "...source"
		if first == "@" then
			source = string.sub(source, 2)  -- skip the '@'
			bufflen = bufflen - #" '...' "
			local l = #source
			out = ""
			if l > bufflen then
				source = string.sub(source, 1 + l - bufflen)  -- get last part of file name
				out = out.."..."
			end
			out = out..source
		else  -- out = [string "string"]
			local len = string.find(source, "[\n\r]")  -- stop at first newline
			len = len and (len - 1) or #source
			bufflen = bufflen - #(" [string \"...\"] ")
			if len > bufflen then len = bufflen end
			out = "[string \""
			if len < #source then  -- must truncate?
				out = out..string.sub(source, 1, len).."..."
			else
				out = out..source
			end
			out = out.."\"]"
		end
	end
	return out
end

--[[--------------------------------------------------------------------
-- Support functions for lexer
-- * all lexer errors eventually reaches lexerror:
		 syntaxerror -> lexerror
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- look up token and return keyword if found (also called by parser)
------------------------------------------------------------------------
function luaX:token2str(ls, token)
	if string.sub(token, 1, 3) ~= "TK_" then
		if string.find(token, "%c") then
			return string.format("char(%d)", string.byte(token))
		end
		return token
	else
		return self.tokens[token]
	end
end

------------------------------------------------------------------------
-- throws a lexer error
-- * txtToken has been made local to luaX:lexerror
-- * can't communicate LUA_ERRSYNTAX, so it is unimplemented
------------------------------------------------------------------------
function luaX:lexerror(ls, msg, token)
	local function txtToken(ls, token)
		if token == "TK_NAME" or
			token == "TK_STRING" or
			token == "TK_NUMBER" then
			return ls.buff
		else
			return self:token2str(ls, token)
		end
	end
	local buff = self:chunkid(ls.source, self.MAXSRC)
	local msg = string.format("%s:%d: %s", buff, ls.linenumber, msg)
	if token then
		msg = string.format("%s near "..self.LUA_QS, msg, txtToken(ls, token))
	end
	-- luaD_throw(ls->L, LUA_ERRSYNTAX)
	error(msg)
end

------------------------------------------------------------------------
-- throws a syntax error (mainly called by parser)
-- * ls.t.token has to be set by the function calling luaX:llex
--   (see luaX:next and luaX:lookahead elsewhere in this file)
------------------------------------------------------------------------
function luaX:syntaxerror(ls, msg)
	self:lexerror(ls, msg, ls.t.token)
end

------------------------------------------------------------------------
-- move on to next line
------------------------------------------------------------------------
function luaX:currIsNewline(ls)
	return ls.current == "\n" or ls.current == "\r"
end

function luaX:inclinenumber(ls)
	local old = ls.current
	-- lua_assert(currIsNewline(ls))
	self:nextc(ls)  -- skip '\n' or '\r'
	if self:currIsNewline(ls) and ls.current ~= old then
		self:nextc(ls)  -- skip '\n\r' or '\r\n'
	end
	ls.linenumber = ls.linenumber + 1
	if ls.linenumber >= self.MAX_INT then
		self:syntaxerror(ls, "chunk has too many lines")
	end
end

------------------------------------------------------------------------
-- initializes an input stream for lexing
-- * if ls (the lexer state) is passed as a table, then it is filled in,
--   otherwise it has to be retrieved as a return value
-- * LUA_MINBUFFER not used; buffer handling not required any more
------------------------------------------------------------------------
function luaX:setinput(L, ls, z, source)
	if not ls then ls = {} end  -- create struct
	if not ls.lookahead then ls.lookahead = {} end
	if not ls.t then ls.t = {} end
	ls.decpoint = "."
	ls.L = L
	ls.lookahead.token = "TK_EOS"  -- no look-ahead token
	ls.z = z
	ls.fs = nil
	ls.linenumber = 1
	ls.lastline = 1
	ls.source = source
	self:nextc(ls)  -- read first char
end

--[[--------------------------------------------------------------------
-- LEXICAL ANALYZER
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks if current character read is found in the set 'set'
------------------------------------------------------------------------
function luaX:check_next(ls, set)
	if not string.find(set, ls.current, 1, 1) then
		return false
	end
	self:save_and_next(ls)
	return true
end

------------------------------------------------------------------------
-- retrieve next token, checking the lookahead buffer if necessary
-- * note that the macro next(ls) in llex.c is now luaX:nextc
-- * utilized used in lparser.c (various places)
------------------------------------------------------------------------
function luaX:next(ls)
	ls.lastline = ls.linenumber
	if ls.lookahead.token ~= "TK_EOS" then  -- is there a look-ahead token?
		-- this must be copy-by-value
		ls.t.seminfo = ls.lookahead.seminfo  -- use this one
		ls.t.token = ls.lookahead.token
		ls.lookahead.token = "TK_EOS"  -- and discharge it
	else
		ls.t.token = self:llex(ls, ls.t)  -- read next token
	end
end

------------------------------------------------------------------------
-- fill in the lookahead buffer
-- * utilized used in lparser.c:constructor
------------------------------------------------------------------------
function luaX:lookahead(ls)
	-- lua_assert(ls.lookahead.token == "TK_EOS")
	ls.lookahead.token = self:llex(ls, ls.lookahead)
end

------------------------------------------------------------------------
-- gets the next character and returns it
-- * this is the next() macro in llex.c; see notes at the beginning
------------------------------------------------------------------------
function luaX:nextc(ls)
	local c = luaZ:zgetc(ls.z)
	ls.current = c
	return c
end

------------------------------------------------------------------------
-- saves the given character into the token buffer
-- * buffer handling code removed, not used in this implementation
-- * test for maximum token buffer length not used, makes things faster
------------------------------------------------------------------------

function luaX:save(ls, c)
	local buff = ls.buff
	-- if you want to use this, please uncomment luaX.MAX_SIZET further up
	--if #buff > self.MAX_SIZET then
	--  self:lexerror(ls, "lexical element too long")
	--end
	ls.buff = buff..c
end

------------------------------------------------------------------------
-- save current character into token buffer, grabs next character
-- * like luaX:nextc, returns the character read for convenience
------------------------------------------------------------------------
function luaX:save_and_next(ls)
	self:save(ls, ls.current)
	return self:nextc(ls)
end

------------------------------------------------------------------------
-- LUA_NUMBER
-- * luaX:read_numeral is the main lexer function to read a number
-- * luaX:str2d, luaX:buffreplace, luaX:trydecpoint are support functions
------------------------------------------------------------------------

------------------------------------------------------------------------
-- string to number converter (was luaO_str2d from lobject.c)
-- * returns the number, nil if fails (originally returns a boolean)
-- * conversion function originally lua_str2number(s,p), a macro which
--   maps to the strtod() function by default (from luaconf.h)
------------------------------------------------------------------------
function luaX:str2d(s)
	local result = tonumber(s)
	if result then return result end
	-- conversion failed
	if string.lower(string.sub(s, 1, 2)) == "0x" then  -- maybe an hexadecimal constant?
		result = tonumber(s, 16)
		if result then return result end  -- most common case
		-- Was: invalid trailing characters?
		-- In C, this function then skips over trailing spaces.
		-- true is returned if nothing else is found except for spaces.
		-- If there is still something else, then it returns a false.
		-- All this is not necessary using Lua's tonumber.
	end
	return nil
end

------------------------------------------------------------------------
-- single-character replacement, for locale-aware decimal points
------------------------------------------------------------------------
function luaX:buffreplace(ls, from, to)
	local result, buff = "", ls.buff
	for p = 1, #buff do
		local c = string.sub(buff, p, p)
		if c == from then c = to end
		result = result..c
	end
	ls.buff = result
end

------------------------------------------------------------------------
-- Attempt to convert a number by translating '.' decimal points to
-- the decimal point character used by the current locale. This is not
-- needed in Yueliang as Lua's tonumber() is already locale-aware.
-- Instead, the code is here in case the user implements localeconv().
------------------------------------------------------------------------
function luaX:trydecpoint(ls, Token)
	-- format error: try to update decimal point separator
	local old = ls.decpoint
	-- translate the following to Lua if you implement localeconv():
	-- struct lconv *cv = localeconv();
	-- ls->decpoint = (cv ? cv->decimal_point[0] : '.');
	self:buffreplace(ls, old, ls.decpoint)  -- try updated decimal separator
	local seminfo = self:str2d(ls.buff)
	Token.seminfo = seminfo
	if not seminfo then
		-- format error with correct decimal point: no more options
		self:buffreplace(ls, ls.decpoint, ".")  -- undo change (for error message)
		self:lexerror(ls, "malformed number", "TK_NUMBER")
	end
end

------------------------------------------------------------------------
-- main number conversion function
-- * "^%w$" needed in the scan in order to detect "EOZ"
------------------------------------------------------------------------
function luaX:read_numeral(ls, Token)
	-- lua_assert(string.find(ls.current, "%d"))
	repeat
		self:save_and_next(ls)
	until string.find(ls.current, "%D") and ls.current ~= "."
	if self:check_next(ls, "Ee") then  -- 'E'?
		self:check_next(ls, "+-")  -- optional exponent sign
	end
	while string.find(ls.current, "^%w$") or ls.current == "_" do
		self:save_and_next(ls)
	end
	self:buffreplace(ls, ".", ls.decpoint)  -- follow locale for decimal point
	local seminfo = self:str2d(ls.buff)
	Token.seminfo = seminfo
	if not seminfo then  -- format error?
		self:trydecpoint(ls, Token) -- try to update decimal point separator
	end
end

------------------------------------------------------------------------
-- count separators ("=") in a long string delimiter
-- * used by luaX:read_long_string
------------------------------------------------------------------------
function luaX:skip_sep(ls)
	local count = 0
	local s = ls.current
	-- lua_assert(s == "[" or s == "]")
	self:save_and_next(ls)
	while ls.current == "=" do
		self:save_and_next(ls)
		count = count + 1
	end
	return (ls.current == s) and count or (-count) - 1
end

------------------------------------------------------------------------
-- reads a long string or long comment
------------------------------------------------------------------------
function luaX:read_long_string(ls, Token, sep)
	local cont = 0
	self:save_and_next(ls)  -- skip 2nd '['
	if self:currIsNewline(ls) then  -- string starts with a newline?
		self:inclinenumber(ls)  -- skip it
	end
	while true do
		local c = ls.current
		if c == "EOZ" then
			self:lexerror(ls, Token and "unfinished long string" or
				"unfinished long comment", "TK_EOS")
		elseif c == "[" then
			--# compatibility code start
			if self.LUA_COMPAT_LSTR then
				if self:skip_sep(ls) == sep then
					self:save_and_next(ls)  -- skip 2nd '['
					cont = cont + 1
					--# compatibility code start
					if self.LUA_COMPAT_LSTR == 1 then
						if sep == 0 then
							self:lexerror(ls, "nesting of [[...]] is deprecated", "[")
						end
					end
					--# compatibility code end
				end
			end
			--# compatibility code end
		elseif c == "]" then
			if self:skip_sep(ls) == sep then
				self:save_and_next(ls)  -- skip 2nd ']'
				--# compatibility code start
				if self.LUA_COMPAT_LSTR and self.LUA_COMPAT_LSTR == 2 then
					cont = cont - 1
					if sep == 0 and cont >= 0 then break end
				end
				--# compatibility code end
				break
			end
		elseif self:currIsNewline(ls) then
			self:save(ls, "\n")
			self:inclinenumber(ls)
			if not Token then ls.buff = "" end -- avoid wasting space
		else  -- default
			if Token then
				self:save_and_next(ls)
			else
				self:nextc(ls)
			end
		end--if c
	end--while
	if Token then
		local p = 3 + sep
		Token.seminfo = string.sub(ls.buff, p, -p)
	end
end

------------------------------------------------------------------------
-- reads a string
-- * has been restructured significantly compared to the original C code
------------------------------------------------------------------------

function luaX:read_string(ls, del, Token)
	self:save_and_next(ls)
	while ls.current ~= del do
		local c = ls.current
		if c == "EOZ" then
			self:lexerror(ls, "unfinished string", "TK_EOS")
		elseif self:currIsNewline(ls) then
			self:lexerror(ls, "unfinished string", "TK_STRING")
		elseif c == "\\" then
			c = self:nextc(ls)  -- do not save the '\'
			if self:currIsNewline(ls) then  -- go through
				self:save(ls, "\n")
				self:inclinenumber(ls)
			elseif c ~= "EOZ" then -- will raise an error next loop
				-- escapes handling greatly simplified here:
				local i = string.find("abfnrtv", c, 1, 1)
				if i then
					self:save(ls, string.sub("\a\b\f\n\r\t\v", i, i))
					self:nextc(ls)
				elseif not string.find(c, "%d") then
					self:save_and_next(ls)  -- handles \\, \", \', and \?
				else  -- \xxx
					c, i = 0, 0
					repeat
						c = 10 * c + ls.current
						self:nextc(ls)
						i = i + 1
					until i >= 3 or not string.find(ls.current, "%d")
					if c > 255 then  -- UCHAR_MAX
						self:lexerror(ls, "escape sequence too large", "TK_STRING")
					end
					self:save(ls, string.char(c))
				end
			end
		else
			self:save_and_next(ls)
		end--if c
	end--while
	self:save_and_next(ls)  -- skip delimiter
	Token.seminfo = string.sub(ls.buff, 2, -2)
end

------------------------------------------------------------------------
-- main lexer function
------------------------------------------------------------------------
function luaX:llex(ls, Token)
	ls.buff = ""
	while true do
		local c = ls.current
		----------------------------------------------------------------
		if self:currIsNewline(ls) then
			self:inclinenumber(ls)
			----------------------------------------------------------------
		elseif c == "-" then
			c = self:nextc(ls)
			if c ~= "-" then return "-" end
			-- else is a comment
			local sep = -1
			if self:nextc(ls) == '[' then
				sep = self:skip_sep(ls)
				ls.buff = ""  -- 'skip_sep' may dirty the buffer
			end
			if sep >= 0 then
				self:read_long_string(ls, nil, sep)  -- long comment
				ls.buff = ""
			else  -- else short comment
				while not self:currIsNewline(ls) and ls.current ~= "EOZ" do
					self:nextc(ls)
				end
			end
			----------------------------------------------------------------
		elseif c == "[" then
			local sep = self:skip_sep(ls)
			if sep >= 0 then
				self:read_long_string(ls, Token, sep)
				return "TK_STRING"
			elseif sep == -1 then
				return "["
			else
				self:lexerror(ls, "invalid long string delimiter", "TK_STRING")
			end
			----------------------------------------------------------------
		elseif c == "=" then
			c = self:nextc(ls)
			if c ~= "=" then return "="
			else self:nextc(ls); return "TK_EQ" end
			----------------------------------------------------------------
		elseif c == "<" then
			c = self:nextc(ls)
			if c ~= "=" then return "<"
			else self:nextc(ls); return "TK_LE" end
			----------------------------------------------------------------
		elseif c == ">" then
			c = self:nextc(ls)
			if c ~= "=" then return ">"
			else self:nextc(ls); return "TK_GE" end
			----------------------------------------------------------------
		elseif c == "~" then
			c = self:nextc(ls)
			if c ~= "=" then return "~"
			else self:nextc(ls); return "TK_NE" end
			----------------------------------------------------------------
		elseif c == "\"" or c == "'" then
			self:read_string(ls, c, Token)
			return "TK_STRING"
			----------------------------------------------------------------
		elseif c == "." then
			c = self:save_and_next(ls)
			if self:check_next(ls, ".") then
				if self:check_next(ls, ".") then
					return "TK_DOTS"   -- ...
				else return "TK_CONCAT"   -- ..
				end
			elseif not string.find(c, "%d") then
				return "."
			else
				self:read_numeral(ls, Token)
				return "TK_NUMBER"
			end
			----------------------------------------------------------------
		elseif c == "EOZ" then
			return "TK_EOS"
			----------------------------------------------------------------
		else  -- default
			if string.find(c, "%s") then
				-- lua_assert(self:currIsNewline(ls))
				self:nextc(ls)
			elseif string.find(c, "%d") then
				self:read_numeral(ls, Token)
				return "TK_NUMBER"
			elseif string.find(c, "[_%a]") then
				-- identifier or reserved word
				repeat
					c = self:save_and_next(ls)
				until c == "EOZ" or not string.find(c, "[_%w]")
				local ts = ls.buff
				local tok = self.enums[ts]
				if tok then return tok end  -- reserved word?
				Token.seminfo = ts
				return "TK_NAME"
			else
				self:nextc(ls)
				return c  -- single-char tokens (+ - / ...)
			end
			----------------------------------------------------------------
		end--if c
	end--while
end





--dofile("lopcodes.lua")


--[[
===========================================================================
	We assume that instructions are unsigned numbers.
	All instructions have an opcode in the first 6 bits.
	Instructions can have the following fields:
				'A' : 8 bits
				'B' : 9 bits
				'C' : 9 bits
				'Bx' : 18 bits ('B' and 'C' together)
				'sBx' : signed Bx

	A signed argument is represented in excess K; that is, the number
	value is the unsigned value minus K. K is exactly the maximum value
	for that argument (so that -max is represented by 0, and +max is
	represented by 2*max), which is half the maximum for the corresponding
	unsigned argument.
===========================================================================
--]]

luaP.OpMode = { iABC = 0, iABx = 1, iAsBx = 2 }  -- basic instruction format

------------------------------------------------------------------------
-- size and position of opcode arguments.
-- * WARNING size and position is hard-coded elsewhere in this script
------------------------------------------------------------------------
luaP.SIZE_C  = 9
luaP.SIZE_B  = 9
luaP.SIZE_Bx = luaP.SIZE_C + luaP.SIZE_B
luaP.SIZE_A  = 8

luaP.SIZE_OP = 6

luaP.POS_OP = 0
luaP.POS_A  = luaP.POS_OP + luaP.SIZE_OP
luaP.POS_C  = luaP.POS_A + luaP.SIZE_A
luaP.POS_B  = luaP.POS_C + luaP.SIZE_C
luaP.POS_Bx = luaP.POS_C

------------------------------------------------------------------------
-- limits for opcode arguments.
-- we use (signed) int to manipulate most arguments,
-- so they must fit in LUAI_BITSINT-1 bits (-1 for sign)
------------------------------------------------------------------------
-- removed "#if SIZE_Bx < BITS_INT-1" test, assume this script is
-- running on a Lua VM with double or int as LUA_NUMBER

luaP.MAXARG_Bx  = math.ldexp(1, luaP.SIZE_Bx) - 1
luaP.MAXARG_sBx = math.floor(luaP.MAXARG_Bx / 2)  -- 'sBx' is signed

luaP.MAXARG_A = math.ldexp(1, luaP.SIZE_A) - 1
luaP.MAXARG_B = math.ldexp(1, luaP.SIZE_B) - 1
luaP.MAXARG_C = math.ldexp(1, luaP.SIZE_C) - 1

-- creates a mask with 'n' 1 bits at position 'p'
-- MASK1(n,p) deleted, not required
-- creates a mask with 'n' 0 bits at position 'p'
-- MASK0(n,p) deleted, not required

--[[--------------------------------------------------------------------
	Visual representation for reference:

	 31    |    |     |            0      bit position
		+-----+-----+-----+----------+
		|  B  |  C  |  A  |  Opcode  |      iABC format
		+-----+-----+-----+----------+
		-  9  -  9  -  8  -    6     -      field sizes
		+-----+-----+-----+----------+
		|   [s]Bx   |  A  |  Opcode  |      iABx | iAsBx format
		+-----+-----+-----+----------+

----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- the following macros help to manipulate instructions
-- * changed to a table object representation, very clean compared to
--   the [nightmare] alternatives of using a number or a string
-- * Bx is a separate element from B and C, since there is never a need
--   to split Bx in the parser or code generator
------------------------------------------------------------------------

-- these accept or return opcodes in the form of string names
function luaP:GET_OPCODE(i) return self.ROpCode[i.OP] end
function luaP:SET_OPCODE(i, o) i.OP = self.OpCode[o] end

function luaP:GETARG_A(i) return i.A end
function luaP:SETARG_A(i, u) i.A = u end

function luaP:GETARG_B(i) return i.B end
function luaP:SETARG_B(i, b) i.B = b end

function luaP:GETARG_C(i) return i.C end
function luaP:SETARG_C(i, b) i.C = b end

function luaP:GETARG_Bx(i) return i.Bx end
function luaP:SETARG_Bx(i, b) i.Bx = b end

function luaP:GETARG_sBx(i) return i.Bx - self.MAXARG_sBx end
function luaP:SETARG_sBx(i, b) i.Bx = b + self.MAXARG_sBx end

function luaP:CREATE_ABC(o,a,b,c)
	return {OP = self.OpCode[o], A = a, B = b, C = c}
end

function luaP:CREATE_ABx(o,a,bc)
	return {OP = self.OpCode[o], A = a, Bx = bc}
end

------------------------------------------------------------------------
-- create an instruction from a number (for OP_SETLIST)
------------------------------------------------------------------------
function luaP:CREATE_Inst(c)
	local o = c % 64
	c = (c - o) / 64
	local a = c % 256
	c = (c - a) / 256
	return self:CREATE_ABx(o, a, c)
end

------------------------------------------------------------------------
-- returns a 4-char string little-endian encoded form of an instruction
------------------------------------------------------------------------
function luaP:Instruction(i)
	if i.Bx then
		-- change to OP/A/B/C format
		i.C = i.Bx % 512
		i.B = (i.Bx - i.C) / 512
	end
	local I = i.A * 64 + i.OP
	local c0 = I % 256
	I = i.C * 64 + (I - c0) / 256  -- 6 bits of A left
	local c1 = I % 256
	I = i.B * 128 + (I - c1) / 256  -- 7 bits of C left
	local c2 = I % 256
	local c3 = (I - c2) / 256
	return string.char(c0, c1, c2, c3)
end

------------------------------------------------------------------------
-- decodes a 4-char little-endian string into an instruction struct
------------------------------------------------------------------------
function luaP:DecodeInst(x)
	local byte = string.byte
	local i = {}
	local I = byte(x, 1)
	local op = I % 64
	i.OP = op
	I = byte(x, 2) * 4 + (I - op) / 64  -- 2 bits of c0 left
	local a = I % 256
	i.A = a
	I = byte(x, 3) * 4 + (I - a) / 256  -- 2 bits of c1 left
	local c = I % 512
	i.C = c
	i.B = byte(x, 4) * 2 + (I - c) / 512 -- 1 bits of c2 left
	local opmode = self.OpMode[tonumber(string.sub(self.opmodes[op + 1], 7, 7))]
	if opmode ~= "iABC" then
		i.Bx = i.B * 512 + i.C
	end
	return i
end

------------------------------------------------------------------------
-- Macros to operate RK indices
-- * these use arithmetic instead of bit ops
------------------------------------------------------------------------

-- this bit 1 means constant (0 means register)
luaP.BITRK = math.ldexp(1, luaP.SIZE_B - 1)

-- test whether value is a constant
function luaP:ISK(x) return x >= self.BITRK end

-- gets the index of the constant
function luaP:INDEXK(r) return x - self.BITRK end

luaP.MAXINDEXRK = luaP.BITRK - 1

-- code a constant index as a RK value
function luaP:RKASK(x) return x + self.BITRK end

------------------------------------------------------------------------
-- invalid register that fits in 8 bits
------------------------------------------------------------------------
luaP.NO_REG = luaP.MAXARG_A

------------------------------------------------------------------------
-- R(x) - register
-- Kst(x) - constant (in constant table)
-- RK(x) == if ISK(x) then Kst(INDEXK(x)) else R(x)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- grep "ORDER OP" if you change these enums
------------------------------------------------------------------------

--[[--------------------------------------------------------------------
Lua virtual machine opcodes (enum OpCode):
------------------------------------------------------------------------
name          args    description
------------------------------------------------------------------------
OP_MOVE       A B     R(A) := R(B)
OP_LOADK      A Bx    R(A) := Kst(Bx)
OP_LOADBOOL   A B C   R(A) := (Bool)B; if (C) pc++
OP_LOADNIL    A B     R(A) := ... := R(B) := nil
OP_GETUPVAL   A B     R(A) := UpValue[B]
OP_GETGLOBAL  A Bx    R(A) := Gbl[Kst(Bx)]
OP_GETTABLE   A B C   R(A) := R(B)[RK(C)]
OP_SETGLOBAL  A Bx    Gbl[Kst(Bx)] := R(A)
OP_SETUPVAL   A B     UpValue[B] := R(A)
OP_SETTABLE   A B C   R(A)[RK(B)] := RK(C)
OP_NEWTABLE   A B C   R(A) := {} (size = B,C)
OP_SELF       A B C   R(A+1) := R(B); R(A) := R(B)[RK(C)]
OP_ADD        A B C   R(A) := RK(B) + RK(C)
OP_SUB        A B C   R(A) := RK(B) - RK(C)
OP_MUL        A B C   R(A) := RK(B) * RK(C)
OP_DIV        A B C   R(A) := RK(B) / RK(C)
OP_MOD        A B C   R(A) := RK(B) % RK(C)
OP_POW        A B C   R(A) := RK(B) ^ RK(C)
OP_UNM        A B     R(A) := -R(B)
OP_NOT        A B     R(A) := not R(B)
OP_LEN        A B     R(A) := length of R(B)
OP_CONCAT     A B C   R(A) := R(B).. ... ..R(C)
OP_JMP        sBx     pc+=sBx
OP_EQ         A B C   if ((RK(B) == RK(C)) ~= A) then pc++
OP_LT         A B C   if ((RK(B) <  RK(C)) ~= A) then pc++
OP_LE         A B C   if ((RK(B) <= RK(C)) ~= A) then pc++
OP_TEST       A C     if not (R(A) <=> C) then pc++
OP_TESTSET    A B C   if (R(B) <=> C) then R(A) := R(B) else pc++
OP_CALL       A B C   R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1))
OP_TAILCALL   A B C   return R(A)(R(A+1), ... ,R(A+B-1))
OP_RETURN     A B     return R(A), ... ,R(A+B-2)  (see note)
OP_FORLOOP    A sBx   R(A)+=R(A+2);
											if R(A) <?= R(A+1) then { pc+=sBx; R(A+3)=R(A) }
OP_FORPREP    A sBx   R(A)-=R(A+2); pc+=sBx
OP_TFORLOOP   A C     R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));
											if R(A+3) ~= nil then R(A+2)=R(A+3) else pc++
OP_SETLIST    A B C   R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B
OP_CLOSE      A       close all variables in the stack up to (>=) R(A)
OP_CLOSURE    A Bx    R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))
OP_VARARG     A B     R(A), R(A+1), ..., R(A+B-1) = vararg
----------------------------------------------------------------------]]

luaP.opnames = {}  -- opcode names
luaP.OpCode = {}   -- lookup name -> number
luaP.ROpCode = {}  -- lookup number -> name

------------------------------------------------------------------------
-- ORDER OP
------------------------------------------------------------------------
local i = 0
for v in string.gmatch([[
MOVE LOADK LOADBOOL LOADNIL GETUPVAL
GETGLOBAL GETTABLE SETGLOBAL SETUPVAL SETTABLE
NEWTABLE SELF ADD SUB MUL
DIV MOD POW UNM NOT
LEN CONCAT JMP EQ LT
LE TEST TESTSET CALL TAILCALL
RETURN FORLOOP FORPREP TFORLOOP SETLIST
CLOSE CLOSURE VARARG
]], "%S+") do
	local n = "OP_"..v
	luaP.opnames[i] = v
	luaP.OpCode[n] = i
	luaP.ROpCode[i] = n
	i = i + 1
end
luaP.NUM_OPCODES = i

--[[
===========================================================================
	Notes:
	(*) In OP_CALL, if (B == 0) then B = top. C is the number of returns - 1,
			and can be 0: OP_CALL then sets 'top' to last_result+1, so
			next open instruction (OP_CALL, OP_RETURN, OP_SETLIST) may use 'top'.
	(*) In OP_VARARG, if (B == 0) then use actual number of varargs and
			set top (like in OP_CALL with C == 0).
	(*) In OP_RETURN, if (B == 0) then return up to 'top'
	(*) In OP_SETLIST, if (B == 0) then B = 'top';
			if (C == 0) then next 'instruction' is real C
	(*) For comparisons, A specifies what condition the test should accept
			(true or false).
	(*) All 'skips' (pc++) assume that next instruction is a jump
===========================================================================
--]]

--[[--------------------------------------------------------------------
	masks for instruction properties. The format is:
	bits 0-1: op mode
	bits 2-3: C arg mode
	bits 4-5: B arg mode
	bit 6: instruction set register A
	bit 7: operator is a test

	for OpArgMask:
	OpArgN - argument is not used
	OpArgU - argument is used
	OpArgR - argument is a register or a jump offset
	OpArgK - argument is a constant or register/constant
----------------------------------------------------------------------]]

-- was enum OpArgMask
luaP.OpArgMask = { OpArgN = 0, OpArgU = 1, OpArgR = 2, OpArgK = 3 }

------------------------------------------------------------------------
-- e.g. to compare with symbols, luaP:getOpMode(...) == luaP.OpCode.iABC
-- * accepts opcode parameter as strings, e.g. "OP_MOVE"
------------------------------------------------------------------------

function luaP:getOpMode(m)
	return self.opmodes[self.OpCode[m]] % 4
end

function luaP:getBMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 16) % 4
end

function luaP:getCMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 4) % 4
end

function luaP:testAMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 64) % 2
end

function luaP:testTMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 128)
end

-- luaP_opnames[] is set above, as the luaP.opnames table

-- number of list items to accumulate before a SETLIST instruction
luaP.LFIELDS_PER_FLUSH = 50

------------------------------------------------------------------------
-- build instruction properties array
-- * deliberately coded to look like the C equivalent
------------------------------------------------------------------------
local function opmode(t, a, b, c, m)
	local luaP = luaP
	return t * 128 + a * 64 +
		luaP.OpArgMask[b] * 16 + luaP.OpArgMask[c] * 4 + luaP.OpMode[m]
end

-- ORDER OP
luaP.opmodes = {
	-- T A B C mode opcode
	opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_LOADK
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_LOADBOOL
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LOADNIL
	opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_GETUPVAL
	opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_GETGLOBAL
	opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_GETTABLE
	opmode(0, 0, "OpArgK", "OpArgN", "iABx"),     -- OP_SETGLOBAL
	opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_SETUPVAL
	opmode(0, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_SETTABLE
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_NEWTABLE
	opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_SELF
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_ADD
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_SUB
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MUL
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_DIV
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MOD
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_POW
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_UNM
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_NOT
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LEN
	opmode(0, 1, "OpArgR", "OpArgR", "iABC"),     -- OP_CONCAT
	opmode(0, 0, "OpArgR", "OpArgN", "iAsBx"),    -- OP_JMP
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_EQ
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LT
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LE
	opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TEST
	opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TESTSET
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_CALL
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_TAILCALL
	opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_RETURN
	opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORLOOP
	opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORPREP
	opmode(1, 0, "OpArgN", "OpArgU", "iABC"),     -- OP_TFORLOOP
	opmode(0, 0, "OpArgU", "OpArgU", "iABC"),     -- OP_SETLIST
	opmode(0, 0, "OpArgN", "OpArgN", "iABC"),     -- OP_CLOSE
	opmode(0, 1, "OpArgU", "OpArgN", "iABx"),     -- OP_CLOSURE
	opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_VARARG
}
-- an awkward way to set a zero-indexed table...
luaP.opmodes[0] =
	opmode(0, 1, "OpArgR", "OpArgN", "iABC")      -- OP_MOVE



--dofile("ldump.lua")

--requires luaP

-- mark for precompiled code ('<esc>Lua') (from lua.h)
luaU.LUA_SIGNATURE = "\27Lua"

-- constants used by dumper (from lua.h)
luaU.LUA_TNUMBER  = 3
luaU.LUA_TSTRING  = 4
luaU.LUA_TNIL     = 0
luaU.LUA_TBOOLEAN = 1
luaU.LUA_TNONE    = -1

-- constants for header of binary files (from lundump.h)
luaU.LUAC_VERSION    = 0x51     -- this is Lua 5.1
luaU.LUAC_FORMAT     = 0        -- this is the official format
luaU.LUAC_HEADERSIZE = 12       -- size of header of binary files

--[[--------------------------------------------------------------------
-- Additional functions to handle chunk writing
-- * to use make_setS and make_setF, see test_ldump.lua elsewhere
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- create a chunk writer that writes to a string
-- * returns the writer function and a table containing the string
-- * to get the final result, look in buff.data
------------------------------------------------------------------------
function luaU:make_setS()
	local buff = {}
	buff.data = ""
	local writer =
		function(s, buff)  -- chunk writer
		if not s then return 0 end
		buff.data = buff.data..s
		-- print (#buff.data, #s, string.byte(s,1,1), s)
		return 0
	end
	return writer, buff
end

------------------------------------------------------------------------
-- create a chunk writer that writes to a file
-- * returns the writer function and a table containing the file handle
-- * if a nil is passed, then writer should close the open file
------------------------------------------------------------------------
function luaU:make_setF(filename)
	local buff = {}
	buff.h = io.open(filename, "wb")
	if not buff.h then return nil end
	local writer =
		function(s, buff)  -- chunk writer
		if not buff.h then return 0 end
		if not s then
			if buff.h:close() then return 0 end
		else
			if buff.h:write(s) then return 0 end
		end
		return 1
	end
	return writer, buff
end

------------------------------------------------------------------------
-- works like the lobject.h version except that TObject used in these
-- scripts only has a 'value' field, no 'tt' field (native types used)
------------------------------------------------------------------------
function luaU:ttype(o)
	local tt = type(o.value)
	if tt == "number" then return self.LUA_TNUMBER
	elseif tt == "string" then return self.LUA_TSTRING
	elseif tt == "nil" then return self.LUA_TNIL
	elseif tt == "boolean" then return self.LUA_TBOOLEAN
	else
		return self.LUA_TNONE  -- the rest should not appear
	end
end

-----------------------------------------------------------------------
-- converts a IEEE754 double number to an 8-byte little-endian string
-- * luaU:from_double() and luaU:from_int() are adapted from ChunkBake
-- * supports +/- Infinity, but not denormals or NaNs
-----------------------------------------------------------------------
function luaU:from_double(x)
	local function grab_byte(v)
		local c = v % 256
		return (v - c) / 256, string.char(c)
	end
	local sign = 0
	if x < 0 then sign = 1; x = -x end
	local mantissa, exponent = math.frexp(x)
	if x == 0 then -- zero
		mantissa, exponent = 0, 0
	elseif x == 1/0 then
		mantissa, exponent = 0, 2047
	else
		mantissa = (mantissa * 2 - 1) * math.ldexp(0.5, 53)
		exponent = exponent + 1022
	end
	local v, byte = "" -- convert to bytes
	x = math.floor(mantissa)
	for i = 1,6 do
		x, byte = grab_byte(x); v = v..byte -- 47:0
	end
	x, byte = grab_byte(exponent * 16 + x); v = v..byte -- 55:48
	x, byte = grab_byte(sign * 128 + x); v = v..byte -- 63:56
	return v
end

-----------------------------------------------------------------------
-- converts a number to a little-endian 32-bit integer string
-- * input value assumed to not overflow, can be signed/unsigned
-----------------------------------------------------------------------
function luaU:from_int(x)
	local v = ""
	x = math.floor(x)
	if x < 0 then x = 4294967296 + x end  -- ULONG_MAX+1
	for i = 1, 4 do
		local c = x % 256
		v = v..string.char(c); x = math.floor(x / 256)
	end
	return v
end

--[[--------------------------------------------------------------------
-- Functions to make a binary chunk
-- * many functions have the size parameter removed, since output is
--   in the form of a string and some sizes are implicit or hard-coded
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct DumpState:
--   L  -- lua_State (not used in this script)
--   writer  -- lua_Writer (chunk writer function)
--   data  -- void* (chunk writer context or data already written)
--   strip  -- if true, don't write any debug information
--   status  -- if non-zero, an error has occured
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- dumps a block of bytes
-- * lua_unlock(D.L), lua_lock(D.L) unused
------------------------------------------------------------------------
function luaU:DumpBlock(b, D)
	if D.status == 0 then
		-- lua_unlock(D->L);
		D.status = D.write(b, D.data)
		-- lua_lock(D->L);
	end
end

------------------------------------------------------------------------
-- dumps a char
------------------------------------------------------------------------
function luaU:DumpChar(y, D)
	self:DumpBlock(string.char(y), D)
end

------------------------------------------------------------------------
-- dumps a 32-bit signed or unsigned integer (for int) (hard-coded)
------------------------------------------------------------------------
function luaU:DumpInt(x, D)
	self:DumpBlock(self:from_int(x), D)
end

------------------------------------------------------------------------
-- dumps a 32-bit signed or unsigned integer (for int) (hard-coded)
------------------------------------------------------------------------
function luaU:DumpSizeT(x, D)
	self:DumpBlock(self:from_int(x), D)
	if size_size_t == 8 then
		self:DumpBlock(self:from_int(0), D)
	end
end

------------------------------------------------------------------------
-- dumps a lua_Number (hard-coded as a double)
------------------------------------------------------------------------
function luaU:DumpNumber(x, D)
	self:DumpBlock(self:from_double(x), D)
end

------------------------------------------------------------------------
-- dumps a Lua string (size type is hard-coded)
------------------------------------------------------------------------
function luaU:DumpString(s, D)
	if s == nil then
		self:DumpSizeT(0, D)
	else
		s = s.."\0"  -- include trailing '\0'
		self:DumpSizeT(#s, D)
		self:DumpBlock(s, D)
	end
end

------------------------------------------------------------------------
-- dumps instruction block from function prototype
------------------------------------------------------------------------
function luaU:DumpCode(f, D)
	local n = f.sizecode
	--was DumpVector
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpBlock(luaP:Instruction(f.code[i]), D)
	end
end

------------------------------------------------------------------------
-- dump constant pool from function prototype
-- * bvalue(o), nvalue(o) and rawtsvalue(o) macros removed
------------------------------------------------------------------------
function luaU:DumpConstants(f, D)
	local n = f.sizek
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		local o = f.k[i]  -- TValue
		local tt = self:ttype(o)
		self:DumpChar(tt, D)
		if tt == self.LUA_TNIL then
		elseif tt == self.LUA_TBOOLEAN then
			self:DumpChar(o.value and 1 or 0, D)
		elseif tt == self.LUA_TNUMBER then
			self:DumpNumber(o.value, D)
		elseif tt == self.LUA_TSTRING then
			self:DumpString(o.value, D)
		else
			--lua_assert(0)  -- cannot happen
		end
	end
	n = f.sizep
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpFunction(f.p[i], f.source, D)
	end
end

------------------------------------------------------------------------
-- dump debug information
------------------------------------------------------------------------
function luaU:DumpDebug(f, D)
	local n
	n = D.strip and 0 or f.sizelineinfo           -- dump line information
	--was DumpVector
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpInt(f.lineinfo[i], D)
	end
	n = D.strip and 0 or f.sizelocvars            -- dump local information
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpString(f.locvars[i].varname, D)
		self:DumpInt(f.locvars[i].startpc, D)
		self:DumpInt(f.locvars[i].endpc, D)
	end
	n = D.strip and 0 or f.sizeupvalues           -- dump upvalue information
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpString(f.upvalues[i], D)
	end
end

------------------------------------------------------------------------
-- dump child function prototypes from function prototype
------------------------------------------------------------------------
function luaU:DumpFunction(f, p, D)
	local source = f.source
	if source == p or D.strip then source = nil end
	self:DumpString(source, D)
	self:DumpInt(f.lineDefined, D)
	self:DumpInt(f.lastlinedefined, D)
	self:DumpChar(f.nups, D)
	self:DumpChar(f.numparams, D)
	self:DumpChar(f.is_vararg, D)
	self:DumpChar(f.maxstacksize, D)
	self:DumpCode(f, D)
	self:DumpConstants(f, D)
	self:DumpDebug(f, D)
end

------------------------------------------------------------------------
-- dump Lua header section (some sizes hard-coded)
------------------------------------------------------------------------
function luaU:DumpHeader(D)
	local h = self:header()
	assert(#h == self.LUAC_HEADERSIZE) -- fixed buffer now an assert
	self:DumpBlock(h, D)
end

------------------------------------------------------------------------
-- make header (from lundump.c)
-- returns the header string
------------------------------------------------------------------------
function luaU:header()
	local x = 1
	return self.LUA_SIGNATURE..
		string.char(
			self.LUAC_VERSION,
			self.LUAC_FORMAT,
			x,                    -- endianness (1=little)
			4,                    -- sizeof(int)
			size_size_t,                    -- sizeof(size_t)
			4,                    -- sizeof(Instruction)
			8,                    -- sizeof(lua_Number)
			0)                    -- is lua_Number integral?
end

------------------------------------------------------------------------
-- dump Lua function as precompiled chunk
-- (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)
-- * w, data are created from make_setS, make_setF
------------------------------------------------------------------------
function luaU:dump(L, f, w, data, strip)
	local D = {}  -- DumpState
	D.L = L
	D.write = w
	D.data = data
	D.strip = strip
	D.status = 0
	self:DumpHeader(D)
	self:DumpFunction(f, nil, D)
	-- added: for a chunk writer writing to a file, this final call with
	-- nil data is to indicate to the writer to close the file
	D.write(nil, D.data)
	return D.status
end




--dofile("lcode.lua")

------------------------------------------------------------------------
-- constants used by code generator
------------------------------------------------------------------------
-- maximum stack for a Lua function
luaK.MAXSTACK = 250  -- (from llimits.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- emulation of TValue macros (these are from lobject.h)
-- * TValue is a table since lcode passes references around
-- * tt member field removed, using Lua's type() instead
-- * for setsvalue, sethvalue, parameter L (deleted here) in lobject.h
--   is used in an assert for testing, see checkliveness(g,obj)
------------------------------------------------------------------------
function luaK:ttisnumber(o)
	if o then return type(o.value) == "number" else return false end
end
function luaK:nvalue(o) return o.value end
function luaK:setnilvalue(o) o.value = nil end
function luaK:setsvalue(o, x) o.value = x end
luaK.setnvalue = luaK.setsvalue
luaK.sethvalue = luaK.setsvalue
luaK.setbvalue = luaK.setsvalue

------------------------------------------------------------------------
-- The luai_num* macros define the primitive operations over numbers.
-- * this is not the entire set of primitive operations from luaconf.h
-- * used in luaK:constfolding()
------------------------------------------------------------------------
function luaK:numadd(a, b) return a + b end
function luaK:numsub(a, b) return a - b end
function luaK:nummul(a, b) return a * b end
function luaK:numdiv(a, b) return a / b end
function luaK:nummod(a, b) return a % b end
-- ((a) - floor((a)/(b))*(b)) /* actual, for reference */
function luaK:numpow(a, b) return a ^ b end
function luaK:numunm(a) return -a end
function luaK:numisnan(a) return not a == a end
-- a NaN cannot equal another NaN

--[[--------------------------------------------------------------------
-- code generator functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- Marks the end of a patch list. It is an invalid value both as an absolute
-- address, and as a list link (would link an element to itself).
------------------------------------------------------------------------
luaK.NO_JUMP = -1

------------------------------------------------------------------------
-- grep "ORDER OPR" if you change these enums
------------------------------------------------------------------------
luaK.BinOpr = {
	OPR_ADD = 0, OPR_SUB = 1, OPR_MUL = 2, OPR_DIV = 3, OPR_MOD = 4, OPR_POW = 5,
	OPR_CONCAT = 6,
	OPR_NE = 7, OPR_EQ = 8,
	OPR_LT = 9, OPR_LE = 10, OPR_GT = 11, OPR_GE = 12,
	OPR_AND = 13, OPR_OR = 14,
	OPR_NOBINOPR = 15,
}

-- * UnOpr is used by luaK:prefix's op argument, but not directly used
--   because the function receives the symbols as strings, e.g. "OPR_NOT"
luaK.UnOpr = {
	OPR_MINUS = 0, OPR_NOT = 1, OPR_LEN = 2, OPR_NOUNOPR = 3
}

------------------------------------------------------------------------
-- returns the instruction object for given e (expdesc), was a macro
------------------------------------------------------------------------
function luaK:getcode(fs, e)
	return fs.f.code[e.info]
end

------------------------------------------------------------------------
-- codes an instruction with a signed Bx (sBx) field, was a macro
-- * used in luaK:jump(), (lparser) luaY:forbody()
------------------------------------------------------------------------
function luaK:codeAsBx(fs, o, A, sBx)
	return self:codeABx(fs, o, A, sBx + luaP.MAXARG_sBx)
end

------------------------------------------------------------------------
-- set the expdesc e instruction for multiple returns, was a macro
------------------------------------------------------------------------
function luaK:setmultret(fs, e)
	self:setreturns(fs, e, luaY.LUA_MULTRET)
end

------------------------------------------------------------------------
-- there is a jump if patch lists are not identical, was a macro
-- * used in luaK:exp2reg(), luaK:exp2anyreg(), luaK:exp2val()
------------------------------------------------------------------------
function luaK:hasjumps(e)
	return e.t ~= e.f
end

------------------------------------------------------------------------
-- true if the expression is a constant number (for constant folding)
-- * used in constfolding(), infix()
------------------------------------------------------------------------
function luaK:isnumeral(e)
	return e.k == "VKNUM" and e.t == self.NO_JUMP and e.f == self.NO_JUMP
end

------------------------------------------------------------------------
-- codes loading of nil, optimization done if consecutive locations
-- * used in luaK:discharge2reg(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:_nil(fs, from, n)
	if fs.pc > fs.lasttarget then  -- no jumps to current position?
		if fs.pc == 0 then  -- function start?
			if from >= fs.nactvar then
				return  -- positions are already clean
			end
		else
			local previous = fs.f.code[fs.pc - 1]
			if luaP:GET_OPCODE(previous) == "OP_LOADNIL" then
				local pfrom = luaP:GETARG_A(previous)
				local pto = luaP:GETARG_B(previous)
				if pfrom <= from and from <= pto + 1 then  -- can connect both?
					if from + n - 1 > pto then
						luaP:SETARG_B(previous, from + n - 1)
					end
					return
				end
			end
		end
	end
	self:codeABC(fs, "OP_LOADNIL", from, from + n - 1, 0)  -- else no optimization
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:jump(fs)
	local jpc = fs.jpc  -- save list of jumps to here
	fs.jpc = self.NO_JUMP
	local j = self:codeAsBx(fs, "OP_JMP", 0, self.NO_JUMP)
	j = self:concat(fs, j, jpc)  -- keep them on hold
	return j
end

------------------------------------------------------------------------
-- codes a RETURN instruction
-- * used in luaY:close_func(), luaY:retstat()
------------------------------------------------------------------------
function luaK:ret(fs, first, nret)
	self:codeABC(fs, "OP_RETURN", first, nret + 1, 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codecomp()
------------------------------------------------------------------------
function luaK:condjump(fs, op, A, B, C)
	self:codeABC(fs, op, A, B, C)
	return self:jump(fs)
end

------------------------------------------------------------------------
--
-- * used in luaK:patchlistaux(), luaK:concat()
------------------------------------------------------------------------
function luaK:fixjump(fs, pc, dest)
	local jmp = fs.f.code[pc]
	local offset = dest - (pc + 1)
	lua_assert(dest ~= self.NO_JUMP)
	if math.abs(offset) > luaP.MAXARG_sBx then
		luaX:syntaxerror(fs.ls, "control structure too long")
	end
	luaP:SETARG_sBx(jmp, offset)
end

------------------------------------------------------------------------
-- returns current 'pc' and marks it as a jump target (to avoid wrong
-- optimizations with consecutive instructions not in the same basic block).
-- * used in multiple locations
-- * fs.lasttarget tested only by luaK:_nil() when optimizing OP_LOADNIL
------------------------------------------------------------------------
function luaK:getlabel(fs)
	fs.lasttarget = fs.pc
	return fs.pc
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:removevalues(), luaK:patchlistaux(),
--   luaK:concat()
------------------------------------------------------------------------
function luaK:getjump(fs, pc)
	local offset = luaP:GETARG_sBx(fs.f.code[pc])
	if offset == self.NO_JUMP then  -- point to itself represents end of list
		return self.NO_JUMP  -- end of list
	else
		return (pc + 1) + offset  -- turn offset into absolute position
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:patchtestreg(), luaK:invertjump()
------------------------------------------------------------------------
function luaK:getjumpcontrol(fs, pc)
	local pi = fs.f.code[pc]
	local ppi = fs.f.code[pc - 1]
	if pc >= 1 and luaP:testTMode(luaP:GET_OPCODE(ppi)) ~= 0 then
		return ppi
	else
		return pi
	end
end

------------------------------------------------------------------------
-- check whether list has any jump that do not produce a value
-- (or produce an inverted value)
-- * return value changed to boolean
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:need_value(fs, list)
	while list ~= self.NO_JUMP do
		local i = self:getjumpcontrol(fs, list)
		if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then return true end
		list = self:getjump(fs, list)
	end
	return false  -- not found
end

------------------------------------------------------------------------
--
-- * used in luaK:removevalues(), luaK:patchlistaux()
------------------------------------------------------------------------
function luaK:patchtestreg(fs, node, reg)
	local i = self:getjumpcontrol(fs, node)
	if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then
		return false  -- cannot patch other instructions
	end
	if reg ~= luaP.NO_REG and reg ~= luaP:GETARG_B(i) then
		luaP:SETARG_A(i, reg)
	else  -- no register to put value or register already has the value
		-- due to use of a table as i, i cannot be replaced by another table
		-- so the following is required; there is no change to ARG_C
		luaP:SET_OPCODE(i, "OP_TEST")
		local b = luaP:GETARG_B(i)
		luaP:SETARG_A(i, b)
		luaP:SETARG_B(i, 0)
		-- *i = CREATE_ABC(OP_TEST, GETARG_B(*i), 0, GETARG_C(*i)); /* C */
	end
	return true
end

------------------------------------------------------------------------
--
-- * used only in luaK:codenot()
------------------------------------------------------------------------
function luaK:removevalues(fs, list)
	while list ~= self.NO_JUMP do
		self:patchtestreg(fs, list, luaP.NO_REG)
		list = self:getjump(fs, list)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargejpc(), luaK:patchlist(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:patchlistaux(fs, list, vtarget, reg, dtarget)
	while list ~= self.NO_JUMP do
		local _next = self:getjump(fs, list)
		if self:patchtestreg(fs, list, reg) then
			self:fixjump(fs, list, vtarget)
		else
			self:fixjump(fs, list, dtarget)  -- jump to default target
		end
		list = _next
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:code()
------------------------------------------------------------------------
function luaK:dischargejpc(fs)
	self:patchlistaux(fs, fs.jpc, fs.pc, luaP.NO_REG, fs.pc)
	fs.jpc = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:whilestat(), luaY:repeatstat(), luaY:forbody()
------------------------------------------------------------------------
function luaK:patchlist(fs, list, target)
	if target == fs.pc then
		self:patchtohere(fs, list)
	else
		lua_assert(target < fs.pc)
		self:patchlistaux(fs, list, target, luaP.NO_REG, target)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:patchtohere(fs, list)
	self:getlabel(fs)
	fs.jpc = self:concat(fs, fs.jpc, list)
end

------------------------------------------------------------------------
-- * l1 was a pointer, now l1 is returned and callee assigns the value
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:concat(fs, l1, l2)
	if l2 == self.NO_JUMP then return l1
	elseif l1 == self.NO_JUMP then
		return l2
	else
		local list = l1
		local _next = self:getjump(fs, list)
		while _next ~= self.NO_JUMP do  -- find last element
			list = _next
			_next = self:getjump(fs, list)
		end
		self:fixjump(fs, list, l2)
	end
	return l1
end

------------------------------------------------------------------------
--
-- * used in luaK:reserveregs(), (lparser) luaY:forlist()
------------------------------------------------------------------------
function luaK:checkstack(fs, n)
	local newstack = fs.freereg + n
	if newstack > fs.f.maxstacksize then
		if newstack >= self.MAXSTACK then
			luaX:syntaxerror(fs.ls, "function or expression too complex")
		end
		fs.f.maxstacksize = newstack
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:reserveregs(fs, n)
	self:checkstack(fs, n)
	fs.freereg = fs.freereg + n
end

------------------------------------------------------------------------
--
-- * used in luaK:freeexp(), luaK:dischargevars()
------------------------------------------------------------------------
function luaK:freereg(fs, reg)
	if not luaP:ISK(reg) and reg >= fs.nactvar then
		fs.freereg = fs.freereg - 1
		lua_assert(reg == fs.freereg)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:freeexp(fs, e)
	if e.k == "VNONRELOC" then
		self:freereg(fs, e.info)
	end
end

------------------------------------------------------------------------
-- * TODO NOTE implementation is not 100% correct, since the assert fails
-- * luaH_set, setobj deleted; direct table access used instead
-- * used in luaK:stringK(), luaK:numberK(), luaK:boolK(), luaK:nilK()
------------------------------------------------------------------------
function luaK:addk(fs, k, v)
	local L = fs.L
	local idx = fs.h[k.value]
	--TValue *idx = luaH_set(L, fs->h, k); /* C */
	local f = fs.f
	if self:ttisnumber(idx) then
		--TODO this assert currently FAILS (last tested for 5.0.2)
		--lua_assert(fs.f.k[self:nvalue(idx)] == v)
		--lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v)); /* C */
		return self:nvalue(idx)
	else -- constant not found; create a new entry
		idx = {}
		self:setnvalue(idx, fs.nk)
		fs.h[k.value] = idx
		-- setnvalue(idx, cast_num(fs->nk)); /* C */
		luaY:growvector(L, f.k, fs.nk, f.sizek, nil,
			luaP.MAXARG_Bx, "constant table overflow")
		-- loop to initialize empty f.k positions not required
		f.k[fs.nk] = v
		-- setobj(L, &f->k[fs->nk], v); /* C */
		-- luaC_barrier(L, f, v); /* GC */
		local nk = fs.nk
		fs.nk = fs.nk + 1
		return nk
	end

end

------------------------------------------------------------------------
-- creates and sets a string object
-- * used in (lparser) luaY:codestring(), luaY:singlevar()
------------------------------------------------------------------------
function luaK:stringK(fs, s)
	local o = {}  -- TValue
	self:setsvalue(o, s)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a number object
-- * used in luaK:prefix() for negative (or negation of) numbers
-- * used in (lparser) luaY:simpleexp(), luaY:fornum()
------------------------------------------------------------------------
function luaK:numberK(fs, r)
	local o = {}  -- TValue
	self:setnvalue(o, r)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a boolean object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:boolK(fs, b)
	local o = {}  -- TValue
	self:setbvalue(o, b)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a nil object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:nilK(fs)
	local k, v = {}, {}  -- TValue
	self:setnilvalue(v)
	-- cannot use nil as key; instead use table itself to represent nil
	self:sethvalue(k, fs.h)
	return self:addk(fs, k, v)
end

------------------------------------------------------------------------
--
-- * used in luaK:setmultret(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:setreturns(fs, e, nresults)
	if e.k == "VCALL" then  -- expression is an open function call?
		luaP:SETARG_C(self:getcode(fs, e), nresults + 1)
	elseif e.k == "VVARARG" then
		luaP:SETARG_B(self:getcode(fs, e), nresults + 1);
		luaP:SETARG_A(self:getcode(fs, e), fs.freereg);
		luaK:reserveregs(fs, 1)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargevars(), (lparser) luaY:assignment()
------------------------------------------------------------------------
function luaK:setoneret(fs, e)
	if e.k == "VCALL" then  -- expression is an open function call?
		e.k = "VNONRELOC"
		e.info = luaP:GETARG_A(self:getcode(fs, e))
	elseif e.k == "VVARARG" then
		luaP:SETARG_B(self:getcode(fs, e), 2)
		e.k = "VRELOCABLE"  -- can relocate its simple result
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:dischargevars(fs, e)
	local k = e.k
	if k == "VLOCAL" then
		e.k = "VNONRELOC"
	elseif k == "VUPVAL" then
		e.info = self:codeABC(fs, "OP_GETUPVAL", 0, e.info, 0)
		e.k = "VRELOCABLE"
	elseif k == "VGLOBAL" then
		e.info = self:codeABx(fs, "OP_GETGLOBAL", 0, e.info)
		e.k = "VRELOCABLE"
	elseif k == "VINDEXED" then
		self:freereg(fs, e.aux)
		self:freereg(fs, e.info)
		e.info = self:codeABC(fs, "OP_GETTABLE", 0, e.info, e.aux)
		e.k = "VRELOCABLE"
	elseif k == "VVARARG" or k == "VCALL" then
		self:setoneret(fs, e)
	else
		-- there is one value available (somewhere)
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:code_label(fs, A, b, jump)
	self:getlabel(fs)  -- those instructions may be jump targets
	return self:codeABC(fs, "OP_LOADBOOL", A, b, jump)
end

------------------------------------------------------------------------
--
-- * used in luaK:discharge2anyreg(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:discharge2reg(fs, e, reg)
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" then
		self:_nil(fs, reg, 1)
	elseif k == "VFALSE" or k == "VTRUE" then
		self:codeABC(fs, "OP_LOADBOOL", reg, (e.k == "VTRUE") and 1 or 0, 0)
	elseif k == "VK" then
		self:codeABx(fs, "OP_LOADK", reg, e.info)
	elseif k == "VKNUM" then
		self:codeABx(fs, "OP_LOADK", reg, self:numberK(fs, e.nval))
	elseif k == "VRELOCABLE" then
		local pc = self:getcode(fs, e)
		luaP:SETARG_A(pc, reg)
	elseif k == "VNONRELOC" then
		if reg ~= e.info then
			self:codeABC(fs, "OP_MOVE", reg, e.info, 0)
		end
	else
		lua_assert(e.k == "VVOID" or e.k == "VJMP")
		return  -- nothing to do...
	end
	e.info = reg
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codenot()
------------------------------------------------------------------------
function luaK:discharge2anyreg(fs, e)
	if e.k ~= "VNONRELOC" then
		self:reserveregs(fs, 1)
		self:discharge2reg(fs, e, fs.freereg - 1)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2nextreg(), luaK:exp2anyreg(), luaK:storevar()
------------------------------------------------------------------------
function luaK:exp2reg(fs, e, reg)
	self:discharge2reg(fs, e, reg)
	if e.k == "VJMP" then
		e.t = self:concat(fs, e.t, e.info)  -- put this jump in 't' list
	end
	if self:hasjumps(e) then
		local final  -- position after whole expression
		local p_f = self.NO_JUMP  -- position of an eventual LOAD false
		local p_t = self.NO_JUMP  -- position of an eventual LOAD true
		if self:need_value(fs, e.t) or self:need_value(fs, e.f) then
			local fj = (e.k == "VJMP") and self.NO_JUMP or self:jump(fs)
			p_f = self:code_label(fs, reg, 0, 1)
			p_t = self:code_label(fs, reg, 1, 0)
			self:patchtohere(fs, fj)
		end
		final = self:getlabel(fs)
		self:patchlistaux(fs, e.f, final, reg, p_f)
		self:patchlistaux(fs, e.t, final, reg, p_t)
	end
	e.f, e.t = self.NO_JUMP, self.NO_JUMP
	e.info = reg
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2nextreg(fs, e)
	self:dischargevars(fs, e)
	self:freeexp(fs, e)
	self:reserveregs(fs, 1)
	self:exp2reg(fs, e, fs.freereg - 1)
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2anyreg(fs, e)
	self:dischargevars(fs, e)
	if e.k == "VNONRELOC" then
		if not self:hasjumps(e) then  -- exp is already in a register
			return e.info
		end
		if e.info >= fs.nactvar then  -- reg. is not a local?
			self:exp2reg(fs, e, e.info)  -- put value on it
			return e.info
		end
	end
	self:exp2nextreg(fs, e)  -- default
	return e.info
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2RK(), luaK:prefix(), luaK:posfix()
-- * used in (lparser) luaY:yindex()
------------------------------------------------------------------------
function luaK:exp2val(fs, e)
	if self:hasjumps(e) then
		self:exp2anyreg(fs, e)
	else
		self:dischargevars(fs, e)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2RK(fs, e)
	self:exp2val(fs, e)
	local k = e.k
	if k == "VKNUM" or k == "VTRUE" or k == "VFALSE" or k == "VNIL" then
		if fs.nk <= luaP.MAXINDEXRK then  -- constant fit in RK operand?
			-- converted from a 2-deep ternary operator expression
			if e.k == "VNIL" then
				e.info = self:nilK(fs)
			else
				e.info = (e.k == "VKNUM") and self:numberK(fs, e.nval)
					or self:boolK(fs, e.k == "VTRUE")
			end
			e.k = "VK"
			return luaP:RKASK(e.info)
		end
	elseif k == "VK" then
		if e.info <= luaP.MAXINDEXRK then  -- constant fit in argC?
			return luaP:RKASK(e.info)
		end
	else
		-- default
	end
	-- not a constant in the right range: put it in a register
	return self:exp2anyreg(fs, e)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:assignment(), luaY:localfunc(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:storevar(fs, var, ex)
	local k = var.k
	if k == "VLOCAL" then
		self:freeexp(fs, ex)
		self:exp2reg(fs, ex, var.info)
		return
	elseif k == "VUPVAL" then
		local e = self:exp2anyreg(fs, ex)
		self:codeABC(fs, "OP_SETUPVAL", e, var.info, 0)
	elseif k == "VGLOBAL" then
		local e = self:exp2anyreg(fs, ex)
		self:codeABx(fs, "OP_SETGLOBAL", e, var.info)
	elseif k == "VINDEXED" then
		local e = self:exp2RK(fs, ex)
		self:codeABC(fs, "OP_SETTABLE", var.info, var.aux, e)
	else
		lua_assert(0)  -- invalid var kind to store
	end
	self:freeexp(fs, ex)
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:primaryexp()
------------------------------------------------------------------------
function luaK:_self(fs, e, key)
	self:exp2anyreg(fs, e)
	self:freeexp(fs, e)
	local func = fs.freereg
	self:reserveregs(fs, 2)
	self:codeABC(fs, "OP_SELF", func, e.info, self:exp2RK(fs, key))
	self:freeexp(fs, key)
	e.info = func
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:codenot()
------------------------------------------------------------------------
function luaK:invertjump(fs, e)
	local pc = self:getjumpcontrol(fs, e.info)
	lua_assert(luaP:testTMode(luaP:GET_OPCODE(pc)) ~= 0 and
		luaP:GET_OPCODE(pc) ~= "OP_TESTSET" and
		luaP:GET_OPCODE(pc) ~= "OP_TEST")
	luaP:SETARG_A(pc, (luaP:GETARG_A(pc) == 0) and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:goiffalse()
------------------------------------------------------------------------
function luaK:jumponcond(fs, e, cond)
	if e.k == "VRELOCABLE" then
		local ie = self:getcode(fs, e)
		if luaP:GET_OPCODE(ie) == "OP_NOT" then
			fs.pc = fs.pc - 1  -- remove previous OP_NOT
			return self:condjump(fs, "OP_TEST", luaP:GETARG_B(ie), 0, cond and 0 or 1)
		end
		-- else go through
	end
	self:discharge2anyreg(fs, e)
	self:freeexp(fs, e)
	return self:condjump(fs, "OP_TESTSET", luaP.NO_REG, e.info, cond and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:infix(), (lparser) luaY:cond()
------------------------------------------------------------------------
function luaK:goiftrue(fs, e)
	local pc  -- pc of last jump
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VK" or k == "VKNUM" or k == "VTRUE" then
		pc = self.NO_JUMP  -- always true; do nothing
	elseif k == "VFALSE" then
		pc = self:jump(fs)  -- always jump
	elseif k == "VJMP" then
		self:invertjump(fs, e)
		pc = e.info
	else
		pc = self:jumponcond(fs, e, false)
	end
	e.f = self:concat(fs, e.f, pc)  -- insert last jump in `f' list
	self:patchtohere(fs, e.t)
	e.t = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in luaK:infix()
------------------------------------------------------------------------
function luaK:goiffalse(fs, e)
	local pc  -- pc of last jump
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" or k == "VFALSE"then
		pc = self.NO_JUMP  -- always false; do nothing
	elseif k == "VTRUE" then
		pc = self:jump(fs)  -- always jump
	elseif k == "VJMP" then
		pc = e.info
	else
		pc = self:jumponcond(fs, e, true)
	end
	e.t = self:concat(fs, e.t, pc)  -- insert last jump in `t' list
	self:patchtohere(fs, e.f)
	e.f = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used only in luaK:prefix()
------------------------------------------------------------------------
function luaK:codenot(fs, e)
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" or k == "VFALSE" then
		e.k = "VTRUE"
	elseif k == "VK" or k == "VKNUM" or k == "VTRUE" then
		e.k = "VFALSE"
	elseif k == "VJMP" then
		self:invertjump(fs, e)
	elseif k == "VRELOCABLE" or k == "VNONRELOC" then
		self:discharge2anyreg(fs, e)
		self:freeexp(fs, e)
		e.info = self:codeABC(fs, "OP_NOT", 0, e.info, 0)
		e.k = "VRELOCABLE"
	else
		lua_assert(0)  -- cannot happen
	end
	-- interchange true and false lists
	e.f, e.t = e.t, e.f
	self:removevalues(fs, e.f)
	self:removevalues(fs, e.t)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:field(), luaY:primaryexp()
------------------------------------------------------------------------
function luaK:indexed(fs, t, k)
	t.aux = self:exp2RK(fs, k)
	t.k = "VINDEXED"
end

------------------------------------------------------------------------
--
-- * used only in luaK:codearith()
------------------------------------------------------------------------
function luaK:constfolding(op, e1, e2)
	local r
	if not self:isnumeral(e1) or not self:isnumeral(e2) then return false end
	local v1 = e1.nval
	local v2 = e2.nval
	if op == "OP_ADD" then
		r = self:numadd(v1, v2)
	elseif op == "OP_SUB" then
		r = self:numsub(v1, v2)
	elseif op == "OP_MUL" then
		r = self:nummul(v1, v2)
	elseif op == "OP_DIV" then
		if v2 == 0 then return false end  -- do not attempt to divide by 0
		r = self:numdiv(v1, v2)
	elseif op == "OP_MOD" then
		if v2 == 0 then return false end  -- do not attempt to divide by 0
		r = self:nummod(v1, v2)
	elseif op == "OP_POW" then
		r = self:numpow(v1, v2)
	elseif op == "OP_UNM" then
		r = self:numunm(v1)
	elseif op == "OP_LEN" then
		return false  -- no constant folding for 'len'
	else
		lua_assert(0)
		r = 0
	end
	if self:numisnan(r) then return false end  -- do not attempt to produce NaN
	e1.nval = r
	return true
end

------------------------------------------------------------------------
--
-- * used in luaK:prefix(), luaK:posfix()
------------------------------------------------------------------------
function luaK:codearith(fs, op, e1, e2)
	if self:constfolding(op, e1, e2) then
		return
	else
		local o2 = (op ~= "OP_UNM" and op ~= "OP_LEN") and self:exp2RK(fs, e2) or 0
		local o1 = self:exp2RK(fs, e1)
		if o1 > o2 then
			self:freeexp(fs, e1)
			self:freeexp(fs, e2)
		else
			self:freeexp(fs, e2)
			self:freeexp(fs, e1)
		end
		e1.info = self:codeABC(fs, op, 0, o1, o2)
		e1.k = "VRELOCABLE"
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:posfix()
------------------------------------------------------------------------
function luaK:codecomp(fs, op, cond, e1, e2)
	local o1 = self:exp2RK(fs, e1)
	local o2 = self:exp2RK(fs, e2)
	self:freeexp(fs, e2)
	self:freeexp(fs, e1)
	if cond == 0 and op ~= "OP_EQ" then
		-- exchange args to replace by `<' or `<='
		o1, o2 = o2, o1  -- o1 <==> o2
		cond = 1
	end
	e1.info = self:condjump(fs, op, cond, o1, o2)
	e1.k = "VJMP"
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:prefix(fs, op, e)
	local e2 = {}  -- expdesc
	e2.t, e2.f = self.NO_JUMP, self.NO_JUMP
	e2.k = "VKNUM"
	e2.nval = 0
	if op == "OPR_MINUS" then
		if not self:isnumeral(e) then
			self:exp2anyreg(fs, e)  -- cannot operate on non-numeric constants
		end
		self:codearith(fs, "OP_UNM", e, e2)
	elseif op == "OPR_NOT" then
		self:codenot(fs, e)
	elseif op == "OPR_LEN" then
		self:exp2anyreg(fs, e)  -- cannot operate on constants
		self:codearith(fs, "OP_LEN", e, e2)
	else
		lua_assert(0)
	end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:infix(fs, op, v)
	if op == "OPR_AND" then
		self:goiftrue(fs, v)
	elseif op == "OPR_OR" then
		self:goiffalse(fs, v)
	elseif op == "OPR_CONCAT" then
		self:exp2nextreg(fs, v)  -- operand must be on the 'stack'
	elseif op == "OPR_ADD" or op == "OPR_SUB" or
		op == "OPR_MUL" or op == "OPR_DIV" or
		op == "OPR_MOD" or op == "OPR_POW" then
		if not self:isnumeral(v) then self:exp2RK(fs, v) end
	else
		self:exp2RK(fs, v)
	end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
-- table lookups to simplify testing
luaK.arith_op = {
	OPR_ADD = "OP_ADD", OPR_SUB = "OP_SUB", OPR_MUL = "OP_MUL",
	OPR_DIV = "OP_DIV", OPR_MOD = "OP_MOD", OPR_POW = "OP_POW",
}
luaK.comp_op = {
	OPR_EQ = "OP_EQ", OPR_NE = "OP_EQ", OPR_LT = "OP_LT",
	OPR_LE = "OP_LE", OPR_GT = "OP_LT", OPR_GE = "OP_LE",
}
luaK.comp_cond = {
	OPR_EQ = 1, OPR_NE = 0, OPR_LT = 1,
	OPR_LE = 1, OPR_GT = 0, OPR_GE = 0,
}
function luaK:posfix(fs, op, e1, e2)
	-- needed because e1 = e2 doesn't copy values...
	-- * in 5.0.x, only k/info/aux/t/f copied, t for AND, f for OR
	--   but here, all elements are copied for completeness' sake
	local function copyexp(e1, e2)
		e1.k = e2.k
		e1.info = e2.info; e1.aux = e2.aux
		e1.nval = e2.nval
		e1.t = e2.t; e1.f = e2.f
	end
	if op == "OPR_AND" then
		lua_assert(e1.t == self.NO_JUMP)  -- list must be closed
		self:dischargevars(fs, e2)
		e2.f = self:concat(fs, e2.f, e1.f)
		copyexp(e1, e2)
	elseif op == "OPR_OR" then
		lua_assert(e1.f == self.NO_JUMP)  -- list must be closed
		self:dischargevars(fs, e2)
		e2.t = self:concat(fs, e2.t, e1.t)
		copyexp(e1, e2)
	elseif op == "OPR_CONCAT" then
		self:exp2val(fs, e2)
		if e2.k == "VRELOCABLE" and luaP:GET_OPCODE(self:getcode(fs, e2)) == "OP_CONCAT" then
			lua_assert(e1.info == luaP:GETARG_B(self:getcode(fs, e2)) - 1)
			self:freeexp(fs, e1)
			luaP:SETARG_B(self:getcode(fs, e2), e1.info)
			e1.k = "VRELOCABLE"
			e1.info = e2.info
		else
			self:exp2nextreg(fs, e2)  -- operand must be on the 'stack'
			self:codearith(fs, "OP_CONCAT", e1, e2)
		end
	else
		-- the following uses a table lookup in place of conditionals
		local arith = self.arith_op[op]
		if arith then
			self:codearith(fs, arith, e1, e2)
		else
			local comp = self.comp_op[op]
			if comp then
				self:codecomp(fs, comp, self.comp_cond[op], e1, e2)
			else
				lua_assert(0)
			end
		end--if arith
	end--if op
end

------------------------------------------------------------------------
-- adjusts debug information for last instruction written, in order to
-- change the line where item comes into existence
-- * used in (lparser) luaY:funcargs(), luaY:forbody(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:fixline(fs, line)
	fs.f.lineinfo[fs.pc - 1] = line
end

------------------------------------------------------------------------
-- general function to write an instruction into the instruction buffer,
-- sets debug information too
-- * used in luaK:codeABC(), luaK:codeABx()
-- * called directly by (lparser) luaY:whilestat()
------------------------------------------------------------------------
function luaK:code(fs, i, line)
	local f = fs.f
	self:dischargejpc(fs)  -- 'pc' will change
	-- put new instruction in code array
	luaY:growvector(fs.L, f.code, fs.pc, f.sizecode, nil,
		luaY.MAX_INT, "code size overflow")
	f.code[fs.pc] = i
	-- save corresponding line information
	luaY:growvector(fs.L, f.lineinfo, fs.pc, f.sizelineinfo, nil,
		luaY.MAX_INT, "code size overflow")
	f.lineinfo[fs.pc] = line
	local pc = fs.pc
	fs.pc = fs.pc + 1
	return pc
end

------------------------------------------------------------------------
-- writes an instruction of type ABC
-- * calls luaK:code()
------------------------------------------------------------------------
function luaK:codeABC(fs, o, a, b, c)
	lua_assert(luaP:getOpMode(o) == luaP.OpMode.iABC)
	lua_assert(luaP:getBMode(o) ~= luaP.OpArgMask.OpArgN or b == 0)
	lua_assert(luaP:getCMode(o) ~= luaP.OpArgMask.OpArgN or c == 0)
	return self:code(fs, luaP:CREATE_ABC(o, a, b, c), fs.ls.lastline)
end

------------------------------------------------------------------------
-- writes an instruction of type ABx
-- * calls luaK:code(), called by luaK:codeAsBx()
------------------------------------------------------------------------
function luaK:codeABx(fs, o, a, bc)
	lua_assert(luaP:getOpMode(o) == luaP.OpMode.iABx or
		luaP:getOpMode(o) == luaP.OpMode.iAsBx)
	lua_assert(luaP:getCMode(o) == luaP.OpArgMask.OpArgN)
	return self:code(fs, luaP:CREATE_ABx(o, a, bc), fs.ls.lastline)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:closelistfield(), luaY:lastlistfield()
------------------------------------------------------------------------
function luaK:setlist(fs, base, nelems, tostore)
	local c = math.floor((nelems - 1)/luaP.LFIELDS_PER_FLUSH) + 1
	local b = (tostore == luaY.LUA_MULTRET) and 0 or tostore
	lua_assert(tostore ~= 0)
	if c <= luaP.MAXARG_C then
		self:codeABC(fs, "OP_SETLIST", base, b, c)
	else
		self:codeABC(fs, "OP_SETLIST", base, b, 0)
		self:code(fs, luaP:CREATE_Inst(c), fs.ls.lastline)
	end
	fs.freereg = base + 1  -- free registers with list values
end




--dofile("lparser.lua")

--[[--------------------------------------------------------------------
-- Expression descriptor
-- * expkind changed to string constants; luaY:assignment was the only
--   function to use a relational operator with this enumeration
-- VVOID       -- no value
-- VNIL        -- no value
-- VTRUE       -- no value
-- VFALSE      -- no value
-- VK          -- info = index of constant in 'k'
-- VKNUM       -- nval = numerical value
-- VLOCAL      -- info = local register
-- VUPVAL,     -- info = index of upvalue in 'upvalues'
-- VGLOBAL     -- info = index of table; aux = index of global name in 'k'
-- VINDEXED    -- info = table register; aux = index register (or 'k')
-- VJMP        -- info = instruction pc
-- VRELOCABLE  -- info = instruction pc
-- VNONRELOC   -- info = result register
-- VCALL       -- info = instruction pc
-- VVARARG     -- info = instruction pc
} ----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- * expdesc in Lua 5.1.x has a union u and another struct s; this Lua
--   implementation ignores all instances of u and s usage
-- struct expdesc:
--   k  -- (enum: expkind)
--   info, aux -- (int, int)
--   nval -- (lua_Number)
--   t  -- patch list of 'exit when true'
--   f  -- patch list of 'exit when false'
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct upvaldesc:
--   k  -- (lu_byte)
--   info -- (lu_byte)
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- state needed to generate code for a given function
-- struct FuncState:
--   f  -- current function header (table: Proto)
--   h  -- table to find (and reuse) elements in 'k' (table: Table)
--   prev  -- enclosing function (table: FuncState)
--   ls  -- lexical state (table: LexState)
--   L  -- copy of the Lua state (table: lua_State)
--   bl  -- chain of current blocks (table: BlockCnt)
--   pc  -- next position to code (equivalent to 'ncode')
--   lasttarget   -- 'pc' of last 'jump target'
--   jpc  -- list of pending jumps to 'pc'
--   freereg  -- first free register
--   nk  -- number of elements in 'k'
--   np  -- number of elements in 'p'
--   nlocvars  -- number of elements in 'locvars'
--   nactvar  -- number of active local variables
--   upvalues[LUAI_MAXUPVALUES]  -- upvalues (table: upvaldesc)
--   actvar[LUAI_MAXVARS]  -- declared-variable stack
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- constants used by parser
-- * picks up duplicate values from luaX if required
------------------------------------------------------------------------
luaY.LUA_QS = luaX.LUA_QS or "'%s'"  -- (from luaconf.h)

luaY.SHRT_MAX = 32767 -- (from <limits.h>)
luaY.LUAI_MAXVARS = 200  -- (luaconf.h)
luaY.LUAI_MAXUPVALUES = 60  -- (luaconf.h)
luaY.MAX_INT = luaX.MAX_INT or 2147483645  -- (from llimits.h)
-- * INT_MAX-2 for 32-bit systems
luaY.LUAI_MAXCCALLS = 200  -- (from luaconf.h)

luaY.VARARG_HASARG = 1  -- (from lobject.h)
-- NOTE: HASARG_MASK is value-specific
luaY.HASARG_MASK = 2 -- this was added for a bitop in parlist()
luaY.VARARG_ISVARARG = 2
-- NOTE: there is some value-specific code that involves VARARG_NEEDSARG
luaY.VARARG_NEEDSARG = 4

luaY.LUA_MULTRET = -1  -- (lua.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- LUA_QL describes how error messages quote program elements.
-- CHANGE it if you want a different appearance. (from luaconf.h)
------------------------------------------------------------------------
function luaY:LUA_QL(x)
	return "'"..x.."'"
end

------------------------------------------------------------------------
-- this is a stripped-down luaM_growvector (from lmem.h) which is a
-- macro based on luaM_growaux (in lmem.c); all the following does is
-- reproduce the size limit checking logic of the original function
-- so that error behaviour is identical; all arguments preserved for
-- convenience, even those which are unused
-- * set the t field to nil, since this originally does a sizeof(t)
-- * size (originally a pointer) is never updated, their final values
--   are set by luaY:close_func(), so overall things should still work
------------------------------------------------------------------------
function luaY:growvector(L, v, nelems, size, t, limit, e)
	if nelems >= limit then
		error(e)  -- was luaG_runerror
	end
end

------------------------------------------------------------------------
-- initialize a new function prototype structure (from lfunc.c)
-- * used only in open_func()
------------------------------------------------------------------------
function luaY:newproto(L)
	local f = {} -- Proto
	-- luaC_link(L, obj2gco(f), LUA_TPROTO); /* GC */
	f.k = {}
	f.sizek = 0
	f.p = {}
	f.sizep = 0
	f.code = {}
	f.sizecode = 0
	f.sizelineinfo = 0
	f.sizeupvalues = 0
	f.nups = 0
	f.upvalues = {}
	f.numparams = 0
	f.is_vararg = 0
	f.maxstacksize = 0
	f.lineinfo = {}
	f.sizelocvars = 0
	f.locvars = {}
	f.lineDefined = 0
	f.lastlinedefined = 0
	f.source = nil
	return f
end

------------------------------------------------------------------------
-- converts an integer to a "floating point byte", represented as
-- (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if
-- eeeee != 0 and (xxx) otherwise.
------------------------------------------------------------------------
function luaY:int2fb(x)
	local e = 0  -- exponent
	while x >= 16 do
		x = math.floor((x + 1) / 2)
		e = e + 1
	end
	if x < 8 then
		return x
	else
		return ((e + 1) * 8) + (x - 8)
	end
end

--[[--------------------------------------------------------------------
-- parser functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- true of the kind of expression produces multiple return values
------------------------------------------------------------------------
function luaY:hasmultret(k)
	return k == "VCALL" or k == "VVARARG"
end

------------------------------------------------------------------------
-- convenience function to access active local i, returns entry
------------------------------------------------------------------------
function luaY:getlocvar(fs, i)
	return fs.f.locvars[ fs.actvar[i] ]
end

------------------------------------------------------------------------
-- check a limit, string m provided as an error message
------------------------------------------------------------------------
function luaY:checklimit(fs, v, l, m)
	if v > l then self:errorlimit(fs, l, m) end
end

--[[--------------------------------------------------------------------
-- nodes for block list (list of active blocks)
-- struct BlockCnt:
--   previous  -- chain (table: BlockCnt)
--   breaklist  -- list of jumps out of this loop
--   nactvar  -- # active local variables outside the breakable structure
--   upval  -- true if some variable in the block is an upvalue (boolean)
--   isbreakable  -- true if 'block' is a loop (boolean)
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- prototypes for recursive non-terminal functions
------------------------------------------------------------------------
-- prototypes deleted; not required in Lua

------------------------------------------------------------------------
-- reanchor if last token is has a constant string, see close_func()
-- * used only in close_func()
------------------------------------------------------------------------
function luaY:anchor_token(ls)
	if ls.t.token == "TK_NAME" or ls.t.token == "TK_STRING" then
		-- not relevant to Lua implementation of parser
		-- local ts = ls.t.seminfo
		-- luaX_newstring(ls, getstr(ts), ts->tsv.len); /* C */
	end
end

------------------------------------------------------------------------
-- throws a syntax error if token expected is not there
------------------------------------------------------------------------
function luaY:error_expected(ls, token)
	luaX:syntaxerror(ls,
		string.format(self.LUA_QS.." expected", luaX:token2str(ls, token)))
end

------------------------------------------------------------------------
-- prepares error message for display, for limits exceeded
-- * used only in checklimit()
------------------------------------------------------------------------
function luaY:errorlimit(fs, limit, what)
	local msg = (fs.f.linedefined == 0) and
		string.format("main function has more than %d %s", limit, what) or
		string.format("function at line %d has more than %d %s",
			fs.f.linedefined, limit, what)
	luaX:lexerror(fs.ls, msg, 0)
end

------------------------------------------------------------------------
-- tests for a token, returns outcome
-- * return value changed to boolean
------------------------------------------------------------------------
function luaY:testnext(ls, c)
	if ls.t.token == c then
		luaX:next(ls)
		return true
	else
		return false
	end
end

------------------------------------------------------------------------
-- check for existence of a token, throws error if not found
------------------------------------------------------------------------
function luaY:check(ls, c)
	if ls.t.token ~= c then
		self:error_expected(ls, c)
	end
end

------------------------------------------------------------------------
-- verify existence of a token, then skip it
------------------------------------------------------------------------
function luaY:checknext(ls, c)
	self:check(ls, c)
	luaX:next(ls)
end

------------------------------------------------------------------------
-- throws error if condition not matched
------------------------------------------------------------------------
function luaY:check_condition(ls, c, msg)
	if not c then luaX:syntaxerror(ls, msg) end
end

------------------------------------------------------------------------
-- verifies token conditions are met or else throw error
------------------------------------------------------------------------
function luaY:check_match(ls, what, who, where)
	if not self:testnext(ls, what) then
		if where == ls.linenumber then
			self:error_expected(ls, what)
		else
			luaX:syntaxerror(ls, string.format(
				self.LUA_QS.." expected (to close "..self.LUA_QS.." at line %d)",
				luaX:token2str(ls, what), luaX:token2str(ls, who), where))
		end
	end
end

------------------------------------------------------------------------
-- expect that token is a name, return the name
------------------------------------------------------------------------
function luaY:str_checkname(ls)
	self:check(ls, "TK_NAME")
	local ts = ls.t.seminfo
	luaX:next(ls)
	return ts
end

------------------------------------------------------------------------
-- initialize a struct expdesc, expression description data structure
------------------------------------------------------------------------
function luaY:init_exp(e, k, i)
	e.f, e.t = luaK.NO_JUMP, luaK.NO_JUMP
	e.k = k
	e.info = i
end

------------------------------------------------------------------------
-- adds given string s in string pool, sets e as VK
------------------------------------------------------------------------
function luaY:codestring(ls, e, s)
	self:init_exp(e, "VK", luaK:stringK(ls.fs, s))
end

------------------------------------------------------------------------
-- consume a name token, adds it to string pool, sets e as VK
------------------------------------------------------------------------
function luaY:checkname(ls, e)
	self:codestring(ls, e, self:str_checkname(ls))
end

------------------------------------------------------------------------
-- creates struct entry for a local variable
-- * used only in new_localvar()
------------------------------------------------------------------------
function luaY:registerlocalvar(ls, varname)
	local fs = ls.fs
	local f = fs.f
	self:growvector(ls.L, f.locvars, fs.nlocvars, f.sizelocvars,
		nil, self.SHRT_MAX, "too many local variables")
	-- loop to initialize empty f.locvar positions not required
	f.locvars[fs.nlocvars] = {} -- LocVar
	f.locvars[fs.nlocvars].varname = varname
	-- luaC_objbarrier(ls.L, f, varname) /* GC */
	local nlocvars = fs.nlocvars
	fs.nlocvars = fs.nlocvars + 1
	return nlocvars
end

------------------------------------------------------------------------
-- creates a new local variable given a name and an offset from nactvar
-- * used in fornum(), forlist(), parlist(), body()
------------------------------------------------------------------------
function luaY:new_localvarliteral(ls, v, n)
	self:new_localvar(ls, v, n)
end

------------------------------------------------------------------------
-- register a local variable, set in active variable list
------------------------------------------------------------------------
function luaY:new_localvar(ls, name, n)
	local fs = ls.fs
	self:checklimit(fs, fs.nactvar + n + 1, self.LUAI_MAXVARS, "local variables")
	fs.actvar[fs.nactvar + n] = self:registerlocalvar(ls, name)
end

------------------------------------------------------------------------
-- adds nvars number of new local variables, set debug information
------------------------------------------------------------------------
function luaY:adjustlocalvars(ls, nvars)
	local fs = ls.fs
	fs.nactvar = fs.nactvar + nvars
	for i = nvars, 1, -1 do
		self:getlocvar(fs, fs.nactvar - i).startpc = fs.pc
	end
end

------------------------------------------------------------------------
-- removes a number of locals, set debug information
------------------------------------------------------------------------
function luaY:removevars(ls, tolevel)
	local fs = ls.fs
	while fs.nactvar > tolevel do
		fs.nactvar = fs.nactvar - 1
		self:getlocvar(fs, fs.nactvar).endpc = fs.pc
	end
end

------------------------------------------------------------------------
-- returns an existing upvalue index based on the given name, or
-- creates a new upvalue struct entry and returns the new index
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:indexupvalue(fs, name, v)
	local f = fs.f
	for i = 0, f.nups - 1 do
		if fs.upvalues[i].k == v.k and fs.upvalues[i].info == v.info then
			lua_assert(f.upvalues[i] == name)
			return i
		end
	end
	-- new one
	self:checklimit(fs, f.nups + 1, self.LUAI_MAXUPVALUES, "upvalues")
	self:growvector(fs.L, f.upvalues, f.nups, f.sizeupvalues,
		nil, self.MAX_INT, "")
	-- loop to initialize empty f.upvalues positions not required
	f.upvalues[f.nups] = name
	-- luaC_objbarrier(fs->L, f, name); /* GC */
	lua_assert(v.k == "VLOCAL" or v.k == "VUPVAL")
	-- this is a partial copy; only k & info fields used
	fs.upvalues[f.nups] = { k = v.k, info = v.info }
	local nups = f.nups
	f.nups = f.nups + 1
	return nups
end

------------------------------------------------------------------------
-- search the local variable namespace of the given fs for a match
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:searchvar(fs, n)
	for i = fs.nactvar - 1, 0, -1 do
		if n == self:getlocvar(fs, i).varname then
			return i
		end
	end
	return -1  -- not found
end

------------------------------------------------------------------------
-- * mark upvalue flags in function states up to a given level
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:markupval(fs, level)
	local bl = fs.bl
	while bl and bl.nactvar > level do bl = bl.previous end
	if bl then bl.upval = true end
end

------------------------------------------------------------------------
-- handle locals, globals and upvalues and related processing
-- * search mechanism is recursive, calls itself to search parents
-- * used only in singlevar()
------------------------------------------------------------------------
function luaY:singlevaraux(fs, n, var, base)
	if fs == nil then  -- no more levels?
		self:init_exp(var, "VGLOBAL", luaP.NO_REG)  -- default is global variable
		return "VGLOBAL"
	else
		local v = self:searchvar(fs, n)  -- look up at current level
		if v >= 0 then
			self:init_exp(var, "VLOCAL", v)
			if base == 0 then
				self:markupval(fs, v)  -- local will be used as an upval
			end
			return "VLOCAL"
		else  -- not found at current level; try upper one
			if self:singlevaraux(fs.prev, n, var, 0) == "VGLOBAL" then
				return "VGLOBAL"
			end
			var.info = self:indexupvalue(fs, n, var)  -- else was LOCAL or UPVAL
			var.k = "VUPVAL"  -- upvalue in this level
			return "VUPVAL"
		end--if v
	end--if fs
end

------------------------------------------------------------------------
-- consume a name token, creates a variable (global|local|upvalue)
-- * used in prefixexp(), funcname()
------------------------------------------------------------------------
function luaY:singlevar(ls, var)
	local varname = self:str_checkname(ls)
	local fs = ls.fs
	if self:singlevaraux(fs, varname, var, 1) == "VGLOBAL" then
		var.info = luaK:stringK(fs, varname)  -- info points to global name
	end
end

------------------------------------------------------------------------
-- adjust RHS to match LHS in an assignment
-- * used in assignment(), forlist(), localstat()
------------------------------------------------------------------------
function luaY:adjust_assign(ls, nvars, nexps, e)
	local fs = ls.fs
	local extra = nvars - nexps
	if self:hasmultret(e.k) then
		extra = extra + 1  -- includes call itself
		if extra <= 0 then extra = 0 end
		luaK:setreturns(fs, e, extra)  -- last exp. provides the difference
		if extra > 1 then luaK:reserveregs(fs, extra - 1) end
	else
		if e.k ~= "VVOID" then luaK:exp2nextreg(fs, e) end  -- close last expression
		if extra > 0 then
			local reg = fs.freereg
			luaK:reserveregs(fs, extra)
			luaK:_nil(fs, reg, extra)
		end
	end
end

------------------------------------------------------------------------
-- tracks and limits parsing depth, assert check at end of parsing
------------------------------------------------------------------------
function luaY:enterlevel(ls)
	ls.L.nCcalls = ls.L.nCcalls + 1
	if ls.L.nCcalls > self.LUAI_MAXCCALLS then
		luaX:lexerror(ls, "chunk has too many syntax levels", 0)
	end
end

------------------------------------------------------------------------
-- tracks parsing depth, a pair with luaY:enterlevel()
------------------------------------------------------------------------
function luaY:leavelevel(ls)
	ls.L.nCcalls = ls.L.nCcalls - 1
end

------------------------------------------------------------------------
-- enters a code unit, initializes elements
------------------------------------------------------------------------
function luaY:enterblock(fs, bl, isbreakable)
	bl.breaklist = luaK.NO_JUMP
	bl.isbreakable = isbreakable
	bl.nactvar = fs.nactvar
	bl.upval = false
	bl.previous = fs.bl
	fs.bl = bl
	lua_assert(fs.freereg == fs.nactvar)
end

------------------------------------------------------------------------
-- leaves a code unit, close any upvalues
------------------------------------------------------------------------
function luaY:leaveblock(fs)
	local bl = fs.bl
	fs.bl = bl.previous
	self:removevars(fs.ls, bl.nactvar)
	if bl.upval then
		luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
	end
	-- a block either controls scope or breaks (never both)
	lua_assert(not bl.isbreakable or not bl.upval)
	lua_assert(bl.nactvar == fs.nactvar)
	fs.freereg = fs.nactvar  -- free registers
	luaK:patchtohere(fs, bl.breaklist)
end

------------------------------------------------------------------------
-- implement the instantiation of a function prototype, append list of
-- upvalues after the instantiation instruction
-- * used only in body()
------------------------------------------------------------------------
function luaY:pushclosure(ls, func, v)
	local fs = ls.fs
	local f = fs.f
	self:growvector(ls.L, f.p, fs.np, f.sizep, nil,
		luaP.MAXARG_Bx, "constant table overflow")
	-- loop to initialize empty f.p positions not required
	f.p[fs.np] = func.f
	fs.np = fs.np + 1
	-- luaC_objbarrier(ls->L, f, func->f); /* C */
	self:init_exp(v, "VRELOCABLE", luaK:codeABx(fs, "OP_CLOSURE", 0, fs.np - 1))
	for i = 0, func.f.nups - 1 do
		local o = (func.upvalues[i].k == "VLOCAL") and "OP_MOVE" or "OP_GETUPVAL"
		luaK:codeABC(fs, o, 0, func.upvalues[i].info, 0)
	end
end

------------------------------------------------------------------------
-- opening of a function
------------------------------------------------------------------------
function luaY:open_func(ls, fs)
	local L = ls.L
	local f = self:newproto(ls.L)
	fs.f = f
	fs.prev = ls.fs  -- linked list of funcstates
	fs.ls = ls
	fs.L = L
	ls.fs = fs
	fs.pc = 0
	fs.lasttarget = -1
	fs.jpc = luaK.NO_JUMP
	fs.freereg = 0
	fs.nk = 0
	fs.np = 0
	fs.nlocvars = 0
	fs.nactvar = 0
	fs.bl = nil
	f.source = ls.source
	f.maxstacksize = 2  -- registers 0/1 are always valid
	fs.h = {}  -- constant table; was luaH_new call
	-- anchor table of constants and prototype (to avoid being collected)
	-- sethvalue2s(L, L->top, fs->h); incr_top(L); /* C */
	-- setptvalue2s(L, L->top, f); incr_top(L);
end

------------------------------------------------------------------------
-- closing of a function
------------------------------------------------------------------------
function luaY:close_func(ls)
	local L = ls.L
	local fs = ls.fs
	local f = fs.f
	self:removevars(ls, 0)
	luaK:ret(fs, 0, 0)  -- final return
	-- luaM_reallocvector deleted for f->code, f->lineinfo, f->k, f->p,
	-- f->locvars, f->upvalues; not required for Lua table arrays
	f.sizecode = fs.pc
	f.sizelineinfo = fs.pc
	f.sizek = fs.nk
	f.sizep = fs.np
	f.sizelocvars = fs.nlocvars
	f.sizeupvalues = f.nups
	--lua_assert(luaG_checkcode(f))  -- currently not implemented
	lua_assert(fs.bl == nil)
	ls.fs = fs.prev
	-- the following is not required for this implementation; kept here
	-- for completeness
	-- L->top -= 2;  /* remove table and prototype from the stack */
	-- last token read was anchored in defunct function; must reanchor it
	if fs then self:anchor_token(ls) end
end

------------------------------------------------------------------------
-- parser initialization function
-- * note additional sub-tables needed for LexState, FuncState
------------------------------------------------------------------------
function luaY:parser(L, z, buff, name)
	local lexstate = {}  -- LexState
	lexstate.t = {}
	lexstate.lookahead = {}
	local funcstate = {}  -- FuncState
	funcstate.upvalues = {}
	funcstate.actvar = {}
	-- the following nCcalls initialization added for convenience
	L.nCcalls = 0
	lexstate.buff = buff
	luaX:setinput(L, lexstate, z, name)
	self:open_func(lexstate, funcstate)
	funcstate.f.is_vararg = self.VARARG_ISVARARG  -- main func. is always vararg
	luaX:next(lexstate)  -- read first token
	self:chunk(lexstate)
	self:check(lexstate, "TK_EOS")
	self:close_func(lexstate)
	lua_assert(funcstate.prev == nil)
	lua_assert(funcstate.f.nups == 0)
	lua_assert(lexstate.fs == nil)
	return funcstate.f
end

--[[--------------------------------------------------------------------
-- GRAMMAR RULES
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a function name suffix, for function call specifications
-- * used in primaryexp(), funcname()
------------------------------------------------------------------------
function luaY:field(ls, v)
	-- field -> ['.' | ':'] NAME
	local fs = ls.fs
	local key = {}  -- expdesc
	luaK:exp2anyreg(fs, v)
	luaX:next(ls)  -- skip the dot or colon
	self:checkname(ls, key)
	luaK:indexed(fs, v, key)
end

------------------------------------------------------------------------
-- parse a table indexing suffix, for constructors, expressions
-- * used in recfield(), primaryexp()
------------------------------------------------------------------------
function luaY:yindex(ls, v)
	-- index -> '[' expr ']'
	luaX:next(ls)  -- skip the '['
	self:expr(ls, v)
	luaK:exp2val(ls.fs, v)
	self:checknext(ls, "]")
end

--[[--------------------------------------------------------------------
-- Rules for Constructors
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct ConsControl:
--   v  -- last list item read (table: struct expdesc)
--   t  -- table descriptor (table: struct expdesc)
--   nh  -- total number of 'record' elements
--   na  -- total number of array elements
--   tostore  -- number of array elements pending to be stored
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a table record (hash) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:recfield(ls, cc)
	-- recfield -> (NAME | '['exp1']') = exp1
	local fs = ls.fs
	local reg = ls.fs.freereg
	local key, val = {}, {}  -- expdesc
	if ls.t.token == "TK_NAME" then
		self:checklimit(fs, cc.nh, self.MAX_INT, "items in a constructor")
		self:checkname(ls, key)
	else  -- ls->t.token == '['
		self:yindex(ls, key)
	end
	cc.nh = cc.nh + 1
	self:checknext(ls, "=")
	local rkkey = luaK:exp2RK(fs, key)
	self:expr(ls, val)
	luaK:codeABC(fs, "OP_SETTABLE", cc.t.info, rkkey, luaK:exp2RK(fs, val))
	fs.freereg = reg  -- free registers
end

------------------------------------------------------------------------
-- emit a set list instruction if enough elements (LFIELDS_PER_FLUSH)
-- * used in constructor()
------------------------------------------------------------------------
function luaY:closelistfield(fs, cc)
	if cc.v.k == "VVOID" then return end  -- there is no list item
	luaK:exp2nextreg(fs, cc.v)
	cc.v.k = "VVOID"
	if cc.tostore == luaP.LFIELDS_PER_FLUSH then
		luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)  -- flush
		cc.tostore = 0  -- no more items pending
	end
end

------------------------------------------------------------------------
-- emit a set list instruction at the end of parsing list constructor
-- * used in constructor()
------------------------------------------------------------------------
function luaY:lastlistfield(fs, cc)
	if cc.tostore == 0 then return end
	if self:hasmultret(cc.v.k) then
		luaK:setmultret(fs, cc.v)
		luaK:setlist(fs, cc.t.info, cc.na, self.LUA_MULTRET)
		cc.na = cc.na - 1  -- do not count last expression (unknown number of elements)
	else
		if cc.v.k ~= "VVOID" then
			luaK:exp2nextreg(fs, cc.v)
		end
		luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)
	end
end

------------------------------------------------------------------------
-- parse a table list (array) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:listfield(ls, cc)
	self:expr(ls, cc.v)
	self:checklimit(ls.fs, cc.na, self.MAX_INT, "items in a constructor")
	cc.na = cc.na + 1
	cc.tostore = cc.tostore + 1
end

------------------------------------------------------------------------
-- parse a table constructor
-- * used in funcargs(), simpleexp()
------------------------------------------------------------------------
function luaY:constructor(ls, t)
	-- constructor -> '{' [ field { fieldsep field } [ fieldsep ] ] '}'
	-- field -> recfield | listfield
	-- fieldsep -> ',' | ';'
	local fs = ls.fs
	local line = ls.linenumber
	local pc = luaK:codeABC(fs, "OP_NEWTABLE", 0, 0, 0)
	local cc = {}  -- ConsControl
	cc.v = {}
	cc.na, cc.nh, cc.tostore = 0, 0, 0
	cc.t = t
	self:init_exp(t, "VRELOCABLE", pc)
	self:init_exp(cc.v, "VVOID", 0)  -- no value (yet)
	luaK:exp2nextreg(ls.fs, t)  -- fix it at stack top (for gc)
	self:checknext(ls, "{")
	repeat
		lua_assert(cc.v.k == "VVOID" or cc.tostore > 0)
		if ls.t.token == "}" then break end
		self:closelistfield(fs, cc)
		local c = ls.t.token

		if c == "TK_NAME" then  -- may be listfields or recfields
			luaX:lookahead(ls)
			if ls.lookahead.token ~= "=" then  -- expression?
				self:listfield(ls, cc)
			else
				self:recfield(ls, cc)
			end
		elseif c == "[" then  -- constructor_item -> recfield
			self:recfield(ls, cc)
		else  -- constructor_part -> listfield
			self:listfield(ls, cc)
		end
	until not self:testnext(ls, ",") and not self:testnext(ls, ";")
	self:check_match(ls, "}", "{", line)
	self:lastlistfield(fs, cc)
	luaP:SETARG_B(fs.f.code[pc], self:int2fb(cc.na)) -- set initial array size
	luaP:SETARG_C(fs.f.code[pc], self:int2fb(cc.nh)) -- set initial table size
end

-- }======================================================================

------------------------------------------------------------------------
-- parse the arguments (parameters) of a function declaration
-- * used in body()
------------------------------------------------------------------------
function luaY:parlist(ls)
	-- parlist -> [ param { ',' param } ]
	local fs = ls.fs
	local f = fs.f
	local nparams = 0
	f.is_vararg = 0
	if ls.t.token ~= ")" then  -- is 'parlist' not empty?
		repeat
			local c = ls.t.token
			if c == "TK_NAME" then  -- param -> NAME
				self:new_localvar(ls, self:str_checkname(ls), nparams)
				nparams = nparams + 1
			elseif c == "TK_DOTS" then  -- param -> `...'
				luaX:next(ls)
				-- [[
				-- #if defined(LUA_COMPAT_VARARG)
				-- use `arg' as default name
				self:new_localvarliteral(ls, "arg", nparams)
				nparams = nparams + 1
				f.is_vararg = self.VARARG_HASARG + self.VARARG_NEEDSARG
				-- #endif
				--]]
				f.is_vararg = f.is_vararg + self.VARARG_ISVARARG
			else
				luaX:syntaxerror(ls, "<name> or "..self:LUA_QL("...").." expected")
			end
		until f.is_vararg ~= 0 or not self:testnext(ls, ",")
	end--if
	self:adjustlocalvars(ls, nparams)
	-- NOTE: the following works only when HASARG_MASK is 2!
	f.numparams = fs.nactvar - (f.is_vararg % self.HASARG_MASK)
	luaK:reserveregs(fs, fs.nactvar)  -- reserve register for parameters
end

------------------------------------------------------------------------
-- parse function declaration body
-- * used in simpleexp(), localfunc(), funcstat()
------------------------------------------------------------------------
function luaY:body(ls, e, needself, line)
	-- body ->  '(' parlist ')' chunk END
	local new_fs = {}  -- FuncState
	new_fs.upvalues = {}
	new_fs.actvar = {}
	self:open_func(ls, new_fs)
	new_fs.f.lineDefined = line
	self:checknext(ls, "(")
	if needself then
		self:new_localvarliteral(ls, "self", 0)
		self:adjustlocalvars(ls, 1)
	end
	self:parlist(ls)
	self:checknext(ls, ")")
	self:chunk(ls)
	new_fs.f.lastlinedefined = ls.linenumber
	self:check_match(ls, "TK_END", "TK_FUNCTION", line)
	self:close_func(ls)
	self:pushclosure(ls, new_fs, e)
end

------------------------------------------------------------------------
-- parse a list of comma-separated expressions
-- * used is multiple locations
------------------------------------------------------------------------
function luaY:explist1(ls, v)
	-- explist1 -> expr { ',' expr }
	local n = 1  -- at least one expression
	self:expr(ls, v)
	while self:testnext(ls, ",") do
		luaK:exp2nextreg(ls.fs, v)
		self:expr(ls, v)
		n = n + 1
	end
	return n
end

------------------------------------------------------------------------
-- parse the parameters of a function call
-- * contrast with parlist(), used in function declarations
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:funcargs(ls, f)
	local fs = ls.fs
	local args = {}  -- expdesc
	local nparams
	local line = ls.linenumber
	local c = ls.t.token
	if c == "(" then  -- funcargs -> '(' [ explist1 ] ')'
		if line ~= ls.lastline then
			luaX:syntaxerror(ls, "ambiguous syntax (function call x new statement)")
		end
		luaX:next(ls)
		if ls.t.token == ")" then  -- arg list is empty?
			args.k = "VVOID"
		else
			self:explist1(ls, args)
			luaK:setmultret(fs, args)
		end
		self:check_match(ls, ")", "(", line)
	elseif c == "{" then  -- funcargs -> constructor
		self:constructor(ls, args)
	elseif c == "TK_STRING" then  -- funcargs -> STRING
		self:codestring(ls, args, ls.t.seminfo)
		luaX:next(ls)  -- must use 'seminfo' before 'next'
	else
		luaX:syntaxerror(ls, "function arguments expected")
		return
	end
	lua_assert(f.k == "VNONRELOC")
	local base = f.info  -- base register for call
	if self:hasmultret(args.k) then
		nparams = self.LUA_MULTRET  -- open call
	else
		if args.k ~= "VVOID" then
			luaK:exp2nextreg(fs, args)  -- close last argument
		end
		nparams = fs.freereg - (base + 1)
	end
	self:init_exp(f, "VCALL", luaK:codeABC(fs, "OP_CALL", base, nparams + 1, 2))
	luaK:fixline(fs, line)
	fs.freereg = base + 1  -- call remove function and arguments and leaves
	-- (unless changed) one result
end

--[[--------------------------------------------------------------------
-- Expression parsing
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parses an expression in parentheses or a single variable
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:prefixexp(ls, v)
	-- prefixexp -> NAME | '(' expr ')'
	local c = ls.t.token
	if c == "(" then
		local line = ls.linenumber
		luaX:next(ls)
		self:expr(ls, v)
		self:check_match(ls, ")", "(", line)
		luaK:dischargevars(ls.fs, v)
	elseif c == "TK_NAME" then
		self:singlevar(ls, v)
	else
		luaX:syntaxerror(ls, "unexpected symbol")
	end--if c
	return
end

------------------------------------------------------------------------
-- parses a prefixexp (an expression in parentheses or a single variable)
-- or a function call specification
-- * used in simpleexp(), assignment(), exprstat()
------------------------------------------------------------------------
function luaY:primaryexp(ls, v)
	-- primaryexp ->
	--    prefixexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs }
	local fs = ls.fs
	self:prefixexp(ls, v)
	while true do
		local c = ls.t.token
		if c == "." then  -- field
			self:field(ls, v)
		elseif c == "[" then  -- '[' exp1 ']'
			local key = {}  -- expdesc
			luaK:exp2anyreg(fs, v)
			self:yindex(ls, key)
			luaK:indexed(fs, v, key)
		elseif c == ":" then  -- ':' NAME funcargs
			local key = {}  -- expdesc
			luaX:next(ls)
			self:checkname(ls, key)
			luaK:_self(fs, v, key)
			self:funcargs(ls, v)
		elseif c == "(" or c == "TK_STRING" or c == "{" then  -- funcargs
			luaK:exp2nextreg(fs, v)
			self:funcargs(ls, v)
		else
			return
		end--if c
	end--while
end

------------------------------------------------------------------------
-- parses general expression types, constants handled here
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:simpleexp(ls, v)
	-- simpleexp -> NUMBER | STRING | NIL | TRUE | FALSE | ... |
	--              constructor | FUNCTION body | primaryexp
	local c = ls.t.token
	if c == "TK_NUMBER" then
		self:init_exp(v, "VKNUM", 0)
		v.nval = ls.t.seminfo
	elseif c == "TK_STRING" then
		self:codestring(ls, v, ls.t.seminfo)
	elseif c == "TK_NIL" then
		self:init_exp(v, "VNIL", 0)
	elseif c == "TK_TRUE" then
		self:init_exp(v, "VTRUE", 0)
	elseif c == "TK_FALSE" then
		self:init_exp(v, "VFALSE", 0)
	elseif c == "TK_DOTS" then  -- vararg
		local fs = ls.fs
		self:check_condition(ls, fs.f.is_vararg ~= 0,
			"cannot use "..self:LUA_QL("...").." outside a vararg function");
		-- NOTE: the following substitutes for a bitop, but is value-specific
		local is_vararg = fs.f.is_vararg
		if is_vararg >= self.VARARG_NEEDSARG then
			fs.f.is_vararg = is_vararg - self.VARARG_NEEDSARG  -- don't need 'arg'
		end
		self:init_exp(v, "VVARARG", luaK:codeABC(fs, "OP_VARARG", 0, 1, 0))
	elseif c == "{" then  -- constructor
		self:constructor(ls, v)
		return
	elseif c == "TK_FUNCTION" then
		luaX:next(ls)
		self:body(ls, v, false, ls.linenumber)
		return
	else
		self:primaryexp(ls, v)
		return
	end--if c
	luaX:next(ls)
end

------------------------------------------------------------------------
-- Translates unary operators tokens if found, otherwise returns
-- OPR_NOUNOPR. getunopr() and getbinopr() are used in subexpr().
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:getunopr(op)
	if op == "TK_NOT" then
		return "OPR_NOT"
	elseif op == "-" then
		return "OPR_MINUS"
	elseif op == "#" then
		return "OPR_LEN"
	else
		return "OPR_NOUNOPR"
	end
end

------------------------------------------------------------------------
-- Translates binary operator tokens if found, otherwise returns
-- OPR_NOBINOPR. Code generation uses OPR_* style tokens.
-- * used in subexpr()
------------------------------------------------------------------------
luaY.getbinopr_table = {
	["+"] = "OPR_ADD",
	["-"] = "OPR_SUB",
	["*"] = "OPR_MUL",
	["/"] = "OPR_DIV",
	["%"] = "OPR_MOD",
	["^"] = "OPR_POW",
	["TK_CONCAT"] = "OPR_CONCAT",
	["TK_NE"] = "OPR_NE",
	["TK_EQ"] = "OPR_EQ",
	["<"] = "OPR_LT",
	["TK_LE"] = "OPR_LE",
	[">"] = "OPR_GT",
	["TK_GE"] = "OPR_GE",
	["TK_AND"] = "OPR_AND",
	["TK_OR"] = "OPR_OR",
}
function luaY:getbinopr(op)
	local opr = self.getbinopr_table[op]
	if opr then return opr else return "OPR_NOBINOPR" end
end

------------------------------------------------------------------------
-- the following priority table consists of pairs of left/right values
-- for binary operators (was a static const struct); grep for ORDER OPR
-- * the following struct is replaced:
--   static const struct {
--     lu_byte left;  /* left priority for each binary operator */
--     lu_byte right; /* right priority */
--   } priority[] = {  /* ORDER OPR */
------------------------------------------------------------------------
luaY.priority = {
	{6, 6}, {6, 6}, {7, 7}, {7, 7}, {7, 7}, -- `+' `-' `/' `%'
	{10, 9}, {5, 4},                 -- power and concat (right associative)
	{3, 3}, {3, 3},                  -- equality
	{3, 3}, {3, 3}, {3, 3}, {3, 3},  -- order
	{2, 2}, {1, 1}                   -- logical (and/or)
}

luaY.UNARY_PRIORITY = 8  -- priority for unary operators

------------------------------------------------------------------------
-- Parse subexpressions. Includes handling of unary operators and binary
-- operators. A subexpr is given the rhs priority level of the operator
-- immediately left of it, if any (limit is -1 if none,) and if a binop
-- is found, limit is compared with the lhs priority level of the binop
-- in order to determine which executes first.
------------------------------------------------------------------------

------------------------------------------------------------------------
-- subexpr -> (simpleexp | unop subexpr) { binop subexpr }
-- where 'binop' is any binary operator with a priority higher than 'limit'
-- * for priority lookups with self.priority[], 1=left and 2=right
-- * recursively called
-- * used in expr()
------------------------------------------------------------------------
function luaY:subexpr(ls, v, limit)
	self:enterlevel(ls)
	local uop = self:getunopr(ls.t.token)
	if uop ~= "OPR_NOUNOPR" then
		luaX:next(ls)
		self:subexpr(ls, v, self.UNARY_PRIORITY)
		luaK:prefix(ls.fs, uop, v)
	else
		self:simpleexp(ls, v)
	end
	-- expand while operators have priorities higher than 'limit'
	local op = self:getbinopr(ls.t.token)
	while op ~= "OPR_NOBINOPR" and self.priority[luaK.BinOpr[op] + 1][1] > limit do
		local v2 = {}  -- expdesc
		luaX:next(ls)
		luaK:infix(ls.fs, op, v)
		-- read sub-expression with higher priority
		local nextop = self:subexpr(ls, v2, self.priority[luaK.BinOpr[op] + 1][2])
		luaK:posfix(ls.fs, op, v, v2)
		op = nextop
	end
	self:leavelevel(ls)
	return op  -- return first untreated operator
end

------------------------------------------------------------------------
-- Expression parsing starts here. Function subexpr is entered with the
-- left operator (which is non-existent) priority of -1, which is lower
-- than all actual operators. Expr information is returned in parm v.
-- * used in multiple locations
------------------------------------------------------------------------
function luaY:expr(ls, v)
	self:subexpr(ls, v, 0)
end

-- }====================================================================

--[[--------------------------------------------------------------------
-- Rules for Statements
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks next token, used as a look-ahead
-- * returns boolean instead of 0|1
-- * used in retstat(), chunk()
------------------------------------------------------------------------
function luaY:block_follow(token)
	if token == "TK_ELSE" or token == "TK_ELSEIF" or token == "TK_END"
		or token == "TK_UNTIL" or token == "TK_EOS" then
		return true
	else
		return false
	end
end

------------------------------------------------------------------------
-- parse a code block or unit
-- * used in multiple functions
------------------------------------------------------------------------
function luaY:block(ls)
	-- block -> chunk
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	self:enterblock(fs, bl, false)
	self:chunk(ls)
	lua_assert(bl.breaklist == luaK.NO_JUMP)
	self:leaveblock(fs)
end

------------------------------------------------------------------------
-- structure to chain all variables in the left-hand side of an
-- assignment
-- struct LHS_assign:
--   prev  -- (table: struct LHS_assign)
--   v  -- variable (global, local, upvalue, or indexed) (table: expdesc)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- check whether, in an assignment to a local variable, the local variable
-- is needed in a previous assignment (to a table). If so, save original
-- local value in a safe place and use this safe copy in the previous
-- assignment.
-- * used in assignment()
------------------------------------------------------------------------
function luaY:check_conflict(ls, lh, v)
	local fs = ls.fs
	local extra = fs.freereg  -- eventual position to save local variable
	local conflict = false
	while lh do
		if lh.v.k == "VINDEXED" then
			if lh.v.info == v.info then  -- conflict?
				conflict = true
				lh.v.info = extra  -- previous assignment will use safe copy
			end
			if lh.v.aux == v.info then  -- conflict?
				conflict = true
				lh.v.aux = extra  -- previous assignment will use safe copy
			end
		end
		lh = lh.prev
	end
	if conflict then
		luaK:codeABC(fs, "OP_MOVE", fs.freereg, v.info, 0)  -- make copy
		luaK:reserveregs(fs, 1)
	end
end

------------------------------------------------------------------------
-- parse a variable assignment sequence
-- * recursively called
-- * used in exprstat()
------------------------------------------------------------------------
function luaY:assignment(ls, lh, nvars)
	local e = {}  -- expdesc
	-- test was: VLOCAL <= lh->v.k && lh->v.k <= VINDEXED
	local c = lh.v.k
	self:check_condition(ls, c == "VLOCAL" or c == "VUPVAL" or c == "VGLOBAL"
		or c == "VINDEXED", "syntax error")
	if self:testnext(ls, ",") then  -- assignment -> ',' primaryexp assignment
		local nv = {}  -- LHS_assign
		nv.v = {}
		nv.prev = lh
		self:primaryexp(ls, nv.v)
		if nv.v.k == "VLOCAL" then
			self:check_conflict(ls, lh, nv.v)
		end
		self:checklimit(ls.fs, nvars, self.LUAI_MAXCCALLS - ls.L.nCcalls,
			"variables in assignment")
		self:assignment(ls, nv, nvars + 1)
	else  -- assignment -> '=' explist1
		self:checknext(ls, "=")
		local nexps = self:explist1(ls, e)
		if nexps ~= nvars then
			self:adjust_assign(ls, nvars, nexps, e)
			if nexps > nvars then
				ls.fs.freereg = ls.fs.freereg - (nexps - nvars)  -- remove extra values
			end
		else
			luaK:setoneret(ls.fs, e)  -- close last expression
			luaK:storevar(ls.fs, lh.v, e)
			return  -- avoid default
		end
	end
	self:init_exp(e, "VNONRELOC", ls.fs.freereg - 1)  -- default assignment
	luaK:storevar(ls.fs, lh.v, e)
end

------------------------------------------------------------------------
-- parse condition in a repeat statement or an if control structure
-- * used in repeatstat(), test_then_block()
------------------------------------------------------------------------
function luaY:cond(ls)
	-- cond -> exp
	local v = {}  -- expdesc
	self:expr(ls, v)  -- read condition
	if v.k == "VNIL" then v.k = "VFALSE" end  -- 'falses' are all equal here
	luaK:goiftrue(ls.fs, v)
	return v.f
end

------------------------------------------------------------------------
-- parse a break statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:breakstat(ls)
	-- stat -> BREAK
	local fs = ls.fs
	local bl = fs.bl
	local upval = false
	while bl and not bl.isbreakable do
		if bl.upval then upval = true end
		bl = bl.previous
	end
	if not bl then
		luaX:syntaxerror(ls, "no loop to break")
	end
	if upval then
		luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
	end
	bl.breaklist = luaK:concat(fs, bl.breaklist, luaK:jump(fs))
end

------------------------------------------------------------------------
-- parse a while-do control structure, body processed by block()
-- * with dynamic array sizes, MAXEXPWHILE + EXTRAEXP limits imposed by
--   the function's implementation can be removed
-- * used in statements()
------------------------------------------------------------------------
function luaY:whilestat(ls, line)
	-- whilestat -> WHILE cond DO block END
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	luaX:next(ls)  -- skip WHILE
	local whileinit = luaK:getlabel(fs)
	local condexit = self:cond(ls)
	self:enterblock(fs, bl, true)
	self:checknext(ls, "TK_DO")
	self:block(ls)
	luaK:patchlist(fs, luaK:jump(fs), whileinit)
	self:check_match(ls, "TK_END", "TK_WHILE", line)
	self:leaveblock(fs)
	luaK:patchtohere(fs, condexit)  -- false conditions finish the loop
end

------------------------------------------------------------------------
-- parse a repeat-until control structure, body parsed by chunk()
-- * used in statements()
------------------------------------------------------------------------
function luaY:repeatstat(ls, line)
	-- repeatstat -> REPEAT block UNTIL cond
	local fs = ls.fs
	local repeat_init = luaK:getlabel(fs)
	local bl1, bl2 = {}, {}  -- BlockCnt
	self:enterblock(fs, bl1, true)  -- loop block
	self:enterblock(fs, bl2, false)  -- scope block
	luaX:next(ls)  -- skip REPEAT
	self:chunk(ls)
	self:check_match(ls, "TK_UNTIL", "TK_REPEAT", line)
	local condexit = self:cond(ls)  -- read condition (inside scope block)
	if not bl2.upval then  -- no upvalues?
		self:leaveblock(fs)  -- finish scope
		luaK:patchlist(ls.fs, condexit, repeat_init)  -- close the loop
	else  -- complete semantics when there are upvalues
		self:breakstat(ls)  -- if condition then break
		luaK:patchtohere(ls.fs, condexit)  -- else...
		self:leaveblock(fs)  -- finish scope...
		luaK:patchlist(ls.fs, luaK:jump(fs), repeat_init)  -- and repeat
	end
	self:leaveblock(fs)  -- finish loop
end

------------------------------------------------------------------------
-- parse the single expressions needed in numerical for loops
-- * used in fornum()
------------------------------------------------------------------------
function luaY:exp1(ls)
	local e = {}  -- expdesc
	self:expr(ls, e)
	local k = e.k
	luaK:exp2nextreg(ls.fs, e)
	return k
end

------------------------------------------------------------------------
-- parse a for loop body for both versions of the for loop
-- * used in fornum(), forlist()
------------------------------------------------------------------------
function luaY:forbody(ls, base, line, nvars, isnum)
	-- forbody -> DO block
	local bl = {}  -- BlockCnt
	local fs = ls.fs
	self:adjustlocalvars(ls, 3)  -- control variables
	self:checknext(ls, "TK_DO")
	local prep = isnum and luaK:codeAsBx(fs, "OP_FORPREP", base, luaK.NO_JUMP)
		or luaK:jump(fs)
	self:enterblock(fs, bl, false)  -- scope for declared variables
	self:adjustlocalvars(ls, nvars)
	luaK:reserveregs(fs, nvars)
	self:block(ls)
	self:leaveblock(fs)  -- end of scope for declared variables
	luaK:patchtohere(fs, prep)
	local endfor = isnum and luaK:codeAsBx(fs, "OP_FORLOOP", base, luaK.NO_JUMP)
		or luaK:codeABC(fs, "OP_TFORLOOP", base, 0, nvars)
	luaK:fixline(fs, line)  -- pretend that `OP_FOR' starts the loop
	luaK:patchlist(fs, isnum and endfor or luaK:jump(fs), prep + 1)
end

------------------------------------------------------------------------
-- parse a numerical for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:fornum(ls, varname, line)
	-- fornum -> NAME = exp1,exp1[,exp1] forbody
	local fs = ls.fs
	local base = fs.freereg
	self:new_localvarliteral(ls, "(for index)", 0)
	self:new_localvarliteral(ls, "(for limit)", 1)
	self:new_localvarliteral(ls, "(for step)", 2)
	self:new_localvar(ls, varname, 3)
	self:checknext(ls, '=')
	self:exp1(ls)  -- initial value
	self:checknext(ls, ",")
	self:exp1(ls)  -- limit
	if self:testnext(ls, ",") then
		self:exp1(ls)  -- optional step
	else  -- default step = 1
		luaK:codeABx(fs, "OP_LOADK", fs.freereg, luaK:numberK(fs, 1))
		luaK:reserveregs(fs, 1)
	end
	self:forbody(ls, base, line, 1, true)
end

------------------------------------------------------------------------
-- parse a generic for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:forlist(ls, indexname)
	-- forlist -> NAME {,NAME} IN explist1 forbody
	local fs = ls.fs
	local e = {}  -- expdesc
	local nvars = 0
	local base = fs.freereg
	-- create control variables
	self:new_localvarliteral(ls, "(for generator)", nvars)
	nvars = nvars + 1
	self:new_localvarliteral(ls, "(for state)", nvars)
	nvars = nvars + 1
	self:new_localvarliteral(ls, "(for control)", nvars)
	nvars = nvars + 1
	-- create declared variables
	self:new_localvar(ls, indexname, nvars)
	nvars = nvars + 1
	while self:testnext(ls, ",") do
		self:new_localvar(ls, self:str_checkname(ls), nvars)
		nvars = nvars + 1
	end
	self:checknext(ls, "TK_IN")
	local line = ls.linenumber
	self:adjust_assign(ls, 3, self:explist1(ls, e), e)
	luaK:checkstack(fs, 3)  -- extra space to call generator
	self:forbody(ls, base, line, nvars - 3, false)
end

------------------------------------------------------------------------
-- initial parsing for a for loop, calls fornum() or forlist()
-- * used in statements()
------------------------------------------------------------------------
function luaY:forstat(ls, line)
	-- forstat -> FOR (fornum | forlist) END
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	self:enterblock(fs, bl, true)  -- scope for loop and control variables
	luaX:next(ls)  -- skip `for'
	local varname = self:str_checkname(ls)  -- first variable name
	local c = ls.t.token
	if c == "=" then
		self:fornum(ls, varname, line)
	elseif c == "," or c == "TK_IN" then
		self:forlist(ls, varname)
	else
		luaX:syntaxerror(ls, self:LUA_QL("=").." or "..self:LUA_QL("in").." expected")
	end
	self:check_match(ls, "TK_END", "TK_FOR", line)
	self:leaveblock(fs)  -- loop scope (`break' jumps to this point)
end

------------------------------------------------------------------------
-- parse part of an if control structure, including the condition
-- * used in ifstat()
------------------------------------------------------------------------
function luaY:test_then_block(ls)
	-- test_then_block -> [IF | ELSEIF] cond THEN block
	luaX:next(ls)  -- skip IF or ELSEIF
	local condexit = self:cond(ls)
	self:checknext(ls, "TK_THEN")
	self:block(ls)  -- `then' part
	return condexit
end

------------------------------------------------------------------------
-- parse an if control structure
-- * used in statements()
------------------------------------------------------------------------
function luaY:ifstat(ls, line)
	-- ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END
	local fs = ls.fs
	local escapelist = luaK.NO_JUMP
	local flist = self:test_then_block(ls)  -- IF cond THEN block
	while ls.t.token == "TK_ELSEIF" do
		escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
		luaK:patchtohere(fs, flist)
		flist = self:test_then_block(ls)  -- ELSEIF cond THEN block
	end
	if ls.t.token == "TK_ELSE" then
		escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
		luaK:patchtohere(fs, flist)
		luaX:next(ls)  -- skip ELSE (after patch, for correct line info)
		self:block(ls)  -- 'else' part
	else
		escapelist = luaK:concat(fs, escapelist, flist)
	end
	luaK:patchtohere(fs, escapelist)
	self:check_match(ls, "TK_END", "TK_IF", line)
end

------------------------------------------------------------------------
-- parse a local function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localfunc(ls)
	local v, b = {}, {}  -- expdesc
	local fs = ls.fs
	self:new_localvar(ls, self:str_checkname(ls), 0)
	self:init_exp(v, "VLOCAL", fs.freereg)
	luaK:reserveregs(fs, 1)
	self:adjustlocalvars(ls, 1)
	self:body(ls, b, false, ls.linenumber)
	luaK:storevar(fs, v, b)
	-- debug information will only see the variable after this point!
	self:getlocvar(fs, fs.nactvar - 1).startpc = fs.pc
end

------------------------------------------------------------------------
-- parse a local variable declaration statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localstat(ls)
	-- stat -> LOCAL NAME {',' NAME} ['=' explist1]
	local nvars = 0
	local nexps
	local e = {}  -- expdesc
	repeat
		self:new_localvar(ls, self:str_checkname(ls), nvars)
		nvars = nvars + 1
	until not self:testnext(ls, ",")
	if self:testnext(ls, "=") then
		nexps = self:explist1(ls, e)
	else
		e.k = "VVOID"
		nexps = 0
	end
	self:adjust_assign(ls, nvars, nexps, e)
	self:adjustlocalvars(ls, nvars)
end

------------------------------------------------------------------------
-- parse a function name specification
-- * used in funcstat()
------------------------------------------------------------------------
function luaY:funcname(ls, v)
	-- funcname -> NAME {field} [':' NAME]
	local needself = false
	self:singlevar(ls, v)
	while ls.t.token == "." do
		self:field(ls, v)
	end
	if ls.t.token == ":" then
		needself = true
		self:field(ls, v)
	end
	return needself
end

------------------------------------------------------------------------
-- parse a function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:funcstat(ls, line)
	-- funcstat -> FUNCTION funcname body
	local v, b = {}, {}  -- expdesc
	luaX:next(ls)  -- skip FUNCTION
	local needself = self:funcname(ls, v)
	self:body(ls, b, needself, line)
	luaK:storevar(ls.fs, v, b)
	luaK:fixline(ls.fs, line)  -- definition 'happens' in the first line
end

------------------------------------------------------------------------
-- parse a function call with no returns or an assignment statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:exprstat(ls)
	-- stat -> func | assignment
	local fs = ls.fs
	local v = {}  -- LHS_assign
	v.v = {}
	self:primaryexp(ls, v.v)
	if v.v.k == "VCALL" then  -- stat -> func
		luaP:SETARG_C(luaK:getcode(fs, v.v), 1)  -- call statement uses no results
	else  -- stat -> assignment
		v.prev = nil
		self:assignment(ls, v, 1)
	end
end

------------------------------------------------------------------------
-- parse a return statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:retstat(ls)
	-- stat -> RETURN explist
	local fs = ls.fs
	local e = {}  -- expdesc
	local first, nret  -- registers with returned values
	luaX:next(ls)  -- skip RETURN
	if self:block_follow(ls.t.token) or ls.t.token == ";" then
		first, nret = 0, 0  -- return no values
	else
		nret = self:explist1(ls, e)  -- optional return values
		if self:hasmultret(e.k) then
			luaK:setmultret(fs, e)
			if e.k == "VCALL" and nret == 1 then  -- tail call?
				luaP:SET_OPCODE(luaK:getcode(fs, e), "OP_TAILCALL")
				lua_assert(luaP:GETARG_A(luaK:getcode(fs, e)) == fs.nactvar)
			end
			first = fs.nactvar
			nret = self.LUA_MULTRET  -- return all values
		else
			if nret == 1 then  -- only one single value?
				first = luaK:exp2anyreg(fs, e)
			else
				luaK:exp2nextreg(fs, e)  -- values must go to the 'stack'
				first = fs.nactvar  -- return all 'active' values
				lua_assert(nret == fs.freereg - first)
			end
		end--if
	end--if
	luaK:ret(fs, first, nret)
end

------------------------------------------------------------------------
-- initial parsing for statements, calls a lot of functions
-- * returns boolean instead of 0|1
-- * used in chunk()
------------------------------------------------------------------------
function luaY:statement(ls)
	local line = ls.linenumber  -- may be needed for error messages
	local c = ls.t.token
	if c == "TK_IF" then  -- stat -> ifstat
		self:ifstat(ls, line)
		return false
	elseif c == "TK_WHILE" then  -- stat -> whilestat
		self:whilestat(ls, line)
		return false
	elseif c == "TK_DO" then  -- stat -> DO block END
		luaX:next(ls)  -- skip DO
		self:block(ls)
		self:check_match(ls, "TK_END", "TK_DO", line)
		return false
	elseif c == "TK_FOR" then  -- stat -> forstat
		self:forstat(ls, line)
		return false
	elseif c == "TK_REPEAT" then  -- stat -> repeatstat
		self:repeatstat(ls, line)
		return false
	elseif c == "TK_FUNCTION" then  -- stat -> funcstat
		self:funcstat(ls, line)
		return false
	elseif c == "TK_LOCAL" then  -- stat -> localstat
		luaX:next(ls)  -- skip LOCAL
		if self:testnext(ls, "TK_FUNCTION") then  -- local function?
			self:localfunc(ls)
		else
			self:localstat(ls)
		end
		return false
	elseif c == "TK_RETURN" then  -- stat -> retstat
		self:retstat(ls)
		return true  -- must be last statement
	elseif c == "TK_BREAK" then  -- stat -> breakstat
		luaX:next(ls)  -- skip BREAK
		self:breakstat(ls)
		return true  -- must be last statement
	else
		self:exprstat(ls)
		return false  -- to avoid warnings
	end--if c
end

------------------------------------------------------------------------
-- parse a chunk, which consists of a bunch of statements
-- * used in parser(), body(), block(), repeatstat()
------------------------------------------------------------------------
function luaY:chunk(ls)
	-- chunk -> { stat [';'] }
	local islast = false
	self:enterlevel(ls)
	while not islast and not self:block_follow(ls.t.token) do
		islast = self:statement(ls)
		self:testnext(ls, ";")
		lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg and
			ls.fs.freereg >= ls.fs.nactvar)
		ls.fs.freereg = ls.fs.nactvar  -- free registers
	end
	self:leavelevel(ls)
end

-- }======================================================================





luaX:init()  -- required by llex
local LuaState = {}  -- dummy, not actually used, but retained since
-- the intention is to complete a straight port

------------------------------------------------------------------------
-- interfacing to yueliang
------------------------------------------------------------------------


return function (source, name)
	name = name or 'compiled-lua'
	-- luaZ:make_getF returns a file chunk reader
	-- luaZ:init returns a zio input stream
	local zio = luaZ:init(luaZ:make_getF(source), nil)
	if not zio then return end
	-- luaY:parser parses the input stream
	-- func is the function prototype in tabular form; in C, func can
	-- now be used directly by the VM, this can't be done in Lua

	local func = luaY:parser(LuaState, zio, nil, "@"..name)
	-- luaU:make_setS returns a string chunk writer
	local writer, buff = luaU:make_setS()
	-- luaU:dump builds a binary chunk
	luaU:dump(LuaState, func, writer, buff)
	-- a string.dump equivalent in returned

	return buff.data
end

end
}
--ScreenGui.ssGUIv7.Synapse.Frame.cle.LocalScript
local function C_G2L_553()
local script = G2L["553"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Source.Text = ""
end)
end
task.spawn(C_G2L_553)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.DraggableScript
local function C_G2L_555()
local script = G2L["555"]
--This script was created by Tiffblocks and uploaded by me :P
local UserInputService = game:GetService("UserInputService")

local gui = script.Parent

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
end
task.spawn(C_G2L_555)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.credits.TextLabel.LocalScript
local function C_G2L_561()
local script = G2L["561"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_561)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.TextButton.LocalScript
local function C_G2L_597()
local script = G2L["597"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 2"].Visible = true
end)
end
task.spawn(C_G2L_597)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_603()
local script = G2L["603"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_603)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.mrbean.RippleClick
local function C_G2L_606()
local script = G2L["606"]
guiObject = script.Parent
mouse = game.Players.LocalPlayer:GetMouse()

guiObject.MouseButton1Down:connect(function()
	coroutine.resume(coroutine.create(function()
		guiObject.CliPlayersDescendants = true
		local Circle = script:WaitForChild("Circle"):Clone()
		Circle.Parent = guiObject
		local NewX = mouse.X - Circle.AbsolutePosition.X
		local NewY = mouse.Y - Circle.AbsolutePosition.Y
		Circle.Position = UDim2.new(0, NewX, 0, NewY)
		local Size = 0
		if guiObject.AbsoluteSize.X > guiObject.AbsoluteSize.Y then
			Size = guiObject.AbsoluteSize.X*1.5
		elseif guiObject.AbsoluteSize.X < guiObject.AbsoluteSize.Y then
			Size = guiObject.AbsoluteSize.Y*1.5
		elseif guiObject.AbsoluteSize.X == guiObject.AbsoluteSize.Y then
			Size = guiObject.AbsoluteSize.X*1.5
		end
		local Time = 0.5
		Circle:TweenSizeAndPosition(UDim2.new(0, Size, 0, Size), UDim2.new(0.5, -Size/2, 0.5, -Size/2), "Out", "Quad", Time, false, nil)
		for i=1,10 do
			Circle.ImageTransparency = Circle.ImageTransparency + 0.01
			wait(Time/10)
		end
		Circle:Destroy()
	end))
end)
end
task.spawn(C_G2L_606)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_611()
local script = G2L["611"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_611)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_615()
local script = G2L["615"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_615)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_619()
local script = G2L["619"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_619)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_623()
local script = G2L["623"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_623)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_627()
local script = G2L["627"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_627)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_631()
local script = G2L["631"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_631)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_635()
local script = G2L["635"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_635)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_639()
local script = G2L["639"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_639)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_643()
local script = G2L["643"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_643)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_647()
local script = G2L["647"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_647)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_651()
local script = G2L["651"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_651)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_655()
local script = G2L["655"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_655)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_659()
local script = G2L["659"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_659)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_663()
local script = G2L["663"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_663)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_667()
local script = G2L["667"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_667)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_671()
local script = G2L["671"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_671)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_675()
local script = G2L["675"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_675)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_679()
local script = G2L["679"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_679)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_683()
local script = G2L["683"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_683)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_687()
local script = G2L["687"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_687)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_691()
local script = G2L["691"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_691)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_695()
local script = G2L["695"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_695)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.code.TextButton.LocalScript
local function C_G2L_703()
local script = G2L["703"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_703)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_716()
local script = G2L["716"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_716)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_720()
local script = G2L["720"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_720)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_724()
local script = G2L["724"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_724)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_728()
local script = G2L["728"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_728)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_732()
local script = G2L["732"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_732)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_735()
local script = G2L["735"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.Extra2.Visible = true
end)
end
task.spawn(C_G2L_735)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra1.TextButton.LocalScript
local function C_G2L_740()
local script = G2L["740"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_740)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_744()
local script = G2L["744"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.Extra2.Visible = true
end)
end
task.spawn(C_G2L_744)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_749()
local script = G2L["749"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_749)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_753()
local script = G2L["753"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_753)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_757()
local script = G2L["757"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_757)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_761()
local script = G2L["761"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_761)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_765()
local script = G2L["765"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_765)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.Extra.Extra2.TextButton.LocalScript
local function C_G2L_769()
local script = G2L["769"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_769)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces.TextButton.LocalScript
local function C_G2L_800()
local script = G2L["800"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Faces2"].Visible = true
end)
end
task.spawn(C_G2L_800)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.faces.Faces2.TextButton.LocalScript
local function C_G2L_809()
local script = G2L["809"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Faces"].Visible = true
end)
end
task.spawn(C_G2L_809)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.SynapseButton.LocalScript
local function C_G2L_834()
local script = G2L["834"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.Synapse.Visible = true
end)
end
task.spawn(C_G2L_834)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.pg1.icon.LocalScript
local function C_G2L_836()
local script = G2L["836"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Parent.goofy.Visible = true
end)
end
task.spawn(C_G2L_836)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.back.LocalScript
local function C_G2L_839()
local script = G2L["839"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.pg1.Visible = true
end)
end
task.spawn(C_G2L_839)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.credits.TextLabel.LocalScript
local function C_G2L_925()
local script = G2L["925"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_925)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 2.pg.LocalScript
local function C_G2L_932()
local script = G2L["932"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 3"].Visible = true
end)
end
task.spawn(C_G2L_932)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.back.LocalScript
local function C_G2L_942()
local script = G2L["942"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 2"].Visible = true
end)
end
task.spawn(C_G2L_942)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.credits.TextLabel.LocalScript
local function C_G2L_954()
local script = G2L["954"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_954)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Map.LocalScript
local function C_G2L_962()
local script = G2L["962"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_962)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.map.LocalScript
local function C_G2L_970()
local script = G2L["970"]
local RS = script.Parent.GetScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer()
end)
end
task.spawn(C_G2L_970)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
local function C_G2L_975()
local script = G2L["975"]
while wait() do
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_975)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
local function C_G2L_978()
local script = G2L["978"]
while wait() do
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_978)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Page 3.Hints.TextButton.LocalScript
local function C_G2L_981()
local script = G2L["981"]
while wait() do
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.BackgroundColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_981)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Title.LocalScript
local function C_G2L_997()
local script = G2L["997"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_997)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
local function C_G2L_1020()
local script = G2L["1020"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://1847661783"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_1020)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.TextLabel.LocalScript
local function C_G2L_1025()
local script = G2L["1025"]
while wait() do
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,i,0) -- change backgroundcolor3 to textcolor3 to make text color rainbow
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,255,0)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,255,i)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(0,i,255)
		wait(0.01)
	end
	for i = 0,255,5 do
		script.Parent.TextColor3 = Color3.fromRGB(i,0,255)
		wait(0.01)
	end
	for i = 255,0,-5 do
		script.Parent.TextColor3 = Color3.fromRGB(255,0,i)
		wait(0.01)
	end
end
end
task.spawn(C_G2L_1025)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
local function C_G2L_1027()
local script = G2L["1027"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://247893371"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_1027)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
local function C_G2L_1029()
local script = G2L["1029"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://1846575559"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_1029)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.goofy.goofy.LocalScript
local function C_G2L_1041()
local script = G2L["1041"]
local button = script.Parent
local Workspace = game:GetService("Workspace")
local SoundId = "rbxassetid://142376088"

local isSoundPlaying = false

local function playSound()
	if isSoundPlaying then
		print("Sound is already playing!")
		return
	end

	local sound = Instance.new("Sound")
	sound.SoundId = SoundId
	sound.PlaybackSpeed = 1
	sound.Volume = 3
	sound.Looped = true
	sound.Parent = Workspace

	sound:Play()

	isSoundPlaying = true
	sound.Ended:Connect(function()
		isSoundPlaying = false
	end)
end

button.MouseButton1Click:Connect(playSound)

end
task.spawn(C_G2L_1041)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
local function C_G2L_1047()
local script = G2L["1047"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent.pg1.Visible = true
end)
end
task.spawn(C_G2L_1047)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
local function C_G2L_1051()
local script = G2L["1051"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 2"].Visible = true
end)
end
task.spawn(C_G2L_1051)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.TextButton.LocalScript
local function C_G2L_1055()
local script = G2L["1055"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Visible = false
	script.Parent.Parent.Parent["Page 3"].Visible = true
end)
end
task.spawn(C_G2L_1055)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.LocalScript
local function C_G2L_1061()
local script = G2L["1061"]
local RS = script.Parent.ExecuteScript

script.Parent.MouseButton1Click:Connect(function()
	RS:FireServer(script.Parent.Parent.Source.Text)
end)
end
task.spawn(C_G2L_1061)


--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring
G2L_MODULES[G2L["1063"]] = {
Closure = function()
local script = G2L["1063"]
--[[
		Interested in improving your skills as a Developer? Needing help publishing and marketing your game?
		Join Bleu Pigs! The self improvement community built around you
		https://devforum.roblox.com/u/bleupigs/summary
		
		Join our Minecraft server: https://discord.gg/msXKffKWEt
		
		Support my future projects on Patreon: https://www.patreon.com/reinitialized
		---------------
		vLua 5.1 - Lua written in Lua Virtual Machine
		---------------
		vLua is a virtual machine and compiler for dynamically compiling and executing Lua.
		It'll work on both client and server, regardless of LoadStringEnabled. This module is
		designed to be a drop in replacement for loadstring, meaning you can do the following:
		
		Example:
			local loadstring = require(workspace.Loadstring)
			local executable, compileFailReason = loadstring("print('hello from vLua!')")
			executable()
		
		Please note, vLua IS SLOWER COMPARED TO vanilla Lua, although Luau does improve performance.
		Do not attemptp to run performance intensive tasks without testing first, otherwise you
		may have a bad time.
		
		Changelog:
			[1/18/2022]
				- updated FiOne to latest release - https://github.com/Rerumu/FiOne/commit/900413a8491a44daa7770d799c85ad6df8610eea
				- added link to Minecraft server Discord
			[1/1/2022]
				- fixed environment not being properly set for compiled function
			[11/12/2021]
				- removed previous changelogs
				- updated FiOne to latest release - https://github.com/Rerumu/FiOne/blob/f443116e947e5bb3fe8bb7e6abca78214a245145/source.lua
				- fixed attempt to call a nil value error
		
		Credits:
			- FiOne LBI (created by same author as Rerubi) - https://github.com/Rerumu/FiOne
			- Yueliang 5 (Lua compiler in Lua) - http://yueliang.luaforge.net/
			- Moonshine (improved version of Yeuliang) - https://github.com/gamesys/moonshine
]]
local compile = require(script:WaitForChild("Yueliang"))
local createExecutable = require(script:WaitForChild("FiOne"))
getfenv().script = nil

return function(source, env)
	local executable
	local env = env or getfenv(2)
	local name = (env.script and env.script:GetFullName())
	local ran, failureReason = pcall(function()
		local compiledBytecode = compile(source, name)
		executable = createExecutable(compiledBytecode, env)
	end)
	
	if ran then
		return setfenv(executable, env)
	end
	return nil, failureReason
end
end
}
--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring.FiOne
G2L_MODULES[G2L["1064"]] = {
Closure = function()
local script = G2L["1064"]
--[[
FiOne
Copyright (C) 2021  Rerumu

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
]] --
local bit = bit or bit32 or require('bit')

if not table.create then function table.create(_) return {} end end

if not table.unpack then table.unpack = unpack end

if not table.pack then function table.pack(...) return {n = select('#', ...), ...} end end

if not table.move then
	function table.move(src, first, last, offset, dst)
		for i = 0, last - first do dst[offset + i] = src[first + i] end
	end
end

local lua_bc_to_state
local lua_wrap_state
local stm_lua_func

-- SETLIST config
local FIELDS_PER_FLUSH = 50

-- remap for better lookup
local OPCODE_RM = {
	-- level 1
	[22] = 18, -- JMP
	[31] = 8, -- FORLOOP
	[33] = 28, -- TFORLOOP
	-- level 2
	[0] = 3, -- MOVE
	[1] = 13, -- LOADK
	[2] = 23, -- LOADBOOL
	[26] = 33, -- TEST
	-- level 3
	[12] = 1, -- ADD
	[13] = 6, -- SUB
	[14] = 10, -- MUL
	[15] = 16, -- DIV
	[16] = 20, -- MOD
	[17] = 26, -- POW
	[18] = 30, -- UNM
	[19] = 36, -- NOT
	-- level 4
	[3] = 0, -- LOADNIL
	[4] = 2, -- GETUPVAL
	[5] = 4, -- GETGLOBAL
	[6] = 7, -- GETTABLE
	[7] = 9, -- SETGLOBAL
	[8] = 12, -- SETUPVAL
	[9] = 14, -- SETTABLE
	[10] = 17, -- NEWTABLE
	[20] = 19, -- LEN
	[21] = 22, -- CONCAT
	[23] = 24, -- EQ
	[24] = 27, -- LT
	[25] = 29, -- LE
	[27] = 32, -- TESTSET
	[32] = 34, -- FORPREP
	[34] = 37, -- SETLIST
	-- level 5
	[11] = 5, -- SELF
	[28] = 11, -- CALL
	[29] = 15, -- TAILCALL
	[30] = 21, -- RETURN
	[35] = 25, -- CLOSE
	[36] = 31, -- CLOSURE
	[37] = 35, -- VARARG
}

-- opcode types for getting values
local OPCODE_T = {
	[0] = 'ABC',
	'ABx',
	'ABC',
	'ABC',
	'ABC',
	'ABx',
	'ABC',
	'ABx',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'AsBx',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'AsBx',
	'AsBx',
	'ABC',
	'ABC',
	'ABC',
	'ABx',
	'ABC',
}

local OPCODE_M = {
	[0] = {b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgR'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgR', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgN', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgN', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
}

-- int rd_int_basic(string src, int s, int e, int d)
-- @src - Source binary string
-- @s - Start index of a little endian integer
-- @e - End index of the integer
-- @d - Direction of the loop
local function rd_int_basic(src, s, e, d)
	local num = 0

	-- if bb[l] > 127 then -- signed negative
	-- 	num = num - 256 ^ l
	-- 	bb[l] = bb[l] - 128
	-- end

	for i = s, e, d do
		local mul = 256 ^ math.abs(i - s)

		num = num + mul * string.byte(src, i, i)
	end

	return num
end

-- float rd_flt_basic(byte f1..8)
-- @f1..4 - The 4 bytes composing a little endian float
local function rd_flt_basic(f1, f2, f3, f4)
	local sign = (-1) ^ bit.rshift(f4, 7)
	local exp = bit.rshift(f3, 7) + bit.lshift(bit.band(f4, 0x7F), 1)
	local frac = f1 + bit.lshift(f2, 8) + bit.lshift(bit.band(f3, 0x7F), 16)
	local normal = 1

	if exp == 0 then
		if frac == 0 then
			return sign * 0
		else
			normal = 0
			exp = 1
		end
	elseif exp == 0x7F then
		if frac == 0 then
			return sign * (1 / 0)
		else
			return sign * (0 / 0)
		end
	end

	return sign * 2 ^ (exp - 127) * (1 + normal / 2 ^ 23)
end

-- double rd_dbl_basic(byte f1..8)
-- @f1..8 - The 8 bytes composing a little endian double
local function rd_dbl_basic(f1, f2, f3, f4, f5, f6, f7, f8)
	local sign = (-1) ^ bit.rshift(f8, 7)
	local exp = bit.lshift(bit.band(f8, 0x7F), 4) + bit.rshift(f7, 4)
	local frac = bit.band(f7, 0x0F) * 2 ^ 48
	local normal = 1

	frac = frac + (f6 * 2 ^ 40) + (f5 * 2 ^ 32) + (f4 * 2 ^ 24) + (f3 * 2 ^ 16) + (f2 * 2 ^ 8) + f1 -- help

	if exp == 0 then
		if frac == 0 then
			return sign * 0
		else
			normal = 0
			exp = 1
		end
	elseif exp == 0x7FF then
		if frac == 0 then
			return sign * (1 / 0)
		else
			return sign * (0 / 0)
		end
	end

	return sign * 2 ^ (exp - 1023) * (normal + frac / 2 ^ 52)
end

-- int rd_int_le(string src, int s, int e)
-- @src - Source binary string
-- @s - Start index of a little endian integer
-- @e - End index of the integer
local function rd_int_le(src, s, e) return rd_int_basic(src, s, e - 1, 1) end

-- int rd_int_be(string src, int s, int e)
-- @src - Source binary string
-- @s - Start index of a big endian integer
-- @e - End index of the integer
local function rd_int_be(src, s, e) return rd_int_basic(src, e - 1, s, -1) end

-- float rd_flt_le(string src, int s)
-- @src - Source binary string
-- @s - Start index of little endian float
local function rd_flt_le(src, s) return rd_flt_basic(string.byte(src, s, s + 3)) end

-- float rd_flt_be(string src, int s)
-- @src - Source binary string
-- @s - Start index of big endian float
local function rd_flt_be(src, s)
	local f1, f2, f3, f4 = string.byte(src, s, s + 3)
	return rd_flt_basic(f4, f3, f2, f1)
end

-- double rd_dbl_le(string src, int s)
-- @src - Source binary string
-- @s - Start index of little endian double
local function rd_dbl_le(src, s) return rd_dbl_basic(string.byte(src, s, s + 7)) end

-- double rd_dbl_be(string src, int s)
-- @src - Source binary string
-- @s - Start index of big endian double
local function rd_dbl_be(src, s)
	local f1, f2, f3, f4, f5, f6, f7, f8 = string.byte(src, s, s + 7) -- same
	return rd_dbl_basic(f8, f7, f6, f5, f4, f3, f2, f1)
end

-- to avoid nested ifs in deserializing
local float_types = {
	[4] = {little = rd_flt_le, big = rd_flt_be},
	[8] = {little = rd_dbl_le, big = rd_dbl_be},
}

-- byte stm_byte(Stream S)
-- @S - Stream object to read from
local function stm_byte(S)
	local idx = S.index
	local bt = string.byte(S.source, idx, idx)

	S.index = idx + 1
	return bt
end

-- string stm_string(Stream S, int len)
-- @S - Stream object to read from
-- @len - Length of string being read
local function stm_string(S, len)
	local pos = S.index + len
	local str = string.sub(S.source, S.index, pos - 1)

	S.index = pos
	return str
end

-- string stm_lstring(Stream S)
-- @S - Stream object to read from
local function stm_lstring(S)
	local len = S:s_szt()
	local str

	if len ~= 0 then str = string.sub(stm_string(S, len), 1, -2) end

	return str
end

-- fn cst_int_rdr(string src, int len, fn func)
-- @len - Length of type for reader
-- @func - Reader callback
local function cst_int_rdr(len, func)
	return function(S)
		local pos = S.index + len
		local int = func(S.source, S.index, pos)
		S.index = pos

		return int
	end
end

-- fn cst_flt_rdr(string src, int len, fn func)
-- @len - Length of type for reader
-- @func - Reader callback
local function cst_flt_rdr(len, func)
	return function(S)
		local flt = func(S.source, S.index)
		S.index = S.index + len

		return flt
	end
end

local function stm_inst_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		local ins = S:s_ins()
		local op = bit.band(ins, 0x3F)
		local args = OPCODE_T[op]
		local mode = OPCODE_M[op]
		local data = {value = ins, op = OPCODE_RM[op], A = bit.band(bit.rshift(ins, 6), 0xFF)}

		if args == 'ABC' then
			data.B = bit.band(bit.rshift(ins, 23), 0x1FF)
			data.C = bit.band(bit.rshift(ins, 14), 0x1FF)
			data.is_KB = mode.b == 'OpArgK' and data.B > 0xFF -- post process optimization
			data.is_KC = mode.c == 'OpArgK' and data.C > 0xFF
		elseif args == 'ABx' then
			data.Bx = bit.band(bit.rshift(ins, 14), 0x3FFFF)
			data.is_K = mode.b == 'OpArgK'
		elseif args == 'AsBx' then
			data.sBx = bit.band(bit.rshift(ins, 14), 0x3FFFF) - 131071
		end

		list[i] = data
	end

	return list
end

local function stm_const_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		local tt = stm_byte(S)
		local k

		if tt == 1 then
			k = stm_byte(S) ~= 0
		elseif tt == 3 then
			k = S:s_num()
		elseif tt == 4 then
			k = stm_lstring(S)
		end

		list[i] = k -- offset +1 during instruction decode
	end

	return list
end

local function stm_sub_list(S, src)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		list[i] = stm_lua_func(S, src) -- offset +1 in CLOSURE
	end

	return list
end

local function stm_line_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = S:s_int() end

	return list
end

local function stm_loc_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = {varname = stm_lstring(S), startpc = S:s_int(), endpc = S:s_int()} end

	return list
end

local function stm_upval_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = stm_lstring(S) end

	return list
end

function stm_lua_func(S, psrc)
	local proto = {}
	local src = stm_lstring(S) or psrc -- source is propagated

	proto.source = src -- source name

	S:s_int() -- line defined
	S:s_int() -- last line defined

	proto.num_upval = stm_byte(S) -- num upvalues
	proto.num_param = stm_byte(S) -- num params

	stm_byte(S) -- vararg flag
	proto.max_stack = stm_byte(S) -- max stack size

	proto.code = stm_inst_list(S)
	proto.const = stm_const_list(S)
	proto.subs = stm_sub_list(S, src)
	proto.lines = stm_line_list(S)

	stm_loc_list(S)
	stm_upval_list(S)

	-- post process optimization
	for _, v in ipairs(proto.code) do
		if v.is_K then
			v.const = proto.const[v.Bx + 1] -- offset for 1 based index
		else
			if v.is_KB then v.const_B = proto.const[v.B - 0xFF] end

			if v.is_KC then v.const_C = proto.const[v.C - 0xFF] end
		end
	end

	return proto
end

function lua_bc_to_state(src)
	-- func reader
	local rdr_func

	-- header flags
	local little
	local size_int
	local size_szt
	local size_ins
	local size_num
	local flag_int

	-- stream object
	local stream = {
		-- data
		index = 1,
		source = src,
	}

	assert(stm_string(stream, 4) == '\27Lua', 'invalid Lua signature')
	assert(stm_byte(stream) == 0x51, 'invalid Lua version')
	assert(stm_byte(stream) == 0, 'invalid Lua format')

	little = stm_byte(stream) ~= 0
	size_int = stm_byte(stream)
	size_szt = stm_byte(stream)
	size_ins = stm_byte(stream)
	size_num = stm_byte(stream)
	flag_int = stm_byte(stream) ~= 0

	rdr_func = little and rd_int_le or rd_int_be
	stream.s_int = cst_int_rdr(size_int, rdr_func)
	stream.s_szt = cst_int_rdr(size_szt, rdr_func)
	stream.s_ins = cst_int_rdr(size_ins, rdr_func)

	if flag_int then
		stream.s_num = cst_int_rdr(size_num, rdr_func)
	elseif float_types[size_num] then
		stream.s_num = cst_flt_rdr(size_num, float_types[size_num][little and 'little' or 'big'])
	else
		error('unsupported float size')
	end

	return stm_lua_func(stream, '@virtual')
end

local function close_lua_upvalues(list, index)
	for i, uv in pairs(list) do
		if uv.index >= index then
			uv.value = uv.store[uv.index] -- store value
			uv.store = uv
			uv.index = 'value' -- self reference
			list[i] = nil
		end
	end
end

local function open_lua_upvalue(list, index, memory)
	local prev = list[index]

	if not prev then
		prev = {index = index, store = memory}
		list[index] = prev
	end

	return prev
end

local function on_lua_error(failed, err)
	local src = failed.source
	local line = failed.lines[failed.pc - 1]

	error(string.format('%s:%i: %s', src, line, err), 0)
end

local function run_lua_func(state, env, upvals)
	local code = state.code
	local subs = state.subs
	local vararg = state.vararg

	local top_index = -1
	local open_list = {}
	local memory = state.memory
	local pc = state.pc

	while true do
		local inst = code[pc]
		local op = inst.op
		pc = pc + 1

		if op < 18 then
			if op < 8 then
				if op < 3 then
					if op < 1 then
						--[[LOADNIL]]
						for i = inst.A, inst.B do memory[i] = nil end
					elseif op > 1 then
						--[[GETUPVAL]]
						local uv = upvals[inst.B]

						memory[inst.A] = uv.store[uv.index]
					else
						--[[ADD]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs + rhs
					end
				elseif op > 3 then
					if op < 6 then
						if op > 4 then
							--[[SELF]]
							local A = inst.A
							local B = inst.B
							local index

							if inst.is_KC then
								index = inst.const_C
							else
								index = memory[inst.C]
							end

							memory[A + 1] = memory[B]
							memory[A] = memory[B][index]
						else
							--[[GETGLOBAL]]
							memory[inst.A] = env[inst.const]
						end
					elseif op > 6 then
						--[[GETTABLE]]
						local index

						if inst.is_KC then
							index = inst.const_C
						else
							index = memory[inst.C]
						end

						memory[inst.A] = memory[inst.B][index]
					else
						--[[SUB]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs - rhs
					end
				else --[[MOVE]]
					memory[inst.A] = memory[inst.B]
				end
			elseif op > 8 then
				if op < 13 then
					if op < 10 then
						--[[SETGLOBAL]]
						env[inst.const] = memory[inst.A]
					elseif op > 10 then
						if op < 12 then
							--[[CALL]]
							local A = inst.A
							local B = inst.B
							local C = inst.C
							local params

							if B == 0 then
								params = top_index - A
							else
								params = B - 1
							end

							local ret_list = table.pack(memory[A](table.unpack(memory, A + 1, A + params)))
							local ret_num = ret_list.n

							if C == 0 then
								top_index = A + ret_num - 1
							else
								ret_num = C - 1
							end

							table.move(ret_list, 1, ret_num, A, memory)
						else
							--[[SETUPVAL]]
							local uv = upvals[inst.B]

							uv.store[uv.index] = memory[inst.A]
						end
					else
						--[[MUL]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs * rhs
					end
				elseif op > 13 then
					if op < 16 then
						if op > 14 then
							--[[TAILCALL]]
							local A = inst.A
							local B = inst.B
							local params

							if B == 0 then
								params = top_index - A
							else
								params = B - 1
							end

							close_lua_upvalues(open_list, 0)

							return memory[A](table.unpack(memory, A + 1, A + params))
						else
							--[[SETTABLE]]
							local index, value

							if inst.is_KB then
								index = inst.const_B
							else
								index = memory[inst.B]
							end

							if inst.is_KC then
								value = inst.const_C
							else
								value = memory[inst.C]
							end

							memory[inst.A][index] = value
						end
					elseif op > 16 then
						--[[NEWTABLE]]
						memory[inst.A] = {}
					else
						--[[DIV]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs / rhs
					end
				else
					--[[LOADK]]
					memory[inst.A] = inst.const
				end
			else
				--[[FORLOOP]]
				local A = inst.A
				local step = memory[A + 2]
				local index = memory[A] + step
				local limit = memory[A + 1]
				local loops

				if step == math.abs(step) then
					loops = index <= limit
				else
					loops = index >= limit
				end

				if loops then
					memory[inst.A] = index
					memory[inst.A + 3] = index
					pc = pc + inst.sBx
				end
			end
		elseif op > 18 then
			if op < 28 then
				if op < 23 then
					if op < 20 then
						--[[LEN]]
						memory[inst.A] = #memory[inst.B]
					elseif op > 20 then
						if op < 22 then
							--[[RETURN]]
							local A = inst.A
							local B = inst.B
							local len

							if B == 0 then
								len = top_index - A + 1
							else
								len = B - 1
							end

							close_lua_upvalues(open_list, 0)

							return table.unpack(memory, A, A + len - 1)
						else
							--[[CONCAT]]
							local str = memory[inst.B]

							for i = inst.B + 1, inst.C do str = str .. memory[i] end

							memory[inst.A] = str
						end
					else
						--[[MOD]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs % rhs
					end
				elseif op > 23 then
					if op < 26 then
						if op > 24 then
							--[[CLOSE]]
							close_lua_upvalues(open_list, inst.A)
						else
							--[[EQ]]
							local lhs, rhs

							if inst.is_KB then
								lhs = inst.const_B
							else
								lhs = memory[inst.B]
							end

							if inst.is_KC then
								rhs = inst.const_C
							else
								rhs = memory[inst.C]
							end

							if (lhs == rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

							pc = pc + 1
						end
					elseif op > 26 then
						--[[LT]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						if (lhs < rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

						pc = pc + 1
					else
						--[[POW]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs ^ rhs
					end
				else
					--[[LOADBOOL]]
					memory[inst.A] = inst.B ~= 0

					if inst.C ~= 0 then pc = pc + 1 end
				end
			elseif op > 28 then
				if op < 33 then
					if op < 30 then
						--[[LE]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						if (lhs <= rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

						pc = pc + 1
					elseif op > 30 then
						if op < 32 then
							--[[CLOSURE]]
							local sub = subs[inst.Bx + 1] -- offset for 1 based index
							local nups = sub.num_upval
							local uvlist

							if nups ~= 0 then
								uvlist = {}

								for i = 1, nups do
									local pseudo = code[pc + i - 1]

									if pseudo.op == OPCODE_RM[0] then -- @MOVE
										uvlist[i - 1] = open_lua_upvalue(open_list, pseudo.B, memory)
									elseif pseudo.op == OPCODE_RM[4] then -- @GETUPVAL
										uvlist[i - 1] = upvals[pseudo.B]
									end
								end

								pc = pc + nups
							end

							memory[inst.A] = lua_wrap_state(sub, env, uvlist)
						else
							--[[TESTSET]]
							local A = inst.A
							local B = inst.B

							if (not memory[B]) ~= (inst.C ~= 0) then
								memory[A] = memory[B]
								pc = pc + code[pc].sBx
							end
							pc = pc + 1
						end
					else
						--[[UNM]]
						memory[inst.A] = -memory[inst.B]
					end
				elseif op > 33 then
					if op < 36 then
						if op > 34 then
							--[[VARARG]]
							local A = inst.A
							local len = inst.B

							if len == 0 then
								len = vararg.len
								top_index = A + len - 1
							end

							table.move(vararg.list, 1, len, A, memory)
						else
							--[[FORPREP]]
							local A = inst.A
							local init, limit, step

							init = assert(tonumber(memory[A]), '`for` initial value must be a number')
							limit = assert(tonumber(memory[A + 1]), '`for` limit must be a number')
							step = assert(tonumber(memory[A + 2]), '`for` step must be a number')

							memory[A] = init - step
							memory[A + 1] = limit
							memory[A + 2] = step

							pc = pc + inst.sBx
						end
					elseif op > 36 then
						--[[SETLIST]]
						local A = inst.A
						local C = inst.C
						local len = inst.B
						local tab = memory[A]
						local offset

						if len == 0 then len = top_index - A end

						if C == 0 then
							C = inst[pc].value
							pc = pc + 1
						end

						offset = (C - 1) * FIELDS_PER_FLUSH

						table.move(memory, A + 1, A + len, offset + 1, tab)
					else
						--[[NOT]]
						memory[inst.A] = not memory[inst.B]
					end
				else
					--[[TEST]]
					if (not memory[inst.A]) ~= (inst.C ~= 0) then pc = pc + code[pc].sBx end
					pc = pc + 1
				end
			else
				--[[TFORLOOP]]
				local A = inst.A
				local base = A + 3

				local vals = {memory[A](memory[A + 1], memory[A + 2])}

				table.move(vals, 1, inst.C, base, memory)

				if memory[base] ~= nil then
					memory[A + 2] = memory[base]
					pc = pc + code[pc].sBx
				end

				pc = pc + 1
			end
		else
			--[[JMP]]
			pc = pc + inst.sBx
		end

		state.pc = pc
	end
end

function lua_wrap_state(proto, env, upval)
	local function wrapped(...)
		local passed = table.pack(...)
		local memory = table.create(proto.max_stack)
		local vararg = {len = 0, list = {}}

		table.move(passed, 1, proto.num_param, 0, memory)

		if proto.num_param < passed.n then
			local start = proto.num_param + 1
			local len = passed.n - proto.num_param

			vararg.len = len
			table.move(passed, start, start + len - 1, 1, vararg.list)
		end

		local state = {vararg = vararg, memory = memory, code = proto.code, subs = proto.subs, pc = 1}

		local result = table.pack(pcall(run_lua_func, state, env, upval))

		if result[1] then
			return table.unpack(result, 2, result.n)
		else
			local failed = {pc = state.pc, source = proto.source, lines = proto.lines}

			on_lua_error(failed, result[2])

			return
		end
	end

	return wrapped
end

return function(bCode, env)
	return lua_wrap_state(lua_bc_to_state(bCode), env or getfenv(0))
end
end
}
--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.exe.Script.Loadstring.Yueliang
G2L_MODULES[G2L["1065"]] = {
Closure = function()
local script = G2L["1065"]
-- Adapted from the amazing Yueliang project
-- http://yueliang.luaforge.net/


--[[--------------------------------------------------------------------

luac.lua
Primitive luac in Lua
This file is part of Yueliang.

Copyright (c) 2005-2007 Kein-Hong Man <khman@users.sf.net>
The COPYRIGHT file describes the conditions
under which this software may be distributed.

See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * based on luac.lua in the test directory of the 5.1.2 distribution
-- * usage: lua luac.lua file.lua
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- load and initialize the required modules
------------------------------------------------------------------------
local luaZ = {}
local luaY = {}
local luaX = {}
local luaP = {}
local luaU = {}
local luaK = {}
local size_size_t = 8


-- currently asserts are enabled because the codebase hasn't been tested
-- much (if you don't want asserts, just comment them out)
local function lua_assert(test)
	if not test then error("assertion failed!") end
end



-- dofile("lzio.lua")


------------------------------------------------------------------------
-- * reader() should return a string, or nil if nothing else to parse.
--   Additional data can be set only during stream initialization
-- * Readers are handled in lauxlib.c, see luaL_load(file|buffer|string)
-- * LUAL_BUFFERSIZE=BUFSIZ=512 in make_getF() (located in luaconf.h)
-- * Original Reader typedef:
--   const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);
-- * This Lua chunk reader implementation:
--   returns string or nil, no arguments to function
------------------------------------------------------------------------

------------------------------------------------------------------------
-- create a chunk reader from a source string
------------------------------------------------------------------------
function luaZ:make_getS(buff)
	local b = buff
	return function() -- chunk reader anonymous function here
		if not b then return nil end
		local data = b
		b = nil
		return data
	end
end

------------------------------------------------------------------------
-- create a chunk reader from a source file
------------------------------------------------------------------------
-- function luaZ:make_getF(filename)
--   local LUAL_BUFFERSIZE = 512
--   local h = io.open(filename, "r")
--   if not h then return nil end
--   return function() -- chunk reader anonymous function here
--     if not h or io.type(h) == "closed file" then return nil end
--     local buff = h:read(LUAL_BUFFERSIZE)
--     if not buff then h:close(); h = nil end
--     return buff
--   end
-- end

function luaZ:make_getF(source)
	local LUAL_BUFFERSIZE = 512
	local pos = 1

	return function() -- chunk reader anonymous function here
		local buff = source:sub(pos, pos + LUAL_BUFFERSIZE - 1)
		pos = math.min(#source + 1, pos + LUAL_BUFFERSIZE)
		return buff
	end
end


------------------------------------------------------------------------
-- creates a zio input stream
-- returns the ZIO structure, z
------------------------------------------------------------------------
function luaZ:init(reader, data)
	if not reader then return end
	local z = {}
	z.reader = reader
	z.data = data or ""
	z.name = name
	-- set up additional data for reading
	if not data or data == "" then z.n = 0 else z.n = #data end
	z.p = 0
	return z
end

------------------------------------------------------------------------
-- fill up input buffer
------------------------------------------------------------------------
function luaZ:fill(z)
	local buff = z.reader()
	z.data = buff
	if not buff or buff == "" then return "EOZ" end
	z.n, z.p = #buff - 1, 1
	return string.sub(buff, 1, 1)
end

------------------------------------------------------------------------
-- get next character from the input stream
-- * local n, p are used to optimize code generation
------------------------------------------------------------------------
function luaZ:zgetc(z)
	local n, p = z.n, z.p + 1
	if n > 0 then
		z.n, z.p = n - 1, p
		return string.sub(z.data, p, p)
	else
		return self:fill(z)
	end
end





-- dofile("llex.lua")

-- FIRST_RESERVED is not required as tokens are manipulated as strings
-- TOKEN_LEN deleted; maximum length of a reserved word not needed

------------------------------------------------------------------------
-- "ORDER RESERVED" deleted; enumeration in one place: luaX.RESERVED
------------------------------------------------------------------------

-- terminal symbols denoted by reserved words: TK_AND to TK_WHILE
-- other terminal symbols: TK_NAME to TK_EOS
luaX.RESERVED = [[
TK_AND and
TK_BREAK break
TK_DO do
TK_ELSE else
TK_ELSEIF elseif
TK_END end
TK_FALSE false
TK_FOR for
TK_FUNCTION function
TK_IF if
TK_IN in
TK_LOCAL local
TK_NIL nil
TK_NOT not
TK_OR or
TK_REPEAT repeat
TK_RETURN return
TK_THEN then
TK_TRUE true
TK_UNTIL until
TK_WHILE while
TK_CONCAT ..
TK_DOTS ...
TK_EQ ==
TK_GE >=
TK_LE <=
TK_NE ~=
TK_NAME <name>
TK_NUMBER <number>
TK_STRING <string>
TK_EOS <eof>]]

-- NUM_RESERVED is not required; number of reserved words

--[[--------------------------------------------------------------------
-- Instead of passing seminfo, the Token struct (e.g. ls.t) is passed
-- so that lexer functions can use its table element, ls.t.seminfo
--
-- SemInfo (struct no longer needed, a mixed-type value is used)
--
-- Token (struct of ls.t and ls.lookahead):
--   token  -- token symbol
--   seminfo  -- semantics information
--
-- LexState (struct of ls; ls is initialized by luaX:setinput):
--   current  -- current character (charint)
--   linenumber  -- input line counter
--   lastline  -- line of last token 'consumed'
--   t  -- current token (table: struct Token)
--   lookahead  -- look ahead token (table: struct Token)
--   fs  -- 'FuncState' is private to the parser
--   L -- LuaState
--   z  -- input stream
--   buff  -- buffer for tokens
--   source  -- current source name
--   decpoint -- locale decimal point
--   nestlevel  -- level of nested non-terminals
----------------------------------------------------------------------]]

-- luaX.tokens (was luaX_tokens) is now a hash; see luaX:init

luaX.MAXSRC = 80
luaX.MAX_INT = 2147483645       -- constants from elsewhere (see above)
luaX.LUA_QS = "'%s'"
luaX.LUA_COMPAT_LSTR = 1
--luaX.MAX_SIZET = 4294967293

------------------------------------------------------------------------
-- initialize lexer
-- * original luaX_init has code to create and register token strings
-- * luaX.tokens: TK_* -> token
-- * luaX.enums:  token -> TK_* (used in luaX:llex)
------------------------------------------------------------------------
function luaX:init()
	local tokens, enums = {}, {}
	for v in string.gmatch(self.RESERVED, "[^\n]+") do
		local _, _, tok, str = string.find(v, "(%S+)%s+(%S+)")
		tokens[tok] = str
		enums[str] = tok
	end
	self.tokens = tokens
	self.enums = enums
end

------------------------------------------------------------------------
-- returns a suitably-formatted chunk name or id
-- * from lobject.c, used in llex.c and ldebug.c
-- * the result, out, is returned (was first argument)
------------------------------------------------------------------------
function luaX:chunkid(source, bufflen)
	local out
	local first = string.sub(source, 1, 1)
	if first == "=" then
		out = string.sub(source, 2, bufflen)  -- remove first char
	else  -- out = "source", or "...source"
		if first == "@" then
			source = string.sub(source, 2)  -- skip the '@'
			bufflen = bufflen - #" '...' "
			local l = #source
			out = ""
			if l > bufflen then
				source = string.sub(source, 1 + l - bufflen)  -- get last part of file name
				out = out.."..."
			end
			out = out..source
		else  -- out = [string "string"]
			local len = string.find(source, "[\n\r]")  -- stop at first newline
			len = len and (len - 1) or #source
			bufflen = bufflen - #(" [string \"...\"] ")
			if len > bufflen then len = bufflen end
			out = "[string \""
			if len < #source then  -- must truncate?
				out = out..string.sub(source, 1, len).."..."
			else
				out = out..source
			end
			out = out.."\"]"
		end
	end
	return out
end

--[[--------------------------------------------------------------------
-- Support functions for lexer
-- * all lexer errors eventually reaches lexerror:
		 syntaxerror -> lexerror
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- look up token and return keyword if found (also called by parser)
------------------------------------------------------------------------
function luaX:token2str(ls, token)
	if string.sub(token, 1, 3) ~= "TK_" then
		if string.find(token, "%c") then
			return string.format("char(%d)", string.byte(token))
		end
		return token
	else
		return self.tokens[token]
	end
end

------------------------------------------------------------------------
-- throws a lexer error
-- * txtToken has been made local to luaX:lexerror
-- * can't communicate LUA_ERRSYNTAX, so it is unimplemented
------------------------------------------------------------------------
function luaX:lexerror(ls, msg, token)
	local function txtToken(ls, token)
		if token == "TK_NAME" or
			token == "TK_STRING" or
			token == "TK_NUMBER" then
			return ls.buff
		else
			return self:token2str(ls, token)
		end
	end
	local buff = self:chunkid(ls.source, self.MAXSRC)
	local msg = string.format("%s:%d: %s", buff, ls.linenumber, msg)
	if token then
		msg = string.format("%s near "..self.LUA_QS, msg, txtToken(ls, token))
	end
	-- luaD_throw(ls->L, LUA_ERRSYNTAX)
	error(msg)
end

------------------------------------------------------------------------
-- throws a syntax error (mainly called by parser)
-- * ls.t.token has to be set by the function calling luaX:llex
--   (see luaX:next and luaX:lookahead elsewhere in this file)
------------------------------------------------------------------------
function luaX:syntaxerror(ls, msg)
	self:lexerror(ls, msg, ls.t.token)
end

------------------------------------------------------------------------
-- move on to next line
------------------------------------------------------------------------
function luaX:currIsNewline(ls)
	return ls.current == "\n" or ls.current == "\r"
end

function luaX:inclinenumber(ls)
	local old = ls.current
	-- lua_assert(currIsNewline(ls))
	self:nextc(ls)  -- skip '\n' or '\r'
	if self:currIsNewline(ls) and ls.current ~= old then
		self:nextc(ls)  -- skip '\n\r' or '\r\n'
	end
	ls.linenumber = ls.linenumber + 1
	if ls.linenumber >= self.MAX_INT then
		self:syntaxerror(ls, "chunk has too many lines")
	end
end

------------------------------------------------------------------------
-- initializes an input stream for lexing
-- * if ls (the lexer state) is passed as a table, then it is filled in,
--   otherwise it has to be retrieved as a return value
-- * LUA_MINBUFFER not used; buffer handling not required any more
------------------------------------------------------------------------
function luaX:setinput(L, ls, z, source)
	if not ls then ls = {} end  -- create struct
	if not ls.lookahead then ls.lookahead = {} end
	if not ls.t then ls.t = {} end
	ls.decpoint = "."
	ls.L = L
	ls.lookahead.token = "TK_EOS"  -- no look-ahead token
	ls.z = z
	ls.fs = nil
	ls.linenumber = 1
	ls.lastline = 1
	ls.source = source
	self:nextc(ls)  -- read first char
end

--[[--------------------------------------------------------------------
-- LEXICAL ANALYZER
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks if current character read is found in the set 'set'
------------------------------------------------------------------------
function luaX:check_next(ls, set)
	if not string.find(set, ls.current, 1, 1) then
		return false
	end
	self:save_and_next(ls)
	return true
end

------------------------------------------------------------------------
-- retrieve next token, checking the lookahead buffer if necessary
-- * note that the macro next(ls) in llex.c is now luaX:nextc
-- * utilized used in lparser.c (various places)
------------------------------------------------------------------------
function luaX:next(ls)
	ls.lastline = ls.linenumber
	if ls.lookahead.token ~= "TK_EOS" then  -- is there a look-ahead token?
		-- this must be copy-by-value
		ls.t.seminfo = ls.lookahead.seminfo  -- use this one
		ls.t.token = ls.lookahead.token
		ls.lookahead.token = "TK_EOS"  -- and discharge it
	else
		ls.t.token = self:llex(ls, ls.t)  -- read next token
	end
end

------------------------------------------------------------------------
-- fill in the lookahead buffer
-- * utilized used in lparser.c:constructor
------------------------------------------------------------------------
function luaX:lookahead(ls)
	-- lua_assert(ls.lookahead.token == "TK_EOS")
	ls.lookahead.token = self:llex(ls, ls.lookahead)
end

------------------------------------------------------------------------
-- gets the next character and returns it
-- * this is the next() macro in llex.c; see notes at the beginning
------------------------------------------------------------------------
function luaX:nextc(ls)
	local c = luaZ:zgetc(ls.z)
	ls.current = c
	return c
end

------------------------------------------------------------------------
-- saves the given character into the token buffer
-- * buffer handling code removed, not used in this implementation
-- * test for maximum token buffer length not used, makes things faster
------------------------------------------------------------------------

function luaX:save(ls, c)
	local buff = ls.buff
	-- if you want to use this, please uncomment luaX.MAX_SIZET further up
	--if #buff > self.MAX_SIZET then
	--  self:lexerror(ls, "lexical element too long")
	--end
	ls.buff = buff..c
end

------------------------------------------------------------------------
-- save current character into token buffer, grabs next character
-- * like luaX:nextc, returns the character read for convenience
------------------------------------------------------------------------
function luaX:save_and_next(ls)
	self:save(ls, ls.current)
	return self:nextc(ls)
end

------------------------------------------------------------------------
-- LUA_NUMBER
-- * luaX:read_numeral is the main lexer function to read a number
-- * luaX:str2d, luaX:buffreplace, luaX:trydecpoint are support functions
------------------------------------------------------------------------

------------------------------------------------------------------------
-- string to number converter (was luaO_str2d from lobject.c)
-- * returns the number, nil if fails (originally returns a boolean)
-- * conversion function originally lua_str2number(s,p), a macro which
--   maps to the strtod() function by default (from luaconf.h)
------------------------------------------------------------------------
function luaX:str2d(s)
	local result = tonumber(s)
	if result then return result end
	-- conversion failed
	if string.lower(string.sub(s, 1, 2)) == "0x" then  -- maybe an hexadecimal constant?
		result = tonumber(s, 16)
		if result then return result end  -- most common case
		-- Was: invalid trailing characters?
		-- In C, this function then skips over trailing spaces.
		-- true is returned if nothing else is found except for spaces.
		-- If there is still something else, then it returns a false.
		-- All this is not necessary using Lua's tonumber.
	end
	return nil
end

------------------------------------------------------------------------
-- single-character replacement, for locale-aware decimal points
------------------------------------------------------------------------
function luaX:buffreplace(ls, from, to)
	local result, buff = "", ls.buff
	for p = 1, #buff do
		local c = string.sub(buff, p, p)
		if c == from then c = to end
		result = result..c
	end
	ls.buff = result
end

------------------------------------------------------------------------
-- Attempt to convert a number by translating '.' decimal points to
-- the decimal point character used by the current locale. This is not
-- needed in Yueliang as Lua's tonumber() is already locale-aware.
-- Instead, the code is here in case the user implements localeconv().
------------------------------------------------------------------------
function luaX:trydecpoint(ls, Token)
	-- format error: try to update decimal point separator
	local old = ls.decpoint
	-- translate the following to Lua if you implement localeconv():
	-- struct lconv *cv = localeconv();
	-- ls->decpoint = (cv ? cv->decimal_point[0] : '.');
	self:buffreplace(ls, old, ls.decpoint)  -- try updated decimal separator
	local seminfo = self:str2d(ls.buff)
	Token.seminfo = seminfo
	if not seminfo then
		-- format error with correct decimal point: no more options
		self:buffreplace(ls, ls.decpoint, ".")  -- undo change (for error message)
		self:lexerror(ls, "malformed number", "TK_NUMBER")
	end
end

------------------------------------------------------------------------
-- main number conversion function
-- * "^%w$" needed in the scan in order to detect "EOZ"
------------------------------------------------------------------------
function luaX:read_numeral(ls, Token)
	-- lua_assert(string.find(ls.current, "%d"))
	repeat
		self:save_and_next(ls)
	until string.find(ls.current, "%D") and ls.current ~= "."
	if self:check_next(ls, "Ee") then  -- 'E'?
		self:check_next(ls, "+-")  -- optional exponent sign
	end
	while string.find(ls.current, "^%w$") or ls.current == "_" do
		self:save_and_next(ls)
	end
	self:buffreplace(ls, ".", ls.decpoint)  -- follow locale for decimal point
	local seminfo = self:str2d(ls.buff)
	Token.seminfo = seminfo
	if not seminfo then  -- format error?
		self:trydecpoint(ls, Token) -- try to update decimal point separator
	end
end

------------------------------------------------------------------------
-- count separators ("=") in a long string delimiter
-- * used by luaX:read_long_string
------------------------------------------------------------------------
function luaX:skip_sep(ls)
	local count = 0
	local s = ls.current
	-- lua_assert(s == "[" or s == "]")
	self:save_and_next(ls)
	while ls.current == "=" do
		self:save_and_next(ls)
		count = count + 1
	end
	return (ls.current == s) and count or (-count) - 1
end

------------------------------------------------------------------------
-- reads a long string or long comment
------------------------------------------------------------------------
function luaX:read_long_string(ls, Token, sep)
	local cont = 0
	self:save_and_next(ls)  -- skip 2nd '['
	if self:currIsNewline(ls) then  -- string starts with a newline?
		self:inclinenumber(ls)  -- skip it
	end
	while true do
		local c = ls.current
		if c == "EOZ" then
			self:lexerror(ls, Token and "unfinished long string" or
				"unfinished long comment", "TK_EOS")
		elseif c == "[" then
			--# compatibility code start
			if self.LUA_COMPAT_LSTR then
				if self:skip_sep(ls) == sep then
					self:save_and_next(ls)  -- skip 2nd '['
					cont = cont + 1
					--# compatibility code start
					if self.LUA_COMPAT_LSTR == 1 then
						if sep == 0 then
							self:lexerror(ls, "nesting of [[...]] is deprecated", "[")
						end
					end
					--# compatibility code end
				end
			end
			--# compatibility code end
		elseif c == "]" then
			if self:skip_sep(ls) == sep then
				self:save_and_next(ls)  -- skip 2nd ']'
				--# compatibility code start
				if self.LUA_COMPAT_LSTR and self.LUA_COMPAT_LSTR == 2 then
					cont = cont - 1
					if sep == 0 and cont >= 0 then break end
				end
				--# compatibility code end
				break
			end
		elseif self:currIsNewline(ls) then
			self:save(ls, "\n")
			self:inclinenumber(ls)
			if not Token then ls.buff = "" end -- avoid wasting space
		else  -- default
			if Token then
				self:save_and_next(ls)
			else
				self:nextc(ls)
			end
		end--if c
	end--while
	if Token then
		local p = 3 + sep
		Token.seminfo = string.sub(ls.buff, p, -p)
	end
end

------------------------------------------------------------------------
-- reads a string
-- * has been restructured significantly compared to the original C code
------------------------------------------------------------------------

function luaX:read_string(ls, del, Token)
	self:save_and_next(ls)
	while ls.current ~= del do
		local c = ls.current
		if c == "EOZ" then
			self:lexerror(ls, "unfinished string", "TK_EOS")
		elseif self:currIsNewline(ls) then
			self:lexerror(ls, "unfinished string", "TK_STRING")
		elseif c == "\\" then
			c = self:nextc(ls)  -- do not save the '\'
			if self:currIsNewline(ls) then  -- go through
				self:save(ls, "\n")
				self:inclinenumber(ls)
			elseif c ~= "EOZ" then -- will raise an error next loop
				-- escapes handling greatly simplified here:
				local i = string.find("abfnrtv", c, 1, 1)
				if i then
					self:save(ls, string.sub("\a\b\f\n\r\t\v", i, i))
					self:nextc(ls)
				elseif not string.find(c, "%d") then
					self:save_and_next(ls)  -- handles \\, \", \', and \?
				else  -- \xxx
					c, i = 0, 0
					repeat
						c = 10 * c + ls.current
						self:nextc(ls)
						i = i + 1
					until i >= 3 or not string.find(ls.current, "%d")
					if c > 255 then  -- UCHAR_MAX
						self:lexerror(ls, "escape sequence too large", "TK_STRING")
					end
					self:save(ls, string.char(c))
				end
			end
		else
			self:save_and_next(ls)
		end--if c
	end--while
	self:save_and_next(ls)  -- skip delimiter
	Token.seminfo = string.sub(ls.buff, 2, -2)
end

------------------------------------------------------------------------
-- main lexer function
------------------------------------------------------------------------
function luaX:llex(ls, Token)
	ls.buff = ""
	while true do
		local c = ls.current
		----------------------------------------------------------------
		if self:currIsNewline(ls) then
			self:inclinenumber(ls)
			----------------------------------------------------------------
		elseif c == "-" then
			c = self:nextc(ls)
			if c ~= "-" then return "-" end
			-- else is a comment
			local sep = -1
			if self:nextc(ls) == '[' then
				sep = self:skip_sep(ls)
				ls.buff = ""  -- 'skip_sep' may dirty the buffer
			end
			if sep >= 0 then
				self:read_long_string(ls, nil, sep)  -- long comment
				ls.buff = ""
			else  -- else short comment
				while not self:currIsNewline(ls) and ls.current ~= "EOZ" do
					self:nextc(ls)
				end
			end
			----------------------------------------------------------------
		elseif c == "[" then
			local sep = self:skip_sep(ls)
			if sep >= 0 then
				self:read_long_string(ls, Token, sep)
				return "TK_STRING"
			elseif sep == -1 then
				return "["
			else
				self:lexerror(ls, "invalid long string delimiter", "TK_STRING")
			end
			----------------------------------------------------------------
		elseif c == "=" then
			c = self:nextc(ls)
			if c ~= "=" then return "="
			else self:nextc(ls); return "TK_EQ" end
			----------------------------------------------------------------
		elseif c == "<" then
			c = self:nextc(ls)
			if c ~= "=" then return "<"
			else self:nextc(ls); return "TK_LE" end
			----------------------------------------------------------------
		elseif c == ">" then
			c = self:nextc(ls)
			if c ~= "=" then return ">"
			else self:nextc(ls); return "TK_GE" end
			----------------------------------------------------------------
		elseif c == "~" then
			c = self:nextc(ls)
			if c ~= "=" then return "~"
			else self:nextc(ls); return "TK_NE" end
			----------------------------------------------------------------
		elseif c == "\"" or c == "'" then
			self:read_string(ls, c, Token)
			return "TK_STRING"
			----------------------------------------------------------------
		elseif c == "." then
			c = self:save_and_next(ls)
			if self:check_next(ls, ".") then
				if self:check_next(ls, ".") then
					return "TK_DOTS"   -- ...
				else return "TK_CONCAT"   -- ..
				end
			elseif not string.find(c, "%d") then
				return "."
			else
				self:read_numeral(ls, Token)
				return "TK_NUMBER"
			end
			----------------------------------------------------------------
		elseif c == "EOZ" then
			return "TK_EOS"
			----------------------------------------------------------------
		else  -- default
			if string.find(c, "%s") then
				-- lua_assert(self:currIsNewline(ls))
				self:nextc(ls)
			elseif string.find(c, "%d") then
				self:read_numeral(ls, Token)
				return "TK_NUMBER"
			elseif string.find(c, "[_%a]") then
				-- identifier or reserved word
				repeat
					c = self:save_and_next(ls)
				until c == "EOZ" or not string.find(c, "[_%w]")
				local ts = ls.buff
				local tok = self.enums[ts]
				if tok then return tok end  -- reserved word?
				Token.seminfo = ts
				return "TK_NAME"
			else
				self:nextc(ls)
				return c  -- single-char tokens (+ - / ...)
			end
			----------------------------------------------------------------
		end--if c
	end--while
end





--dofile("lopcodes.lua")


--[[
===========================================================================
	We assume that instructions are unsigned numbers.
	All instructions have an opcode in the first 6 bits.
	Instructions can have the following fields:
				'A' : 8 bits
				'B' : 9 bits
				'C' : 9 bits
				'Bx' : 18 bits ('B' and 'C' together)
				'sBx' : signed Bx

	A signed argument is represented in excess K; that is, the number
	value is the unsigned value minus K. K is exactly the maximum value
	for that argument (so that -max is represented by 0, and +max is
	represented by 2*max), which is half the maximum for the corresponding
	unsigned argument.
===========================================================================
--]]

luaP.OpMode = { iABC = 0, iABx = 1, iAsBx = 2 }  -- basic instruction format

------------------------------------------------------------------------
-- size and position of opcode arguments.
-- * WARNING size and position is hard-coded elsewhere in this script
------------------------------------------------------------------------
luaP.SIZE_C  = 9
luaP.SIZE_B  = 9
luaP.SIZE_Bx = luaP.SIZE_C + luaP.SIZE_B
luaP.SIZE_A  = 8

luaP.SIZE_OP = 6

luaP.POS_OP = 0
luaP.POS_A  = luaP.POS_OP + luaP.SIZE_OP
luaP.POS_C  = luaP.POS_A + luaP.SIZE_A
luaP.POS_B  = luaP.POS_C + luaP.SIZE_C
luaP.POS_Bx = luaP.POS_C

------------------------------------------------------------------------
-- limits for opcode arguments.
-- we use (signed) int to manipulate most arguments,
-- so they must fit in LUAI_BITSINT-1 bits (-1 for sign)
------------------------------------------------------------------------
-- removed "#if SIZE_Bx < BITS_INT-1" test, assume this script is
-- running on a Lua VM with double or int as LUA_NUMBER

luaP.MAXARG_Bx  = math.ldexp(1, luaP.SIZE_Bx) - 1
luaP.MAXARG_sBx = math.floor(luaP.MAXARG_Bx / 2)  -- 'sBx' is signed

luaP.MAXARG_A = math.ldexp(1, luaP.SIZE_A) - 1
luaP.MAXARG_B = math.ldexp(1, luaP.SIZE_B) - 1
luaP.MAXARG_C = math.ldexp(1, luaP.SIZE_C) - 1

-- creates a mask with 'n' 1 bits at position 'p'
-- MASK1(n,p) deleted, not required
-- creates a mask with 'n' 0 bits at position 'p'
-- MASK0(n,p) deleted, not required

--[[--------------------------------------------------------------------
	Visual representation for reference:

	 31    |    |     |            0      bit position
		+-----+-----+-----+----------+
		|  B  |  C  |  A  |  Opcode  |      iABC format
		+-----+-----+-----+----------+
		-  9  -  9  -  8  -    6     -      field sizes
		+-----+-----+-----+----------+
		|   [s]Bx   |  A  |  Opcode  |      iABx | iAsBx format
		+-----+-----+-----+----------+

----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- the following macros help to manipulate instructions
-- * changed to a table object representation, very clean compared to
--   the [nightmare] alternatives of using a number or a string
-- * Bx is a separate element from B and C, since there is never a need
--   to split Bx in the parser or code generator
------------------------------------------------------------------------

-- these accept or return opcodes in the form of string names
function luaP:GET_OPCODE(i) return self.ROpCode[i.OP] end
function luaP:SET_OPCODE(i, o) i.OP = self.OpCode[o] end

function luaP:GETARG_A(i) return i.A end
function luaP:SETARG_A(i, u) i.A = u end

function luaP:GETARG_B(i) return i.B end
function luaP:SETARG_B(i, b) i.B = b end

function luaP:GETARG_C(i) return i.C end
function luaP:SETARG_C(i, b) i.C = b end

function luaP:GETARG_Bx(i) return i.Bx end
function luaP:SETARG_Bx(i, b) i.Bx = b end

function luaP:GETARG_sBx(i) return i.Bx - self.MAXARG_sBx end
function luaP:SETARG_sBx(i, b) i.Bx = b + self.MAXARG_sBx end

function luaP:CREATE_ABC(o,a,b,c)
	return {OP = self.OpCode[o], A = a, B = b, C = c}
end

function luaP:CREATE_ABx(o,a,bc)
	return {OP = self.OpCode[o], A = a, Bx = bc}
end

------------------------------------------------------------------------
-- create an instruction from a number (for OP_SETLIST)
------------------------------------------------------------------------
function luaP:CREATE_Inst(c)
	local o = c % 64
	c = (c - o) / 64
	local a = c % 256
	c = (c - a) / 256
	return self:CREATE_ABx(o, a, c)
end

------------------------------------------------------------------------
-- returns a 4-char string little-endian encoded form of an instruction
------------------------------------------------------------------------
function luaP:Instruction(i)
	if i.Bx then
		-- change to OP/A/B/C format
		i.C = i.Bx % 512
		i.B = (i.Bx - i.C) / 512
	end
	local I = i.A * 64 + i.OP
	local c0 = I % 256
	I = i.C * 64 + (I - c0) / 256  -- 6 bits of A left
	local c1 = I % 256
	I = i.B * 128 + (I - c1) / 256  -- 7 bits of C left
	local c2 = I % 256
	local c3 = (I - c2) / 256
	return string.char(c0, c1, c2, c3)
end

------------------------------------------------------------------------
-- decodes a 4-char little-endian string into an instruction struct
------------------------------------------------------------------------
function luaP:DecodeInst(x)
	local byte = string.byte
	local i = {}
	local I = byte(x, 1)
	local op = I % 64
	i.OP = op
	I = byte(x, 2) * 4 + (I - op) / 64  -- 2 bits of c0 left
	local a = I % 256
	i.A = a
	I = byte(x, 3) * 4 + (I - a) / 256  -- 2 bits of c1 left
	local c = I % 512
	i.C = c
	i.B = byte(x, 4) * 2 + (I - c) / 512 -- 1 bits of c2 left
	local opmode = self.OpMode[tonumber(string.sub(self.opmodes[op + 1], 7, 7))]
	if opmode ~= "iABC" then
		i.Bx = i.B * 512 + i.C
	end
	return i
end

------------------------------------------------------------------------
-- Macros to operate RK indices
-- * these use arithmetic instead of bit ops
------------------------------------------------------------------------

-- this bit 1 means constant (0 means register)
luaP.BITRK = math.ldexp(1, luaP.SIZE_B - 1)

-- test whether value is a constant
function luaP:ISK(x) return x >= self.BITRK end

-- gets the index of the constant
function luaP:INDEXK(r) return x - self.BITRK end

luaP.MAXINDEXRK = luaP.BITRK - 1

-- code a constant index as a RK value
function luaP:RKASK(x) return x + self.BITRK end

------------------------------------------------------------------------
-- invalid register that fits in 8 bits
------------------------------------------------------------------------
luaP.NO_REG = luaP.MAXARG_A

------------------------------------------------------------------------
-- R(x) - register
-- Kst(x) - constant (in constant table)
-- RK(x) == if ISK(x) then Kst(INDEXK(x)) else R(x)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- grep "ORDER OP" if you change these enums
------------------------------------------------------------------------

--[[--------------------------------------------------------------------
Lua virtual machine opcodes (enum OpCode):
------------------------------------------------------------------------
name          args    description
------------------------------------------------------------------------
OP_MOVE       A B     R(A) := R(B)
OP_LOADK      A Bx    R(A) := Kst(Bx)
OP_LOADBOOL   A B C   R(A) := (Bool)B; if (C) pc++
OP_LOADNIL    A B     R(A) := ... := R(B) := nil
OP_GETUPVAL   A B     R(A) := UpValue[B]
OP_GETGLOBAL  A Bx    R(A) := Gbl[Kst(Bx)]
OP_GETTABLE   A B C   R(A) := R(B)[RK(C)]
OP_SETGLOBAL  A Bx    Gbl[Kst(Bx)] := R(A)
OP_SETUPVAL   A B     UpValue[B] := R(A)
OP_SETTABLE   A B C   R(A)[RK(B)] := RK(C)
OP_NEWTABLE   A B C   R(A) := {} (size = B,C)
OP_SELF       A B C   R(A+1) := R(B); R(A) := R(B)[RK(C)]
OP_ADD        A B C   R(A) := RK(B) + RK(C)
OP_SUB        A B C   R(A) := RK(B) - RK(C)
OP_MUL        A B C   R(A) := RK(B) * RK(C)
OP_DIV        A B C   R(A) := RK(B) / RK(C)
OP_MOD        A B C   R(A) := RK(B) % RK(C)
OP_POW        A B C   R(A) := RK(B) ^ RK(C)
OP_UNM        A B     R(A) := -R(B)
OP_NOT        A B     R(A) := not R(B)
OP_LEN        A B     R(A) := length of R(B)
OP_CONCAT     A B C   R(A) := R(B).. ... ..R(C)
OP_JMP        sBx     pc+=sBx
OP_EQ         A B C   if ((RK(B) == RK(C)) ~= A) then pc++
OP_LT         A B C   if ((RK(B) <  RK(C)) ~= A) then pc++
OP_LE         A B C   if ((RK(B) <= RK(C)) ~= A) then pc++
OP_TEST       A C     if not (R(A) <=> C) then pc++
OP_TESTSET    A B C   if (R(B) <=> C) then R(A) := R(B) else pc++
OP_CALL       A B C   R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1))
OP_TAILCALL   A B C   return R(A)(R(A+1), ... ,R(A+B-1))
OP_RETURN     A B     return R(A), ... ,R(A+B-2)  (see note)
OP_FORLOOP    A sBx   R(A)+=R(A+2);
											if R(A) <?= R(A+1) then { pc+=sBx; R(A+3)=R(A) }
OP_FORPREP    A sBx   R(A)-=R(A+2); pc+=sBx
OP_TFORLOOP   A C     R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));
											if R(A+3) ~= nil then R(A+2)=R(A+3) else pc++
OP_SETLIST    A B C   R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B
OP_CLOSE      A       close all variables in the stack up to (>=) R(A)
OP_CLOSURE    A Bx    R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))
OP_VARARG     A B     R(A), R(A+1), ..., R(A+B-1) = vararg
----------------------------------------------------------------------]]

luaP.opnames = {}  -- opcode names
luaP.OpCode = {}   -- lookup name -> number
luaP.ROpCode = {}  -- lookup number -> name

------------------------------------------------------------------------
-- ORDER OP
------------------------------------------------------------------------
local i = 0
for v in string.gmatch([[
MOVE LOADK LOADBOOL LOADNIL GETUPVAL
GETGLOBAL GETTABLE SETGLOBAL SETUPVAL SETTABLE
NEWTABLE SELF ADD SUB MUL
DIV MOD POW UNM NOT
LEN CONCAT JMP EQ LT
LE TEST TESTSET CALL TAILCALL
RETURN FORLOOP FORPREP TFORLOOP SETLIST
CLOSE CLOSURE VARARG
]], "%S+") do
	local n = "OP_"..v
	luaP.opnames[i] = v
	luaP.OpCode[n] = i
	luaP.ROpCode[i] = n
	i = i + 1
end
luaP.NUM_OPCODES = i

--[[
===========================================================================
	Notes:
	(*) In OP_CALL, if (B == 0) then B = top. C is the number of returns - 1,
			and can be 0: OP_CALL then sets 'top' to last_result+1, so
			next open instruction (OP_CALL, OP_RETURN, OP_SETLIST) may use 'top'.
	(*) In OP_VARARG, if (B == 0) then use actual number of varargs and
			set top (like in OP_CALL with C == 0).
	(*) In OP_RETURN, if (B == 0) then return up to 'top'
	(*) In OP_SETLIST, if (B == 0) then B = 'top';
			if (C == 0) then next 'instruction' is real C
	(*) For comparisons, A specifies what condition the test should accept
			(true or false).
	(*) All 'skips' (pc++) assume that next instruction is a jump
===========================================================================
--]]

--[[--------------------------------------------------------------------
	masks for instruction properties. The format is:
	bits 0-1: op mode
	bits 2-3: C arg mode
	bits 4-5: B arg mode
	bit 6: instruction set register A
	bit 7: operator is a test

	for OpArgMask:
	OpArgN - argument is not used
	OpArgU - argument is used
	OpArgR - argument is a register or a jump offset
	OpArgK - argument is a constant or register/constant
----------------------------------------------------------------------]]

-- was enum OpArgMask
luaP.OpArgMask = { OpArgN = 0, OpArgU = 1, OpArgR = 2, OpArgK = 3 }

------------------------------------------------------------------------
-- e.g. to compare with symbols, luaP:getOpMode(...) == luaP.OpCode.iABC
-- * accepts opcode parameter as strings, e.g. "OP_MOVE"
------------------------------------------------------------------------

function luaP:getOpMode(m)
	return self.opmodes[self.OpCode[m]] % 4
end

function luaP:getBMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 16) % 4
end

function luaP:getCMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 4) % 4
end

function luaP:testAMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 64) % 2
end

function luaP:testTMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 128)
end

-- luaP_opnames[] is set above, as the luaP.opnames table

-- number of list items to accumulate before a SETLIST instruction
luaP.LFIELDS_PER_FLUSH = 50

------------------------------------------------------------------------
-- build instruction properties array
-- * deliberately coded to look like the C equivalent
------------------------------------------------------------------------
local function opmode(t, a, b, c, m)
	local luaP = luaP
	return t * 128 + a * 64 +
		luaP.OpArgMask[b] * 16 + luaP.OpArgMask[c] * 4 + luaP.OpMode[m]
end

-- ORDER OP
luaP.opmodes = {
	-- T A B C mode opcode
	opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_LOADK
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_LOADBOOL
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LOADNIL
	opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_GETUPVAL
	opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_GETGLOBAL
	opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_GETTABLE
	opmode(0, 0, "OpArgK", "OpArgN", "iABx"),     -- OP_SETGLOBAL
	opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_SETUPVAL
	opmode(0, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_SETTABLE
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_NEWTABLE
	opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_SELF
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_ADD
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_SUB
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MUL
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_DIV
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MOD
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_POW
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_UNM
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_NOT
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LEN
	opmode(0, 1, "OpArgR", "OpArgR", "iABC"),     -- OP_CONCAT
	opmode(0, 0, "OpArgR", "OpArgN", "iAsBx"),    -- OP_JMP
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_EQ
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LT
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LE
	opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TEST
	opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TESTSET
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_CALL
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_TAILCALL
	opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_RETURN
	opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORLOOP
	opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORPREP
	opmode(1, 0, "OpArgN", "OpArgU", "iABC"),     -- OP_TFORLOOP
	opmode(0, 0, "OpArgU", "OpArgU", "iABC"),     -- OP_SETLIST
	opmode(0, 0, "OpArgN", "OpArgN", "iABC"),     -- OP_CLOSE
	opmode(0, 1, "OpArgU", "OpArgN", "iABx"),     -- OP_CLOSURE
	opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_VARARG
}
-- an awkward way to set a zero-indexed table...
luaP.opmodes[0] =
	opmode(0, 1, "OpArgR", "OpArgN", "iABC")      -- OP_MOVE



--dofile("ldump.lua")

--requires luaP

-- mark for precompiled code ('<esc>Lua') (from lua.h)
luaU.LUA_SIGNATURE = "\27Lua"

-- constants used by dumper (from lua.h)
luaU.LUA_TNUMBER  = 3
luaU.LUA_TSTRING  = 4
luaU.LUA_TNIL     = 0
luaU.LUA_TBOOLEAN = 1
luaU.LUA_TNONE    = -1

-- constants for header of binary files (from lundump.h)
luaU.LUAC_VERSION    = 0x51     -- this is Lua 5.1
luaU.LUAC_FORMAT     = 0        -- this is the official format
luaU.LUAC_HEADERSIZE = 12       -- size of header of binary files

--[[--------------------------------------------------------------------
-- Additional functions to handle chunk writing
-- * to use make_setS and make_setF, see test_ldump.lua elsewhere
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- create a chunk writer that writes to a string
-- * returns the writer function and a table containing the string
-- * to get the final result, look in buff.data
------------------------------------------------------------------------
function luaU:make_setS()
	local buff = {}
	buff.data = ""
	local writer =
		function(s, buff)  -- chunk writer
		if not s then return 0 end
		buff.data = buff.data..s
		-- print (#buff.data, #s, string.byte(s,1,1), s)
		return 0
	end
	return writer, buff
end

------------------------------------------------------------------------
-- create a chunk writer that writes to a file
-- * returns the writer function and a table containing the file handle
-- * if a nil is passed, then writer should close the open file
------------------------------------------------------------------------
function luaU:make_setF(filename)
	local buff = {}
	buff.h = io.open(filename, "wb")
	if not buff.h then return nil end
	local writer =
		function(s, buff)  -- chunk writer
		if not buff.h then return 0 end
		if not s then
			if buff.h:close() then return 0 end
		else
			if buff.h:write(s) then return 0 end
		end
		return 1
	end
	return writer, buff
end

------------------------------------------------------------------------
-- works like the lobject.h version except that TObject used in these
-- scripts only has a 'value' field, no 'tt' field (native types used)
------------------------------------------------------------------------
function luaU:ttype(o)
	local tt = type(o.value)
	if tt == "number" then return self.LUA_TNUMBER
	elseif tt == "string" then return self.LUA_TSTRING
	elseif tt == "nil" then return self.LUA_TNIL
	elseif tt == "boolean" then return self.LUA_TBOOLEAN
	else
		return self.LUA_TNONE  -- the rest should not appear
	end
end

-----------------------------------------------------------------------
-- converts a IEEE754 double number to an 8-byte little-endian string
-- * luaU:from_double() and luaU:from_int() are adapted from ChunkBake
-- * supports +/- Infinity, but not denormals or NaNs
-----------------------------------------------------------------------
function luaU:from_double(x)
	local function grab_byte(v)
		local c = v % 256
		return (v - c) / 256, string.char(c)
	end
	local sign = 0
	if x < 0 then sign = 1; x = -x end
	local mantissa, exponent = math.frexp(x)
	if x == 0 then -- zero
		mantissa, exponent = 0, 0
	elseif x == 1/0 then
		mantissa, exponent = 0, 2047
	else
		mantissa = (mantissa * 2 - 1) * math.ldexp(0.5, 53)
		exponent = exponent + 1022
	end
	local v, byte = "" -- convert to bytes
	x = math.floor(mantissa)
	for i = 1,6 do
		x, byte = grab_byte(x); v = v..byte -- 47:0
	end
	x, byte = grab_byte(exponent * 16 + x); v = v..byte -- 55:48
	x, byte = grab_byte(sign * 128 + x); v = v..byte -- 63:56
	return v
end

-----------------------------------------------------------------------
-- converts a number to a little-endian 32-bit integer string
-- * input value assumed to not overflow, can be signed/unsigned
-----------------------------------------------------------------------
function luaU:from_int(x)
	local v = ""
	x = math.floor(x)
	if x < 0 then x = 4294967296 + x end  -- ULONG_MAX+1
	for i = 1, 4 do
		local c = x % 256
		v = v..string.char(c); x = math.floor(x / 256)
	end
	return v
end

--[[--------------------------------------------------------------------
-- Functions to make a binary chunk
-- * many functions have the size parameter removed, since output is
--   in the form of a string and some sizes are implicit or hard-coded
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct DumpState:
--   L  -- lua_State (not used in this script)
--   writer  -- lua_Writer (chunk writer function)
--   data  -- void* (chunk writer context or data already written)
--   strip  -- if true, don't write any debug information
--   status  -- if non-zero, an error has occured
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- dumps a block of bytes
-- * lua_unlock(D.L), lua_lock(D.L) unused
------------------------------------------------------------------------
function luaU:DumpBlock(b, D)
	if D.status == 0 then
		-- lua_unlock(D->L);
		D.status = D.write(b, D.data)
		-- lua_lock(D->L);
	end
end

------------------------------------------------------------------------
-- dumps a char
------------------------------------------------------------------------
function luaU:DumpChar(y, D)
	self:DumpBlock(string.char(y), D)
end

------------------------------------------------------------------------
-- dumps a 32-bit signed or unsigned integer (for int) (hard-coded)
------------------------------------------------------------------------
function luaU:DumpInt(x, D)
	self:DumpBlock(self:from_int(x), D)
end

------------------------------------------------------------------------
-- dumps a 32-bit signed or unsigned integer (for int) (hard-coded)
------------------------------------------------------------------------
function luaU:DumpSizeT(x, D)
	self:DumpBlock(self:from_int(x), D)
	if size_size_t == 8 then
		self:DumpBlock(self:from_int(0), D)
	end
end

------------------------------------------------------------------------
-- dumps a lua_Number (hard-coded as a double)
------------------------------------------------------------------------
function luaU:DumpNumber(x, D)
	self:DumpBlock(self:from_double(x), D)
end

------------------------------------------------------------------------
-- dumps a Lua string (size type is hard-coded)
------------------------------------------------------------------------
function luaU:DumpString(s, D)
	if s == nil then
		self:DumpSizeT(0, D)
	else
		s = s.."\0"  -- include trailing '\0'
		self:DumpSizeT(#s, D)
		self:DumpBlock(s, D)
	end
end

------------------------------------------------------------------------
-- dumps instruction block from function prototype
------------------------------------------------------------------------
function luaU:DumpCode(f, D)
	local n = f.sizecode
	--was DumpVector
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpBlock(luaP:Instruction(f.code[i]), D)
	end
end

------------------------------------------------------------------------
-- dump constant pool from function prototype
-- * bvalue(o), nvalue(o) and rawtsvalue(o) macros removed
------------------------------------------------------------------------
function luaU:DumpConstants(f, D)
	local n = f.sizek
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		local o = f.k[i]  -- TValue
		local tt = self:ttype(o)
		self:DumpChar(tt, D)
		if tt == self.LUA_TNIL then
		elseif tt == self.LUA_TBOOLEAN then
			self:DumpChar(o.value and 1 or 0, D)
		elseif tt == self.LUA_TNUMBER then
			self:DumpNumber(o.value, D)
		elseif tt == self.LUA_TSTRING then
			self:DumpString(o.value, D)
		else
			--lua_assert(0)  -- cannot happen
		end
	end
	n = f.sizep
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpFunction(f.p[i], f.source, D)
	end
end

------------------------------------------------------------------------
-- dump debug information
------------------------------------------------------------------------
function luaU:DumpDebug(f, D)
	local n
	n = D.strip and 0 or f.sizelineinfo           -- dump line information
	--was DumpVector
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpInt(f.lineinfo[i], D)
	end
	n = D.strip and 0 or f.sizelocvars            -- dump local information
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpString(f.locvars[i].varname, D)
		self:DumpInt(f.locvars[i].startpc, D)
		self:DumpInt(f.locvars[i].endpc, D)
	end
	n = D.strip and 0 or f.sizeupvalues           -- dump upvalue information
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpString(f.upvalues[i], D)
	end
end

------------------------------------------------------------------------
-- dump child function prototypes from function prototype
------------------------------------------------------------------------
function luaU:DumpFunction(f, p, D)
	local source = f.source
	if source == p or D.strip then source = nil end
	self:DumpString(source, D)
	self:DumpInt(f.lineDefined, D)
	self:DumpInt(f.lastlinedefined, D)
	self:DumpChar(f.nups, D)
	self:DumpChar(f.numparams, D)
	self:DumpChar(f.is_vararg, D)
	self:DumpChar(f.maxstacksize, D)
	self:DumpCode(f, D)
	self:DumpConstants(f, D)
	self:DumpDebug(f, D)
end

------------------------------------------------------------------------
-- dump Lua header section (some sizes hard-coded)
------------------------------------------------------------------------
function luaU:DumpHeader(D)
	local h = self:header()
	assert(#h == self.LUAC_HEADERSIZE) -- fixed buffer now an assert
	self:DumpBlock(h, D)
end

------------------------------------------------------------------------
-- make header (from lundump.c)
-- returns the header string
------------------------------------------------------------------------
function luaU:header()
	local x = 1
	return self.LUA_SIGNATURE..
		string.char(
			self.LUAC_VERSION,
			self.LUAC_FORMAT,
			x,                    -- endianness (1=little)
			4,                    -- sizeof(int)
			size_size_t,                    -- sizeof(size_t)
			4,                    -- sizeof(Instruction)
			8,                    -- sizeof(lua_Number)
			0)                    -- is lua_Number integral?
end

------------------------------------------------------------------------
-- dump Lua function as precompiled chunk
-- (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)
-- * w, data are created from make_setS, make_setF
------------------------------------------------------------------------
function luaU:dump(L, f, w, data, strip)
	local D = {}  -- DumpState
	D.L = L
	D.write = w
	D.data = data
	D.strip = strip
	D.status = 0
	self:DumpHeader(D)
	self:DumpFunction(f, nil, D)
	-- added: for a chunk writer writing to a file, this final call with
	-- nil data is to indicate to the writer to close the file
	D.write(nil, D.data)
	return D.status
end




--dofile("lcode.lua")

------------------------------------------------------------------------
-- constants used by code generator
------------------------------------------------------------------------
-- maximum stack for a Lua function
luaK.MAXSTACK = 250  -- (from llimits.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- emulation of TValue macros (these are from lobject.h)
-- * TValue is a table since lcode passes references around
-- * tt member field removed, using Lua's type() instead
-- * for setsvalue, sethvalue, parameter L (deleted here) in lobject.h
--   is used in an assert for testing, see checkliveness(g,obj)
------------------------------------------------------------------------
function luaK:ttisnumber(o)
	if o then return type(o.value) == "number" else return false end
end
function luaK:nvalue(o) return o.value end
function luaK:setnilvalue(o) o.value = nil end
function luaK:setsvalue(o, x) o.value = x end
luaK.setnvalue = luaK.setsvalue
luaK.sethvalue = luaK.setsvalue
luaK.setbvalue = luaK.setsvalue

------------------------------------------------------------------------
-- The luai_num* macros define the primitive operations over numbers.
-- * this is not the entire set of primitive operations from luaconf.h
-- * used in luaK:constfolding()
------------------------------------------------------------------------
function luaK:numadd(a, b) return a + b end
function luaK:numsub(a, b) return a - b end
function luaK:nummul(a, b) return a * b end
function luaK:numdiv(a, b) return a / b end
function luaK:nummod(a, b) return a % b end
-- ((a) - floor((a)/(b))*(b)) /* actual, for reference */
function luaK:numpow(a, b) return a ^ b end
function luaK:numunm(a) return -a end
function luaK:numisnan(a) return not a == a end
-- a NaN cannot equal another NaN

--[[--------------------------------------------------------------------
-- code generator functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- Marks the end of a patch list. It is an invalid value both as an absolute
-- address, and as a list link (would link an element to itself).
------------------------------------------------------------------------
luaK.NO_JUMP = -1

------------------------------------------------------------------------
-- grep "ORDER OPR" if you change these enums
------------------------------------------------------------------------
luaK.BinOpr = {
	OPR_ADD = 0, OPR_SUB = 1, OPR_MUL = 2, OPR_DIV = 3, OPR_MOD = 4, OPR_POW = 5,
	OPR_CONCAT = 6,
	OPR_NE = 7, OPR_EQ = 8,
	OPR_LT = 9, OPR_LE = 10, OPR_GT = 11, OPR_GE = 12,
	OPR_AND = 13, OPR_OR = 14,
	OPR_NOBINOPR = 15,
}

-- * UnOpr is used by luaK:prefix's op argument, but not directly used
--   because the function receives the symbols as strings, e.g. "OPR_NOT"
luaK.UnOpr = {
	OPR_MINUS = 0, OPR_NOT = 1, OPR_LEN = 2, OPR_NOUNOPR = 3
}

------------------------------------------------------------------------
-- returns the instruction object for given e (expdesc), was a macro
------------------------------------------------------------------------
function luaK:getcode(fs, e)
	return fs.f.code[e.info]
end

------------------------------------------------------------------------
-- codes an instruction with a signed Bx (sBx) field, was a macro
-- * used in luaK:jump(), (lparser) luaY:forbody()
------------------------------------------------------------------------
function luaK:codeAsBx(fs, o, A, sBx)
	return self:codeABx(fs, o, A, sBx + luaP.MAXARG_sBx)
end

------------------------------------------------------------------------
-- set the expdesc e instruction for multiple returns, was a macro
------------------------------------------------------------------------
function luaK:setmultret(fs, e)
	self:setreturns(fs, e, luaY.LUA_MULTRET)
end

------------------------------------------------------------------------
-- there is a jump if patch lists are not identical, was a macro
-- * used in luaK:exp2reg(), luaK:exp2anyreg(), luaK:exp2val()
------------------------------------------------------------------------
function luaK:hasjumps(e)
	return e.t ~= e.f
end

------------------------------------------------------------------------
-- true if the expression is a constant number (for constant folding)
-- * used in constfolding(), infix()
------------------------------------------------------------------------
function luaK:isnumeral(e)
	return e.k == "VKNUM" and e.t == self.NO_JUMP and e.f == self.NO_JUMP
end

------------------------------------------------------------------------
-- codes loading of nil, optimization done if consecutive locations
-- * used in luaK:discharge2reg(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:_nil(fs, from, n)
	if fs.pc > fs.lasttarget then  -- no jumps to current position?
		if fs.pc == 0 then  -- function start?
			if from >= fs.nactvar then
				return  -- positions are already clean
			end
		else
			local previous = fs.f.code[fs.pc - 1]
			if luaP:GET_OPCODE(previous) == "OP_LOADNIL" then
				local pfrom = luaP:GETARG_A(previous)
				local pto = luaP:GETARG_B(previous)
				if pfrom <= from and from <= pto + 1 then  -- can connect both?
					if from + n - 1 > pto then
						luaP:SETARG_B(previous, from + n - 1)
					end
					return
				end
			end
		end
	end
	self:codeABC(fs, "OP_LOADNIL", from, from + n - 1, 0)  -- else no optimization
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:jump(fs)
	local jpc = fs.jpc  -- save list of jumps to here
	fs.jpc = self.NO_JUMP
	local j = self:codeAsBx(fs, "OP_JMP", 0, self.NO_JUMP)
	j = self:concat(fs, j, jpc)  -- keep them on hold
	return j
end

------------------------------------------------------------------------
-- codes a RETURN instruction
-- * used in luaY:close_func(), luaY:retstat()
------------------------------------------------------------------------
function luaK:ret(fs, first, nret)
	self:codeABC(fs, "OP_RETURN", first, nret + 1, 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codecomp()
------------------------------------------------------------------------
function luaK:condjump(fs, op, A, B, C)
	self:codeABC(fs, op, A, B, C)
	return self:jump(fs)
end

------------------------------------------------------------------------
--
-- * used in luaK:patchlistaux(), luaK:concat()
------------------------------------------------------------------------
function luaK:fixjump(fs, pc, dest)
	local jmp = fs.f.code[pc]
	local offset = dest - (pc + 1)
	lua_assert(dest ~= self.NO_JUMP)
	if math.abs(offset) > luaP.MAXARG_sBx then
		luaX:syntaxerror(fs.ls, "control structure too long")
	end
	luaP:SETARG_sBx(jmp, offset)
end

------------------------------------------------------------------------
-- returns current 'pc' and marks it as a jump target (to avoid wrong
-- optimizations with consecutive instructions not in the same basic block).
-- * used in multiple locations
-- * fs.lasttarget tested only by luaK:_nil() when optimizing OP_LOADNIL
------------------------------------------------------------------------
function luaK:getlabel(fs)
	fs.lasttarget = fs.pc
	return fs.pc
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:removevalues(), luaK:patchlistaux(),
--   luaK:concat()
------------------------------------------------------------------------
function luaK:getjump(fs, pc)
	local offset = luaP:GETARG_sBx(fs.f.code[pc])
	if offset == self.NO_JUMP then  -- point to itself represents end of list
		return self.NO_JUMP  -- end of list
	else
		return (pc + 1) + offset  -- turn offset into absolute position
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:patchtestreg(), luaK:invertjump()
------------------------------------------------------------------------
function luaK:getjumpcontrol(fs, pc)
	local pi = fs.f.code[pc]
	local ppi = fs.f.code[pc - 1]
	if pc >= 1 and luaP:testTMode(luaP:GET_OPCODE(ppi)) ~= 0 then
		return ppi
	else
		return pi
	end
end

------------------------------------------------------------------------
-- check whether list has any jump that do not produce a value
-- (or produce an inverted value)
-- * return value changed to boolean
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:need_value(fs, list)
	while list ~= self.NO_JUMP do
		local i = self:getjumpcontrol(fs, list)
		if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then return true end
		list = self:getjump(fs, list)
	end
	return false  -- not found
end

------------------------------------------------------------------------
--
-- * used in luaK:removevalues(), luaK:patchlistaux()
------------------------------------------------------------------------
function luaK:patchtestreg(fs, node, reg)
	local i = self:getjumpcontrol(fs, node)
	if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then
		return false  -- cannot patch other instructions
	end
	if reg ~= luaP.NO_REG and reg ~= luaP:GETARG_B(i) then
		luaP:SETARG_A(i, reg)
	else  -- no register to put value or register already has the value
		-- due to use of a table as i, i cannot be replaced by another table
		-- so the following is required; there is no change to ARG_C
		luaP:SET_OPCODE(i, "OP_TEST")
		local b = luaP:GETARG_B(i)
		luaP:SETARG_A(i, b)
		luaP:SETARG_B(i, 0)
		-- *i = CREATE_ABC(OP_TEST, GETARG_B(*i), 0, GETARG_C(*i)); /* C */
	end
	return true
end

------------------------------------------------------------------------
--
-- * used only in luaK:codenot()
------------------------------------------------------------------------
function luaK:removevalues(fs, list)
	while list ~= self.NO_JUMP do
		self:patchtestreg(fs, list, luaP.NO_REG)
		list = self:getjump(fs, list)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargejpc(), luaK:patchlist(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:patchlistaux(fs, list, vtarget, reg, dtarget)
	while list ~= self.NO_JUMP do
		local _next = self:getjump(fs, list)
		if self:patchtestreg(fs, list, reg) then
			self:fixjump(fs, list, vtarget)
		else
			self:fixjump(fs, list, dtarget)  -- jump to default target
		end
		list = _next
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:code()
------------------------------------------------------------------------
function luaK:dischargejpc(fs)
	self:patchlistaux(fs, fs.jpc, fs.pc, luaP.NO_REG, fs.pc)
	fs.jpc = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:whilestat(), luaY:repeatstat(), luaY:forbody()
------------------------------------------------------------------------
function luaK:patchlist(fs, list, target)
	if target == fs.pc then
		self:patchtohere(fs, list)
	else
		lua_assert(target < fs.pc)
		self:patchlistaux(fs, list, target, luaP.NO_REG, target)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:patchtohere(fs, list)
	self:getlabel(fs)
	fs.jpc = self:concat(fs, fs.jpc, list)
end

------------------------------------------------------------------------
-- * l1 was a pointer, now l1 is returned and callee assigns the value
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:concat(fs, l1, l2)
	if l2 == self.NO_JUMP then return l1
	elseif l1 == self.NO_JUMP then
		return l2
	else
		local list = l1
		local _next = self:getjump(fs, list)
		while _next ~= self.NO_JUMP do  -- find last element
			list = _next
			_next = self:getjump(fs, list)
		end
		self:fixjump(fs, list, l2)
	end
	return l1
end

------------------------------------------------------------------------
--
-- * used in luaK:reserveregs(), (lparser) luaY:forlist()
------------------------------------------------------------------------
function luaK:checkstack(fs, n)
	local newstack = fs.freereg + n
	if newstack > fs.f.maxstacksize then
		if newstack >= self.MAXSTACK then
			luaX:syntaxerror(fs.ls, "function or expression too complex")
		end
		fs.f.maxstacksize = newstack
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:reserveregs(fs, n)
	self:checkstack(fs, n)
	fs.freereg = fs.freereg + n
end

------------------------------------------------------------------------
--
-- * used in luaK:freeexp(), luaK:dischargevars()
------------------------------------------------------------------------
function luaK:freereg(fs, reg)
	if not luaP:ISK(reg) and reg >= fs.nactvar then
		fs.freereg = fs.freereg - 1
		lua_assert(reg == fs.freereg)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:freeexp(fs, e)
	if e.k == "VNONRELOC" then
		self:freereg(fs, e.info)
	end
end

------------------------------------------------------------------------
-- * TODO NOTE implementation is not 100% correct, since the assert fails
-- * luaH_set, setobj deleted; direct table access used instead
-- * used in luaK:stringK(), luaK:numberK(), luaK:boolK(), luaK:nilK()
------------------------------------------------------------------------
function luaK:addk(fs, k, v)
	local L = fs.L
	local idx = fs.h[k.value]
	--TValue *idx = luaH_set(L, fs->h, k); /* C */
	local f = fs.f
	if self:ttisnumber(idx) then
		--TODO this assert currently FAILS (last tested for 5.0.2)
		--lua_assert(fs.f.k[self:nvalue(idx)] == v)
		--lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v)); /* C */
		return self:nvalue(idx)
	else -- constant not found; create a new entry
		idx = {}
		self:setnvalue(idx, fs.nk)
		fs.h[k.value] = idx
		-- setnvalue(idx, cast_num(fs->nk)); /* C */
		luaY:growvector(L, f.k, fs.nk, f.sizek, nil,
			luaP.MAXARG_Bx, "constant table overflow")
		-- loop to initialize empty f.k positions not required
		f.k[fs.nk] = v
		-- setobj(L, &f->k[fs->nk], v); /* C */
		-- luaC_barrier(L, f, v); /* GC */
		local nk = fs.nk
		fs.nk = fs.nk + 1
		return nk
	end

end

------------------------------------------------------------------------
-- creates and sets a string object
-- * used in (lparser) luaY:codestring(), luaY:singlevar()
------------------------------------------------------------------------
function luaK:stringK(fs, s)
	local o = {}  -- TValue
	self:setsvalue(o, s)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a number object
-- * used in luaK:prefix() for negative (or negation of) numbers
-- * used in (lparser) luaY:simpleexp(), luaY:fornum()
------------------------------------------------------------------------
function luaK:numberK(fs, r)
	local o = {}  -- TValue
	self:setnvalue(o, r)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a boolean object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:boolK(fs, b)
	local o = {}  -- TValue
	self:setbvalue(o, b)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a nil object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:nilK(fs)
	local k, v = {}, {}  -- TValue
	self:setnilvalue(v)
	-- cannot use nil as key; instead use table itself to represent nil
	self:sethvalue(k, fs.h)
	return self:addk(fs, k, v)
end

------------------------------------------------------------------------
--
-- * used in luaK:setmultret(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:setreturns(fs, e, nresults)
	if e.k == "VCALL" then  -- expression is an open function call?
		luaP:SETARG_C(self:getcode(fs, e), nresults + 1)
	elseif e.k == "VVARARG" then
		luaP:SETARG_B(self:getcode(fs, e), nresults + 1);
		luaP:SETARG_A(self:getcode(fs, e), fs.freereg);
		luaK:reserveregs(fs, 1)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargevars(), (lparser) luaY:assignment()
------------------------------------------------------------------------
function luaK:setoneret(fs, e)
	if e.k == "VCALL" then  -- expression is an open function call?
		e.k = "VNONRELOC"
		e.info = luaP:GETARG_A(self:getcode(fs, e))
	elseif e.k == "VVARARG" then
		luaP:SETARG_B(self:getcode(fs, e), 2)
		e.k = "VRELOCABLE"  -- can relocate its simple result
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:dischargevars(fs, e)
	local k = e.k
	if k == "VLOCAL" then
		e.k = "VNONRELOC"
	elseif k == "VUPVAL" then
		e.info = self:codeABC(fs, "OP_GETUPVAL", 0, e.info, 0)
		e.k = "VRELOCABLE"
	elseif k == "VGLOBAL" then
		e.info = self:codeABx(fs, "OP_GETGLOBAL", 0, e.info)
		e.k = "VRELOCABLE"
	elseif k == "VINDEXED" then
		self:freereg(fs, e.aux)
		self:freereg(fs, e.info)
		e.info = self:codeABC(fs, "OP_GETTABLE", 0, e.info, e.aux)
		e.k = "VRELOCABLE"
	elseif k == "VVARARG" or k == "VCALL" then
		self:setoneret(fs, e)
	else
		-- there is one value available (somewhere)
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:code_label(fs, A, b, jump)
	self:getlabel(fs)  -- those instructions may be jump targets
	return self:codeABC(fs, "OP_LOADBOOL", A, b, jump)
end

------------------------------------------------------------------------
--
-- * used in luaK:discharge2anyreg(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:discharge2reg(fs, e, reg)
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" then
		self:_nil(fs, reg, 1)
	elseif k == "VFALSE" or k == "VTRUE" then
		self:codeABC(fs, "OP_LOADBOOL", reg, (e.k == "VTRUE") and 1 or 0, 0)
	elseif k == "VK" then
		self:codeABx(fs, "OP_LOADK", reg, e.info)
	elseif k == "VKNUM" then
		self:codeABx(fs, "OP_LOADK", reg, self:numberK(fs, e.nval))
	elseif k == "VRELOCABLE" then
		local pc = self:getcode(fs, e)
		luaP:SETARG_A(pc, reg)
	elseif k == "VNONRELOC" then
		if reg ~= e.info then
			self:codeABC(fs, "OP_MOVE", reg, e.info, 0)
		end
	else
		lua_assert(e.k == "VVOID" or e.k == "VJMP")
		return  -- nothing to do...
	end
	e.info = reg
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codenot()
------------------------------------------------------------------------
function luaK:discharge2anyreg(fs, e)
	if e.k ~= "VNONRELOC" then
		self:reserveregs(fs, 1)
		self:discharge2reg(fs, e, fs.freereg - 1)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2nextreg(), luaK:exp2anyreg(), luaK:storevar()
------------------------------------------------------------------------
function luaK:exp2reg(fs, e, reg)
	self:discharge2reg(fs, e, reg)
	if e.k == "VJMP" then
		e.t = self:concat(fs, e.t, e.info)  -- put this jump in 't' list
	end
	if self:hasjumps(e) then
		local final  -- position after whole expression
		local p_f = self.NO_JUMP  -- position of an eventual LOAD false
		local p_t = self.NO_JUMP  -- position of an eventual LOAD true
		if self:need_value(fs, e.t) or self:need_value(fs, e.f) then
			local fj = (e.k == "VJMP") and self.NO_JUMP or self:jump(fs)
			p_f = self:code_label(fs, reg, 0, 1)
			p_t = self:code_label(fs, reg, 1, 0)
			self:patchtohere(fs, fj)
		end
		final = self:getlabel(fs)
		self:patchlistaux(fs, e.f, final, reg, p_f)
		self:patchlistaux(fs, e.t, final, reg, p_t)
	end
	e.f, e.t = self.NO_JUMP, self.NO_JUMP
	e.info = reg
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2nextreg(fs, e)
	self:dischargevars(fs, e)
	self:freeexp(fs, e)
	self:reserveregs(fs, 1)
	self:exp2reg(fs, e, fs.freereg - 1)
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2anyreg(fs, e)
	self:dischargevars(fs, e)
	if e.k == "VNONRELOC" then
		if not self:hasjumps(e) then  -- exp is already in a register
			return e.info
		end
		if e.info >= fs.nactvar then  -- reg. is not a local?
			self:exp2reg(fs, e, e.info)  -- put value on it
			return e.info
		end
	end
	self:exp2nextreg(fs, e)  -- default
	return e.info
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2RK(), luaK:prefix(), luaK:posfix()
-- * used in (lparser) luaY:yindex()
------------------------------------------------------------------------
function luaK:exp2val(fs, e)
	if self:hasjumps(e) then
		self:exp2anyreg(fs, e)
	else
		self:dischargevars(fs, e)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2RK(fs, e)
	self:exp2val(fs, e)
	local k = e.k
	if k == "VKNUM" or k == "VTRUE" or k == "VFALSE" or k == "VNIL" then
		if fs.nk <= luaP.MAXINDEXRK then  -- constant fit in RK operand?
			-- converted from a 2-deep ternary operator expression
			if e.k == "VNIL" then
				e.info = self:nilK(fs)
			else
				e.info = (e.k == "VKNUM") and self:numberK(fs, e.nval)
					or self:boolK(fs, e.k == "VTRUE")
			end
			e.k = "VK"
			return luaP:RKASK(e.info)
		end
	elseif k == "VK" then
		if e.info <= luaP.MAXINDEXRK then  -- constant fit in argC?
			return luaP:RKASK(e.info)
		end
	else
		-- default
	end
	-- not a constant in the right range: put it in a register
	return self:exp2anyreg(fs, e)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:assignment(), luaY:localfunc(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:storevar(fs, var, ex)
	local k = var.k
	if k == "VLOCAL" then
		self:freeexp(fs, ex)
		self:exp2reg(fs, ex, var.info)
		return
	elseif k == "VUPVAL" then
		local e = self:exp2anyreg(fs, ex)
		self:codeABC(fs, "OP_SETUPVAL", e, var.info, 0)
	elseif k == "VGLOBAL" then
		local e = self:exp2anyreg(fs, ex)
		self:codeABx(fs, "OP_SETGLOBAL", e, var.info)
	elseif k == "VINDEXED" then
		local e = self:exp2RK(fs, ex)
		self:codeABC(fs, "OP_SETTABLE", var.info, var.aux, e)
	else
		lua_assert(0)  -- invalid var kind to store
	end
	self:freeexp(fs, ex)
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:primaryexp()
------------------------------------------------------------------------
function luaK:_self(fs, e, key)
	self:exp2anyreg(fs, e)
	self:freeexp(fs, e)
	local func = fs.freereg
	self:reserveregs(fs, 2)
	self:codeABC(fs, "OP_SELF", func, e.info, self:exp2RK(fs, key))
	self:freeexp(fs, key)
	e.info = func
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:codenot()
------------------------------------------------------------------------
function luaK:invertjump(fs, e)
	local pc = self:getjumpcontrol(fs, e.info)
	lua_assert(luaP:testTMode(luaP:GET_OPCODE(pc)) ~= 0 and
		luaP:GET_OPCODE(pc) ~= "OP_TESTSET" and
		luaP:GET_OPCODE(pc) ~= "OP_TEST")
	luaP:SETARG_A(pc, (luaP:GETARG_A(pc) == 0) and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:goiffalse()
------------------------------------------------------------------------
function luaK:jumponcond(fs, e, cond)
	if e.k == "VRELOCABLE" then
		local ie = self:getcode(fs, e)
		if luaP:GET_OPCODE(ie) == "OP_NOT" then
			fs.pc = fs.pc - 1  -- remove previous OP_NOT
			return self:condjump(fs, "OP_TEST", luaP:GETARG_B(ie), 0, cond and 0 or 1)
		end
		-- else go through
	end
	self:discharge2anyreg(fs, e)
	self:freeexp(fs, e)
	return self:condjump(fs, "OP_TESTSET", luaP.NO_REG, e.info, cond and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:infix(), (lparser) luaY:cond()
------------------------------------------------------------------------
function luaK:goiftrue(fs, e)
	local pc  -- pc of last jump
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VK" or k == "VKNUM" or k == "VTRUE" then
		pc = self.NO_JUMP  -- always true; do nothing
	elseif k == "VFALSE" then
		pc = self:jump(fs)  -- always jump
	elseif k == "VJMP" then
		self:invertjump(fs, e)
		pc = e.info
	else
		pc = self:jumponcond(fs, e, false)
	end
	e.f = self:concat(fs, e.f, pc)  -- insert last jump in `f' list
	self:patchtohere(fs, e.t)
	e.t = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in luaK:infix()
------------------------------------------------------------------------
function luaK:goiffalse(fs, e)
	local pc  -- pc of last jump
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" or k == "VFALSE"then
		pc = self.NO_JUMP  -- always false; do nothing
	elseif k == "VTRUE" then
		pc = self:jump(fs)  -- always jump
	elseif k == "VJMP" then
		pc = e.info
	else
		pc = self:jumponcond(fs, e, true)
	end
	e.t = self:concat(fs, e.t, pc)  -- insert last jump in `t' list
	self:patchtohere(fs, e.f)
	e.f = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used only in luaK:prefix()
------------------------------------------------------------------------
function luaK:codenot(fs, e)
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" or k == "VFALSE" then
		e.k = "VTRUE"
	elseif k == "VK" or k == "VKNUM" or k == "VTRUE" then
		e.k = "VFALSE"
	elseif k == "VJMP" then
		self:invertjump(fs, e)
	elseif k == "VRELOCABLE" or k == "VNONRELOC" then
		self:discharge2anyreg(fs, e)
		self:freeexp(fs, e)
		e.info = self:codeABC(fs, "OP_NOT", 0, e.info, 0)
		e.k = "VRELOCABLE"
	else
		lua_assert(0)  -- cannot happen
	end
	-- interchange true and false lists
	e.f, e.t = e.t, e.f
	self:removevalues(fs, e.f)
	self:removevalues(fs, e.t)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:field(), luaY:primaryexp()
------------------------------------------------------------------------
function luaK:indexed(fs, t, k)
	t.aux = self:exp2RK(fs, k)
	t.k = "VINDEXED"
end

------------------------------------------------------------------------
--
-- * used only in luaK:codearith()
------------------------------------------------------------------------
function luaK:constfolding(op, e1, e2)
	local r
	if not self:isnumeral(e1) or not self:isnumeral(e2) then return false end
	local v1 = e1.nval
	local v2 = e2.nval
	if op == "OP_ADD" then
		r = self:numadd(v1, v2)
	elseif op == "OP_SUB" then
		r = self:numsub(v1, v2)
	elseif op == "OP_MUL" then
		r = self:nummul(v1, v2)
	elseif op == "OP_DIV" then
		if v2 == 0 then return false end  -- do not attempt to divide by 0
		r = self:numdiv(v1, v2)
	elseif op == "OP_MOD" then
		if v2 == 0 then return false end  -- do not attempt to divide by 0
		r = self:nummod(v1, v2)
	elseif op == "OP_POW" then
		r = self:numpow(v1, v2)
	elseif op == "OP_UNM" then
		r = self:numunm(v1)
	elseif op == "OP_LEN" then
		return false  -- no constant folding for 'len'
	else
		lua_assert(0)
		r = 0
	end
	if self:numisnan(r) then return false end  -- do not attempt to produce NaN
	e1.nval = r
	return true
end

------------------------------------------------------------------------
--
-- * used in luaK:prefix(), luaK:posfix()
------------------------------------------------------------------------
function luaK:codearith(fs, op, e1, e2)
	if self:constfolding(op, e1, e2) then
		return
	else
		local o2 = (op ~= "OP_UNM" and op ~= "OP_LEN") and self:exp2RK(fs, e2) or 0
		local o1 = self:exp2RK(fs, e1)
		if o1 > o2 then
			self:freeexp(fs, e1)
			self:freeexp(fs, e2)
		else
			self:freeexp(fs, e2)
			self:freeexp(fs, e1)
		end
		e1.info = self:codeABC(fs, op, 0, o1, o2)
		e1.k = "VRELOCABLE"
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:posfix()
------------------------------------------------------------------------
function luaK:codecomp(fs, op, cond, e1, e2)
	local o1 = self:exp2RK(fs, e1)
	local o2 = self:exp2RK(fs, e2)
	self:freeexp(fs, e2)
	self:freeexp(fs, e1)
	if cond == 0 and op ~= "OP_EQ" then
		-- exchange args to replace by `<' or `<='
		o1, o2 = o2, o1  -- o1 <==> o2
		cond = 1
	end
	e1.info = self:condjump(fs, op, cond, o1, o2)
	e1.k = "VJMP"
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:prefix(fs, op, e)
	local e2 = {}  -- expdesc
	e2.t, e2.f = self.NO_JUMP, self.NO_JUMP
	e2.k = "VKNUM"
	e2.nval = 0
	if op == "OPR_MINUS" then
		if not self:isnumeral(e) then
			self:exp2anyreg(fs, e)  -- cannot operate on non-numeric constants
		end
		self:codearith(fs, "OP_UNM", e, e2)
	elseif op == "OPR_NOT" then
		self:codenot(fs, e)
	elseif op == "OPR_LEN" then
		self:exp2anyreg(fs, e)  -- cannot operate on constants
		self:codearith(fs, "OP_LEN", e, e2)
	else
		lua_assert(0)
	end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:infix(fs, op, v)
	if op == "OPR_AND" then
		self:goiftrue(fs, v)
	elseif op == "OPR_OR" then
		self:goiffalse(fs, v)
	elseif op == "OPR_CONCAT" then
		self:exp2nextreg(fs, v)  -- operand must be on the 'stack'
	elseif op == "OPR_ADD" or op == "OPR_SUB" or
		op == "OPR_MUL" or op == "OPR_DIV" or
		op == "OPR_MOD" or op == "OPR_POW" then
		if not self:isnumeral(v) then self:exp2RK(fs, v) end
	else
		self:exp2RK(fs, v)
	end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
-- table lookups to simplify testing
luaK.arith_op = {
	OPR_ADD = "OP_ADD", OPR_SUB = "OP_SUB", OPR_MUL = "OP_MUL",
	OPR_DIV = "OP_DIV", OPR_MOD = "OP_MOD", OPR_POW = "OP_POW",
}
luaK.comp_op = {
	OPR_EQ = "OP_EQ", OPR_NE = "OP_EQ", OPR_LT = "OP_LT",
	OPR_LE = "OP_LE", OPR_GT = "OP_LT", OPR_GE = "OP_LE",
}
luaK.comp_cond = {
	OPR_EQ = 1, OPR_NE = 0, OPR_LT = 1,
	OPR_LE = 1, OPR_GT = 0, OPR_GE = 0,
}
function luaK:posfix(fs, op, e1, e2)
	-- needed because e1 = e2 doesn't copy values...
	-- * in 5.0.x, only k/info/aux/t/f copied, t for AND, f for OR
	--   but here, all elements are copied for completeness' sake
	local function copyexp(e1, e2)
		e1.k = e2.k
		e1.info = e2.info; e1.aux = e2.aux
		e1.nval = e2.nval
		e1.t = e2.t; e1.f = e2.f
	end
	if op == "OPR_AND" then
		lua_assert(e1.t == self.NO_JUMP)  -- list must be closed
		self:dischargevars(fs, e2)
		e2.f = self:concat(fs, e2.f, e1.f)
		copyexp(e1, e2)
	elseif op == "OPR_OR" then
		lua_assert(e1.f == self.NO_JUMP)  -- list must be closed
		self:dischargevars(fs, e2)
		e2.t = self:concat(fs, e2.t, e1.t)
		copyexp(e1, e2)
	elseif op == "OPR_CONCAT" then
		self:exp2val(fs, e2)
		if e2.k == "VRELOCABLE" and luaP:GET_OPCODE(self:getcode(fs, e2)) == "OP_CONCAT" then
			lua_assert(e1.info == luaP:GETARG_B(self:getcode(fs, e2)) - 1)
			self:freeexp(fs, e1)
			luaP:SETARG_B(self:getcode(fs, e2), e1.info)
			e1.k = "VRELOCABLE"
			e1.info = e2.info
		else
			self:exp2nextreg(fs, e2)  -- operand must be on the 'stack'
			self:codearith(fs, "OP_CONCAT", e1, e2)
		end
	else
		-- the following uses a table lookup in place of conditionals
		local arith = self.arith_op[op]
		if arith then
			self:codearith(fs, arith, e1, e2)
		else
			local comp = self.comp_op[op]
			if comp then
				self:codecomp(fs, comp, self.comp_cond[op], e1, e2)
			else
				lua_assert(0)
			end
		end--if arith
	end--if op
end

------------------------------------------------------------------------
-- adjusts debug information for last instruction written, in order to
-- change the line where item comes into existence
-- * used in (lparser) luaY:funcargs(), luaY:forbody(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:fixline(fs, line)
	fs.f.lineinfo[fs.pc - 1] = line
end

------------------------------------------------------------------------
-- general function to write an instruction into the instruction buffer,
-- sets debug information too
-- * used in luaK:codeABC(), luaK:codeABx()
-- * called directly by (lparser) luaY:whilestat()
------------------------------------------------------------------------
function luaK:code(fs, i, line)
	local f = fs.f
	self:dischargejpc(fs)  -- 'pc' will change
	-- put new instruction in code array
	luaY:growvector(fs.L, f.code, fs.pc, f.sizecode, nil,
		luaY.MAX_INT, "code size overflow")
	f.code[fs.pc] = i
	-- save corresponding line information
	luaY:growvector(fs.L, f.lineinfo, fs.pc, f.sizelineinfo, nil,
		luaY.MAX_INT, "code size overflow")
	f.lineinfo[fs.pc] = line
	local pc = fs.pc
	fs.pc = fs.pc + 1
	return pc
end

------------------------------------------------------------------------
-- writes an instruction of type ABC
-- * calls luaK:code()
------------------------------------------------------------------------
function luaK:codeABC(fs, o, a, b, c)
	lua_assert(luaP:getOpMode(o) == luaP.OpMode.iABC)
	lua_assert(luaP:getBMode(o) ~= luaP.OpArgMask.OpArgN or b == 0)
	lua_assert(luaP:getCMode(o) ~= luaP.OpArgMask.OpArgN or c == 0)
	return self:code(fs, luaP:CREATE_ABC(o, a, b, c), fs.ls.lastline)
end

------------------------------------------------------------------------
-- writes an instruction of type ABx
-- * calls luaK:code(), called by luaK:codeAsBx()
------------------------------------------------------------------------
function luaK:codeABx(fs, o, a, bc)
	lua_assert(luaP:getOpMode(o) == luaP.OpMode.iABx or
		luaP:getOpMode(o) == luaP.OpMode.iAsBx)
	lua_assert(luaP:getCMode(o) == luaP.OpArgMask.OpArgN)
	return self:code(fs, luaP:CREATE_ABx(o, a, bc), fs.ls.lastline)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:closelistfield(), luaY:lastlistfield()
------------------------------------------------------------------------
function luaK:setlist(fs, base, nelems, tostore)
	local c = math.floor((nelems - 1)/luaP.LFIELDS_PER_FLUSH) + 1
	local b = (tostore == luaY.LUA_MULTRET) and 0 or tostore
	lua_assert(tostore ~= 0)
	if c <= luaP.MAXARG_C then
		self:codeABC(fs, "OP_SETLIST", base, b, c)
	else
		self:codeABC(fs, "OP_SETLIST", base, b, 0)
		self:code(fs, luaP:CREATE_Inst(c), fs.ls.lastline)
	end
	fs.freereg = base + 1  -- free registers with list values
end




--dofile("lparser.lua")

--[[--------------------------------------------------------------------
-- Expression descriptor
-- * expkind changed to string constants; luaY:assignment was the only
--   function to use a relational operator with this enumeration
-- VVOID       -- no value
-- VNIL        -- no value
-- VTRUE       -- no value
-- VFALSE      -- no value
-- VK          -- info = index of constant in 'k'
-- VKNUM       -- nval = numerical value
-- VLOCAL      -- info = local register
-- VUPVAL,     -- info = index of upvalue in 'upvalues'
-- VGLOBAL     -- info = index of table; aux = index of global name in 'k'
-- VINDEXED    -- info = table register; aux = index register (or 'k')
-- VJMP        -- info = instruction pc
-- VRELOCABLE  -- info = instruction pc
-- VNONRELOC   -- info = result register
-- VCALL       -- info = instruction pc
-- VVARARG     -- info = instruction pc
} ----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- * expdesc in Lua 5.1.x has a union u and another struct s; this Lua
--   implementation ignores all instances of u and s usage
-- struct expdesc:
--   k  -- (enum: expkind)
--   info, aux -- (int, int)
--   nval -- (lua_Number)
--   t  -- patch list of 'exit when true'
--   f  -- patch list of 'exit when false'
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct upvaldesc:
--   k  -- (lu_byte)
--   info -- (lu_byte)
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- state needed to generate code for a given function
-- struct FuncState:
--   f  -- current function header (table: Proto)
--   h  -- table to find (and reuse) elements in 'k' (table: Table)
--   prev  -- enclosing function (table: FuncState)
--   ls  -- lexical state (table: LexState)
--   L  -- copy of the Lua state (table: lua_State)
--   bl  -- chain of current blocks (table: BlockCnt)
--   pc  -- next position to code (equivalent to 'ncode')
--   lasttarget   -- 'pc' of last 'jump target'
--   jpc  -- list of pending jumps to 'pc'
--   freereg  -- first free register
--   nk  -- number of elements in 'k'
--   np  -- number of elements in 'p'
--   nlocvars  -- number of elements in 'locvars'
--   nactvar  -- number of active local variables
--   upvalues[LUAI_MAXUPVALUES]  -- upvalues (table: upvaldesc)
--   actvar[LUAI_MAXVARS]  -- declared-variable stack
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- constants used by parser
-- * picks up duplicate values from luaX if required
------------------------------------------------------------------------
luaY.LUA_QS = luaX.LUA_QS or "'%s'"  -- (from luaconf.h)

luaY.SHRT_MAX = 32767 -- (from <limits.h>)
luaY.LUAI_MAXVARS = 200  -- (luaconf.h)
luaY.LUAI_MAXUPVALUES = 60  -- (luaconf.h)
luaY.MAX_INT = luaX.MAX_INT or 2147483645  -- (from llimits.h)
-- * INT_MAX-2 for 32-bit systems
luaY.LUAI_MAXCCALLS = 200  -- (from luaconf.h)

luaY.VARARG_HASARG = 1  -- (from lobject.h)
-- NOTE: HASARG_MASK is value-specific
luaY.HASARG_MASK = 2 -- this was added for a bitop in parlist()
luaY.VARARG_ISVARARG = 2
-- NOTE: there is some value-specific code that involves VARARG_NEEDSARG
luaY.VARARG_NEEDSARG = 4

luaY.LUA_MULTRET = -1  -- (lua.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- LUA_QL describes how error messages quote program elements.
-- CHANGE it if you want a different appearance. (from luaconf.h)
------------------------------------------------------------------------
function luaY:LUA_QL(x)
	return "'"..x.."'"
end

------------------------------------------------------------------------
-- this is a stripped-down luaM_growvector (from lmem.h) which is a
-- macro based on luaM_growaux (in lmem.c); all the following does is
-- reproduce the size limit checking logic of the original function
-- so that error behaviour is identical; all arguments preserved for
-- convenience, even those which are unused
-- * set the t field to nil, since this originally does a sizeof(t)
-- * size (originally a pointer) is never updated, their final values
--   are set by luaY:close_func(), so overall things should still work
------------------------------------------------------------------------
function luaY:growvector(L, v, nelems, size, t, limit, e)
	if nelems >= limit then
		error(e)  -- was luaG_runerror
	end
end

------------------------------------------------------------------------
-- initialize a new function prototype structure (from lfunc.c)
-- * used only in open_func()
------------------------------------------------------------------------
function luaY:newproto(L)
	local f = {} -- Proto
	-- luaC_link(L, obj2gco(f), LUA_TPROTO); /* GC */
	f.k = {}
	f.sizek = 0
	f.p = {}
	f.sizep = 0
	f.code = {}
	f.sizecode = 0
	f.sizelineinfo = 0
	f.sizeupvalues = 0
	f.nups = 0
	f.upvalues = {}
	f.numparams = 0
	f.is_vararg = 0
	f.maxstacksize = 0
	f.lineinfo = {}
	f.sizelocvars = 0
	f.locvars = {}
	f.lineDefined = 0
	f.lastlinedefined = 0
	f.source = nil
	return f
end

------------------------------------------------------------------------
-- converts an integer to a "floating point byte", represented as
-- (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if
-- eeeee != 0 and (xxx) otherwise.
------------------------------------------------------------------------
function luaY:int2fb(x)
	local e = 0  -- exponent
	while x >= 16 do
		x = math.floor((x + 1) / 2)
		e = e + 1
	end
	if x < 8 then
		return x
	else
		return ((e + 1) * 8) + (x - 8)
	end
end

--[[--------------------------------------------------------------------
-- parser functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- true of the kind of expression produces multiple return values
------------------------------------------------------------------------
function luaY:hasmultret(k)
	return k == "VCALL" or k == "VVARARG"
end

------------------------------------------------------------------------
-- convenience function to access active local i, returns entry
------------------------------------------------------------------------
function luaY:getlocvar(fs, i)
	return fs.f.locvars[ fs.actvar[i] ]
end

------------------------------------------------------------------------
-- check a limit, string m provided as an error message
------------------------------------------------------------------------
function luaY:checklimit(fs, v, l, m)
	if v > l then self:errorlimit(fs, l, m) end
end

--[[--------------------------------------------------------------------
-- nodes for block list (list of active blocks)
-- struct BlockCnt:
--   previous  -- chain (table: BlockCnt)
--   breaklist  -- list of jumps out of this loop
--   nactvar  -- # active local variables outside the breakable structure
--   upval  -- true if some variable in the block is an upvalue (boolean)
--   isbreakable  -- true if 'block' is a loop (boolean)
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- prototypes for recursive non-terminal functions
------------------------------------------------------------------------
-- prototypes deleted; not required in Lua

------------------------------------------------------------------------
-- reanchor if last token is has a constant string, see close_func()
-- * used only in close_func()
------------------------------------------------------------------------
function luaY:anchor_token(ls)
	if ls.t.token == "TK_NAME" or ls.t.token == "TK_STRING" then
		-- not relevant to Lua implementation of parser
		-- local ts = ls.t.seminfo
		-- luaX_newstring(ls, getstr(ts), ts->tsv.len); /* C */
	end
end

------------------------------------------------------------------------
-- throws a syntax error if token expected is not there
------------------------------------------------------------------------
function luaY:error_expected(ls, token)
	luaX:syntaxerror(ls,
		string.format(self.LUA_QS.." expected", luaX:token2str(ls, token)))
end

------------------------------------------------------------------------
-- prepares error message for display, for limits exceeded
-- * used only in checklimit()
------------------------------------------------------------------------
function luaY:errorlimit(fs, limit, what)
	local msg = (fs.f.linedefined == 0) and
		string.format("main function has more than %d %s", limit, what) or
		string.format("function at line %d has more than %d %s",
			fs.f.linedefined, limit, what)
	luaX:lexerror(fs.ls, msg, 0)
end

------------------------------------------------------------------------
-- tests for a token, returns outcome
-- * return value changed to boolean
------------------------------------------------------------------------
function luaY:testnext(ls, c)
	if ls.t.token == c then
		luaX:next(ls)
		return true
	else
		return false
	end
end

------------------------------------------------------------------------
-- check for existence of a token, throws error if not found
------------------------------------------------------------------------
function luaY:check(ls, c)
	if ls.t.token ~= c then
		self:error_expected(ls, c)
	end
end

------------------------------------------------------------------------
-- verify existence of a token, then skip it
------------------------------------------------------------------------
function luaY:checknext(ls, c)
	self:check(ls, c)
	luaX:next(ls)
end

------------------------------------------------------------------------
-- throws error if condition not matched
------------------------------------------------------------------------
function luaY:check_condition(ls, c, msg)
	if not c then luaX:syntaxerror(ls, msg) end
end

------------------------------------------------------------------------
-- verifies token conditions are met or else throw error
------------------------------------------------------------------------
function luaY:check_match(ls, what, who, where)
	if not self:testnext(ls, what) then
		if where == ls.linenumber then
			self:error_expected(ls, what)
		else
			luaX:syntaxerror(ls, string.format(
				self.LUA_QS.." expected (to close "..self.LUA_QS.." at line %d)",
				luaX:token2str(ls, what), luaX:token2str(ls, who), where))
		end
	end
end

------------------------------------------------------------------------
-- expect that token is a name, return the name
------------------------------------------------------------------------
function luaY:str_checkname(ls)
	self:check(ls, "TK_NAME")
	local ts = ls.t.seminfo
	luaX:next(ls)
	return ts
end

------------------------------------------------------------------------
-- initialize a struct expdesc, expression description data structure
------------------------------------------------------------------------
function luaY:init_exp(e, k, i)
	e.f, e.t = luaK.NO_JUMP, luaK.NO_JUMP
	e.k = k
	e.info = i
end

------------------------------------------------------------------------
-- adds given string s in string pool, sets e as VK
------------------------------------------------------------------------
function luaY:codestring(ls, e, s)
	self:init_exp(e, "VK", luaK:stringK(ls.fs, s))
end

------------------------------------------------------------------------
-- consume a name token, adds it to string pool, sets e as VK
------------------------------------------------------------------------
function luaY:checkname(ls, e)
	self:codestring(ls, e, self:str_checkname(ls))
end

------------------------------------------------------------------------
-- creates struct entry for a local variable
-- * used only in new_localvar()
------------------------------------------------------------------------
function luaY:registerlocalvar(ls, varname)
	local fs = ls.fs
	local f = fs.f
	self:growvector(ls.L, f.locvars, fs.nlocvars, f.sizelocvars,
		nil, self.SHRT_MAX, "too many local variables")
	-- loop to initialize empty f.locvar positions not required
	f.locvars[fs.nlocvars] = {} -- LocVar
	f.locvars[fs.nlocvars].varname = varname
	-- luaC_objbarrier(ls.L, f, varname) /* GC */
	local nlocvars = fs.nlocvars
	fs.nlocvars = fs.nlocvars + 1
	return nlocvars
end

------------------------------------------------------------------------
-- creates a new local variable given a name and an offset from nactvar
-- * used in fornum(), forlist(), parlist(), body()
------------------------------------------------------------------------
function luaY:new_localvarliteral(ls, v, n)
	self:new_localvar(ls, v, n)
end

------------------------------------------------------------------------
-- register a local variable, set in active variable list
------------------------------------------------------------------------
function luaY:new_localvar(ls, name, n)
	local fs = ls.fs
	self:checklimit(fs, fs.nactvar + n + 1, self.LUAI_MAXVARS, "local variables")
	fs.actvar[fs.nactvar + n] = self:registerlocalvar(ls, name)
end

------------------------------------------------------------------------
-- adds nvars number of new local variables, set debug information
------------------------------------------------------------------------
function luaY:adjustlocalvars(ls, nvars)
	local fs = ls.fs
	fs.nactvar = fs.nactvar + nvars
	for i = nvars, 1, -1 do
		self:getlocvar(fs, fs.nactvar - i).startpc = fs.pc
	end
end

------------------------------------------------------------------------
-- removes a number of locals, set debug information
------------------------------------------------------------------------
function luaY:removevars(ls, tolevel)
	local fs = ls.fs
	while fs.nactvar > tolevel do
		fs.nactvar = fs.nactvar - 1
		self:getlocvar(fs, fs.nactvar).endpc = fs.pc
	end
end

------------------------------------------------------------------------
-- returns an existing upvalue index based on the given name, or
-- creates a new upvalue struct entry and returns the new index
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:indexupvalue(fs, name, v)
	local f = fs.f
	for i = 0, f.nups - 1 do
		if fs.upvalues[i].k == v.k and fs.upvalues[i].info == v.info then
			lua_assert(f.upvalues[i] == name)
			return i
		end
	end
	-- new one
	self:checklimit(fs, f.nups + 1, self.LUAI_MAXUPVALUES, "upvalues")
	self:growvector(fs.L, f.upvalues, f.nups, f.sizeupvalues,
		nil, self.MAX_INT, "")
	-- loop to initialize empty f.upvalues positions not required
	f.upvalues[f.nups] = name
	-- luaC_objbarrier(fs->L, f, name); /* GC */
	lua_assert(v.k == "VLOCAL" or v.k == "VUPVAL")
	-- this is a partial copy; only k & info fields used
	fs.upvalues[f.nups] = { k = v.k, info = v.info }
	local nups = f.nups
	f.nups = f.nups + 1
	return nups
end

------------------------------------------------------------------------
-- search the local variable namespace of the given fs for a match
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:searchvar(fs, n)
	for i = fs.nactvar - 1, 0, -1 do
		if n == self:getlocvar(fs, i).varname then
			return i
		end
	end
	return -1  -- not found
end

------------------------------------------------------------------------
-- * mark upvalue flags in function states up to a given level
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:markupval(fs, level)
	local bl = fs.bl
	while bl and bl.nactvar > level do bl = bl.previous end
	if bl then bl.upval = true end
end

------------------------------------------------------------------------
-- handle locals, globals and upvalues and related processing
-- * search mechanism is recursive, calls itself to search parents
-- * used only in singlevar()
------------------------------------------------------------------------
function luaY:singlevaraux(fs, n, var, base)
	if fs == nil then  -- no more levels?
		self:init_exp(var, "VGLOBAL", luaP.NO_REG)  -- default is global variable
		return "VGLOBAL"
	else
		local v = self:searchvar(fs, n)  -- look up at current level
		if v >= 0 then
			self:init_exp(var, "VLOCAL", v)
			if base == 0 then
				self:markupval(fs, v)  -- local will be used as an upval
			end
			return "VLOCAL"
		else  -- not found at current level; try upper one
			if self:singlevaraux(fs.prev, n, var, 0) == "VGLOBAL" then
				return "VGLOBAL"
			end
			var.info = self:indexupvalue(fs, n, var)  -- else was LOCAL or UPVAL
			var.k = "VUPVAL"  -- upvalue in this level
			return "VUPVAL"
		end--if v
	end--if fs
end

------------------------------------------------------------------------
-- consume a name token, creates a variable (global|local|upvalue)
-- * used in prefixexp(), funcname()
------------------------------------------------------------------------
function luaY:singlevar(ls, var)
	local varname = self:str_checkname(ls)
	local fs = ls.fs
	if self:singlevaraux(fs, varname, var, 1) == "VGLOBAL" then
		var.info = luaK:stringK(fs, varname)  -- info points to global name
	end
end

------------------------------------------------------------------------
-- adjust RHS to match LHS in an assignment
-- * used in assignment(), forlist(), localstat()
------------------------------------------------------------------------
function luaY:adjust_assign(ls, nvars, nexps, e)
	local fs = ls.fs
	local extra = nvars - nexps
	if self:hasmultret(e.k) then
		extra = extra + 1  -- includes call itself
		if extra <= 0 then extra = 0 end
		luaK:setreturns(fs, e, extra)  -- last exp. provides the difference
		if extra > 1 then luaK:reserveregs(fs, extra - 1) end
	else
		if e.k ~= "VVOID" then luaK:exp2nextreg(fs, e) end  -- close last expression
		if extra > 0 then
			local reg = fs.freereg
			luaK:reserveregs(fs, extra)
			luaK:_nil(fs, reg, extra)
		end
	end
end

------------------------------------------------------------------------
-- tracks and limits parsing depth, assert check at end of parsing
------------------------------------------------------------------------
function luaY:enterlevel(ls)
	ls.L.nCcalls = ls.L.nCcalls + 1
	if ls.L.nCcalls > self.LUAI_MAXCCALLS then
		luaX:lexerror(ls, "chunk has too many syntax levels", 0)
	end
end

------------------------------------------------------------------------
-- tracks parsing depth, a pair with luaY:enterlevel()
------------------------------------------------------------------------
function luaY:leavelevel(ls)
	ls.L.nCcalls = ls.L.nCcalls - 1
end

------------------------------------------------------------------------
-- enters a code unit, initializes elements
------------------------------------------------------------------------
function luaY:enterblock(fs, bl, isbreakable)
	bl.breaklist = luaK.NO_JUMP
	bl.isbreakable = isbreakable
	bl.nactvar = fs.nactvar
	bl.upval = false
	bl.previous = fs.bl
	fs.bl = bl
	lua_assert(fs.freereg == fs.nactvar)
end

------------------------------------------------------------------------
-- leaves a code unit, close any upvalues
------------------------------------------------------------------------
function luaY:leaveblock(fs)
	local bl = fs.bl
	fs.bl = bl.previous
	self:removevars(fs.ls, bl.nactvar)
	if bl.upval then
		luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
	end
	-- a block either controls scope or breaks (never both)
	lua_assert(not bl.isbreakable or not bl.upval)
	lua_assert(bl.nactvar == fs.nactvar)
	fs.freereg = fs.nactvar  -- free registers
	luaK:patchtohere(fs, bl.breaklist)
end

------------------------------------------------------------------------
-- implement the instantiation of a function prototype, append list of
-- upvalues after the instantiation instruction
-- * used only in body()
------------------------------------------------------------------------
function luaY:pushclosure(ls, func, v)
	local fs = ls.fs
	local f = fs.f
	self:growvector(ls.L, f.p, fs.np, f.sizep, nil,
		luaP.MAXARG_Bx, "constant table overflow")
	-- loop to initialize empty f.p positions not required
	f.p[fs.np] = func.f
	fs.np = fs.np + 1
	-- luaC_objbarrier(ls->L, f, func->f); /* C */
	self:init_exp(v, "VRELOCABLE", luaK:codeABx(fs, "OP_CLOSURE", 0, fs.np - 1))
	for i = 0, func.f.nups - 1 do
		local o = (func.upvalues[i].k == "VLOCAL") and "OP_MOVE" or "OP_GETUPVAL"
		luaK:codeABC(fs, o, 0, func.upvalues[i].info, 0)
	end
end

------------------------------------------------------------------------
-- opening of a function
------------------------------------------------------------------------
function luaY:open_func(ls, fs)
	local L = ls.L
	local f = self:newproto(ls.L)
	fs.f = f
	fs.prev = ls.fs  -- linked list of funcstates
	fs.ls = ls
	fs.L = L
	ls.fs = fs
	fs.pc = 0
	fs.lasttarget = -1
	fs.jpc = luaK.NO_JUMP
	fs.freereg = 0
	fs.nk = 0
	fs.np = 0
	fs.nlocvars = 0
	fs.nactvar = 0
	fs.bl = nil
	f.source = ls.source
	f.maxstacksize = 2  -- registers 0/1 are always valid
	fs.h = {}  -- constant table; was luaH_new call
	-- anchor table of constants and prototype (to avoid being collected)
	-- sethvalue2s(L, L->top, fs->h); incr_top(L); /* C */
	-- setptvalue2s(L, L->top, f); incr_top(L);
end

------------------------------------------------------------------------
-- closing of a function
------------------------------------------------------------------------
function luaY:close_func(ls)
	local L = ls.L
	local fs = ls.fs
	local f = fs.f
	self:removevars(ls, 0)
	luaK:ret(fs, 0, 0)  -- final return
	-- luaM_reallocvector deleted for f->code, f->lineinfo, f->k, f->p,
	-- f->locvars, f->upvalues; not required for Lua table arrays
	f.sizecode = fs.pc
	f.sizelineinfo = fs.pc
	f.sizek = fs.nk
	f.sizep = fs.np
	f.sizelocvars = fs.nlocvars
	f.sizeupvalues = f.nups
	--lua_assert(luaG_checkcode(f))  -- currently not implemented
	lua_assert(fs.bl == nil)
	ls.fs = fs.prev
	-- the following is not required for this implementation; kept here
	-- for completeness
	-- L->top -= 2;  /* remove table and prototype from the stack */
	-- last token read was anchored in defunct function; must reanchor it
	if fs then self:anchor_token(ls) end
end

------------------------------------------------------------------------
-- parser initialization function
-- * note additional sub-tables needed for LexState, FuncState
------------------------------------------------------------------------
function luaY:parser(L, z, buff, name)
	local lexstate = {}  -- LexState
	lexstate.t = {}
	lexstate.lookahead = {}
	local funcstate = {}  -- FuncState
	funcstate.upvalues = {}
	funcstate.actvar = {}
	-- the following nCcalls initialization added for convenience
	L.nCcalls = 0
	lexstate.buff = buff
	luaX:setinput(L, lexstate, z, name)
	self:open_func(lexstate, funcstate)
	funcstate.f.is_vararg = self.VARARG_ISVARARG  -- main func. is always vararg
	luaX:next(lexstate)  -- read first token
	self:chunk(lexstate)
	self:check(lexstate, "TK_EOS")
	self:close_func(lexstate)
	lua_assert(funcstate.prev == nil)
	lua_assert(funcstate.f.nups == 0)
	lua_assert(lexstate.fs == nil)
	return funcstate.f
end

--[[--------------------------------------------------------------------
-- GRAMMAR RULES
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a function name suffix, for function call specifications
-- * used in primaryexp(), funcname()
------------------------------------------------------------------------
function luaY:field(ls, v)
	-- field -> ['.' | ':'] NAME
	local fs = ls.fs
	local key = {}  -- expdesc
	luaK:exp2anyreg(fs, v)
	luaX:next(ls)  -- skip the dot or colon
	self:checkname(ls, key)
	luaK:indexed(fs, v, key)
end

------------------------------------------------------------------------
-- parse a table indexing suffix, for constructors, expressions
-- * used in recfield(), primaryexp()
------------------------------------------------------------------------
function luaY:yindex(ls, v)
	-- index -> '[' expr ']'
	luaX:next(ls)  -- skip the '['
	self:expr(ls, v)
	luaK:exp2val(ls.fs, v)
	self:checknext(ls, "]")
end

--[[--------------------------------------------------------------------
-- Rules for Constructors
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct ConsControl:
--   v  -- last list item read (table: struct expdesc)
--   t  -- table descriptor (table: struct expdesc)
--   nh  -- total number of 'record' elements
--   na  -- total number of array elements
--   tostore  -- number of array elements pending to be stored
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a table record (hash) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:recfield(ls, cc)
	-- recfield -> (NAME | '['exp1']') = exp1
	local fs = ls.fs
	local reg = ls.fs.freereg
	local key, val = {}, {}  -- expdesc
	if ls.t.token == "TK_NAME" then
		self:checklimit(fs, cc.nh, self.MAX_INT, "items in a constructor")
		self:checkname(ls, key)
	else  -- ls->t.token == '['
		self:yindex(ls, key)
	end
	cc.nh = cc.nh + 1
	self:checknext(ls, "=")
	local rkkey = luaK:exp2RK(fs, key)
	self:expr(ls, val)
	luaK:codeABC(fs, "OP_SETTABLE", cc.t.info, rkkey, luaK:exp2RK(fs, val))
	fs.freereg = reg  -- free registers
end

------------------------------------------------------------------------
-- emit a set list instruction if enough elements (LFIELDS_PER_FLUSH)
-- * used in constructor()
------------------------------------------------------------------------
function luaY:closelistfield(fs, cc)
	if cc.v.k == "VVOID" then return end  -- there is no list item
	luaK:exp2nextreg(fs, cc.v)
	cc.v.k = "VVOID"
	if cc.tostore == luaP.LFIELDS_PER_FLUSH then
		luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)  -- flush
		cc.tostore = 0  -- no more items pending
	end
end

------------------------------------------------------------------------
-- emit a set list instruction at the end of parsing list constructor
-- * used in constructor()
------------------------------------------------------------------------
function luaY:lastlistfield(fs, cc)
	if cc.tostore == 0 then return end
	if self:hasmultret(cc.v.k) then
		luaK:setmultret(fs, cc.v)
		luaK:setlist(fs, cc.t.info, cc.na, self.LUA_MULTRET)
		cc.na = cc.na - 1  -- do not count last expression (unknown number of elements)
	else
		if cc.v.k ~= "VVOID" then
			luaK:exp2nextreg(fs, cc.v)
		end
		luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)
	end
end

------------------------------------------------------------------------
-- parse a table list (array) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:listfield(ls, cc)
	self:expr(ls, cc.v)
	self:checklimit(ls.fs, cc.na, self.MAX_INT, "items in a constructor")
	cc.na = cc.na + 1
	cc.tostore = cc.tostore + 1
end

------------------------------------------------------------------------
-- parse a table constructor
-- * used in funcargs(), simpleexp()
------------------------------------------------------------------------
function luaY:constructor(ls, t)
	-- constructor -> '{' [ field { fieldsep field } [ fieldsep ] ] '}'
	-- field -> recfield | listfield
	-- fieldsep -> ',' | ';'
	local fs = ls.fs
	local line = ls.linenumber
	local pc = luaK:codeABC(fs, "OP_NEWTABLE", 0, 0, 0)
	local cc = {}  -- ConsControl
	cc.v = {}
	cc.na, cc.nh, cc.tostore = 0, 0, 0
	cc.t = t
	self:init_exp(t, "VRELOCABLE", pc)
	self:init_exp(cc.v, "VVOID", 0)  -- no value (yet)
	luaK:exp2nextreg(ls.fs, t)  -- fix it at stack top (for gc)
	self:checknext(ls, "{")
	repeat
		lua_assert(cc.v.k == "VVOID" or cc.tostore > 0)
		if ls.t.token == "}" then break end
		self:closelistfield(fs, cc)
		local c = ls.t.token

		if c == "TK_NAME" then  -- may be listfields or recfields
			luaX:lookahead(ls)
			if ls.lookahead.token ~= "=" then  -- expression?
				self:listfield(ls, cc)
			else
				self:recfield(ls, cc)
			end
		elseif c == "[" then  -- constructor_item -> recfield
			self:recfield(ls, cc)
		else  -- constructor_part -> listfield
			self:listfield(ls, cc)
		end
	until not self:testnext(ls, ",") and not self:testnext(ls, ";")
	self:check_match(ls, "}", "{", line)
	self:lastlistfield(fs, cc)
	luaP:SETARG_B(fs.f.code[pc], self:int2fb(cc.na)) -- set initial array size
	luaP:SETARG_C(fs.f.code[pc], self:int2fb(cc.nh)) -- set initial table size
end

-- }======================================================================

------------------------------------------------------------------------
-- parse the arguments (parameters) of a function declaration
-- * used in body()
------------------------------------------------------------------------
function luaY:parlist(ls)
	-- parlist -> [ param { ',' param } ]
	local fs = ls.fs
	local f = fs.f
	local nparams = 0
	f.is_vararg = 0
	if ls.t.token ~= ")" then  -- is 'parlist' not empty?
		repeat
			local c = ls.t.token
			if c == "TK_NAME" then  -- param -> NAME
				self:new_localvar(ls, self:str_checkname(ls), nparams)
				nparams = nparams + 1
			elseif c == "TK_DOTS" then  -- param -> `...'
				luaX:next(ls)
				-- [[
				-- #if defined(LUA_COMPAT_VARARG)
				-- use `arg' as default name
				self:new_localvarliteral(ls, "arg", nparams)
				nparams = nparams + 1
				f.is_vararg = self.VARARG_HASARG + self.VARARG_NEEDSARG
				-- #endif
				--]]
				f.is_vararg = f.is_vararg + self.VARARG_ISVARARG
			else
				luaX:syntaxerror(ls, "<name> or "..self:LUA_QL("...").." expected")
			end
		until f.is_vararg ~= 0 or not self:testnext(ls, ",")
	end--if
	self:adjustlocalvars(ls, nparams)
	-- NOTE: the following works only when HASARG_MASK is 2!
	f.numparams = fs.nactvar - (f.is_vararg % self.HASARG_MASK)
	luaK:reserveregs(fs, fs.nactvar)  -- reserve register for parameters
end

------------------------------------------------------------------------
-- parse function declaration body
-- * used in simpleexp(), localfunc(), funcstat()
------------------------------------------------------------------------
function luaY:body(ls, e, needself, line)
	-- body ->  '(' parlist ')' chunk END
	local new_fs = {}  -- FuncState
	new_fs.upvalues = {}
	new_fs.actvar = {}
	self:open_func(ls, new_fs)
	new_fs.f.lineDefined = line
	self:checknext(ls, "(")
	if needself then
		self:new_localvarliteral(ls, "self", 0)
		self:adjustlocalvars(ls, 1)
	end
	self:parlist(ls)
	self:checknext(ls, ")")
	self:chunk(ls)
	new_fs.f.lastlinedefined = ls.linenumber
	self:check_match(ls, "TK_END", "TK_FUNCTION", line)
	self:close_func(ls)
	self:pushclosure(ls, new_fs, e)
end

------------------------------------------------------------------------
-- parse a list of comma-separated expressions
-- * used is multiple locations
------------------------------------------------------------------------
function luaY:explist1(ls, v)
	-- explist1 -> expr { ',' expr }
	local n = 1  -- at least one expression
	self:expr(ls, v)
	while self:testnext(ls, ",") do
		luaK:exp2nextreg(ls.fs, v)
		self:expr(ls, v)
		n = n + 1
	end
	return n
end

------------------------------------------------------------------------
-- parse the parameters of a function call
-- * contrast with parlist(), used in function declarations
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:funcargs(ls, f)
	local fs = ls.fs
	local args = {}  -- expdesc
	local nparams
	local line = ls.linenumber
	local c = ls.t.token
	if c == "(" then  -- funcargs -> '(' [ explist1 ] ')'
		if line ~= ls.lastline then
			luaX:syntaxerror(ls, "ambiguous syntax (function call x new statement)")
		end
		luaX:next(ls)
		if ls.t.token == ")" then  -- arg list is empty?
			args.k = "VVOID"
		else
			self:explist1(ls, args)
			luaK:setmultret(fs, args)
		end
		self:check_match(ls, ")", "(", line)
	elseif c == "{" then  -- funcargs -> constructor
		self:constructor(ls, args)
	elseif c == "TK_STRING" then  -- funcargs -> STRING
		self:codestring(ls, args, ls.t.seminfo)
		luaX:next(ls)  -- must use 'seminfo' before 'next'
	else
		luaX:syntaxerror(ls, "function arguments expected")
		return
	end
	lua_assert(f.k == "VNONRELOC")
	local base = f.info  -- base register for call
	if self:hasmultret(args.k) then
		nparams = self.LUA_MULTRET  -- open call
	else
		if args.k ~= "VVOID" then
			luaK:exp2nextreg(fs, args)  -- close last argument
		end
		nparams = fs.freereg - (base + 1)
	end
	self:init_exp(f, "VCALL", luaK:codeABC(fs, "OP_CALL", base, nparams + 1, 2))
	luaK:fixline(fs, line)
	fs.freereg = base + 1  -- call remove function and arguments and leaves
	-- (unless changed) one result
end

--[[--------------------------------------------------------------------
-- Expression parsing
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parses an expression in parentheses or a single variable
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:prefixexp(ls, v)
	-- prefixexp -> NAME | '(' expr ')'
	local c = ls.t.token
	if c == "(" then
		local line = ls.linenumber
		luaX:next(ls)
		self:expr(ls, v)
		self:check_match(ls, ")", "(", line)
		luaK:dischargevars(ls.fs, v)
	elseif c == "TK_NAME" then
		self:singlevar(ls, v)
	else
		luaX:syntaxerror(ls, "unexpected symbol")
	end--if c
	return
end

------------------------------------------------------------------------
-- parses a prefixexp (an expression in parentheses or a single variable)
-- or a function call specification
-- * used in simpleexp(), assignment(), exprstat()
------------------------------------------------------------------------
function luaY:primaryexp(ls, v)
	-- primaryexp ->
	--    prefixexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs }
	local fs = ls.fs
	self:prefixexp(ls, v)
	while true do
		local c = ls.t.token
		if c == "." then  -- field
			self:field(ls, v)
		elseif c == "[" then  -- '[' exp1 ']'
			local key = {}  -- expdesc
			luaK:exp2anyreg(fs, v)
			self:yindex(ls, key)
			luaK:indexed(fs, v, key)
		elseif c == ":" then  -- ':' NAME funcargs
			local key = {}  -- expdesc
			luaX:next(ls)
			self:checkname(ls, key)
			luaK:_self(fs, v, key)
			self:funcargs(ls, v)
		elseif c == "(" or c == "TK_STRING" or c == "{" then  -- funcargs
			luaK:exp2nextreg(fs, v)
			self:funcargs(ls, v)
		else
			return
		end--if c
	end--while
end

------------------------------------------------------------------------
-- parses general expression types, constants handled here
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:simpleexp(ls, v)
	-- simpleexp -> NUMBER | STRING | NIL | TRUE | FALSE | ... |
	--              constructor | FUNCTION body | primaryexp
	local c = ls.t.token
	if c == "TK_NUMBER" then
		self:init_exp(v, "VKNUM", 0)
		v.nval = ls.t.seminfo
	elseif c == "TK_STRING" then
		self:codestring(ls, v, ls.t.seminfo)
	elseif c == "TK_NIL" then
		self:init_exp(v, "VNIL", 0)
	elseif c == "TK_TRUE" then
		self:init_exp(v, "VTRUE", 0)
	elseif c == "TK_FALSE" then
		self:init_exp(v, "VFALSE", 0)
	elseif c == "TK_DOTS" then  -- vararg
		local fs = ls.fs
		self:check_condition(ls, fs.f.is_vararg ~= 0,
			"cannot use "..self:LUA_QL("...").." outside a vararg function");
		-- NOTE: the following substitutes for a bitop, but is value-specific
		local is_vararg = fs.f.is_vararg
		if is_vararg >= self.VARARG_NEEDSARG then
			fs.f.is_vararg = is_vararg - self.VARARG_NEEDSARG  -- don't need 'arg'
		end
		self:init_exp(v, "VVARARG", luaK:codeABC(fs, "OP_VARARG", 0, 1, 0))
	elseif c == "{" then  -- constructor
		self:constructor(ls, v)
		return
	elseif c == "TK_FUNCTION" then
		luaX:next(ls)
		self:body(ls, v, false, ls.linenumber)
		return
	else
		self:primaryexp(ls, v)
		return
	end--if c
	luaX:next(ls)
end

------------------------------------------------------------------------
-- Translates unary operators tokens if found, otherwise returns
-- OPR_NOUNOPR. getunopr() and getbinopr() are used in subexpr().
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:getunopr(op)
	if op == "TK_NOT" then
		return "OPR_NOT"
	elseif op == "-" then
		return "OPR_MINUS"
	elseif op == "#" then
		return "OPR_LEN"
	else
		return "OPR_NOUNOPR"
	end
end

------------------------------------------------------------------------
-- Translates binary operator tokens if found, otherwise returns
-- OPR_NOBINOPR. Code generation uses OPR_* style tokens.
-- * used in subexpr()
------------------------------------------------------------------------
luaY.getbinopr_table = {
	["+"] = "OPR_ADD",
	["-"] = "OPR_SUB",
	["*"] = "OPR_MUL",
	["/"] = "OPR_DIV",
	["%"] = "OPR_MOD",
	["^"] = "OPR_POW",
	["TK_CONCAT"] = "OPR_CONCAT",
	["TK_NE"] = "OPR_NE",
	["TK_EQ"] = "OPR_EQ",
	["<"] = "OPR_LT",
	["TK_LE"] = "OPR_LE",
	[">"] = "OPR_GT",
	["TK_GE"] = "OPR_GE",
	["TK_AND"] = "OPR_AND",
	["TK_OR"] = "OPR_OR",
}
function luaY:getbinopr(op)
	local opr = self.getbinopr_table[op]
	if opr then return opr else return "OPR_NOBINOPR" end
end

------------------------------------------------------------------------
-- the following priority table consists of pairs of left/right values
-- for binary operators (was a static const struct); grep for ORDER OPR
-- * the following struct is replaced:
--   static const struct {
--     lu_byte left;  /* left priority for each binary operator */
--     lu_byte right; /* right priority */
--   } priority[] = {  /* ORDER OPR */
------------------------------------------------------------------------
luaY.priority = {
	{6, 6}, {6, 6}, {7, 7}, {7, 7}, {7, 7}, -- `+' `-' `/' `%'
	{10, 9}, {5, 4},                 -- power and concat (right associative)
	{3, 3}, {3, 3},                  -- equality
	{3, 3}, {3, 3}, {3, 3}, {3, 3},  -- order
	{2, 2}, {1, 1}                   -- logical (and/or)
}

luaY.UNARY_PRIORITY = 8  -- priority for unary operators

------------------------------------------------------------------------
-- Parse subexpressions. Includes handling of unary operators and binary
-- operators. A subexpr is given the rhs priority level of the operator
-- immediately left of it, if any (limit is -1 if none,) and if a binop
-- is found, limit is compared with the lhs priority level of the binop
-- in order to determine which executes first.
------------------------------------------------------------------------

------------------------------------------------------------------------
-- subexpr -> (simpleexp | unop subexpr) { binop subexpr }
-- where 'binop' is any binary operator with a priority higher than 'limit'
-- * for priority lookups with self.priority[], 1=left and 2=right
-- * recursively called
-- * used in expr()
------------------------------------------------------------------------
function luaY:subexpr(ls, v, limit)
	self:enterlevel(ls)
	local uop = self:getunopr(ls.t.token)
	if uop ~= "OPR_NOUNOPR" then
		luaX:next(ls)
		self:subexpr(ls, v, self.UNARY_PRIORITY)
		luaK:prefix(ls.fs, uop, v)
	else
		self:simpleexp(ls, v)
	end
	-- expand while operators have priorities higher than 'limit'
	local op = self:getbinopr(ls.t.token)
	while op ~= "OPR_NOBINOPR" and self.priority[luaK.BinOpr[op] + 1][1] > limit do
		local v2 = {}  -- expdesc
		luaX:next(ls)
		luaK:infix(ls.fs, op, v)
		-- read sub-expression with higher priority
		local nextop = self:subexpr(ls, v2, self.priority[luaK.BinOpr[op] + 1][2])
		luaK:posfix(ls.fs, op, v, v2)
		op = nextop
	end
	self:leavelevel(ls)
	return op  -- return first untreated operator
end

------------------------------------------------------------------------
-- Expression parsing starts here. Function subexpr is entered with the
-- left operator (which is non-existent) priority of -1, which is lower
-- than all actual operators. Expr information is returned in parm v.
-- * used in multiple locations
------------------------------------------------------------------------
function luaY:expr(ls, v)
	self:subexpr(ls, v, 0)
end

-- }====================================================================

--[[--------------------------------------------------------------------
-- Rules for Statements
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks next token, used as a look-ahead
-- * returns boolean instead of 0|1
-- * used in retstat(), chunk()
------------------------------------------------------------------------
function luaY:block_follow(token)
	if token == "TK_ELSE" or token == "TK_ELSEIF" or token == "TK_END"
		or token == "TK_UNTIL" or token == "TK_EOS" then
		return true
	else
		return false
	end
end

------------------------------------------------------------------------
-- parse a code block or unit
-- * used in multiple functions
------------------------------------------------------------------------
function luaY:block(ls)
	-- block -> chunk
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	self:enterblock(fs, bl, false)
	self:chunk(ls)
	lua_assert(bl.breaklist == luaK.NO_JUMP)
	self:leaveblock(fs)
end

------------------------------------------------------------------------
-- structure to chain all variables in the left-hand side of an
-- assignment
-- struct LHS_assign:
--   prev  -- (table: struct LHS_assign)
--   v  -- variable (global, local, upvalue, or indexed) (table: expdesc)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- check whether, in an assignment to a local variable, the local variable
-- is needed in a previous assignment (to a table). If so, save original
-- local value in a safe place and use this safe copy in the previous
-- assignment.
-- * used in assignment()
------------------------------------------------------------------------
function luaY:check_conflict(ls, lh, v)
	local fs = ls.fs
	local extra = fs.freereg  -- eventual position to save local variable
	local conflict = false
	while lh do
		if lh.v.k == "VINDEXED" then
			if lh.v.info == v.info then  -- conflict?
				conflict = true
				lh.v.info = extra  -- previous assignment will use safe copy
			end
			if lh.v.aux == v.info then  -- conflict?
				conflict = true
				lh.v.aux = extra  -- previous assignment will use safe copy
			end
		end
		lh = lh.prev
	end
	if conflict then
		luaK:codeABC(fs, "OP_MOVE", fs.freereg, v.info, 0)  -- make copy
		luaK:reserveregs(fs, 1)
	end
end

------------------------------------------------------------------------
-- parse a variable assignment sequence
-- * recursively called
-- * used in exprstat()
------------------------------------------------------------------------
function luaY:assignment(ls, lh, nvars)
	local e = {}  -- expdesc
	-- test was: VLOCAL <= lh->v.k && lh->v.k <= VINDEXED
	local c = lh.v.k
	self:check_condition(ls, c == "VLOCAL" or c == "VUPVAL" or c == "VGLOBAL"
		or c == "VINDEXED", "syntax error")
	if self:testnext(ls, ",") then  -- assignment -> ',' primaryexp assignment
		local nv = {}  -- LHS_assign
		nv.v = {}
		nv.prev = lh
		self:primaryexp(ls, nv.v)
		if nv.v.k == "VLOCAL" then
			self:check_conflict(ls, lh, nv.v)
		end
		self:checklimit(ls.fs, nvars, self.LUAI_MAXCCALLS - ls.L.nCcalls,
			"variables in assignment")
		self:assignment(ls, nv, nvars + 1)
	else  -- assignment -> '=' explist1
		self:checknext(ls, "=")
		local nexps = self:explist1(ls, e)
		if nexps ~= nvars then
			self:adjust_assign(ls, nvars, nexps, e)
			if nexps > nvars then
				ls.fs.freereg = ls.fs.freereg - (nexps - nvars)  -- remove extra values
			end
		else
			luaK:setoneret(ls.fs, e)  -- close last expression
			luaK:storevar(ls.fs, lh.v, e)
			return  -- avoid default
		end
	end
	self:init_exp(e, "VNONRELOC", ls.fs.freereg - 1)  -- default assignment
	luaK:storevar(ls.fs, lh.v, e)
end

------------------------------------------------------------------------
-- parse condition in a repeat statement or an if control structure
-- * used in repeatstat(), test_then_block()
------------------------------------------------------------------------
function luaY:cond(ls)
	-- cond -> exp
	local v = {}  -- expdesc
	self:expr(ls, v)  -- read condition
	if v.k == "VNIL" then v.k = "VFALSE" end  -- 'falses' are all equal here
	luaK:goiftrue(ls.fs, v)
	return v.f
end

------------------------------------------------------------------------
-- parse a break statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:breakstat(ls)
	-- stat -> BREAK
	local fs = ls.fs
	local bl = fs.bl
	local upval = false
	while bl and not bl.isbreakable do
		if bl.upval then upval = true end
		bl = bl.previous
	end
	if not bl then
		luaX:syntaxerror(ls, "no loop to break")
	end
	if upval then
		luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
	end
	bl.breaklist = luaK:concat(fs, bl.breaklist, luaK:jump(fs))
end

------------------------------------------------------------------------
-- parse a while-do control structure, body processed by block()
-- * with dynamic array sizes, MAXEXPWHILE + EXTRAEXP limits imposed by
--   the function's implementation can be removed
-- * used in statements()
------------------------------------------------------------------------
function luaY:whilestat(ls, line)
	-- whilestat -> WHILE cond DO block END
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	luaX:next(ls)  -- skip WHILE
	local whileinit = luaK:getlabel(fs)
	local condexit = self:cond(ls)
	self:enterblock(fs, bl, true)
	self:checknext(ls, "TK_DO")
	self:block(ls)
	luaK:patchlist(fs, luaK:jump(fs), whileinit)
	self:check_match(ls, "TK_END", "TK_WHILE", line)
	self:leaveblock(fs)
	luaK:patchtohere(fs, condexit)  -- false conditions finish the loop
end

------------------------------------------------------------------------
-- parse a repeat-until control structure, body parsed by chunk()
-- * used in statements()
------------------------------------------------------------------------
function luaY:repeatstat(ls, line)
	-- repeatstat -> REPEAT block UNTIL cond
	local fs = ls.fs
	local repeat_init = luaK:getlabel(fs)
	local bl1, bl2 = {}, {}  -- BlockCnt
	self:enterblock(fs, bl1, true)  -- loop block
	self:enterblock(fs, bl2, false)  -- scope block
	luaX:next(ls)  -- skip REPEAT
	self:chunk(ls)
	self:check_match(ls, "TK_UNTIL", "TK_REPEAT", line)
	local condexit = self:cond(ls)  -- read condition (inside scope block)
	if not bl2.upval then  -- no upvalues?
		self:leaveblock(fs)  -- finish scope
		luaK:patchlist(ls.fs, condexit, repeat_init)  -- close the loop
	else  -- complete semantics when there are upvalues
		self:breakstat(ls)  -- if condition then break
		luaK:patchtohere(ls.fs, condexit)  -- else...
		self:leaveblock(fs)  -- finish scope...
		luaK:patchlist(ls.fs, luaK:jump(fs), repeat_init)  -- and repeat
	end
	self:leaveblock(fs)  -- finish loop
end

------------------------------------------------------------------------
-- parse the single expressions needed in numerical for loops
-- * used in fornum()
------------------------------------------------------------------------
function luaY:exp1(ls)
	local e = {}  -- expdesc
	self:expr(ls, e)
	local k = e.k
	luaK:exp2nextreg(ls.fs, e)
	return k
end

------------------------------------------------------------------------
-- parse a for loop body for both versions of the for loop
-- * used in fornum(), forlist()
------------------------------------------------------------------------
function luaY:forbody(ls, base, line, nvars, isnum)
	-- forbody -> DO block
	local bl = {}  -- BlockCnt
	local fs = ls.fs
	self:adjustlocalvars(ls, 3)  -- control variables
	self:checknext(ls, "TK_DO")
	local prep = isnum and luaK:codeAsBx(fs, "OP_FORPREP", base, luaK.NO_JUMP)
		or luaK:jump(fs)
	self:enterblock(fs, bl, false)  -- scope for declared variables
	self:adjustlocalvars(ls, nvars)
	luaK:reserveregs(fs, nvars)
	self:block(ls)
	self:leaveblock(fs)  -- end of scope for declared variables
	luaK:patchtohere(fs, prep)
	local endfor = isnum and luaK:codeAsBx(fs, "OP_FORLOOP", base, luaK.NO_JUMP)
		or luaK:codeABC(fs, "OP_TFORLOOP", base, 0, nvars)
	luaK:fixline(fs, line)  -- pretend that `OP_FOR' starts the loop
	luaK:patchlist(fs, isnum and endfor or luaK:jump(fs), prep + 1)
end

------------------------------------------------------------------------
-- parse a numerical for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:fornum(ls, varname, line)
	-- fornum -> NAME = exp1,exp1[,exp1] forbody
	local fs = ls.fs
	local base = fs.freereg
	self:new_localvarliteral(ls, "(for index)", 0)
	self:new_localvarliteral(ls, "(for limit)", 1)
	self:new_localvarliteral(ls, "(for step)", 2)
	self:new_localvar(ls, varname, 3)
	self:checknext(ls, '=')
	self:exp1(ls)  -- initial value
	self:checknext(ls, ",")
	self:exp1(ls)  -- limit
	if self:testnext(ls, ",") then
		self:exp1(ls)  -- optional step
	else  -- default step = 1
		luaK:codeABx(fs, "OP_LOADK", fs.freereg, luaK:numberK(fs, 1))
		luaK:reserveregs(fs, 1)
	end
	self:forbody(ls, base, line, 1, true)
end

------------------------------------------------------------------------
-- parse a generic for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:forlist(ls, indexname)
	-- forlist -> NAME {,NAME} IN explist1 forbody
	local fs = ls.fs
	local e = {}  -- expdesc
	local nvars = 0
	local base = fs.freereg
	-- create control variables
	self:new_localvarliteral(ls, "(for generator)", nvars)
	nvars = nvars + 1
	self:new_localvarliteral(ls, "(for state)", nvars)
	nvars = nvars + 1
	self:new_localvarliteral(ls, "(for control)", nvars)
	nvars = nvars + 1
	-- create declared variables
	self:new_localvar(ls, indexname, nvars)
	nvars = nvars + 1
	while self:testnext(ls, ",") do
		self:new_localvar(ls, self:str_checkname(ls), nvars)
		nvars = nvars + 1
	end
	self:checknext(ls, "TK_IN")
	local line = ls.linenumber
	self:adjust_assign(ls, 3, self:explist1(ls, e), e)
	luaK:checkstack(fs, 3)  -- extra space to call generator
	self:forbody(ls, base, line, nvars - 3, false)
end

------------------------------------------------------------------------
-- initial parsing for a for loop, calls fornum() or forlist()
-- * used in statements()
------------------------------------------------------------------------
function luaY:forstat(ls, line)
	-- forstat -> FOR (fornum | forlist) END
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	self:enterblock(fs, bl, true)  -- scope for loop and control variables
	luaX:next(ls)  -- skip `for'
	local varname = self:str_checkname(ls)  -- first variable name
	local c = ls.t.token
	if c == "=" then
		self:fornum(ls, varname, line)
	elseif c == "," or c == "TK_IN" then
		self:forlist(ls, varname)
	else
		luaX:syntaxerror(ls, self:LUA_QL("=").." or "..self:LUA_QL("in").." expected")
	end
	self:check_match(ls, "TK_END", "TK_FOR", line)
	self:leaveblock(fs)  -- loop scope (`break' jumps to this point)
end

------------------------------------------------------------------------
-- parse part of an if control structure, including the condition
-- * used in ifstat()
------------------------------------------------------------------------
function luaY:test_then_block(ls)
	-- test_then_block -> [IF | ELSEIF] cond THEN block
	luaX:next(ls)  -- skip IF or ELSEIF
	local condexit = self:cond(ls)
	self:checknext(ls, "TK_THEN")
	self:block(ls)  -- `then' part
	return condexit
end

------------------------------------------------------------------------
-- parse an if control structure
-- * used in statements()
------------------------------------------------------------------------
function luaY:ifstat(ls, line)
	-- ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END
	local fs = ls.fs
	local escapelist = luaK.NO_JUMP
	local flist = self:test_then_block(ls)  -- IF cond THEN block
	while ls.t.token == "TK_ELSEIF" do
		escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
		luaK:patchtohere(fs, flist)
		flist = self:test_then_block(ls)  -- ELSEIF cond THEN block
	end
	if ls.t.token == "TK_ELSE" then
		escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
		luaK:patchtohere(fs, flist)
		luaX:next(ls)  -- skip ELSE (after patch, for correct line info)
		self:block(ls)  -- 'else' part
	else
		escapelist = luaK:concat(fs, escapelist, flist)
	end
	luaK:patchtohere(fs, escapelist)
	self:check_match(ls, "TK_END", "TK_IF", line)
end

------------------------------------------------------------------------
-- parse a local function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localfunc(ls)
	local v, b = {}, {}  -- expdesc
	local fs = ls.fs
	self:new_localvar(ls, self:str_checkname(ls), 0)
	self:init_exp(v, "VLOCAL", fs.freereg)
	luaK:reserveregs(fs, 1)
	self:adjustlocalvars(ls, 1)
	self:body(ls, b, false, ls.linenumber)
	luaK:storevar(fs, v, b)
	-- debug information will only see the variable after this point!
	self:getlocvar(fs, fs.nactvar - 1).startpc = fs.pc
end

------------------------------------------------------------------------
-- parse a local variable declaration statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localstat(ls)
	-- stat -> LOCAL NAME {',' NAME} ['=' explist1]
	local nvars = 0
	local nexps
	local e = {}  -- expdesc
	repeat
		self:new_localvar(ls, self:str_checkname(ls), nvars)
		nvars = nvars + 1
	until not self:testnext(ls, ",")
	if self:testnext(ls, "=") then
		nexps = self:explist1(ls, e)
	else
		e.k = "VVOID"
		nexps = 0
	end
	self:adjust_assign(ls, nvars, nexps, e)
	self:adjustlocalvars(ls, nvars)
end

------------------------------------------------------------------------
-- parse a function name specification
-- * used in funcstat()
------------------------------------------------------------------------
function luaY:funcname(ls, v)
	-- funcname -> NAME {field} [':' NAME]
	local needself = false
	self:singlevar(ls, v)
	while ls.t.token == "." do
		self:field(ls, v)
	end
	if ls.t.token == ":" then
		needself = true
		self:field(ls, v)
	end
	return needself
end

------------------------------------------------------------------------
-- parse a function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:funcstat(ls, line)
	-- funcstat -> FUNCTION funcname body
	local v, b = {}, {}  -- expdesc
	luaX:next(ls)  -- skip FUNCTION
	local needself = self:funcname(ls, v)
	self:body(ls, b, needself, line)
	luaK:storevar(ls.fs, v, b)
	luaK:fixline(ls.fs, line)  -- definition 'happens' in the first line
end

------------------------------------------------------------------------
-- parse a function call with no returns or an assignment statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:exprstat(ls)
	-- stat -> func | assignment
	local fs = ls.fs
	local v = {}  -- LHS_assign
	v.v = {}
	self:primaryexp(ls, v.v)
	if v.v.k == "VCALL" then  -- stat -> func
		luaP:SETARG_C(luaK:getcode(fs, v.v), 1)  -- call statement uses no results
	else  -- stat -> assignment
		v.prev = nil
		self:assignment(ls, v, 1)
	end
end

------------------------------------------------------------------------
-- parse a return statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:retstat(ls)
	-- stat -> RETURN explist
	local fs = ls.fs
	local e = {}  -- expdesc
	local first, nret  -- registers with returned values
	luaX:next(ls)  -- skip RETURN
	if self:block_follow(ls.t.token) or ls.t.token == ";" then
		first, nret = 0, 0  -- return no values
	else
		nret = self:explist1(ls, e)  -- optional return values
		if self:hasmultret(e.k) then
			luaK:setmultret(fs, e)
			if e.k == "VCALL" and nret == 1 then  -- tail call?
				luaP:SET_OPCODE(luaK:getcode(fs, e), "OP_TAILCALL")
				lua_assert(luaP:GETARG_A(luaK:getcode(fs, e)) == fs.nactvar)
			end
			first = fs.nactvar
			nret = self.LUA_MULTRET  -- return all values
		else
			if nret == 1 then  -- only one single value?
				first = luaK:exp2anyreg(fs, e)
			else
				luaK:exp2nextreg(fs, e)  -- values must go to the 'stack'
				first = fs.nactvar  -- return all 'active' values
				lua_assert(nret == fs.freereg - first)
			end
		end--if
	end--if
	luaK:ret(fs, first, nret)
end

------------------------------------------------------------------------
-- initial parsing for statements, calls a lot of functions
-- * returns boolean instead of 0|1
-- * used in chunk()
------------------------------------------------------------------------
function luaY:statement(ls)
	local line = ls.linenumber  -- may be needed for error messages
	local c = ls.t.token
	if c == "TK_IF" then  -- stat -> ifstat
		self:ifstat(ls, line)
		return false
	elseif c == "TK_WHILE" then  -- stat -> whilestat
		self:whilestat(ls, line)
		return false
	elseif c == "TK_DO" then  -- stat -> DO block END
		luaX:next(ls)  -- skip DO
		self:block(ls)
		self:check_match(ls, "TK_END", "TK_DO", line)
		return false
	elseif c == "TK_FOR" then  -- stat -> forstat
		self:forstat(ls, line)
		return false
	elseif c == "TK_REPEAT" then  -- stat -> repeatstat
		self:repeatstat(ls, line)
		return false
	elseif c == "TK_FUNCTION" then  -- stat -> funcstat
		self:funcstat(ls, line)
		return false
	elseif c == "TK_LOCAL" then  -- stat -> localstat
		luaX:next(ls)  -- skip LOCAL
		if self:testnext(ls, "TK_FUNCTION") then  -- local function?
			self:localfunc(ls)
		else
			self:localstat(ls)
		end
		return false
	elseif c == "TK_RETURN" then  -- stat -> retstat
		self:retstat(ls)
		return true  -- must be last statement
	elseif c == "TK_BREAK" then  -- stat -> breakstat
		luaX:next(ls)  -- skip BREAK
		self:breakstat(ls)
		return true  -- must be last statement
	else
		self:exprstat(ls)
		return false  -- to avoid warnings
	end--if c
end

------------------------------------------------------------------------
-- parse a chunk, which consists of a bunch of statements
-- * used in parser(), body(), block(), repeatstat()
------------------------------------------------------------------------
function luaY:chunk(ls)
	-- chunk -> { stat [';'] }
	local islast = false
	self:enterlevel(ls)
	while not islast and not self:block_follow(ls.t.token) do
		islast = self:statement(ls)
		self:testnext(ls, ";")
		lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg and
			ls.fs.freereg >= ls.fs.nactvar)
		ls.fs.freereg = ls.fs.nactvar  -- free registers
	end
	self:leavelevel(ls)
end

-- }======================================================================





luaX:init()  -- required by llex
local LuaState = {}  -- dummy, not actually used, but retained since
-- the intention is to complete a straight port

------------------------------------------------------------------------
-- interfacing to yueliang
------------------------------------------------------------------------


return function (source, name)
	name = name or 'compiled-lua'
	-- luaZ:make_getF returns a file chunk reader
	-- luaZ:init returns a zio input stream
	local zio = luaZ:init(luaZ:make_getF(source), nil)
	if not zio then return end
	-- luaY:parser parses the input stream
	-- func is the function prototype in tabular form; in C, func can
	-- now be used directly by the VM, this can't be done in Lua

	local func = luaY:parser(LuaState, zio, nil, "@"..name)
	-- luaU:make_setS returns a string chunk writer
	local writer, buff = luaU:make_setS()
	-- luaU:dump builds a binary chunk
	luaU:dump(LuaState, func, writer, buff)
	-- a string.dump equivalent in returned

	return buff.data
end

end
}
--ScreenGui.stikinoutyoutgyatfortherizzlercursedgui.Synapse.Frame.cle.LocalScript
local function C_G2L_1067()
local script = G2L["1067"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.Parent.Source.Text = ""
end)
end
task.spawn(C_G2L_1067)



return G2L["0"], require;
