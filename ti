--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88 
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER FROM MorrisBr
]=]


-- Instances: 1 | Scripts: ?? | Modules: ??

local G2L = {}

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end


--[[
    Instances:
--]]

--MainModule
G2L["0"] = Instance.new("ModuleScript")



--[[
    Properties:
--]]
--MainModule
G2L["0"].Name = [[MainModule]]
G2L["0"].Parent = game.Players.LocalPlayer.PlayerGui

--[[
    Scripts
--]]
--MainModule
G2L_MODULES[G2L["0"]] = {
Closure = function()
local script = G2L["0"]
local a = {}

function a:squidward(A)
	return require(script:FindFirstChildWhichIsA("ModuleScript",true))(A)
end

return a
end
}

return G2L["0"], require;
