--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88 
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER FROM MorrisBr
]=]


-- Instances: 531 | Scripts: ?? | Modules: ??

local G2L = {}

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end


--[[
    Instances:
--]]

--ScreenGui
G2L["0"] = Instance.new("ScreenGui")

--ScreenGui.lol
G2L["1"] = Instance.new("BindableEvent")

--ScreenGui.Main
G2L["2"] = Instance.new("ImageLabel")

--ScreenGui.Main.Ring
G2L["3"] = Instance.new("ImageLabel")

--ScreenGui.Main.Main2
G2L["4"] = Instance.new("ImageLabel")

--ScreenGui.Main.Orbit
G2L["5"] = Instance.new("ImageLabel")

--ScreenGui.Orbi
G2L["6"] = Instance.new("LocalScript")

--ScreenGui.Frame
G2L["7"] = Instance.new("Frame")

--ScreenGui.Frame.nada
G2L["8"] = Instance.new("Frame")

--ScreenGui.Frame.nada.Csutom
G2L["9"] = Instance.new("TextButton")

--ScreenGui.Frame.nada.Csutom.Script
G2L["10"] = Instance.new("Script")

--ScreenGui.Frame.menu
G2L["11"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc
G2L["12"] = Instance.new("ScrollingFrame")

--ScreenGui.Frame.menu.sc.TextLabel
G2L["13"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel
G2L["14"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel.ImageLabel
G2L["15"] = Instance.new("ImageLabel")

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel.ImageLabel
G2L["16"] = Instance.new("ImageLabel")

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel.Rainbow Text
G2L["17"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Stiv
G2L["18"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Stiv.LocalScript
G2L["19"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Stiv.LocalScript.ServerEvent
G2L["20"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Stiv.LocalScript.ServerEvent.Script
G2L["21"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.ere seis
G2L["22"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.ere seis.LocalScript
G2L["23"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.ere seis.LocalScript.ServerEvent
G2L["24"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.ere seis.LocalScript.ServerEvent.Script
G2L["25"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.iy
G2L["26"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.iy.Script
G2L["27"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.iy.LocalScript
G2L["28"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.iy.RemoteEvent
G2L["29"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.x1
G2L["30"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.x1.LocalScript
G2L["31"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.x1.LocalScript.ServerEvent
G2L["32"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.x1.LocalScript.ServerEvent.Script
G2L["33"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab
G2L["34"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["35"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent
G2L["36"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent.Script
G2L["37"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.guns
G2L["38"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.guns.LocalScript
G2L["39"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent
G2L["40"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent.Script
G2L["41"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.guner
G2L["42"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["43"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["44"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["45"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.logos
G2L["46"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.logos.LocalScript
G2L["47"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.logos.LocalScript.ServerEvent
G2L["48"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.logos.LocalScript.ServerEvent.Script
G2L["49"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab
G2L["50"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["51"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent
G2L["52"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent.Script
G2L["53"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Mr bean
G2L["54"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["55"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent
G2L["56"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent.Script
G2L["57"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Mr bean
G2L["58"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["59"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent
G2L["60"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent.Script
G2L["61"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab
G2L["62"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script
G2L["63"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule
G2L["64"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script
G2L["65"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser
G2L["66"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser.FiOne
G2L["67"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser.Yueliang
G2L["68"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Player
G2L["69"] = Instance.new("ObjectValue")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Blind
G2L["70"] = Instance.new("ScreenGui")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Blind.Frame
G2L["71"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud
G2L["72"] = Instance.new("ScreenGui")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite3
G2L["73"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite3.Label
G2L["74"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite3.UIGradient
G2L["75"] = Instance.new("UIGradient")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite4
G2L["76"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite4.Label
G2L["77"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite4.UIGradient
G2L["78"] = Instance.new("UIGradient")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite2
G2L["79"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite2.Label
G2L["80"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite2.UIGradient
G2L["81"] = Instance.new("UIGradient")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite1
G2L["82"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite1.Label
G2L["83"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite1.UIGradient
G2L["84"] = Instance.new("UIGradient")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final
G2L["85"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.UIGradient
G2L["86"] = Instance.new("UIGradient")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Label
G2L["87"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Label.TKLabel
G2L["88"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Label.TKLabel.Label
G2L["89"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar
G2L["90"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar.Controllers
G2L["91"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar.Controllers.Exit
G2L["92"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar.Controllers.Hide
G2L["93"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Dragify
G2L["94"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Frame
G2L["95"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Frame.Label
G2L["96"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main
G2L["97"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder
G2L["98"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Template
G2L["99"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Template.Container
G2L["100"] = Instance.new("ScrollingFrame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home
G2L["101"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home.Container
G2L["102"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home.Message
G2L["103"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home.NameTitle
G2L["104"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor
G2L["105"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container
G2L["106"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor
G2L["107"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame
G2L["108"] = Instance.new("ScrollingFrame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox
G2L["109"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Tokens_
G2L["110"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Strings_
G2L["111"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.RemoteHighlight_
G2L["112"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Numbers_
G2L["113"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Comments_
G2L["114"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Globals_
G2L["115"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Keywords_
G2L["116"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.Editor
G2L["117"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.Lines
G2L["118"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Navigation
G2L["119"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Command
G2L["120"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse
G2L["121"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader
G2L["122"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse
G2L["123"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse
G2L["124"] = Instance.new("ScreenGui")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetOrigin
G2L["125"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetTarget
G2L["126"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetX
G2L["127"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetY
G2L["128"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.LocalCore
G2L["129"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B1D
G2L["130"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B1U
G2L["131"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B2D
G2L["132"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B2U
G2L["133"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.KD
G2L["134"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.KU
G2L["135"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.RStepped
G2L["136"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetHit
G2L["137"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.Move
G2L["138"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ReadText
G2L["139"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetCameraCFrame
G2L["140"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ConnectFocusLost
G2L["141"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ConnectInputRead
G2L["142"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.CaptureFocus
G2L["143"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.SetText
G2L["144"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.SetCameraCFrame
G2L["145"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetTargetSurface
G2L["146"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.FOV
G2L["147"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.CaptureFocus
G2L["148"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ConnectInputBegan
G2L["149"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client
G2L["150"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader
G2L["151"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client
G2L["152"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client
G2L["153"] = Instance.new("ScreenGui")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.LocalCore
G2L["154"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.Execute
G2L["155"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker
G2L["156"] = Instance.new("ScreenGui")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker
G2L["157"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content
G2L["158"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorStrip
G2L["159"] = Instance.new("ImageLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Preview
G2L["160"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame
G2L["161"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace
G2L["162"] = Instance.new("ImageLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace.Scope
G2L["163"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace.Scope.Line
G2L["164"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace.Scope.Line
G2L["165"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame
G2L["166"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow
G2L["167"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["168"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["169"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["170"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["171"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["172"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue
G2L["173"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input
G2L["174"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame
G2L["175"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up
G2L["176"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow
G2L["177"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow.Frame
G2L["178"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow.Frame
G2L["179"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow.Frame
G2L["180"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down
G2L["181"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow
G2L["182"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow.Frame
G2L["183"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow.Frame
G2L["184"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow.Frame
G2L["185"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Title
G2L["186"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat
G2L["187"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input
G2L["188"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame
G2L["189"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up
G2L["190"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow
G2L["191"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow.Frame
G2L["192"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow.Frame
G2L["193"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow.Frame
G2L["194"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down
G2L["195"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow
G2L["196"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow.Frame
G2L["197"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow.Frame
G2L["198"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow.Frame
G2L["199"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Title
G2L["200"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val
G2L["201"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input
G2L["202"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame
G2L["203"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up
G2L["204"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow
G2L["205"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow.Frame
G2L["206"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow.Frame
G2L["207"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow.Frame
G2L["208"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down
G2L["209"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow
G2L["210"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow.Frame
G2L["211"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow.Frame
G2L["212"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow.Frame
G2L["213"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Title
G2L["214"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green
G2L["215"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input
G2L["216"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame
G2L["217"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up
G2L["218"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow
G2L["219"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow.Frame
G2L["220"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow.Frame
G2L["221"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow.Frame
G2L["222"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down
G2L["223"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow
G2L["224"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow.Frame
G2L["225"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow.Frame
G2L["226"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow.Frame
G2L["227"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Title
G2L["228"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red
G2L["229"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input
G2L["230"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame
G2L["231"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up
G2L["232"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow
G2L["233"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow.Frame
G2L["234"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow.Frame
G2L["235"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow.Frame
G2L["236"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down
G2L["237"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow
G2L["238"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow.Frame
G2L["239"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow.Frame
G2L["240"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow.Frame
G2L["241"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Title
G2L["242"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue
G2L["243"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input
G2L["244"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame
G2L["245"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up
G2L["246"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow
G2L["247"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow.Frame
G2L["248"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow.Frame
G2L["249"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow.Frame
G2L["250"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down
G2L["251"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow
G2L["252"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow.Frame
G2L["253"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow.Frame
G2L["254"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow.Frame
G2L["255"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Title
G2L["256"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Ok
G2L["257"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Cancel
G2L["258"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.TopBar
G2L["259"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.TopBar.WindowTitle
G2L["260"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.TopBar.Close
G2L["261"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.Main
G2L["262"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu
G2L["263"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu
G2L["264"] = Instance.new("BillboardGui")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu.Frame
G2L["265"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu.Frame.TemplateBtn
G2L["266"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu.Frame.UIListLayout
G2L["267"] = Instance.new("UIListLayout")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Scripts
G2L["268"] = Instance.new("Folder")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Executor
G2L["269"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Runner
G2L["270"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Follow
G2L["271"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover
G2L["272"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript
G2L["273"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain
G2L["274"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChannelsBar
G2L["275"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatBar
G2L["276"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatChannel
G2L["277"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageLogDisplay
G2L["278"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatWindow
G2L["279"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageLabelCreator
G2L["280"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.CommandProcessor
G2L["281"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChannelsTab
G2L["282"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ObjectPool
G2L["283"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageSender
G2L["284"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.CurveUtil
G2L["285"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.Remote
G2L["286"] = Instance.new("ObjectValue")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Anonymify
G2L["287"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Wall
G2L["288"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Commands
G2L["289"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Gear
G2L["290"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Bleach
G2L["291"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["292"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.RemoteEvent
G2L["293"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.top
G2L["294"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.top.LocalScript
G2L["295"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.top.LocalScript.ServerEvent
G2L["296"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.top.LocalScript.ServerEvent.Script
G2L["297"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.top
G2L["298"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.top.Script
G2L["299"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse
G2L["300"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse.Client
G2L["301"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse.GetPlr
G2L["302"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse.GetPlrE
G2L["303"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.Csutom
G2L["304"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["305"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["306"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["307"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Xester
G2L["308"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Xester.LocalScript
G2L["309"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Xester.LocalScript.ServerEvent
G2L["310"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Xester.LocalScript.ServerEvent.Script
G2L["311"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.suis
G2L["312"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.suis.LocalScript
G2L["313"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.suis.LocalScript.ServerEvent
G2L["314"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.suis.LocalScript.ServerEvent.Script
G2L["315"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.chicos
G2L["316"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.chicos.LocalScript
G2L["317"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.chicos.LocalScript.ServerEvent
G2L["318"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.chicos.LocalScript.ServerEvent.Script
G2L["319"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.c4
G2L["320"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.c4.LocalScript
G2L["321"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.c4.LocalScript.ServerEvent
G2L["322"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.c4.LocalScript.ServerEvent.Script
G2L["323"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.low taper fade
G2L["324"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.low taper fade.LocalScript
G2L["325"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.low taper fade.LocalScript.ServerEvent
G2L["326"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.low taper fade.LocalScript.ServerEvent.Script
G2L["327"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.doggo
G2L["328"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.doggo.LocalScript
G2L["329"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.doggo.LocalScript.ServerEvent
G2L["330"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.doggo.LocalScript.ServerEvent.Script
G2L["331"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.soldier
G2L["332"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.soldier.LocalScript
G2L["333"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.soldier.LocalScript.ServerEvent
G2L["334"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.soldier.LocalScript.ServerEvent.Script
G2L["335"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.chicos
G2L["336"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.chicos.Script
G2L["337"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse
G2L["338"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.Client
G2L["339"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlr
G2L["340"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlrE
G2L["341"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.chicos
G2L["342"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.chicos.Script
G2L["343"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse
G2L["344"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.Client
G2L["345"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlr
G2L["346"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlrE
G2L["347"] = Instance.new("RemoteFunction")

--ScreenGui.Frame.menu.sc.CodeScroll
G2L["348"] = Instance.new("ScrollingFrame")

--ScreenGui.Frame.menu.sc.CodeScroll.Code
G2L["349"] = Instance.new("TextBox")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Tokens_
G2L["350"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Strings_
G2L["351"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.SSwords_
G2L["352"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.RemoteHighlight_
G2L["353"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Numbers_
G2L["354"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Keywords_
G2L["355"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Globals_
G2L["356"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Custom_
G2L["357"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Comments_
G2L["358"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.Lines
G2L["359"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.CodeScroll.LLine
G2L["360"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.CodeScroll.UIStroke
G2L["361"] = Instance.new("UIStroke")

--ScreenGui.Frame.menu.sc.TextLabel
G2L["362"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.exe
G2L["363"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.exe.Server Event
G2L["364"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring
G2L["365"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.Rerubi
G2L["366"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaP
G2L["367"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaU
G2L["368"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaK
G2L["369"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaY
G2L["370"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaX
G2L["371"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaZ
G2L["372"] = Instance.new("ModuleScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.LocalScript
G2L["373"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.exe.Server Event.LocalScript.RemoteEvent
G2L["374"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.exe.Server Event.LocalScript.RemoteEvent.Script
G2L["375"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.exe.VK
G2L["376"] = Instance.new("StringValue")

--ScreenGui.Frame.menu.sc.hte
G2L["377"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.hte.UICorner
G2L["378"] = Instance.new("UICorner")

--ScreenGui.Frame.menu.sc.hte.shadowHolder
G2L["379"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.hte.LocalScript
G2L["380"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.service
G2L["381"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.service.LocalScript
G2L["382"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.service.LocalScript.ServerEvent
G2L["383"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.service.LocalScript.ServerEvent.Script
G2L["384"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.guns
G2L["385"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.guns.LocalScript
G2L["386"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent
G2L["387"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent.Script
G2L["388"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.grab
G2L["389"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["390"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent
G2L["391"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent.Script
G2L["392"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.guner
G2L["393"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["394"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["395"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["396"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.guner
G2L["397"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["398"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["399"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["400"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.guner
G2L["401"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["402"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["403"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["404"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.uj
G2L["405"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.uj.LocalScript
G2L["406"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.uj.LocalScript.ServerEvent
G2L["407"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.uj.LocalScript.ServerEvent.Script
G2L["408"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.unico
G2L["409"] = Instance.new("ImageLabel")

--ScreenGui.Frame.menu.sc.Csutom
G2L["410"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["411"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Mr bean
G2L["412"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Mr bean.Script
G2L["413"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["414"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Mr bean.RemoteEvent
G2L["415"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Mr bean
G2L["416"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Mr bean.Script
G2L["417"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["418"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Mr bean.RemoteEvent
G2L["419"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Mr bean
G2L["420"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Mr bean.Script
G2L["421"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["422"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Mr bean.RemoteEvent
G2L["423"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Csutom
G2L["424"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["425"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["426"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["427"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Csutom
G2L["428"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["429"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["430"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["431"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.abds
G2L["432"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.abds.Script
G2L["433"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.abds.LocalScript
G2L["434"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.abds.RemoteEvent
G2L["435"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Csutom
G2L["436"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["437"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["438"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["439"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Csutom
G2L["440"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["441"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["442"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["443"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.laser
G2L["444"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.laser.Script
G2L["445"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["446"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["447"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.laser
G2L["448"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.laser.Script
G2L["449"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["450"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["451"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.laser
G2L["452"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.laser.Script
G2L["453"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["454"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["455"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.suki
G2L["456"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.suki.LocalScript
G2L["457"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.suki
G2L["458"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.suki.Script
G2L["459"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.suki
G2L["460"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.suki.Script
G2L["461"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.suki.LocalScript
G2L["462"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.suki.RemoteEvent
G2L["463"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.suki
G2L["464"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.suki.Script
G2L["465"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.suki.Script
G2L["466"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.suki.LocalScript
G2L["467"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.suki.RemoteEvent
G2L["468"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.laser
G2L["469"] = Instance.new("TextButton")

--ScreenGui.Frame.menu.sc.laser.Script
G2L["470"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["471"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["472"] = Instance.new("RemoteEvent")

--ScreenGui.Frame.menu.sc.Console
G2L["473"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.Console.outputUpdate
G2L["474"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Console.outputUpdate.blankLine
G2L["475"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.Console.Drag
G2L["476"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.Console.Drag.zacksisk
G2L["477"] = Instance.new("Weld")

--ScreenGui.Frame.menu.sc.Console.Drag.zacksisk.zacksisk
G2L["478"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Console.GUSTICO W👀👀
G2L["479"] = Instance.new("Frame")

--ScreenGui.Frame.menu.sc.Console.GUSTICO W👀👀.TextLabel
G2L["480"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.Console.scroll
G2L["481"] = Instance.new("ScrollingFrame")

--ScreenGui.Frame.menu.sc.Console.scroll.outputUpdate
G2L["482"] = Instance.new("Script")

--ScreenGui.Frame.menu.sc.Console.scroll.outputUpdate.blankLine
G2L["483"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.user
G2L["484"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.user.LocalScript
G2L["485"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.user
G2L["486"] = Instance.new("TextLabel")

--ScreenGui.Frame.menu.sc.unicord
G2L["487"] = Instance.new("ImageLabel")

--ScreenGui.Frame.menu.sc.unicord.LocalScript
G2L["488"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.sc.unicord
G2L["489"] = Instance.new("ImageLabel")

--ScreenGui.Frame.menu.sc.unicord.LocalScript
G2L["490"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.Drag
G2L["491"] = Instance.new("LocalScript")

--ScreenGui.Frame.menu.Drag.zacksisk
G2L["492"] = Instance.new("Weld")

--ScreenGui.Frame.menu.Drag.zacksisk.zacksisk
G2L["493"] = Instance.new("Script")

--ScreenGui.Frame.menu.UICorner
G2L["494"] = Instance.new("UICorner")

--ScreenGui.Frame.homes
G2L["495"] = Instance.new("Frame")

--ScreenGui.Frame.homes.Frame
G2L["496"] = Instance.new("Frame")

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["497"] = Instance.new("TextLabel")

--ScreenGui.Frame.homes.Frame.user
G2L["498"] = Instance.new("ImageLabel")

--ScreenGui.Frame.homes.Frame.user.LocalScript
G2L["499"] = Instance.new("LocalScript")

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["500"] = Instance.new("TextLabel")

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["501"] = Instance.new("TextLabel")

--ScreenGui.Frame.homes.Frame.TextLabel.LocalScript
G2L["502"] = Instance.new("LocalScript")

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["503"] = Instance.new("TextLabel")

--ScreenGui.Frame.homes.Frame.TextLabel.script
G2L["504"] = Instance.new("LocalScript")

--ScreenGui.Frame.homes.Frame.h
G2L["505"] = Instance.new("TextLabel")

--ScreenGui.Frame.homes.Frame.g
G2L["506"] = Instance.new("TextLabel")

--ScreenGui.Frame.homes.Frame.g.LocalScript
G2L["507"] = Instance.new("LocalScript")

--ScreenGui.Frame.homes.Frame.TextButton
G2L["508"] = Instance.new("TextButton")

--ScreenGui.Frame.homes.Frame.TextButton.Script
G2L["509"] = Instance.new("Script")

--ScreenGui.Frame.homes.Frame.bypass
G2L["510"] = Instance.new("ImageLabel")

--ScreenGui.Frame.homes.Drag
G2L["511"] = Instance.new("LocalScript")

--ScreenGui.Frame.homes.Drag.zacksisk
G2L["512"] = Instance.new("Weld")

--ScreenGui.Frame.homes.Drag.zacksisk.zacksisk
G2L["513"] = Instance.new("Script")

--ScreenGui.Frame.homes.UICorner
G2L["514"] = Instance.new("UICorner")

--ScreenGui.veran
G2L["515"] = Instance.new("Frame")

--ScreenGui.veran.UIGradient
G2L["516"] = Instance.new("UIGradient")

--ScreenGui.veran.ImageLabel
G2L["517"] = Instance.new("ImageLabel")

--ScreenGui.veran.ImageLabel.deleteallhinttytt
G2L["518"] = Instance.new("TextButton")

--ScreenGui.veran.ImageLabel.deleteallhinttytt.Script
G2L["519"] = Instance.new("Script")

--ScreenGui.veran.ImageLabel.makeshints
G2L["520"] = Instance.new("TextButton")

--ScreenGui.veran.ImageLabel.makeshints.Script
G2L["521"] = Instance.new("Script")

--ScreenGui.veran.ImageLabel.HINTMAKERRR
G2L["522"] = Instance.new("TextBox")

--ScreenGui.veran.ImageLabel.HINTMAKERRR.LocalScript
G2L["523"] = Instance.new("LocalScript")

--ScreenGui.veran.ImageLabel.HINTMAKERRR.Hint
G2L["524"] = Instance.new("RemoteFunction")

--ScreenGui.veran.Frame
G2L["525"] = Instance.new("Frame")

--ScreenGui.veran.Frame.ImageButton
G2L["526"] = Instance.new("ImageButton")

--ScreenGui.veran.Frame.ImageButton.Script
G2L["527"] = Instance.new("Script")

--ScreenGui.veran.Drag
G2L["528"] = Instance.new("LocalScript")

--ScreenGui.veran.Drag.zacksisk
G2L["529"] = Instance.new("Weld")

--ScreenGui.veran.Drag.zacksisk.zacksisk
G2L["530"] = Instance.new("Script")



--[[
    Properties:
--]]
--ScreenGui
G2L["0"].Name = [[ScreenGui]]
G2L["0"].Enabled = true
G2L["0"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["0"].Parent = game.Players.LocalPlayer.PlayerGui

--ScreenGui.lol
G2L["1"].Name = [[lol]]
G2L["1"].Parent = G2L["0"]

--ScreenGui.Main
G2L["2"].Name = [[Main]]
G2L["2"].Image = [[http://www.roblox.com/asset/?id=16160643142]]
G2L["2"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["2"].ScaleType = Enum.ScaleType.Stretch
G2L["2"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["2"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["2"].Active = false
G2L["2"].AnchorPoint = Vector2.new(0, 0)
G2L["2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["2"].BackgroundTransparency = 1
G2L["2"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["2"].BorderSizePixel = 1
G2L["2"].ClipsDescendants = false
G2L["2"].Draggable = false
G2L["2"].Position = UDim2.new(0.5, -2000, 0.5, -50)
G2L["2"].Rotation = 0
G2L["2"].Selectable = false
G2L["2"].SelectionOrder = 0
G2L["2"].Size = UDim2.new(0, 100, 0, 100)
G2L["2"].Visible = true
G2L["2"].ZIndex = 1
G2L["2"].Parent = G2L["0"]

--ScreenGui.Main.Ring
G2L["3"].Name = [[Ring]]
G2L["3"].Image = [[rbxassetid://7102118272]]
G2L["3"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["3"].ScaleType = Enum.ScaleType.Stretch
G2L["3"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["3"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["3"].Active = false
G2L["3"].AnchorPoint = Vector2.new(0, 0)
G2L["3"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["3"].BackgroundTransparency = 1
G2L["3"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["3"].BorderSizePixel = 1
G2L["3"].ClipsDescendants = false
G2L["3"].Draggable = false
G2L["3"].Position = UDim2.new(0, 0, 0, 0)
G2L["3"].Rotation = 0
G2L["3"].Selectable = false
G2L["3"].SelectionOrder = 0
G2L["3"].Size = UDim2.new(1, 0, 1, 0)
G2L["3"].Visible = true
G2L["3"].ZIndex = 1
G2L["3"].Parent = G2L["2"]

--ScreenGui.Main.Main2
G2L["4"].Name = [[Main2]]
G2L["4"].Image = [[rbxassetid://7102117818]]
G2L["4"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["4"].ScaleType = Enum.ScaleType.Stretch
G2L["4"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["4"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["4"].Active = false
G2L["4"].AnchorPoint = Vector2.new(0, 0)
G2L["4"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["4"].BackgroundTransparency = 1
G2L["4"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["4"].BorderSizePixel = 1
G2L["4"].ClipsDescendants = false
G2L["4"].Draggable = false
G2L["4"].Position = UDim2.new(0, 0, 0, 0)
G2L["4"].Rotation = 0
G2L["4"].Selectable = false
G2L["4"].SelectionOrder = 0
G2L["4"].Size = UDim2.new(1, 0, 1, 0)
G2L["4"].Visible = true
G2L["4"].ZIndex = 3
G2L["4"].Parent = G2L["2"]

--ScreenGui.Main.Orbit
G2L["5"].Name = [[Orbit]]
G2L["5"].Image = [[http://www.roblox.com/asset/?id=199119009]]
G2L["5"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["5"].ScaleType = Enum.ScaleType.Stretch
G2L["5"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["5"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["5"].Active = false
G2L["5"].AnchorPoint = Vector2.new(0, 0)
G2L["5"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["5"].BackgroundTransparency = 1
G2L["5"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["5"].BorderSizePixel = 1
G2L["5"].ClipsDescendants = false
G2L["5"].Draggable = false
G2L["5"].Position = UDim2.new(0, 0, 0, 0)
G2L["5"].Rotation = 0
G2L["5"].Selectable = false
G2L["5"].SelectionOrder = 0
G2L["5"].Size = UDim2.new(0.17, 0, 0.17, 0)
G2L["5"].Visible = true
G2L["5"].ZIndex = 2
G2L["5"].Parent = G2L["2"]

--ScreenGui.Orbi
G2L["6"].Name = [[Orbi]]
G2L["6"].Parent = G2L["0"]

--ScreenGui.Frame
G2L["7"].Name = [[Frame]]
G2L["7"].Active = false
G2L["7"].AnchorPoint = Vector2.new(0, 0)
G2L["7"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["7"].BackgroundTransparency = 1
G2L["7"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["7"].BorderSizePixel = 0
G2L["7"].ClipsDescendants = false
G2L["7"].Draggable = false
G2L["7"].Position = UDim2.new(0, 0, 0, 0)
G2L["7"].Rotation = 0
G2L["7"].Selectable = false
G2L["7"].SelectionOrder = 0
G2L["7"].Size = UDim2.new(0, 100, 0, 100)
G2L["7"].Visible = true
G2L["7"].ZIndex = 1
G2L["7"].Parent = G2L["0"]

--ScreenGui.Frame.nada
G2L["8"].Name = [[nada]]
G2L["8"].Active = false
G2L["8"].AnchorPoint = Vector2.new(0, 0)
G2L["8"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["8"].BackgroundTransparency = 1
G2L["8"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["8"].BorderSizePixel = 0
G2L["8"].ClipsDescendants = false
G2L["8"].Draggable = false
G2L["8"].Position = UDim2.new(0, 0, 0, 0)
G2L["8"].Rotation = 0
G2L["8"].Selectable = false
G2L["8"].SelectionOrder = 0
G2L["8"].Size = UDim2.new(0, 100, 0, 100)
G2L["8"].Visible = true
G2L["8"].ZIndex = 1
G2L["8"].Parent = G2L["7"]

--ScreenGui.Frame.nada.Csutom
G2L["9"].Name = [[Csutom]]
G2L["9"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["9"].Text = [[Custom hint]]
G2L["9"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["9"].TextScaled = true
G2L["9"].TextSize = 14
G2L["9"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["9"].TextStrokeTransparency = 1
G2L["9"].TextWrapped = true
G2L["9"].TextXAlignment = Enum.TextXAlignment.Center
G2L["9"].TextYAlignment = Enum.TextYAlignment.Center
G2L["9"].Active = true
G2L["9"].AnchorPoint = Vector2.new(0, 0)
G2L["9"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["9"].BackgroundTransparency = 0
G2L["9"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["9"].BorderSizePixel = 1
G2L["9"].ClipsDescendants = false
G2L["9"].Draggable = false
G2L["9"].Position = UDim2.new(-0.0031896972, 0, -0.0005413818, 0)
G2L["9"].Rotation = 0
G2L["9"].Selectable = true
G2L["9"].SelectionOrder = 0
G2L["9"].Size = UDim2.new(0, 129, 0, 49)
G2L["9"].Visible = true
G2L["9"].ZIndex = 1
G2L["9"].Parent = G2L["8"]

--ScreenGui.Frame.nada.Csutom.Script
G2L["10"].Name = [[Script]]
G2L["10"].Parent = G2L["9"]

--ScreenGui.Frame.menu
G2L["11"].Name = [[menu]]
G2L["11"].Active = false
G2L["11"].AnchorPoint = Vector2.new(0, 0)
G2L["11"].BackgroundColor3 = Color3.fromRGB(225.00002, 225.00002, 225.00002)
G2L["11"].BackgroundTransparency = 0.8
G2L["11"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["11"].BorderSizePixel = 0
G2L["11"].ClipsDescendants = false
G2L["11"].Draggable = false
G2L["11"].Position = UDim2.new(2.350213, 0, 1.1147437, 0)
G2L["11"].Rotation = 0
G2L["11"].Selectable = false
G2L["11"].SelectionOrder = 0
G2L["11"].Size = UDim2.new(0, 486, 0, 290)
G2L["11"].Visible = true
G2L["11"].ZIndex = 1
G2L["11"].Parent = G2L["7"]

--ScreenGui.Frame.menu.sc
G2L["12"].Name = [[sc]]
G2L["12"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["12"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["12"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["12"].ScrollBarThickness = 12
G2L["12"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["12"].Active = true
G2L["12"].AnchorPoint = Vector2.new(0, 0)
G2L["12"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["12"].BackgroundTransparency = 0
G2L["12"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["12"].BorderSizePixel = 1
G2L["12"].ClipsDescendants = true
G2L["12"].Draggable = false
G2L["12"].Position = UDim2.new(0.022633744, 0, 0.03448276, 0)
G2L["12"].Rotation = 0
G2L["12"].Selectable = true
G2L["12"].SelectionOrder = 0
G2L["12"].Size = UDim2.new(0, 464, 0, 269)
G2L["12"].Visible = true
G2L["12"].ZIndex = 1
G2L["12"].Parent = G2L["11"]

--ScreenGui.Frame.menu.sc.TextLabel
G2L["13"].Name = [[TextLabel]]
G2L["13"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["13"].Text = [[Dominius Gui]]
G2L["13"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["13"].TextScaled = true
G2L["13"].TextSize = 14
G2L["13"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["13"].TextStrokeTransparency = 1
G2L["13"].TextWrapped = true
G2L["13"].TextXAlignment = Enum.TextXAlignment.Center
G2L["13"].TextYAlignment = Enum.TextYAlignment.Center
G2L["13"].Active = false
G2L["13"].AnchorPoint = Vector2.new(0, 0)
G2L["13"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["13"].BackgroundTransparency = 0
G2L["13"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["13"].BorderSizePixel = 0
G2L["13"].ClipsDescendants = false
G2L["13"].Draggable = false
G2L["13"].Position = UDim2.new(0, 0, 0, 0)
G2L["13"].Rotation = 0
G2L["13"].Selectable = false
G2L["13"].SelectionOrder = 0
G2L["13"].Size = UDim2.new(0, 464, 0, 50)
G2L["13"].Visible = true
G2L["13"].ZIndex = 1
G2L["13"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel
G2L["14"].Name = [[TextLabel]]
G2L["14"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["14"].Text = [[Premium Version]]
G2L["14"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["14"].TextScaled = true
G2L["14"].TextSize = 14
G2L["14"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["14"].TextStrokeTransparency = 1
G2L["14"].TextWrapped = true
G2L["14"].TextXAlignment = Enum.TextXAlignment.Center
G2L["14"].TextYAlignment = Enum.TextYAlignment.Center
G2L["14"].Active = false
G2L["14"].AnchorPoint = Vector2.new(0, 0)
G2L["14"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["14"].BackgroundTransparency = 0
G2L["14"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["14"].BorderSizePixel = 0
G2L["14"].ClipsDescendants = false
G2L["14"].Draggable = false
G2L["14"].Position = UDim2.new(0.23706897, 0, 11.011552, 0)
G2L["14"].Rotation = 0
G2L["14"].Selectable = false
G2L["14"].SelectionOrder = 0
G2L["14"].Size = UDim2.new(0, 244, 0, 29)
G2L["14"].Visible = true
G2L["14"].ZIndex = 1
G2L["14"].Parent = G2L["13"]

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel.ImageLabel
G2L["15"].Name = [[ImageLabel]]
G2L["15"].Image = [[http://www.roblox.com/asset/?id=6431233157]]
G2L["15"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["15"].ScaleType = Enum.ScaleType.Stretch
G2L["15"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["15"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["15"].Active = false
G2L["15"].AnchorPoint = Vector2.new(0, 0)
G2L["15"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["15"].BackgroundTransparency = 0
G2L["15"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["15"].BorderSizePixel = 0
G2L["15"].ClipsDescendants = false
G2L["15"].Draggable = false
G2L["15"].Position = UDim2.new(0, 0, 0, 0)
G2L["15"].Rotation = 0
G2L["15"].Selectable = false
G2L["15"].SelectionOrder = 0
G2L["15"].Size = UDim2.new(0, 30, 0, 29)
G2L["15"].Visible = true
G2L["15"].ZIndex = 1
G2L["15"].Parent = G2L["14"]

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel.ImageLabel
G2L["16"].Name = [[ImageLabel]]
G2L["16"].Image = [[http://www.roblox.com/asset/?id=6431233157]]
G2L["16"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["16"].ScaleType = Enum.ScaleType.Stretch
G2L["16"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["16"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["16"].Active = false
G2L["16"].AnchorPoint = Vector2.new(0, 0)
G2L["16"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["16"].BackgroundTransparency = 0
G2L["16"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["16"].BorderSizePixel = 0
G2L["16"].ClipsDescendants = false
G2L["16"].Draggable = false
G2L["16"].Position = UDim2.new(0.8770492, 0, 0, 0)
G2L["16"].Rotation = 0
G2L["16"].Selectable = false
G2L["16"].SelectionOrder = 0
G2L["16"].Size = UDim2.new(0, 30, 0, 29)
G2L["16"].Visible = true
G2L["16"].ZIndex = 1
G2L["16"].Parent = G2L["14"]

--ScreenGui.Frame.menu.sc.TextLabel.TextLabel.Rainbow Text
G2L["17"].Name = [[Rainbow Text]]
G2L["17"].Parent = G2L["14"]

--ScreenGui.Frame.menu.sc.Stiv
G2L["18"].Name = [[Stiv]]
G2L["18"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["18"].Text = [[Steve]]
G2L["18"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["18"].TextScaled = true
G2L["18"].TextSize = 14
G2L["18"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["18"].TextStrokeTransparency = 1
G2L["18"].TextWrapped = true
G2L["18"].TextXAlignment = Enum.TextXAlignment.Center
G2L["18"].TextYAlignment = Enum.TextYAlignment.Center
G2L["18"].Active = true
G2L["18"].AnchorPoint = Vector2.new(0, 0)
G2L["18"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["18"].BackgroundTransparency = 0
G2L["18"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["18"].BorderSizePixel = 1
G2L["18"].ClipsDescendants = false
G2L["18"].Draggable = false
G2L["18"].Position = UDim2.new(0, 0, 0.09276917, 0)
G2L["18"].Rotation = 0
G2L["18"].Selectable = true
G2L["18"].SelectionOrder = 0
G2L["18"].Size = UDim2.new(0, 49, 0, 37)
G2L["18"].Visible = true
G2L["18"].ZIndex = 1
G2L["18"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Stiv.LocalScript
G2L["19"].Name = [[LocalScript]]
G2L["19"].Parent = G2L["18"]

--ScreenGui.Frame.menu.sc.Stiv.LocalScript.ServerEvent
G2L["20"].Name = [[ServerEvent]]
G2L["20"].Parent = G2L["19"]

--ScreenGui.Frame.menu.sc.Stiv.LocalScript.ServerEvent.Script
G2L["21"].Name = [[Script]]
G2L["21"].Parent = G2L["20"]

--ScreenGui.Frame.menu.sc.ere seis
G2L["22"].Name = [[ere seis]]
G2L["22"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["22"].Text = [[R6]]
G2L["22"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["22"].TextScaled = true
G2L["22"].TextSize = 14
G2L["22"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["22"].TextStrokeTransparency = 1
G2L["22"].TextWrapped = true
G2L["22"].TextXAlignment = Enum.TextXAlignment.Center
G2L["22"].TextYAlignment = Enum.TextYAlignment.Center
G2L["22"].Active = true
G2L["22"].AnchorPoint = Vector2.new(0, 0)
G2L["22"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["22"].BackgroundTransparency = 0
G2L["22"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["22"].BorderSizePixel = 1
G2L["22"].ClipsDescendants = false
G2L["22"].Draggable = false
G2L["22"].Position = UDim2.new(0, 0, 0, 0)
G2L["22"].Rotation = 0
G2L["22"].Selectable = true
G2L["22"].SelectionOrder = 0
G2L["22"].Size = UDim2.new(0, 30, 0, 25)
G2L["22"].Visible = true
G2L["22"].ZIndex = 1
G2L["22"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.ere seis.LocalScript
G2L["23"].Name = [[LocalScript]]
G2L["23"].Parent = G2L["22"]

--ScreenGui.Frame.menu.sc.ere seis.LocalScript.ServerEvent
G2L["24"].Name = [[ServerEvent]]
G2L["24"].Parent = G2L["23"]

--ScreenGui.Frame.menu.sc.ere seis.LocalScript.ServerEvent.Script
G2L["25"].Name = [[Script]]
G2L["25"].Parent = G2L["24"]

--ScreenGui.Frame.menu.sc.iy
G2L["26"].Name = [[iy]]
G2L["26"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["26"].Text = [[Iy Edited]]
G2L["26"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["26"].TextScaled = true
G2L["26"].TextSize = 14
G2L["26"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["26"].TextStrokeTransparency = 1
G2L["26"].TextWrapped = true
G2L["26"].TextXAlignment = Enum.TextXAlignment.Center
G2L["26"].TextYAlignment = Enum.TextYAlignment.Center
G2L["26"].Active = true
G2L["26"].AnchorPoint = Vector2.new(0, 0)
G2L["26"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["26"].BackgroundTransparency = 0
G2L["26"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["26"].BorderSizePixel = 1
G2L["26"].ClipsDescendants = false
G2L["26"].Draggable = false
G2L["26"].Position = UDim2.new(0.2112069, 0, 0.09376544, 0)
G2L["26"].Rotation = 0
G2L["26"].Selectable = true
G2L["26"].SelectionOrder = 0
G2L["26"].Size = UDim2.new(0, 49, 0, 37)
G2L["26"].Visible = true
G2L["26"].ZIndex = 1
G2L["26"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.iy.Script
G2L["27"].Name = [[Script]]
G2L["27"].Parent = G2L["26"]

--ScreenGui.Frame.menu.sc.iy.LocalScript
G2L["28"].Name = [[LocalScript]]
G2L["28"].Parent = G2L["26"]

--ScreenGui.Frame.menu.sc.iy.RemoteEvent
G2L["29"].Name = [[RemoteEvent]]
G2L["29"].Parent = G2L["26"]

--ScreenGui.Frame.menu.sc.x1
G2L["30"].Name = [[x1]]
G2L["30"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["30"].Text = [[John Doe]]
G2L["30"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["30"].TextScaled = true
G2L["30"].TextSize = 14
G2L["30"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["30"].TextStrokeTransparency = 1
G2L["30"].TextWrapped = true
G2L["30"].TextXAlignment = Enum.TextXAlignment.Center
G2L["30"].TextYAlignment = Enum.TextYAlignment.Center
G2L["30"].Active = true
G2L["30"].AnchorPoint = Vector2.new(0, 0)
G2L["30"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["30"].BackgroundTransparency = 0
G2L["30"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["30"].BorderSizePixel = 1
G2L["30"].ClipsDescendants = false
G2L["30"].Draggable = false
G2L["30"].Position = UDim2.new(0.31681034, 0, 0.09333713, 0)
G2L["30"].Rotation = 0
G2L["30"].Selectable = true
G2L["30"].SelectionOrder = 0
G2L["30"].Size = UDim2.new(0, 49, 0, 37)
G2L["30"].Visible = true
G2L["30"].ZIndex = 1
G2L["30"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.x1.LocalScript
G2L["31"].Name = [[LocalScript]]
G2L["31"].Parent = G2L["30"]

--ScreenGui.Frame.menu.sc.x1.LocalScript.ServerEvent
G2L["32"].Name = [[ServerEvent]]
G2L["32"].Parent = G2L["31"]

--ScreenGui.Frame.menu.sc.x1.LocalScript.ServerEvent.Script
G2L["33"].Name = [[Script]]
G2L["33"].Parent = G2L["32"]

--ScreenGui.Frame.menu.sc.grab
G2L["34"].Name = [[grab]]
G2L["34"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["34"].Text = [[Hammer]]
G2L["34"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["34"].TextScaled = true
G2L["34"].TextSize = 14
G2L["34"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["34"].TextStrokeTransparency = 1
G2L["34"].TextWrapped = true
G2L["34"].TextXAlignment = Enum.TextXAlignment.Center
G2L["34"].TextYAlignment = Enum.TextYAlignment.Center
G2L["34"].Active = true
G2L["34"].AnchorPoint = Vector2.new(0, 0)
G2L["34"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["34"].BackgroundTransparency = 0
G2L["34"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["34"].BorderSizePixel = 1
G2L["34"].ClipsDescendants = false
G2L["34"].Draggable = false
G2L["34"].Position = UDim2.new(0.4224138, 0, 0.093324855, 0)
G2L["34"].Rotation = 0
G2L["34"].Selectable = true
G2L["34"].SelectionOrder = 0
G2L["34"].Size = UDim2.new(0, 49, 0, 37)
G2L["34"].Visible = true
G2L["34"].ZIndex = 1
G2L["34"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["35"].Name = [[LocalScript]]
G2L["35"].Parent = G2L["34"]

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent
G2L["36"].Name = [[ServerEvent]]
G2L["36"].Parent = G2L["35"]

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent.Script
G2L["37"].Name = [[Script]]
G2L["37"].Parent = G2L["36"]

--ScreenGui.Frame.menu.sc.guns
G2L["38"].Name = [[guns]]
G2L["38"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["38"].Text = [[Obama]]
G2L["38"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["38"].TextScaled = true
G2L["38"].TextSize = 14
G2L["38"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["38"].TextStrokeTransparency = 1
G2L["38"].TextWrapped = true
G2L["38"].TextXAlignment = Enum.TextXAlignment.Center
G2L["38"].TextYAlignment = Enum.TextYAlignment.Center
G2L["38"].Active = true
G2L["38"].AnchorPoint = Vector2.new(0, 0)
G2L["38"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["38"].BackgroundTransparency = 0
G2L["38"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["38"].BorderSizePixel = 1
G2L["38"].ClipsDescendants = false
G2L["38"].Draggable = false
G2L["38"].Position = UDim2.new(0.6336207, 0, 0.23349486, 0)
G2L["38"].Rotation = 0
G2L["38"].Selectable = true
G2L["38"].SelectionOrder = 0
G2L["38"].Size = UDim2.new(0, 49, 0, 37)
G2L["38"].Visible = true
G2L["38"].ZIndex = 1
G2L["38"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.guns.LocalScript
G2L["39"].Name = [[LocalScript]]
G2L["39"].Parent = G2L["38"]

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent
G2L["40"].Name = [[ServerEvent]]
G2L["40"].Parent = G2L["39"]

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent.Script
G2L["41"].Name = [[Script]]
G2L["41"].Parent = G2L["40"]

--ScreenGui.Frame.menu.sc.guner
G2L["42"].Name = [[guner]]
G2L["42"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["42"].Text = [[Goner]]
G2L["42"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["42"].TextScaled = true
G2L["42"].TextSize = 14
G2L["42"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["42"].TextStrokeTransparency = 1
G2L["42"].TextWrapped = true
G2L["42"].TextXAlignment = Enum.TextXAlignment.Center
G2L["42"].TextYAlignment = Enum.TextYAlignment.Center
G2L["42"].Active = true
G2L["42"].AnchorPoint = Vector2.new(0, 0)
G2L["42"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["42"].BackgroundTransparency = 0
G2L["42"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["42"].BorderSizePixel = 1
G2L["42"].ClipsDescendants = false
G2L["42"].Draggable = false
G2L["42"].Position = UDim2.new(0.5280172, 0, 0.092446044, 0)
G2L["42"].Rotation = 0
G2L["42"].Selectable = true
G2L["42"].SelectionOrder = 0
G2L["42"].Size = UDim2.new(0, 49, 0, 37)
G2L["42"].Visible = true
G2L["42"].ZIndex = 1
G2L["42"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["43"].Name = [[LocalScript]]
G2L["43"].Parent = G2L["42"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["44"].Name = [[ServerEvent]]
G2L["44"].Parent = G2L["43"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["45"].Name = [[Script]]
G2L["45"].Parent = G2L["44"]

--ScreenGui.Frame.menu.sc.logos
G2L["46"].Name = [[logos]]
G2L["46"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["46"].Text = [[Stigma logo]]
G2L["46"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["46"].TextScaled = true
G2L["46"].TextSize = 14
G2L["46"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["46"].TextStrokeTransparency = 1
G2L["46"].TextWrapped = true
G2L["46"].TextXAlignment = Enum.TextXAlignment.Center
G2L["46"].TextYAlignment = Enum.TextYAlignment.Center
G2L["46"].Active = true
G2L["46"].AnchorPoint = Vector2.new(0, 0)
G2L["46"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["46"].BackgroundTransparency = 0
G2L["46"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["46"].BorderSizePixel = 1
G2L["46"].ClipsDescendants = false
G2L["46"].Draggable = false
G2L["46"].Position = UDim2.new(0.06465517, 0, -0.0024524557, 0)
G2L["46"].Rotation = 0
G2L["46"].Selectable = true
G2L["46"].SelectionOrder = 0
G2L["46"].Size = UDim2.new(0, 41, 0, 26)
G2L["46"].Visible = true
G2L["46"].ZIndex = 1
G2L["46"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.logos.LocalScript
G2L["47"].Name = [[LocalScript]]
G2L["47"].Parent = G2L["46"]

--ScreenGui.Frame.menu.sc.logos.LocalScript.ServerEvent
G2L["48"].Name = [[ServerEvent]]
G2L["48"].Parent = G2L["47"]

--ScreenGui.Frame.menu.sc.logos.LocalScript.ServerEvent.Script
G2L["49"].Name = [[Script]]
G2L["49"].Parent = G2L["48"]

--ScreenGui.Frame.menu.sc.grab
G2L["50"].Name = [[grab]]
G2L["50"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["50"].Text = [[Kj ]]
G2L["50"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["50"].TextScaled = true
G2L["50"].TextSize = 14
G2L["50"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["50"].TextStrokeTransparency = 1
G2L["50"].TextWrapped = true
G2L["50"].TextXAlignment = Enum.TextXAlignment.Center
G2L["50"].TextYAlignment = Enum.TextYAlignment.Center
G2L["50"].Active = true
G2L["50"].AnchorPoint = Vector2.new(0, 0)
G2L["50"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["50"].BackgroundTransparency = 0
G2L["50"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["50"].BorderSizePixel = 1
G2L["50"].ClipsDescendants = false
G2L["50"].Draggable = false
G2L["50"].Position = UDim2.new(0.6336207, 0, 0.092446044, 0)
G2L["50"].Rotation = 0
G2L["50"].Selectable = true
G2L["50"].SelectionOrder = 0
G2L["50"].Size = UDim2.new(0, 49, 0, 37)
G2L["50"].Visible = true
G2L["50"].ZIndex = 1
G2L["50"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["51"].Name = [[LocalScript]]
G2L["51"].Parent = G2L["50"]

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent
G2L["52"].Name = [[ServerEvent]]
G2L["52"].Parent = G2L["51"]

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent.Script
G2L["53"].Name = [[Script]]
G2L["53"].Parent = G2L["52"]

--ScreenGui.Frame.menu.sc.Mr bean
G2L["54"].Name = [[Mr bean]]
G2L["54"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["54"].Text = [[Mr bean admin]]
G2L["54"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["54"].TextScaled = true
G2L["54"].TextSize = 14
G2L["54"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["54"].TextStrokeTransparency = 1
G2L["54"].TextWrapped = true
G2L["54"].TextXAlignment = Enum.TextXAlignment.Center
G2L["54"].TextYAlignment = Enum.TextYAlignment.Center
G2L["54"].Active = true
G2L["54"].AnchorPoint = Vector2.new(0, 0)
G2L["54"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["54"].BackgroundTransparency = 0
G2L["54"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["54"].BorderSizePixel = 1
G2L["54"].ClipsDescendants = false
G2L["54"].Draggable = false
G2L["54"].Position = UDim2.new(0.73922414, 0, 0.094324574, 0)
G2L["54"].Rotation = 0
G2L["54"].Selectable = true
G2L["54"].SelectionOrder = 0
G2L["54"].Size = UDim2.new(0, 49, 0, 37)
G2L["54"].Visible = true
G2L["54"].ZIndex = 1
G2L["54"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["55"].Name = [[LocalScript]]
G2L["55"].Parent = G2L["54"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent
G2L["56"].Name = [[ServerEvent]]
G2L["56"].Parent = G2L["55"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent.Script
G2L["57"].Name = [[Script]]
G2L["57"].Parent = G2L["56"]

--ScreenGui.Frame.menu.sc.Mr bean
G2L["58"].Name = [[Mr bean]]
G2L["58"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["58"].Text = [[Polaria]]
G2L["58"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["58"].TextScaled = true
G2L["58"].TextSize = 14
G2L["58"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["58"].TextStrokeTransparency = 1
G2L["58"].TextWrapped = true
G2L["58"].TextXAlignment = Enum.TextXAlignment.Center
G2L["58"].TextYAlignment = Enum.TextYAlignment.Center
G2L["58"].Active = true
G2L["58"].AnchorPoint = Vector2.new(0, 0)
G2L["58"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["58"].BackgroundTransparency = 0
G2L["58"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["58"].BorderSizePixel = 1
G2L["58"].ClipsDescendants = false
G2L["58"].Draggable = false
G2L["58"].Position = UDim2.new(0.8448276, 0, 0.09415293, 0)
G2L["58"].Rotation = 0
G2L["58"].Selectable = true
G2L["58"].SelectionOrder = 0
G2L["58"].Size = UDim2.new(0, 49, 0, 37)
G2L["58"].Visible = true
G2L["58"].ZIndex = 1
G2L["58"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["59"].Name = [[LocalScript]]
G2L["59"].Parent = G2L["58"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent
G2L["60"].Name = [[ServerEvent]]
G2L["60"].Parent = G2L["59"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript.ServerEvent.Script
G2L["61"].Name = [[Script]]
G2L["61"].Parent = G2L["60"]

--ScreenGui.Frame.menu.sc.grab
G2L["62"].Name = [[grab]]
G2L["62"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["62"].Text = [[T0pk3k 5.0]]
G2L["62"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["62"].TextScaled = true
G2L["62"].TextSize = 14
G2L["62"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["62"].TextStrokeTransparency = 1
G2L["62"].TextWrapped = true
G2L["62"].TextXAlignment = Enum.TextXAlignment.Center
G2L["62"].TextYAlignment = Enum.TextYAlignment.Center
G2L["62"].Active = true
G2L["62"].AnchorPoint = Vector2.new(0, 0)
G2L["62"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["62"].BackgroundTransparency = 0
G2L["62"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["62"].BorderSizePixel = 1
G2L["62"].ClipsDescendants = false
G2L["62"].Draggable = false
G2L["62"].Position = UDim2.new(0, 0, 0.16141157, 0)
G2L["62"].Rotation = 0
G2L["62"].Selectable = true
G2L["62"].SelectionOrder = 0
G2L["62"].Size = UDim2.new(0, 49, 0, 37)
G2L["62"].Visible = true
G2L["62"].ZIndex = 1
G2L["62"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.grab.Script
G2L["63"].Name = [[Script]]
G2L["63"].Parent = G2L["62"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule
G2L["64"].Name = [[MainModule]]
G2L["64"].Parent = G2L["63"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script
G2L["65"].Name = [[Script]]
G2L["65"].Parent = G2L["64"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser
G2L["66"].Name = [[LuaParser]]
G2L["66"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser.FiOne
G2L["67"].Name = [[FiOne]]
G2L["67"].Parent = G2L["66"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser.Yueliang
G2L["68"].Name = [[Yueliang]]
G2L["68"].Parent = G2L["66"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Player
G2L["69"].Name = [[Player]]
G2L["69"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Blind
G2L["70"].Name = [[Blind]]
G2L["70"].Enabled = false
G2L["70"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["70"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Blind.Frame
G2L["71"].Name = [[Frame]]
G2L["71"].Active = false
G2L["71"].AnchorPoint = Vector2.new(0, 0)
G2L["71"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["71"].BackgroundTransparency = 0
G2L["71"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["71"].BorderSizePixel = 1
G2L["71"].ClipsDescendants = false
G2L["71"].Draggable = false
G2L["71"].Position = UDim2.new(0, -200, 0, -200)
G2L["71"].Rotation = 0
G2L["71"].Selectable = false
G2L["71"].SelectionOrder = 0
G2L["71"].Size = UDim2.new(2, 0, 2, 0)
G2L["71"].Visible = true
G2L["71"].ZIndex = 100
G2L["71"].Parent = G2L["70"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud
G2L["72"].Name = [[Hud]]
G2L["72"].Enabled = true
G2L["72"].ZIndexBehavior = Enum.ZIndexBehavior.Global
G2L["72"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite3
G2L["73"].Name = [[Composite3]]
G2L["73"].Active = false
G2L["73"].AnchorPoint = Vector2.new(0, 0)
G2L["73"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["73"].BackgroundTransparency = 0
G2L["73"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["73"].BorderSizePixel = 0
G2L["73"].ClipsDescendants = true
G2L["73"].Draggable = false
G2L["73"].Position = UDim2.new(0.5, -50, 0.5, 0)
G2L["73"].Rotation = 0
G2L["73"].Selectable = false
G2L["73"].SelectionOrder = 0
G2L["73"].Size = UDim2.new(0, 50, 0, 50)
G2L["73"].Visible = false
G2L["73"].ZIndex = 1
G2L["73"].Parent = G2L["72"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite3.Label
G2L["74"].Name = [[Label]]
G2L["74"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["74"].Text = [[5]]
G2L["74"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["74"].TextScaled = false
G2L["74"].TextSize = 50
G2L["74"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["74"].TextStrokeTransparency = 1
G2L["74"].TextWrapped = false
G2L["74"].TextXAlignment = Enum.TextXAlignment.Center
G2L["74"].TextYAlignment = Enum.TextYAlignment.Center
G2L["74"].Active = false
G2L["74"].AnchorPoint = Vector2.new(0, 0)
G2L["74"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["74"].BackgroundTransparency = 1
G2L["74"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["74"].BorderSizePixel = 0
G2L["74"].ClipsDescendants = false
G2L["74"].Draggable = false
G2L["74"].Position = UDim2.new(0, 0, 0, 0)
G2L["74"].Rotation = 0
G2L["74"].Selectable = false
G2L["74"].SelectionOrder = 0
G2L["74"].Size = UDim2.new(0, 50, 0, 50)
G2L["74"].Visible = true
G2L["74"].ZIndex = 1
G2L["74"].Parent = G2L["73"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite3.UIGradient
G2L["75"].Name = [[UIGradient]]
G2L["75"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(79, 107, 204)), ColorSequenceKeypoint.new(1, Color3.fromRGB(79, 107, 204))};
G2L["75"].Enabled = true
G2L["75"].Rotation = 5
G2L["75"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["75"].Parent = G2L["73"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite4
G2L["76"].Name = [[Composite4]]
G2L["76"].Active = false
G2L["76"].AnchorPoint = Vector2.new(0, 0)
G2L["76"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["76"].BackgroundTransparency = 0
G2L["76"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["76"].BorderSizePixel = 0
G2L["76"].ClipsDescendants = true
G2L["76"].Draggable = false
G2L["76"].Position = UDim2.new(0.5, 0, 0.5, 0)
G2L["76"].Rotation = 0
G2L["76"].Selectable = false
G2L["76"].SelectionOrder = 0
G2L["76"].Size = UDim2.new(0, 50, 0, 50)
G2L["76"].Visible = false
G2L["76"].ZIndex = 1
G2L["76"].Parent = G2L["72"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite4.Label
G2L["77"].Name = [[Label]]
G2L["77"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["77"].Text = [[0]]
G2L["77"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["77"].TextScaled = false
G2L["77"].TextSize = 50
G2L["77"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["77"].TextStrokeTransparency = 1
G2L["77"].TextWrapped = false
G2L["77"].TextXAlignment = Enum.TextXAlignment.Center
G2L["77"].TextYAlignment = Enum.TextYAlignment.Center
G2L["77"].Active = false
G2L["77"].AnchorPoint = Vector2.new(0, 0)
G2L["77"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["77"].BackgroundTransparency = 1
G2L["77"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["77"].BorderSizePixel = 0
G2L["77"].ClipsDescendants = false
G2L["77"].Draggable = false
G2L["77"].Position = UDim2.new(0, 0, 0, 0)
G2L["77"].Rotation = 0
G2L["77"].Selectable = false
G2L["77"].SelectionOrder = 0
G2L["77"].Size = UDim2.new(0, 50, 0, 50)
G2L["77"].Visible = true
G2L["77"].ZIndex = 1
G2L["77"].Parent = G2L["76"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite4.UIGradient
G2L["78"].Name = [[UIGradient]]
G2L["78"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(79, 107, 204)), ColorSequenceKeypoint.new(1, Color3.fromRGB(79, 107, 204))};
G2L["78"].Enabled = true
G2L["78"].Rotation = 5
G2L["78"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["78"].Parent = G2L["76"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite2
G2L["79"].Name = [[Composite2]]
G2L["79"].Active = false
G2L["79"].AnchorPoint = Vector2.new(0, 0)
G2L["79"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["79"].BackgroundTransparency = 0
G2L["79"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["79"].BorderSizePixel = 0
G2L["79"].ClipsDescendants = true
G2L["79"].Draggable = false
G2L["79"].Position = UDim2.new(0.5, 0, 0.5, -50)
G2L["79"].Rotation = 0
G2L["79"].Selectable = false
G2L["79"].SelectionOrder = 0
G2L["79"].Size = UDim2.new(0, 50, 0, 50)
G2L["79"].Visible = false
G2L["79"].ZIndex = 1
G2L["79"].Parent = G2L["72"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite2.Label
G2L["80"].Name = [[Label]]
G2L["80"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["80"].Text = [[K]]
G2L["80"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["80"].TextScaled = false
G2L["80"].TextSize = 50
G2L["80"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["80"].TextStrokeTransparency = 1
G2L["80"].TextWrapped = false
G2L["80"].TextXAlignment = Enum.TextXAlignment.Center
G2L["80"].TextYAlignment = Enum.TextYAlignment.Center
G2L["80"].Active = false
G2L["80"].AnchorPoint = Vector2.new(0, 0)
G2L["80"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["80"].BackgroundTransparency = 1
G2L["80"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["80"].BorderSizePixel = 0
G2L["80"].ClipsDescendants = false
G2L["80"].Draggable = false
G2L["80"].Position = UDim2.new(0, 0, 0, 0)
G2L["80"].Rotation = 0
G2L["80"].Selectable = false
G2L["80"].SelectionOrder = 0
G2L["80"].Size = UDim2.new(0, 50, 0, 50)
G2L["80"].Visible = true
G2L["80"].ZIndex = 1
G2L["80"].Parent = G2L["79"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite2.UIGradient
G2L["81"].Name = [[UIGradient]]
G2L["81"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(79, 107, 204)), ColorSequenceKeypoint.new(1, Color3.fromRGB(79, 107, 204))};
G2L["81"].Enabled = true
G2L["81"].Rotation = 5
G2L["81"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["81"].Parent = G2L["79"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite1
G2L["82"].Name = [[Composite1]]
G2L["82"].Active = false
G2L["82"].AnchorPoint = Vector2.new(0, 0)
G2L["82"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["82"].BackgroundTransparency = 0
G2L["82"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["82"].BorderSizePixel = 0
G2L["82"].ClipsDescendants = true
G2L["82"].Draggable = false
G2L["82"].Position = UDim2.new(0.5, -50, 0.5, -50)
G2L["82"].Rotation = 0
G2L["82"].Selectable = false
G2L["82"].SelectionOrder = 0
G2L["82"].Size = UDim2.new(0, 50, 0, 50)
G2L["82"].Visible = false
G2L["82"].ZIndex = 1
G2L["82"].Parent = G2L["72"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite1.Label
G2L["83"].Name = [[Label]]
G2L["83"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["83"].Text = [[T]]
G2L["83"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["83"].TextScaled = false
G2L["83"].TextSize = 50
G2L["83"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["83"].TextStrokeTransparency = 1
G2L["83"].TextWrapped = false
G2L["83"].TextXAlignment = Enum.TextXAlignment.Center
G2L["83"].TextYAlignment = Enum.TextYAlignment.Center
G2L["83"].Active = false
G2L["83"].AnchorPoint = Vector2.new(0, 0)
G2L["83"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["83"].BackgroundTransparency = 1
G2L["83"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["83"].BorderSizePixel = 0
G2L["83"].ClipsDescendants = false
G2L["83"].Draggable = false
G2L["83"].Position = UDim2.new(0, 0, 0, 0)
G2L["83"].Rotation = 0
G2L["83"].Selectable = false
G2L["83"].SelectionOrder = 0
G2L["83"].Size = UDim2.new(0, 50, 0, 50)
G2L["83"].Visible = true
G2L["83"].ZIndex = 2
G2L["83"].Parent = G2L["82"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Composite1.UIGradient
G2L["84"].Name = [[UIGradient]]
G2L["84"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(79, 107, 204)), ColorSequenceKeypoint.new(1, Color3.fromRGB(79, 107, 204))};
G2L["84"].Enabled = true
G2L["84"].Rotation = 5
G2L["84"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["84"].Parent = G2L["82"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final
G2L["85"].Name = [[Final]]
G2L["85"].Active = false
G2L["85"].AnchorPoint = Vector2.new(0, 0)
G2L["85"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["85"].BackgroundTransparency = 0
G2L["85"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["85"].BorderSizePixel = 0
G2L["85"].ClipsDescendants = true
G2L["85"].Draggable = false
G2L["85"].Position = UDim2.new(0.5, -50, 0.5, -50)
G2L["85"].Rotation = 0
G2L["85"].Selectable = true
G2L["85"].SelectionOrder = 0
G2L["85"].Size = UDim2.new(0, 100, 0, 100)
G2L["85"].Visible = false
G2L["85"].ZIndex = 3
G2L["85"].Parent = G2L["72"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.UIGradient
G2L["86"].Name = [[UIGradient]]
G2L["86"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(59, 119, 191)), ColorSequenceKeypoint.new(1, Color3.fromRGB(59, 119, 191))};
G2L["86"].Enabled = true
G2L["86"].Rotation = 5
G2L["86"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["86"].Parent = G2L["85"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Label
G2L["87"].Name = [[Label]]
G2L["87"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["87"].Text = [[T]]
G2L["87"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["87"].TextScaled = false
G2L["87"].TextSize = 96
G2L["87"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["87"].TextStrokeTransparency = 1
G2L["87"].TextWrapped = false
G2L["87"].TextXAlignment = Enum.TextXAlignment.Center
G2L["87"].TextYAlignment = Enum.TextYAlignment.Center
G2L["87"].Active = false
G2L["87"].AnchorPoint = Vector2.new(0, 0)
G2L["87"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["87"].BackgroundTransparency = 0
G2L["87"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["87"].BorderSizePixel = 0
G2L["87"].ClipsDescendants = false
G2L["87"].Draggable = false
G2L["87"].Position = UDim2.new(0, 0, 0, 0)
G2L["87"].Rotation = 0
G2L["87"].Selectable = false
G2L["87"].SelectionOrder = 0
G2L["87"].Size = UDim2.new(0, 100, 0, 100)
G2L["87"].Visible = true
G2L["87"].ZIndex = 4
G2L["87"].Parent = G2L["85"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Label.TKLabel
G2L["88"].Name = [[TKLabel]]
G2L["88"].Active = false
G2L["88"].AnchorPoint = Vector2.new(0, 0)
G2L["88"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["88"].BackgroundTransparency = 1
G2L["88"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["88"].BorderSizePixel = 1
G2L["88"].ClipsDescendants = true
G2L["88"].Draggable = false
G2L["88"].Position = UDim2.new(0, 22, 0, 0)
G2L["88"].Rotation = 0
G2L["88"].Selectable = false
G2L["88"].SelectionOrder = 0
G2L["88"].Size = UDim2.new(0, 100, 1, 0)
G2L["88"].Visible = true
G2L["88"].ZIndex = 11
G2L["88"].Parent = G2L["87"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Label.TKLabel.Label
G2L["89"].Name = [[Label]]
G2L["89"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["89"].Text = [[0PK3K 5.0]]
G2L["89"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["89"].TextScaled = false
G2L["89"].TextSize = 24
G2L["89"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["89"].TextStrokeTransparency = 1
G2L["89"].TextWrapped = false
G2L["89"].TextXAlignment = Enum.TextXAlignment.Left
G2L["89"].TextYAlignment = Enum.TextYAlignment.Center
G2L["89"].Active = false
G2L["89"].AnchorPoint = Vector2.new(0, 0)
G2L["89"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["89"].BackgroundTransparency = 1
G2L["89"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["89"].BorderSizePixel = 1
G2L["89"].ClipsDescendants = false
G2L["89"].Draggable = false
G2L["89"].Position = UDim2.new(-1, 0, 0, 0)
G2L["89"].Rotation = 0
G2L["89"].Selectable = false
G2L["89"].SelectionOrder = 0
G2L["89"].Size = UDim2.new(1, 0, 1, 0)
G2L["89"].Visible = true
G2L["89"].ZIndex = 12
G2L["89"].Parent = G2L["88"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar
G2L["90"].Name = [[Topbar]]
G2L["90"].Active = false
G2L["90"].AnchorPoint = Vector2.new(0, 0)
G2L["90"].BackgroundColor3 = Color3.fromRGB(159, 57.000004, 57.000004)
G2L["90"].BackgroundTransparency = 0
G2L["90"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["90"].BorderSizePixel = 0
G2L["90"].ClipsDescendants = false
G2L["90"].Draggable = false
G2L["90"].Position = UDim2.new(0, 0, 0, 0)
G2L["90"].Rotation = 0
G2L["90"].Selectable = false
G2L["90"].SelectionOrder = 0
G2L["90"].Size = UDim2.new(0, 470, 0, 30)
G2L["90"].Visible = false
G2L["90"].ZIndex = 1
G2L["90"].Parent = G2L["85"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar.Controllers
G2L["91"].Name = [[Controllers]]
G2L["91"].Active = false
G2L["91"].AnchorPoint = Vector2.new(0, 0)
G2L["91"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["91"].BackgroundTransparency = 1
G2L["91"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["91"].BorderSizePixel = 1
G2L["91"].ClipsDescendants = false
G2L["91"].Draggable = false
G2L["91"].Position = UDim2.new(1, -128, 0, 3)
G2L["91"].Rotation = 0
G2L["91"].Selectable = false
G2L["91"].SelectionOrder = 0
G2L["91"].Size = UDim2.new(0, 125, 1, -6)
G2L["91"].Visible = true
G2L["91"].ZIndex = 10
G2L["91"].Parent = G2L["90"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar.Controllers.Exit
G2L["92"].Name = [[Exit]]
G2L["92"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["92"].Text = [[]]
G2L["92"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["92"].TextScaled = false
G2L["92"].TextSize = 14
G2L["92"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["92"].TextStrokeTransparency = 1
G2L["92"].TextWrapped = false
G2L["92"].TextXAlignment = Enum.TextXAlignment.Center
G2L["92"].TextYAlignment = Enum.TextYAlignment.Center
G2L["92"].Active = false
G2L["92"].AnchorPoint = Vector2.new(0, 0)
G2L["92"].BackgroundColor3 = Color3.fromRGB(141, 27.000002, 27.000002)
G2L["92"].BackgroundTransparency = 0
G2L["92"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["92"].BorderSizePixel = 0
G2L["92"].ClipsDescendants = false
G2L["92"].Draggable = false
G2L["92"].Position = UDim2.new(1, -24, 0, 0)
G2L["92"].Rotation = 0
G2L["92"].Selectable = true
G2L["92"].SelectionOrder = 0
G2L["92"].Size = UDim2.new(0, 24, 0, 24)
G2L["92"].Visible = true
G2L["92"].ZIndex = 10
G2L["92"].Parent = G2L["91"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Topbar.Controllers.Hide
G2L["93"].Name = [[Hide]]
G2L["93"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["93"].Text = [[]]
G2L["93"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["93"].TextScaled = false
G2L["93"].TextSize = 14
G2L["93"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["93"].TextStrokeTransparency = 1
G2L["93"].TextWrapped = false
G2L["93"].TextXAlignment = Enum.TextXAlignment.Center
G2L["93"].TextYAlignment = Enum.TextYAlignment.Center
G2L["93"].Active = false
G2L["93"].AnchorPoint = Vector2.new(0, 0)
G2L["93"].BackgroundColor3 = Color3.fromRGB(199.00002, 89, 0)
G2L["93"].BackgroundTransparency = 0
G2L["93"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["93"].BorderSizePixel = 0
G2L["93"].ClipsDescendants = false
G2L["93"].Draggable = false
G2L["93"].Position = UDim2.new(1, -50, 0, 0)
G2L["93"].Rotation = 0
G2L["93"].Selectable = true
G2L["93"].SelectionOrder = 0
G2L["93"].Size = UDim2.new(0, 24, 0, 24)
G2L["93"].Visible = true
G2L["93"].ZIndex = 10
G2L["93"].Parent = G2L["91"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Dragify
G2L["94"].Name = [[Dragify]]
G2L["94"].Parent = G2L["85"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Frame
G2L["95"].Name = [[Frame]]
G2L["95"].Active = false
G2L["95"].AnchorPoint = Vector2.new(0, 0)
G2L["95"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["95"].BackgroundTransparency = 1
G2L["95"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["95"].BorderSizePixel = 0
G2L["95"].ClipsDescendants = true
G2L["95"].Draggable = false
G2L["95"].Position = UDim2.new(0, 62, 0, 55)
G2L["95"].Rotation = 0
G2L["95"].Selectable = false
G2L["95"].SelectionOrder = 0
G2L["95"].Size = UDim2.new(0, 30, 0, 25)
G2L["95"].Visible = true
G2L["95"].ZIndex = 6
G2L["95"].Parent = G2L["85"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Frame.Label
G2L["96"].Name = [[Label]]
G2L["96"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["96"].Text = [[SS]]
G2L["96"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["96"].TextScaled = false
G2L["96"].TextSize = 28
G2L["96"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["96"].TextStrokeTransparency = 1
G2L["96"].TextWrapped = false
G2L["96"].TextXAlignment = Enum.TextXAlignment.Left
G2L["96"].TextYAlignment = Enum.TextYAlignment.Center
G2L["96"].Active = false
G2L["96"].AnchorPoint = Vector2.new(0, 0)
G2L["96"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["96"].BackgroundTransparency = 1
G2L["96"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["96"].BorderSizePixel = 1
G2L["96"].ClipsDescendants = false
G2L["96"].Draggable = false
G2L["96"].Position = UDim2.new(-1, 0, 0, 0)
G2L["96"].Rotation = 0
G2L["96"].Selectable = false
G2L["96"].SelectionOrder = 0
G2L["96"].Size = UDim2.new(1, 0, 1, 0)
G2L["96"].Visible = true
G2L["96"].ZIndex = 6
G2L["96"].Parent = G2L["95"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main
G2L["97"].Name = [[Main]]
G2L["97"].Active = false
G2L["97"].AnchorPoint = Vector2.new(0, 0)
G2L["97"].BackgroundColor3 = Color3.fromRGB(130, 47, 47)
G2L["97"].BackgroundTransparency = 0
G2L["97"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["97"].BorderSizePixel = 0
G2L["97"].ClipsDescendants = true
G2L["97"].Draggable = true
G2L["97"].Position = UDim2.new(0, 0, 0, 30)
G2L["97"].Rotation = 0
G2L["97"].Selectable = false
G2L["97"].SelectionOrder = 0
G2L["97"].Size = UDim2.new(1, 0, 0, 405)
G2L["97"].Visible = false
G2L["97"].ZIndex = 13
G2L["97"].Parent = G2L["85"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder
G2L["98"].Name = [[Holder]]
G2L["98"].Active = false
G2L["98"].AnchorPoint = Vector2.new(0, 0)
G2L["98"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["98"].BackgroundTransparency = 1
G2L["98"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["98"].BorderSizePixel = 1
G2L["98"].ClipsDescendants = false
G2L["98"].Draggable = false
G2L["98"].Position = UDim2.new(0, 150, 0, 0)
G2L["98"].Rotation = 0
G2L["98"].Selectable = false
G2L["98"].SelectionOrder = 0
G2L["98"].Size = UDim2.new(0, 320, 0, 365)
G2L["98"].Visible = false
G2L["98"].ZIndex = 14
G2L["98"].Parent = G2L["97"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Template
G2L["99"].Name = [[Template]]
G2L["99"].Active = false
G2L["99"].AnchorPoint = Vector2.new(0, 0)
G2L["99"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["99"].BackgroundTransparency = 1
G2L["99"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["99"].BorderSizePixel = 1
G2L["99"].ClipsDescendants = false
G2L["99"].Draggable = false
G2L["99"].Position = UDim2.new(0, 0, 0, 5)
G2L["99"].Rotation = 0
G2L["99"].Selectable = false
G2L["99"].SelectionOrder = 0
G2L["99"].Size = UDim2.new(1, 0, 1, 0)
G2L["99"].Visible = false
G2L["99"].ZIndex = 15
G2L["99"].Parent = G2L["98"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Template.Container
G2L["100"].Name = [[Container]]
G2L["100"].BottomImage = [[rbxassetid://368504177]]
G2L["100"].CanvasSize = UDim2.new(0, 0, 0, 0)
G2L["100"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["100"].ScrollBarThickness = 5
G2L["100"].TopImage = [[rbxassetid://368504177]]
G2L["100"].Active = false
G2L["100"].AnchorPoint = Vector2.new(0, 0)
G2L["100"].BackgroundColor3 = Color3.fromRGB(130, 47, 47)
G2L["100"].BackgroundTransparency = 1
G2L["100"].BorderColor3 = Color3.fromRGB(83, 0, 0)
G2L["100"].BorderSizePixel = 1
G2L["100"].ClipsDescendants = true
G2L["100"].Draggable = false
G2L["100"].Position = UDim2.new(0, 15, 0, 0)
G2L["100"].Rotation = 0
G2L["100"].Selectable = true
G2L["100"].SelectionOrder = 0
G2L["100"].Size = UDim2.new(1, -28, 0, 355)
G2L["100"].Visible = true
G2L["100"].ZIndex = 15
G2L["100"].Parent = G2L["99"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home
G2L["101"].Name = [[Home]]
G2L["101"].Active = false
G2L["101"].AnchorPoint = Vector2.new(0, 0)
G2L["101"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["101"].BackgroundTransparency = 1
G2L["101"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["101"].BorderSizePixel = 1
G2L["101"].ClipsDescendants = false
G2L["101"].Draggable = false
G2L["101"].Position = UDim2.new(0, 0, 0, 0)
G2L["101"].Rotation = 0
G2L["101"].Selectable = false
G2L["101"].SelectionOrder = 0
G2L["101"].Size = UDim2.new(1, 0, 1, 0)
G2L["101"].Visible = true
G2L["101"].ZIndex = 1
G2L["101"].Parent = G2L["98"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home.Container
G2L["102"].Name = [[Container]]
G2L["102"].Active = false
G2L["102"].AnchorPoint = Vector2.new(0, 0)
G2L["102"].BackgroundColor3 = Color3.fromRGB(130, 47, 47)
G2L["102"].BackgroundTransparency = 0
G2L["102"].BorderColor3 = Color3.fromRGB(83, 0, 0)
G2L["102"].BorderSizePixel = 1
G2L["102"].ClipsDescendants = false
G2L["102"].Draggable = false
G2L["102"].Position = UDim2.new(0, 16, 0, 50)
G2L["102"].Rotation = 0
G2L["102"].Selectable = false
G2L["102"].SelectionOrder = 0
G2L["102"].Size = UDim2.new(1, -28, 0, 250)
G2L["102"].Visible = true
G2L["102"].ZIndex = 1
G2L["102"].Parent = G2L["101"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home.Message
G2L["103"].Name = [[Message]]
G2L["103"].FontFace = Font.new([[rbxasset://fonts/families/HighwayGothic.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["103"].Text = [[Server Message: variable is gay]]
G2L["103"].TextColor3 = Color3.fromRGB(226.00002, 226.00002, 226.00002)
G2L["103"].TextScaled = false
G2L["103"].TextSize = 14
G2L["103"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["103"].TextStrokeTransparency = 0.7
G2L["103"].TextWrapped = false
G2L["103"].TextXAlignment = Enum.TextXAlignment.Center
G2L["103"].TextYAlignment = Enum.TextYAlignment.Center
G2L["103"].Active = false
G2L["103"].AnchorPoint = Vector2.new(0, 0)
G2L["103"].BackgroundColor3 = Color3.fromRGB(163, 57.000004, 57.000004)
G2L["103"].BackgroundTransparency = 0
G2L["103"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["103"].BorderSizePixel = 0
G2L["103"].ClipsDescendants = false
G2L["103"].Draggable = false
G2L["103"].Position = UDim2.new(0, 15, 0, 305)
G2L["103"].Rotation = 0
G2L["103"].Selectable = false
G2L["103"].SelectionOrder = 0
G2L["103"].Size = UDim2.new(1, -30, 0, 25)
G2L["103"].Visible = false
G2L["103"].ZIndex = 1
G2L["103"].Parent = G2L["101"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Home.NameTitle
G2L["104"].Name = [[NameTitle]]
G2L["104"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["104"].Text = [[Welcome, nosyliam]]
G2L["104"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["104"].TextScaled = true
G2L["104"].TextSize = 42
G2L["104"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["104"].TextStrokeTransparency = 0.5
G2L["104"].TextWrapped = true
G2L["104"].TextXAlignment = Enum.TextXAlignment.Center
G2L["104"].TextYAlignment = Enum.TextYAlignment.Center
G2L["104"].Active = false
G2L["104"].AnchorPoint = Vector2.new(0, 0)
G2L["104"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["104"].BackgroundTransparency = 1
G2L["104"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["104"].BorderSizePixel = 0
G2L["104"].ClipsDescendants = false
G2L["104"].Draggable = false
G2L["104"].Position = UDim2.new(0, 25, 0, 10)
G2L["104"].Rotation = 0
G2L["104"].Selectable = true
G2L["104"].SelectionOrder = 0
G2L["104"].Size = UDim2.new(1, -40, 0, 40)
G2L["104"].Visible = true
G2L["104"].ZIndex = 20
G2L["104"].Parent = G2L["101"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor
G2L["105"].Name = [[Executor]]
G2L["105"].Active = false
G2L["105"].AnchorPoint = Vector2.new(0, 0)
G2L["105"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["105"].BackgroundTransparency = 1
G2L["105"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["105"].BorderSizePixel = 1
G2L["105"].ClipsDescendants = false
G2L["105"].Draggable = false
G2L["105"].Position = UDim2.new(0, 0, 0, 5)
G2L["105"].Rotation = 0
G2L["105"].Selectable = false
G2L["105"].SelectionOrder = 0
G2L["105"].Size = UDim2.new(1, 0, 1, 0)
G2L["105"].Visible = false
G2L["105"].ZIndex = 1
G2L["105"].Parent = G2L["98"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container
G2L["106"].Name = [[Container]]
G2L["106"].Active = false
G2L["106"].AnchorPoint = Vector2.new(0, 0)
G2L["106"].BackgroundColor3 = Color3.fromRGB(130, 47, 47)
G2L["106"].BackgroundTransparency = 1
G2L["106"].BorderColor3 = Color3.fromRGB(83, 0, 0)
G2L["106"].BorderSizePixel = 1
G2L["106"].ClipsDescendants = true
G2L["106"].Draggable = false
G2L["106"].Position = UDim2.new(0, 15, 0, 10)
G2L["106"].Rotation = 0
G2L["106"].Selectable = false
G2L["106"].SelectionOrder = 0
G2L["106"].Size = UDim2.new(1, -26, 0, 350)
G2L["106"].Visible = true
G2L["106"].ZIndex = 1
G2L["106"].Parent = G2L["105"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor
G2L["107"].Name = [[Editor]]
G2L["107"].Active = false
G2L["107"].AnchorPoint = Vector2.new(0, 0)
G2L["107"].BackgroundColor3 = Color3.fromRGB(41.519608, 52.84316, 154)
G2L["107"].BackgroundTransparency = 0
G2L["107"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["107"].BorderSizePixel = 1
G2L["107"].ClipsDescendants = true
G2L["107"].Draggable = false
G2L["107"].Position = UDim2.new(0, 0, 0, 0)
G2L["107"].Rotation = 0
G2L["107"].Selectable = false
G2L["107"].SelectionOrder = 0
G2L["107"].Size = UDim2.new(1, 0, 0, 265)
G2L["107"].Visible = true
G2L["107"].ZIndex = 1
G2L["107"].Parent = G2L["106"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame
G2L["108"].Name = [[SFrame]]
G2L["108"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["108"].CanvasSize = UDim2.new(0, 0, 0, 20)
G2L["108"].HorizontalScrollBarInset = Enum.ScrollBarInset.Always
G2L["108"].ScrollBarThickness = 3
G2L["108"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["108"].Active = false
G2L["108"].AnchorPoint = Vector2.new(0, 0)
G2L["108"].BackgroundColor3 = Color3.fromRGB(41.519608, 52.84316, 154)
G2L["108"].BackgroundTransparency = 0
G2L["108"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["108"].BorderSizePixel = 0
G2L["108"].ClipsDescendants = true
G2L["108"].Draggable = false
G2L["108"].Position = UDim2.new(0, 26, 0, 0)
G2L["108"].Rotation = 0
G2L["108"].Selectable = true
G2L["108"].SelectionOrder = 0
G2L["108"].Size = UDim2.new(0, 262, 1, 0)
G2L["108"].Visible = true
G2L["108"].ZIndex = 15
G2L["108"].Parent = G2L["107"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox
G2L["109"].Name = [[TextBox]]
G2L["109"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["109"].MultiLine = true
G2L["109"].PlaceholderColor3 = Color3.new(0.69803923, 0.69803923, 0.69803923)
G2L["109"].PlaceholderText = [[]]
G2L["109"].Text = [[]]
G2L["109"].TextColor3 = Color3.fromRGB(178, 178, 178)
G2L["109"].TextScaled = false
G2L["109"].TextSize = 15
G2L["109"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["109"].TextStrokeTransparency = 1
G2L["109"].TextWrapped = false
G2L["109"].TextXAlignment = Enum.TextXAlignment.Left
G2L["109"].TextYAlignment = Enum.TextYAlignment.Top
G2L["109"].Active = false
G2L["109"].AnchorPoint = Vector2.new(0, 0)
G2L["109"].BackgroundColor3 = Color3.fromRGB(41.519608, 52.84316, 154)
G2L["109"].BackgroundTransparency = 0
G2L["109"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["109"].BorderSizePixel = 0
G2L["109"].ClipsDescendants = true
G2L["109"].Draggable = false
G2L["109"].Position = UDim2.new(0, 0, 0, 0)
G2L["109"].Rotation = 0
G2L["109"].Selectable = true
G2L["109"].SelectionOrder = 0
G2L["109"].Size = UDim2.new(0, 270, 0, 250)
G2L["109"].Visible = true
G2L["109"].ZIndex = 17
G2L["109"].Parent = G2L["108"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Tokens_
G2L["110"].Name = [[Tokens_]]
G2L["110"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["110"].Text = [[]]
G2L["110"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["110"].TextScaled = false
G2L["110"].TextSize = 15
G2L["110"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["110"].TextStrokeTransparency = 1
G2L["110"].TextWrapped = true
G2L["110"].TextXAlignment = Enum.TextXAlignment.Left
G2L["110"].TextYAlignment = Enum.TextYAlignment.Top
G2L["110"].Active = false
G2L["110"].AnchorPoint = Vector2.new(0, 0)
G2L["110"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["110"].BackgroundTransparency = 1
G2L["110"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["110"].BorderSizePixel = 1
G2L["110"].ClipsDescendants = false
G2L["110"].Draggable = false
G2L["110"].Position = UDim2.new(0, 0, 0, 0)
G2L["110"].Rotation = 0
G2L["110"].Selectable = false
G2L["110"].SelectionOrder = 0
G2L["110"].Size = UDim2.new(1, 0, 1, 0)
G2L["110"].Visible = true
G2L["110"].ZIndex = 17
G2L["110"].Parent = G2L["109"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Strings_
G2L["111"].Name = [[Strings_]]
G2L["111"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["111"].Text = [[]]
G2L["111"].TextColor3 = Color3.fromRGB(173, 241.00002, 149)
G2L["111"].TextScaled = false
G2L["111"].TextSize = 15
G2L["111"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["111"].TextStrokeTransparency = 1
G2L["111"].TextWrapped = true
G2L["111"].TextXAlignment = Enum.TextXAlignment.Left
G2L["111"].TextYAlignment = Enum.TextYAlignment.Top
G2L["111"].Active = false
G2L["111"].AnchorPoint = Vector2.new(0, 0)
G2L["111"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["111"].BackgroundTransparency = 1
G2L["111"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["111"].BorderSizePixel = 1
G2L["111"].ClipsDescendants = false
G2L["111"].Draggable = false
G2L["111"].Position = UDim2.new(0, 0, 0, 0)
G2L["111"].Rotation = 0
G2L["111"].Selectable = false
G2L["111"].SelectionOrder = 0
G2L["111"].Size = UDim2.new(1, 0, 1, 0)
G2L["111"].Visible = true
G2L["111"].ZIndex = 17
G2L["111"].Parent = G2L["109"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.RemoteHighlight_
G2L["112"].Name = [[RemoteHighlight_]]
G2L["112"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["112"].Text = [[]]
G2L["112"].TextColor3 = Color3.fromRGB(0, 144.99988, 255)
G2L["112"].TextScaled = false
G2L["112"].TextSize = 15
G2L["112"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["112"].TextStrokeTransparency = 1
G2L["112"].TextWrapped = true
G2L["112"].TextXAlignment = Enum.TextXAlignment.Left
G2L["112"].TextYAlignment = Enum.TextYAlignment.Top
G2L["112"].Active = false
G2L["112"].AnchorPoint = Vector2.new(0, 0)
G2L["112"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["112"].BackgroundTransparency = 1
G2L["112"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["112"].BorderSizePixel = 1
G2L["112"].ClipsDescendants = false
G2L["112"].Draggable = false
G2L["112"].Position = UDim2.new(0, 0, 0, 0)
G2L["112"].Rotation = 0
G2L["112"].Selectable = false
G2L["112"].SelectionOrder = 0
G2L["112"].Size = UDim2.new(1, 0, 1, 0)
G2L["112"].Visible = true
G2L["112"].ZIndex = 17
G2L["112"].Parent = G2L["109"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Numbers_
G2L["113"].Name = [[Numbers_]]
G2L["113"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["113"].Text = [[]]
G2L["113"].TextColor3 = Color3.fromRGB(255, 198.00002, 0)
G2L["113"].TextScaled = false
G2L["113"].TextSize = 15
G2L["113"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["113"].TextStrokeTransparency = 1
G2L["113"].TextWrapped = true
G2L["113"].TextXAlignment = Enum.TextXAlignment.Left
G2L["113"].TextYAlignment = Enum.TextYAlignment.Top
G2L["113"].Active = false
G2L["113"].AnchorPoint = Vector2.new(0, 0)
G2L["113"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["113"].BackgroundTransparency = 1
G2L["113"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["113"].BorderSizePixel = 1
G2L["113"].ClipsDescendants = false
G2L["113"].Draggable = false
G2L["113"].Position = UDim2.new(0, 0, 0, 0)
G2L["113"].Rotation = 0
G2L["113"].Selectable = false
G2L["113"].SelectionOrder = 0
G2L["113"].Size = UDim2.new(1, 0, 1, 0)
G2L["113"].Visible = true
G2L["113"].ZIndex = 17
G2L["113"].Parent = G2L["109"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Comments_
G2L["114"].Name = [[Comments_]]
G2L["114"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["114"].Text = [[]]
G2L["114"].TextColor3 = Color3.fromRGB(59.000004, 200.00002, 59.000004)
G2L["114"].TextScaled = false
G2L["114"].TextSize = 15
G2L["114"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["114"].TextStrokeTransparency = 1
G2L["114"].TextWrapped = true
G2L["114"].TextXAlignment = Enum.TextXAlignment.Left
G2L["114"].TextYAlignment = Enum.TextYAlignment.Top
G2L["114"].Active = false
G2L["114"].AnchorPoint = Vector2.new(0, 0)
G2L["114"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["114"].BackgroundTransparency = 1
G2L["114"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["114"].BorderSizePixel = 1
G2L["114"].ClipsDescendants = false
G2L["114"].Draggable = false
G2L["114"].Position = UDim2.new(0, 0, 0, 0)
G2L["114"].Rotation = 0
G2L["114"].Selectable = false
G2L["114"].SelectionOrder = 0
G2L["114"].Size = UDim2.new(1, 0, 1, 0)
G2L["114"].Visible = true
G2L["114"].ZIndex = 17
G2L["114"].Parent = G2L["109"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Globals_
G2L["115"].Name = [[Globals_]]
G2L["115"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["115"].Text = [[]]
G2L["115"].TextColor3 = Color3.fromRGB(132, 214.00002, 247.00002)
G2L["115"].TextScaled = false
G2L["115"].TextSize = 15
G2L["115"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["115"].TextStrokeTransparency = 1
G2L["115"].TextWrapped = true
G2L["115"].TextXAlignment = Enum.TextXAlignment.Left
G2L["115"].TextYAlignment = Enum.TextYAlignment.Top
G2L["115"].Active = false
G2L["115"].AnchorPoint = Vector2.new(0, 0)
G2L["115"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["115"].BackgroundTransparency = 1
G2L["115"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["115"].BorderSizePixel = 1
G2L["115"].ClipsDescendants = false
G2L["115"].Draggable = false
G2L["115"].Position = UDim2.new(0, 0, 0, 0)
G2L["115"].Rotation = 0
G2L["115"].Selectable = false
G2L["115"].SelectionOrder = 0
G2L["115"].Size = UDim2.new(1, 0, 1, 0)
G2L["115"].Visible = true
G2L["115"].ZIndex = 17
G2L["115"].Parent = G2L["109"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.TextBox.Keywords_
G2L["116"].Name = [[Keywords_]]
G2L["116"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["116"].Text = [[]]
G2L["116"].TextColor3 = Color3.fromRGB(248.00002, 109.00001, 124.00001)
G2L["116"].TextScaled = false
G2L["116"].TextSize = 15
G2L["116"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["116"].TextStrokeTransparency = 1
G2L["116"].TextWrapped = true
G2L["116"].TextXAlignment = Enum.TextXAlignment.Left
G2L["116"].TextYAlignment = Enum.TextYAlignment.Top
G2L["116"].Active = false
G2L["116"].AnchorPoint = Vector2.new(0, 0)
G2L["116"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["116"].BackgroundTransparency = 1
G2L["116"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["116"].BorderSizePixel = 1
G2L["116"].ClipsDescendants = false
G2L["116"].Draggable = false
G2L["116"].Position = UDim2.new(0, 0, 0, 0)
G2L["116"].Rotation = 0
G2L["116"].Selectable = false
G2L["116"].SelectionOrder = 0
G2L["116"].Size = UDim2.new(1, 0, 1, 0)
G2L["116"].Visible = true
G2L["116"].ZIndex = 17
G2L["116"].Parent = G2L["109"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.Editor
G2L["117"].Name = [[Editor]]
G2L["117"].Parent = G2L["108"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.Lines
G2L["118"].Name = [[Lines]]
G2L["118"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["118"].Text = [[1
]]
G2L["118"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["118"].TextScaled = false
G2L["118"].TextSize = 15
G2L["118"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["118"].TextStrokeTransparency = 1
G2L["118"].TextWrapped = true
G2L["118"].TextXAlignment = Enum.TextXAlignment.Center
G2L["118"].TextYAlignment = Enum.TextYAlignment.Top
G2L["118"].Active = false
G2L["118"].AnchorPoint = Vector2.new(0, 0)
G2L["118"].BackgroundColor3 = Color3.fromRGB(36.127453, 45.98041, 134)
G2L["118"].BackgroundTransparency = 0
G2L["118"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["118"].BorderSizePixel = 0
G2L["118"].ClipsDescendants = false
G2L["118"].Draggable = false
G2L["118"].Position = UDim2.new(0, 0, 0, 0)
G2L["118"].Rotation = 0
G2L["118"].Selectable = false
G2L["118"].SelectionOrder = 0
G2L["118"].Size = UDim2.new(0, 26, 0, 701)
G2L["118"].Visible = true
G2L["118"].ZIndex = 16
G2L["118"].Parent = G2L["107"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Navigation
G2L["119"].Name = [[Navigation]]
G2L["119"].Active = false
G2L["119"].AnchorPoint = Vector2.new(0, 0)
G2L["119"].BackgroundColor3 = Color3.fromRGB(120.00001, 42, 42)
G2L["119"].BackgroundTransparency = 0
G2L["119"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["119"].BorderSizePixel = 0
G2L["119"].ClipsDescendants = false
G2L["119"].Draggable = false
G2L["119"].Position = UDim2.new(0, 0, 0, 0)
G2L["119"].Rotation = 0
G2L["119"].Selectable = false
G2L["119"].SelectionOrder = 0
G2L["119"].Size = UDim2.new(0, 150, 1, 0)
G2L["119"].Visible = true
G2L["119"].ZIndex = 30
G2L["119"].Parent = G2L["97"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Command
G2L["120"].Name = [[Command]]
G2L["120"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["120"].MultiLine = false
G2L["120"].PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
G2L["120"].PlaceholderText = [[Press ; to enter a command]]
G2L["120"].Text = [[]]
G2L["120"].TextColor3 = Color3.fromRGB(209.00002, 209.00002, 209.00002)
G2L["120"].TextScaled = false
G2L["120"].TextSize = 12
G2L["120"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["120"].TextStrokeTransparency = 0.8
G2L["120"].TextWrapped = false
G2L["120"].TextXAlignment = Enum.TextXAlignment.Center
G2L["120"].TextYAlignment = Enum.TextYAlignment.Center
G2L["120"].Active = false
G2L["120"].AnchorPoint = Vector2.new(0, 0)
G2L["120"].BackgroundColor3 = Color3.fromRGB(163, 57.000004, 57.000004)
G2L["120"].BackgroundTransparency = 0
G2L["120"].BorderColor3 = Color3.fromRGB(83, 0, 0)
G2L["120"].BorderSizePixel = 0
G2L["120"].ClipsDescendants = false
G2L["120"].Draggable = false
G2L["120"].Position = UDim2.new(0, 156, 1, 0)
G2L["120"].Rotation = 0
G2L["120"].Selectable = false
G2L["120"].SelectionOrder = 0
G2L["120"].Size = UDim2.new(1, -162, 0, 25)
G2L["120"].Visible = true
G2L["120"].ZIndex = 14
G2L["120"].Parent = G2L["97"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse
G2L["121"].Name = [[CMouse]]
G2L["121"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader
G2L["122"].Name = [[Loader]]
G2L["122"].Parent = G2L["121"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse
G2L["123"].Name = [[CMouse]]
G2L["123"].Parent = G2L["122"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse
G2L["124"].Name = [[CMouse]]
G2L["124"].Enabled = true
G2L["124"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["124"].Parent = G2L["123"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetOrigin
G2L["125"].Name = [[GetOrigin]]
G2L["125"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetTarget
G2L["126"].Name = [[GetTarget]]
G2L["126"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetX
G2L["127"].Name = [[GetX]]
G2L["127"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetY
G2L["128"].Name = [[GetY]]
G2L["128"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.LocalCore
G2L["129"].Name = [[LocalCore]]
G2L["129"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B1D
G2L["130"].Name = [[B1D]]
G2L["130"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B1U
G2L["131"].Name = [[B1U]]
G2L["131"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B2D
G2L["132"].Name = [[B2D]]
G2L["132"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.B2U
G2L["133"].Name = [[B2U]]
G2L["133"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.KD
G2L["134"].Name = [[KD]]
G2L["134"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.KU
G2L["135"].Name = [[KU]]
G2L["135"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.RStepped
G2L["136"].Name = [[RStepped]]
G2L["136"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetHit
G2L["137"].Name = [[GetHit]]
G2L["137"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.Move
G2L["138"].Name = [[Move]]
G2L["138"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ReadText
G2L["139"].Name = [[ReadText]]
G2L["139"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetCameraCFrame
G2L["140"].Name = [[GetCameraCFrame]]
G2L["140"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ConnectFocusLost
G2L["141"].Name = [[ConnectFocusLost]]
G2L["141"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ConnectInputRead
G2L["142"].Name = [[ConnectInputRead]]
G2L["142"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.CaptureFocus
G2L["143"].Name = [[CaptureFocus]]
G2L["143"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.SetText
G2L["144"].Name = [[SetText]]
G2L["144"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.SetCameraCFrame
G2L["145"].Name = [[SetCameraCFrame]]
G2L["145"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.GetTargetSurface
G2L["146"].Name = [[GetTargetSurface]]
G2L["146"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.FOV
G2L["147"].Name = [[FOV]]
G2L["147"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.CaptureFocus
G2L["148"].Name = [[CaptureFocus]]
G2L["148"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.ConnectInputBegan
G2L["149"].Name = [[ConnectInputBegan]]
G2L["149"].Parent = G2L["124"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client
G2L["150"].Name = [[Client]]
G2L["150"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader
G2L["151"].Name = [[Loader]]
G2L["151"].Parent = G2L["150"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client
G2L["152"].Name = [[Client]]
G2L["152"].Parent = G2L["151"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client
G2L["153"].Name = [[Client]]
G2L["153"].Enabled = true
G2L["153"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["153"].Parent = G2L["152"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.LocalCore
G2L["154"].Name = [[LocalCore]]
G2L["154"].Parent = G2L["153"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.Execute
G2L["155"].Name = [[Execute]]
G2L["155"].Parent = G2L["153"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker
G2L["156"].Name = [[ColorPicker]]
G2L["156"].Enabled = false
G2L["156"].ZIndexBehavior = Enum.ZIndexBehavior.Global
G2L["156"].Parent = G2L["153"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker
G2L["157"].Name = [[ColorPicker]]
G2L["157"].Active = false
G2L["157"].AnchorPoint = Vector2.new(0, 0)
G2L["157"].BackgroundColor3 = Color3.fromRGB(100.00001, 100.00001, 100.00001)
G2L["157"].BackgroundTransparency = 1
G2L["157"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["157"].BorderSizePixel = 0
G2L["157"].ClipsDescendants = false
G2L["157"].Draggable = false
G2L["157"].Position = UDim2.new(0, 100, 0, 100)
G2L["157"].Rotation = 0
G2L["157"].Selectable = false
G2L["157"].SelectionOrder = 0
G2L["157"].Size = UDim2.new(0, 275, 0, 330)
G2L["157"].Visible = true
G2L["157"].ZIndex = 1
G2L["157"].Parent = G2L["156"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content
G2L["158"].Name = [[Content]]
G2L["158"].Active = false
G2L["158"].AnchorPoint = Vector2.new(0, 0)
G2L["158"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["158"].BackgroundTransparency = 0
G2L["158"].BorderColor3 = Color3.fromRGB(37, 53.000004, 54.000004)
G2L["158"].BorderSizePixel = 1
G2L["158"].ClipsDescendants = false
G2L["158"].Draggable = false
G2L["158"].Position = UDim2.new(0, 1, 0, 25)
G2L["158"].Rotation = 0
G2L["158"].Selectable = false
G2L["158"].SelectionOrder = 0
G2L["158"].Size = UDim2.new(1, -2, 1, -25)
G2L["158"].Visible = true
G2L["158"].ZIndex = 1
G2L["158"].Parent = G2L["157"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorStrip
G2L["159"].Name = [[ColorStrip]]
G2L["159"].Image = [[rbxassetid://1072518502]]
G2L["159"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["159"].ScaleType = Enum.ScaleType.Stretch
G2L["159"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["159"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["159"].Active = false
G2L["159"].AnchorPoint = Vector2.new(0, 0)
G2L["159"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["159"].BackgroundTransparency = 0
G2L["159"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["159"].BorderSizePixel = 1
G2L["159"].ClipsDescendants = false
G2L["159"].Draggable = false
G2L["159"].Position = UDim2.new(1, -30, 0, 5)
G2L["159"].Rotation = 0
G2L["159"].Selectable = false
G2L["159"].SelectionOrder = 0
G2L["159"].Size = UDim2.new(0, 13, 0, 200)
G2L["159"].Visible = true
G2L["159"].ZIndex = 1
G2L["159"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Preview
G2L["160"].Name = [[Preview]]
G2L["160"].Active = false
G2L["160"].AnchorPoint = Vector2.new(0, 0)
G2L["160"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["160"].BackgroundTransparency = 0
G2L["160"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["160"].BorderSizePixel = 1
G2L["160"].ClipsDescendants = false
G2L["160"].Draggable = false
G2L["160"].Position = UDim2.new(1, -260, 0, 211)
G2L["160"].Rotation = 0
G2L["160"].Selectable = false
G2L["160"].SelectionOrder = 0
G2L["160"].Size = UDim2.new(0, 35, 1, -245)
G2L["160"].Visible = true
G2L["160"].ZIndex = 1
G2L["160"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame
G2L["161"].Name = [[ColorSpaceFrame]]
G2L["161"].Active = false
G2L["161"].AnchorPoint = Vector2.new(0, 0)
G2L["161"].BackgroundColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["161"].BackgroundTransparency = 0
G2L["161"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["161"].BorderSizePixel = 0
G2L["161"].ClipsDescendants = true
G2L["161"].Draggable = false
G2L["161"].Position = UDim2.new(1, -261, 0, 4)
G2L["161"].Rotation = 0
G2L["161"].Selectable = false
G2L["161"].SelectionOrder = 0
G2L["161"].Size = UDim2.new(0, 222, 0, 202)
G2L["161"].Visible = true
G2L["161"].ZIndex = 1
G2L["161"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace
G2L["162"].Name = [[ColorSpace]]
G2L["162"].Image = [[rbxassetid://1072518406]]
G2L["162"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["162"].ScaleType = Enum.ScaleType.Stretch
G2L["162"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["162"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["162"].Active = false
G2L["162"].AnchorPoint = Vector2.new(0, 0)
G2L["162"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["162"].BackgroundTransparency = 0
G2L["162"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["162"].BorderSizePixel = 0
G2L["162"].ClipsDescendants = false
G2L["162"].Draggable = false
G2L["162"].Position = UDim2.new(0, 1, 0, 1)
G2L["162"].Rotation = 0
G2L["162"].Selectable = false
G2L["162"].SelectionOrder = 0
G2L["162"].Size = UDim2.new(0, 220, 0, 200)
G2L["162"].Visible = true
G2L["162"].ZIndex = 1
G2L["162"].Parent = G2L["161"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace.Scope
G2L["163"].Name = [[Scope]]
G2L["163"].Active = false
G2L["163"].AnchorPoint = Vector2.new(0, 0)
G2L["163"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["163"].BackgroundTransparency = 1
G2L["163"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["163"].BorderSizePixel = 0
G2L["163"].ClipsDescendants = false
G2L["163"].Draggable = false
G2L["163"].Position = UDim2.new(0, 210, 0, 190)
G2L["163"].Rotation = 0
G2L["163"].Selectable = false
G2L["163"].SelectionOrder = 0
G2L["163"].Size = UDim2.new(0, 20, 0, 20)
G2L["163"].Visible = true
G2L["163"].ZIndex = 1
G2L["163"].Parent = G2L["162"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace.Scope.Line
G2L["164"].Name = [[Line]]
G2L["164"].Active = false
G2L["164"].AnchorPoint = Vector2.new(0, 0)
G2L["164"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["164"].BackgroundTransparency = 0
G2L["164"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["164"].BorderSizePixel = 0
G2L["164"].ClipsDescendants = false
G2L["164"].Draggable = false
G2L["164"].Position = UDim2.new(0, 9, 0, 0)
G2L["164"].Rotation = 0
G2L["164"].Selectable = false
G2L["164"].SelectionOrder = 0
G2L["164"].Size = UDim2.new(0, 2, 0, 20)
G2L["164"].Visible = true
G2L["164"].ZIndex = 1
G2L["164"].Parent = G2L["163"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ColorSpaceFrame.ColorSpace.Scope.Line
G2L["165"].Name = [[Line]]
G2L["165"].Active = false
G2L["165"].AnchorPoint = Vector2.new(0, 0)
G2L["165"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["165"].BackgroundTransparency = 0
G2L["165"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["165"].BorderSizePixel = 0
G2L["165"].ClipsDescendants = false
G2L["165"].Draggable = false
G2L["165"].Position = UDim2.new(0, 0, 0, 9)
G2L["165"].Rotation = 0
G2L["165"].Selectable = false
G2L["165"].SelectionOrder = 0
G2L["165"].Size = UDim2.new(0, 20, 0, 2)
G2L["165"].Visible = true
G2L["165"].ZIndex = 1
G2L["165"].Parent = G2L["163"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame
G2L["166"].Name = [[ArrowFrame]]
G2L["166"].Active = false
G2L["166"].AnchorPoint = Vector2.new(0, 0)
G2L["166"].BackgroundColor3 = Color3.fromRGB(80, 80, 80)
G2L["166"].BackgroundTransparency = 0
G2L["166"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["166"].BorderSizePixel = 0
G2L["166"].ClipsDescendants = false
G2L["166"].Draggable = false
G2L["166"].Position = UDim2.new(1, -16, 0, 1)
G2L["166"].Rotation = 0
G2L["166"].Selectable = false
G2L["166"].SelectionOrder = 0
G2L["166"].Size = UDim2.new(0, 5, 0, 208)
G2L["166"].Visible = true
G2L["166"].ZIndex = 1
G2L["166"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow
G2L["167"].Name = [[Arrow]]
G2L["167"].Active = false
G2L["167"].AnchorPoint = Vector2.new(0, 0)
G2L["167"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["167"].BackgroundTransparency = 1
G2L["167"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["167"].BorderSizePixel = 1
G2L["167"].ClipsDescendants = false
G2L["167"].Draggable = false
G2L["167"].Position = UDim2.new(0, -2, 0, -4)
G2L["167"].Rotation = 0
G2L["167"].Selectable = false
G2L["167"].SelectionOrder = 0
G2L["167"].Size = UDim2.new(0, 8, 0, 16)
G2L["167"].Visible = true
G2L["167"].ZIndex = 1
G2L["167"].Parent = G2L["166"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["168"].Name = [[Frame]]
G2L["168"].Active = false
G2L["168"].AnchorPoint = Vector2.new(0, 0)
G2L["168"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["168"].BackgroundTransparency = 0
G2L["168"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["168"].BorderSizePixel = 0
G2L["168"].ClipsDescendants = false
G2L["168"].Draggable = false
G2L["168"].Position = UDim2.new(0, 2, 0, 8)
G2L["168"].Rotation = 0
G2L["168"].Selectable = false
G2L["168"].SelectionOrder = 0
G2L["168"].Size = UDim2.new(0, 1, 0, 1)
G2L["168"].Visible = true
G2L["168"].ZIndex = 1
G2L["168"].Parent = G2L["167"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["169"].Name = [[Frame]]
G2L["169"].Active = false
G2L["169"].AnchorPoint = Vector2.new(0, 0)
G2L["169"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["169"].BackgroundTransparency = 0
G2L["169"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["169"].BorderSizePixel = 0
G2L["169"].ClipsDescendants = false
G2L["169"].Draggable = false
G2L["169"].Position = UDim2.new(0, 3, 0, 7)
G2L["169"].Rotation = 0
G2L["169"].Selectable = false
G2L["169"].SelectionOrder = 0
G2L["169"].Size = UDim2.new(0, 1, 0, 3)
G2L["169"].Visible = true
G2L["169"].ZIndex = 1
G2L["169"].Parent = G2L["167"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["170"].Name = [[Frame]]
G2L["170"].Active = false
G2L["170"].AnchorPoint = Vector2.new(0, 0)
G2L["170"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["170"].BackgroundTransparency = 0
G2L["170"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["170"].BorderSizePixel = 0
G2L["170"].ClipsDescendants = false
G2L["170"].Draggable = false
G2L["170"].Position = UDim2.new(0, 4, 0, 6)
G2L["170"].Rotation = 0
G2L["170"].Selectable = false
G2L["170"].SelectionOrder = 0
G2L["170"].Size = UDim2.new(0, 1, 0, 5)
G2L["170"].Visible = true
G2L["170"].ZIndex = 1
G2L["170"].Parent = G2L["167"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["171"].Name = [[Frame]]
G2L["171"].Active = false
G2L["171"].AnchorPoint = Vector2.new(0, 0)
G2L["171"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["171"].BackgroundTransparency = 0
G2L["171"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["171"].BorderSizePixel = 0
G2L["171"].ClipsDescendants = false
G2L["171"].Draggable = false
G2L["171"].Position = UDim2.new(0, 5, 0, 5)
G2L["171"].Rotation = 0
G2L["171"].Selectable = false
G2L["171"].SelectionOrder = 0
G2L["171"].Size = UDim2.new(0, 1, 0, 7)
G2L["171"].Visible = true
G2L["171"].ZIndex = 1
G2L["171"].Parent = G2L["167"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.ArrowFrame.Arrow.Frame
G2L["172"].Name = [[Frame]]
G2L["172"].Active = false
G2L["172"].AnchorPoint = Vector2.new(0, 0)
G2L["172"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["172"].BackgroundTransparency = 0
G2L["172"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["172"].BorderSizePixel = 0
G2L["172"].ClipsDescendants = false
G2L["172"].Draggable = false
G2L["172"].Position = UDim2.new(0, 6, 0, 4)
G2L["172"].Rotation = 0
G2L["172"].Selectable = false
G2L["172"].SelectionOrder = 0
G2L["172"].Size = UDim2.new(0, 1, 0, 9)
G2L["172"].Visible = true
G2L["172"].ZIndex = 1
G2L["172"].Parent = G2L["167"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue
G2L["173"].Name = [[Hue]]
G2L["173"].Active = false
G2L["173"].AnchorPoint = Vector2.new(0, 0)
G2L["173"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["173"].BackgroundTransparency = 0
G2L["173"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["173"].BorderSizePixel = 1
G2L["173"].ClipsDescendants = false
G2L["173"].Draggable = false
G2L["173"].Position = UDim2.new(1, -180, 0, 211)
G2L["173"].Rotation = 0
G2L["173"].Selectable = false
G2L["173"].SelectionOrder = 0
G2L["173"].Size = UDim2.new(0, 52, 0, 16)
G2L["173"].Visible = true
G2L["173"].ZIndex = 1
G2L["173"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input
G2L["174"].Name = [[Input]]
G2L["174"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["174"].MultiLine = false
G2L["174"].PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
G2L["174"].PlaceholderText = [[]]
G2L["174"].Text = [[0]]
G2L["174"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["174"].TextScaled = false
G2L["174"].TextSize = 14
G2L["174"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["174"].TextStrokeTransparency = 1
G2L["174"].TextWrapped = false
G2L["174"].TextXAlignment = Enum.TextXAlignment.Left
G2L["174"].TextYAlignment = Enum.TextYAlignment.Center
G2L["174"].Active = false
G2L["174"].AnchorPoint = Vector2.new(0, 0)
G2L["174"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["174"].BackgroundTransparency = 1
G2L["174"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["174"].BorderSizePixel = 1
G2L["174"].ClipsDescendants = false
G2L["174"].Draggable = false
G2L["174"].Position = UDim2.new(0, 2, 0, 0)
G2L["174"].Rotation = 0
G2L["174"].Selectable = true
G2L["174"].SelectionOrder = 0
G2L["174"].Size = UDim2.new(0, 50, 0, 16)
G2L["174"].Visible = true
G2L["174"].ZIndex = 1
G2L["174"].Parent = G2L["173"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame
G2L["175"].Name = [[ArrowFrame]]
G2L["175"].Active = false
G2L["175"].AnchorPoint = Vector2.new(0, 0)
G2L["175"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["175"].BackgroundTransparency = 1
G2L["175"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["175"].BorderSizePixel = 0
G2L["175"].ClipsDescendants = false
G2L["175"].Draggable = false
G2L["175"].Position = UDim2.new(1, -16, 0, 0)
G2L["175"].Rotation = 0
G2L["175"].Selectable = false
G2L["175"].SelectionOrder = 0
G2L["175"].Size = UDim2.new(0, 16, 1, 0)
G2L["175"].Visible = true
G2L["175"].ZIndex = 1
G2L["175"].Parent = G2L["174"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up
G2L["176"].Name = [[Up]]
G2L["176"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["176"].Text = [[]]
G2L["176"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["176"].TextScaled = false
G2L["176"].TextSize = 14
G2L["176"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["176"].TextStrokeTransparency = 1
G2L["176"].TextWrapped = false
G2L["176"].TextXAlignment = Enum.TextXAlignment.Center
G2L["176"].TextYAlignment = Enum.TextYAlignment.Center
G2L["176"].Active = false
G2L["176"].AnchorPoint = Vector2.new(0, 0)
G2L["176"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["176"].BackgroundTransparency = 1
G2L["176"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["176"].BorderSizePixel = 0
G2L["176"].ClipsDescendants = false
G2L["176"].Draggable = false
G2L["176"].Position = UDim2.new(0, 0, 0, 0)
G2L["176"].Rotation = 0
G2L["176"].Selectable = true
G2L["176"].SelectionOrder = 0
G2L["176"].Size = UDim2.new(1, 0, 0, 8)
G2L["176"].Visible = true
G2L["176"].ZIndex = 1
G2L["176"].Parent = G2L["175"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow
G2L["177"].Name = [[Arrow]]
G2L["177"].Active = false
G2L["177"].AnchorPoint = Vector2.new(0, 0)
G2L["177"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["177"].BackgroundTransparency = 1
G2L["177"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["177"].BorderSizePixel = 1
G2L["177"].ClipsDescendants = false
G2L["177"].Draggable = false
G2L["177"].Position = UDim2.new(0, 0, 0, 0)
G2L["177"].Rotation = 0
G2L["177"].Selectable = false
G2L["177"].SelectionOrder = 0
G2L["177"].Size = UDim2.new(0, 16, 0, 8)
G2L["177"].Visible = true
G2L["177"].ZIndex = 1
G2L["177"].Parent = G2L["176"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow.Frame
G2L["178"].Name = [[Frame]]
G2L["178"].Active = false
G2L["178"].AnchorPoint = Vector2.new(0, 0)
G2L["178"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["178"].BackgroundTransparency = 0
G2L["178"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["178"].BorderSizePixel = 0
G2L["178"].ClipsDescendants = false
G2L["178"].Draggable = false
G2L["178"].Position = UDim2.new(0, 8, 0, 3)
G2L["178"].Rotation = 0
G2L["178"].Selectable = false
G2L["178"].SelectionOrder = 0
G2L["178"].Size = UDim2.new(0, 1, 0, 1)
G2L["178"].Visible = true
G2L["178"].ZIndex = 1
G2L["178"].Parent = G2L["177"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow.Frame
G2L["179"].Name = [[Frame]]
G2L["179"].Active = false
G2L["179"].AnchorPoint = Vector2.new(0, 0)
G2L["179"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["179"].BackgroundTransparency = 0
G2L["179"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["179"].BorderSizePixel = 0
G2L["179"].ClipsDescendants = false
G2L["179"].Draggable = false
G2L["179"].Position = UDim2.new(0, 7, 0, 4)
G2L["179"].Rotation = 0
G2L["179"].Selectable = false
G2L["179"].SelectionOrder = 0
G2L["179"].Size = UDim2.new(0, 3, 0, 1)
G2L["179"].Visible = true
G2L["179"].ZIndex = 1
G2L["179"].Parent = G2L["177"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Up.Arrow.Frame
G2L["180"].Name = [[Frame]]
G2L["180"].Active = false
G2L["180"].AnchorPoint = Vector2.new(0, 0)
G2L["180"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["180"].BackgroundTransparency = 0
G2L["180"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["180"].BorderSizePixel = 0
G2L["180"].ClipsDescendants = false
G2L["180"].Draggable = false
G2L["180"].Position = UDim2.new(0, 6, 0, 5)
G2L["180"].Rotation = 0
G2L["180"].Selectable = false
G2L["180"].SelectionOrder = 0
G2L["180"].Size = UDim2.new(0, 5, 0, 1)
G2L["180"].Visible = true
G2L["180"].ZIndex = 1
G2L["180"].Parent = G2L["177"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down
G2L["181"].Name = [[Down]]
G2L["181"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["181"].Text = [[]]
G2L["181"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["181"].TextScaled = false
G2L["181"].TextSize = 14
G2L["181"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["181"].TextStrokeTransparency = 1
G2L["181"].TextWrapped = false
G2L["181"].TextXAlignment = Enum.TextXAlignment.Center
G2L["181"].TextYAlignment = Enum.TextYAlignment.Center
G2L["181"].Active = false
G2L["181"].AnchorPoint = Vector2.new(0, 0)
G2L["181"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["181"].BackgroundTransparency = 1
G2L["181"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["181"].BorderSizePixel = 0
G2L["181"].ClipsDescendants = false
G2L["181"].Draggable = false
G2L["181"].Position = UDim2.new(0, 0, 0, 8)
G2L["181"].Rotation = 0
G2L["181"].Selectable = true
G2L["181"].SelectionOrder = 0
G2L["181"].Size = UDim2.new(1, 0, 0, 8)
G2L["181"].Visible = true
G2L["181"].ZIndex = 1
G2L["181"].Parent = G2L["175"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow
G2L["182"].Name = [[Arrow]]
G2L["182"].Active = false
G2L["182"].AnchorPoint = Vector2.new(0, 0)
G2L["182"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["182"].BackgroundTransparency = 1
G2L["182"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["182"].BorderSizePixel = 1
G2L["182"].ClipsDescendants = false
G2L["182"].Draggable = false
G2L["182"].Position = UDim2.new(0, 0, 0, 0)
G2L["182"].Rotation = 0
G2L["182"].Selectable = false
G2L["182"].SelectionOrder = 0
G2L["182"].Size = UDim2.new(0, 16, 0, 8)
G2L["182"].Visible = true
G2L["182"].ZIndex = 1
G2L["182"].Parent = G2L["181"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow.Frame
G2L["183"].Name = [[Frame]]
G2L["183"].Active = false
G2L["183"].AnchorPoint = Vector2.new(0, 0)
G2L["183"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["183"].BackgroundTransparency = 0
G2L["183"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["183"].BorderSizePixel = 0
G2L["183"].ClipsDescendants = false
G2L["183"].Draggable = false
G2L["183"].Position = UDim2.new(0, 8, 0, 5)
G2L["183"].Rotation = 0
G2L["183"].Selectable = false
G2L["183"].SelectionOrder = 0
G2L["183"].Size = UDim2.new(0, 1, 0, 1)
G2L["183"].Visible = true
G2L["183"].ZIndex = 1
G2L["183"].Parent = G2L["182"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow.Frame
G2L["184"].Name = [[Frame]]
G2L["184"].Active = false
G2L["184"].AnchorPoint = Vector2.new(0, 0)
G2L["184"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["184"].BackgroundTransparency = 0
G2L["184"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["184"].BorderSizePixel = 0
G2L["184"].ClipsDescendants = false
G2L["184"].Draggable = false
G2L["184"].Position = UDim2.new(0, 7, 0, 4)
G2L["184"].Rotation = 0
G2L["184"].Selectable = false
G2L["184"].SelectionOrder = 0
G2L["184"].Size = UDim2.new(0, 3, 0, 1)
G2L["184"].Visible = true
G2L["184"].ZIndex = 1
G2L["184"].Parent = G2L["182"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Input.ArrowFrame.Down.Arrow.Frame
G2L["185"].Name = [[Frame]]
G2L["185"].Active = false
G2L["185"].AnchorPoint = Vector2.new(0, 0)
G2L["185"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["185"].BackgroundTransparency = 0
G2L["185"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["185"].BorderSizePixel = 0
G2L["185"].ClipsDescendants = false
G2L["185"].Draggable = false
G2L["185"].Position = UDim2.new(0, 6, 0, 3)
G2L["185"].Rotation = 0
G2L["185"].Selectable = false
G2L["185"].SelectionOrder = 0
G2L["185"].Size = UDim2.new(0, 5, 0, 1)
G2L["185"].Visible = true
G2L["185"].ZIndex = 1
G2L["185"].Parent = G2L["182"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Hue.Title
G2L["186"].Name = [[Title]]
G2L["186"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["186"].Text = [[Hue:]]
G2L["186"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["186"].TextScaled = false
G2L["186"].TextSize = 14
G2L["186"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["186"].TextStrokeTransparency = 1
G2L["186"].TextWrapped = false
G2L["186"].TextXAlignment = Enum.TextXAlignment.Right
G2L["186"].TextYAlignment = Enum.TextYAlignment.Center
G2L["186"].Active = false
G2L["186"].AnchorPoint = Vector2.new(0, 0)
G2L["186"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["186"].BackgroundTransparency = 1
G2L["186"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["186"].BorderSizePixel = 1
G2L["186"].ClipsDescendants = false
G2L["186"].Draggable = false
G2L["186"].Position = UDim2.new(0, -40, 0, 0)
G2L["186"].Rotation = 0
G2L["186"].Selectable = false
G2L["186"].SelectionOrder = 0
G2L["186"].Size = UDim2.new(0, 34, 1, 0)
G2L["186"].Visible = true
G2L["186"].ZIndex = 1
G2L["186"].Parent = G2L["173"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat
G2L["187"].Name = [[Sat]]
G2L["187"].Active = false
G2L["187"].AnchorPoint = Vector2.new(0, 0)
G2L["187"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["187"].BackgroundTransparency = 0
G2L["187"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["187"].BorderSizePixel = 1
G2L["187"].ClipsDescendants = false
G2L["187"].Draggable = false
G2L["187"].Position = UDim2.new(1, -180, 0, 233)
G2L["187"].Rotation = 0
G2L["187"].Selectable = false
G2L["187"].SelectionOrder = 0
G2L["187"].Size = UDim2.new(0, 52, 0, 16)
G2L["187"].Visible = true
G2L["187"].ZIndex = 1
G2L["187"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input
G2L["188"].Name = [[Input]]
G2L["188"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["188"].MultiLine = false
G2L["188"].PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
G2L["188"].PlaceholderText = [[]]
G2L["188"].Text = [[0]]
G2L["188"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["188"].TextScaled = false
G2L["188"].TextSize = 14
G2L["188"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["188"].TextStrokeTransparency = 1
G2L["188"].TextWrapped = false
G2L["188"].TextXAlignment = Enum.TextXAlignment.Left
G2L["188"].TextYAlignment = Enum.TextYAlignment.Center
G2L["188"].Active = false
G2L["188"].AnchorPoint = Vector2.new(0, 0)
G2L["188"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["188"].BackgroundTransparency = 1
G2L["188"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["188"].BorderSizePixel = 1
G2L["188"].ClipsDescendants = false
G2L["188"].Draggable = false
G2L["188"].Position = UDim2.new(0, 2, 0, 0)
G2L["188"].Rotation = 0
G2L["188"].Selectable = true
G2L["188"].SelectionOrder = 0
G2L["188"].Size = UDim2.new(0, 50, 0, 16)
G2L["188"].Visible = true
G2L["188"].ZIndex = 1
G2L["188"].Parent = G2L["187"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame
G2L["189"].Name = [[ArrowFrame]]
G2L["189"].Active = false
G2L["189"].AnchorPoint = Vector2.new(0, 0)
G2L["189"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["189"].BackgroundTransparency = 1
G2L["189"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["189"].BorderSizePixel = 0
G2L["189"].ClipsDescendants = false
G2L["189"].Draggable = false
G2L["189"].Position = UDim2.new(1, -16, 0, 0)
G2L["189"].Rotation = 0
G2L["189"].Selectable = false
G2L["189"].SelectionOrder = 0
G2L["189"].Size = UDim2.new(0, 16, 1, 0)
G2L["189"].Visible = true
G2L["189"].ZIndex = 1
G2L["189"].Parent = G2L["188"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up
G2L["190"].Name = [[Up]]
G2L["190"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["190"].Text = [[]]
G2L["190"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["190"].TextScaled = false
G2L["190"].TextSize = 14
G2L["190"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["190"].TextStrokeTransparency = 1
G2L["190"].TextWrapped = false
G2L["190"].TextXAlignment = Enum.TextXAlignment.Center
G2L["190"].TextYAlignment = Enum.TextYAlignment.Center
G2L["190"].Active = false
G2L["190"].AnchorPoint = Vector2.new(0, 0)
G2L["190"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["190"].BackgroundTransparency = 1
G2L["190"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["190"].BorderSizePixel = 0
G2L["190"].ClipsDescendants = false
G2L["190"].Draggable = false
G2L["190"].Position = UDim2.new(0, 0, 0, 0)
G2L["190"].Rotation = 0
G2L["190"].Selectable = true
G2L["190"].SelectionOrder = 0
G2L["190"].Size = UDim2.new(1, 0, 0, 8)
G2L["190"].Visible = true
G2L["190"].ZIndex = 1
G2L["190"].Parent = G2L["189"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow
G2L["191"].Name = [[Arrow]]
G2L["191"].Active = false
G2L["191"].AnchorPoint = Vector2.new(0, 0)
G2L["191"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["191"].BackgroundTransparency = 1
G2L["191"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["191"].BorderSizePixel = 1
G2L["191"].ClipsDescendants = false
G2L["191"].Draggable = false
G2L["191"].Position = UDim2.new(0, 0, 0, 0)
G2L["191"].Rotation = 0
G2L["191"].Selectable = false
G2L["191"].SelectionOrder = 0
G2L["191"].Size = UDim2.new(0, 16, 0, 8)
G2L["191"].Visible = true
G2L["191"].ZIndex = 1
G2L["191"].Parent = G2L["190"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow.Frame
G2L["192"].Name = [[Frame]]
G2L["192"].Active = false
G2L["192"].AnchorPoint = Vector2.new(0, 0)
G2L["192"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["192"].BackgroundTransparency = 0
G2L["192"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["192"].BorderSizePixel = 0
G2L["192"].ClipsDescendants = false
G2L["192"].Draggable = false
G2L["192"].Position = UDim2.new(0, 8, 0, 3)
G2L["192"].Rotation = 0
G2L["192"].Selectable = false
G2L["192"].SelectionOrder = 0
G2L["192"].Size = UDim2.new(0, 1, 0, 1)
G2L["192"].Visible = true
G2L["192"].ZIndex = 1
G2L["192"].Parent = G2L["191"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow.Frame
G2L["193"].Name = [[Frame]]
G2L["193"].Active = false
G2L["193"].AnchorPoint = Vector2.new(0, 0)
G2L["193"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["193"].BackgroundTransparency = 0
G2L["193"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["193"].BorderSizePixel = 0
G2L["193"].ClipsDescendants = false
G2L["193"].Draggable = false
G2L["193"].Position = UDim2.new(0, 7, 0, 4)
G2L["193"].Rotation = 0
G2L["193"].Selectable = false
G2L["193"].SelectionOrder = 0
G2L["193"].Size = UDim2.new(0, 3, 0, 1)
G2L["193"].Visible = true
G2L["193"].ZIndex = 1
G2L["193"].Parent = G2L["191"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Up.Arrow.Frame
G2L["194"].Name = [[Frame]]
G2L["194"].Active = false
G2L["194"].AnchorPoint = Vector2.new(0, 0)
G2L["194"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["194"].BackgroundTransparency = 0
G2L["194"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["194"].BorderSizePixel = 0
G2L["194"].ClipsDescendants = false
G2L["194"].Draggable = false
G2L["194"].Position = UDim2.new(0, 6, 0, 5)
G2L["194"].Rotation = 0
G2L["194"].Selectable = false
G2L["194"].SelectionOrder = 0
G2L["194"].Size = UDim2.new(0, 5, 0, 1)
G2L["194"].Visible = true
G2L["194"].ZIndex = 1
G2L["194"].Parent = G2L["191"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down
G2L["195"].Name = [[Down]]
G2L["195"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["195"].Text = [[]]
G2L["195"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["195"].TextScaled = false
G2L["195"].TextSize = 14
G2L["195"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["195"].TextStrokeTransparency = 1
G2L["195"].TextWrapped = false
G2L["195"].TextXAlignment = Enum.TextXAlignment.Center
G2L["195"].TextYAlignment = Enum.TextYAlignment.Center
G2L["195"].Active = false
G2L["195"].AnchorPoint = Vector2.new(0, 0)
G2L["195"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["195"].BackgroundTransparency = 1
G2L["195"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["195"].BorderSizePixel = 0
G2L["195"].ClipsDescendants = false
G2L["195"].Draggable = false
G2L["195"].Position = UDim2.new(0, 0, 0, 8)
G2L["195"].Rotation = 0
G2L["195"].Selectable = true
G2L["195"].SelectionOrder = 0
G2L["195"].Size = UDim2.new(1, 0, 0, 8)
G2L["195"].Visible = true
G2L["195"].ZIndex = 1
G2L["195"].Parent = G2L["189"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow
G2L["196"].Name = [[Arrow]]
G2L["196"].Active = false
G2L["196"].AnchorPoint = Vector2.new(0, 0)
G2L["196"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["196"].BackgroundTransparency = 1
G2L["196"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["196"].BorderSizePixel = 1
G2L["196"].ClipsDescendants = false
G2L["196"].Draggable = false
G2L["196"].Position = UDim2.new(0, 0, 0, 0)
G2L["196"].Rotation = 0
G2L["196"].Selectable = false
G2L["196"].SelectionOrder = 0
G2L["196"].Size = UDim2.new(0, 16, 0, 8)
G2L["196"].Visible = true
G2L["196"].ZIndex = 1
G2L["196"].Parent = G2L["195"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow.Frame
G2L["197"].Name = [[Frame]]
G2L["197"].Active = false
G2L["197"].AnchorPoint = Vector2.new(0, 0)
G2L["197"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["197"].BackgroundTransparency = 0
G2L["197"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["197"].BorderSizePixel = 0
G2L["197"].ClipsDescendants = false
G2L["197"].Draggable = false
G2L["197"].Position = UDim2.new(0, 8, 0, 5)
G2L["197"].Rotation = 0
G2L["197"].Selectable = false
G2L["197"].SelectionOrder = 0
G2L["197"].Size = UDim2.new(0, 1, 0, 1)
G2L["197"].Visible = true
G2L["197"].ZIndex = 1
G2L["197"].Parent = G2L["196"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow.Frame
G2L["198"].Name = [[Frame]]
G2L["198"].Active = false
G2L["198"].AnchorPoint = Vector2.new(0, 0)
G2L["198"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["198"].BackgroundTransparency = 0
G2L["198"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["198"].BorderSizePixel = 0
G2L["198"].ClipsDescendants = false
G2L["198"].Draggable = false
G2L["198"].Position = UDim2.new(0, 7, 0, 4)
G2L["198"].Rotation = 0
G2L["198"].Selectable = false
G2L["198"].SelectionOrder = 0
G2L["198"].Size = UDim2.new(0, 3, 0, 1)
G2L["198"].Visible = true
G2L["198"].ZIndex = 1
G2L["198"].Parent = G2L["196"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Input.ArrowFrame.Down.Arrow.Frame
G2L["199"].Name = [[Frame]]
G2L["199"].Active = false
G2L["199"].AnchorPoint = Vector2.new(0, 0)
G2L["199"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["199"].BackgroundTransparency = 0
G2L["199"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["199"].BorderSizePixel = 0
G2L["199"].ClipsDescendants = false
G2L["199"].Draggable = false
G2L["199"].Position = UDim2.new(0, 6, 0, 3)
G2L["199"].Rotation = 0
G2L["199"].Selectable = false
G2L["199"].SelectionOrder = 0
G2L["199"].Size = UDim2.new(0, 5, 0, 1)
G2L["199"].Visible = true
G2L["199"].ZIndex = 1
G2L["199"].Parent = G2L["196"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Sat.Title
G2L["200"].Name = [[Title]]
G2L["200"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["200"].Text = [[Sat:]]
G2L["200"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["200"].TextScaled = false
G2L["200"].TextSize = 14
G2L["200"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["200"].TextStrokeTransparency = 1
G2L["200"].TextWrapped = false
G2L["200"].TextXAlignment = Enum.TextXAlignment.Right
G2L["200"].TextYAlignment = Enum.TextYAlignment.Center
G2L["200"].Active = false
G2L["200"].AnchorPoint = Vector2.new(0, 0)
G2L["200"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["200"].BackgroundTransparency = 1
G2L["200"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["200"].BorderSizePixel = 1
G2L["200"].ClipsDescendants = false
G2L["200"].Draggable = false
G2L["200"].Position = UDim2.new(0, -40, 0, 0)
G2L["200"].Rotation = 0
G2L["200"].Selectable = false
G2L["200"].SelectionOrder = 0
G2L["200"].Size = UDim2.new(0, 34, 1, 0)
G2L["200"].Visible = true
G2L["200"].ZIndex = 1
G2L["200"].Parent = G2L["187"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val
G2L["201"].Name = [[Val]]
G2L["201"].Active = false
G2L["201"].AnchorPoint = Vector2.new(0, 0)
G2L["201"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["201"].BackgroundTransparency = 0
G2L["201"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["201"].BorderSizePixel = 1
G2L["201"].ClipsDescendants = false
G2L["201"].Draggable = false
G2L["201"].Position = UDim2.new(1, -180, 0, 255)
G2L["201"].Rotation = 0
G2L["201"].Selectable = false
G2L["201"].SelectionOrder = 0
G2L["201"].Size = UDim2.new(0, 52, 0, 16)
G2L["201"].Visible = true
G2L["201"].ZIndex = 1
G2L["201"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input
G2L["202"].Name = [[Input]]
G2L["202"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["202"].MultiLine = false
G2L["202"].PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
G2L["202"].PlaceholderText = [[]]
G2L["202"].Text = [[255]]
G2L["202"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["202"].TextScaled = false
G2L["202"].TextSize = 14
G2L["202"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["202"].TextStrokeTransparency = 1
G2L["202"].TextWrapped = false
G2L["202"].TextXAlignment = Enum.TextXAlignment.Left
G2L["202"].TextYAlignment = Enum.TextYAlignment.Center
G2L["202"].Active = false
G2L["202"].AnchorPoint = Vector2.new(0, 0)
G2L["202"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["202"].BackgroundTransparency = 1
G2L["202"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["202"].BorderSizePixel = 1
G2L["202"].ClipsDescendants = false
G2L["202"].Draggable = false
G2L["202"].Position = UDim2.new(0, 2, 0, 0)
G2L["202"].Rotation = 0
G2L["202"].Selectable = true
G2L["202"].SelectionOrder = 0
G2L["202"].Size = UDim2.new(0, 50, 0, 16)
G2L["202"].Visible = true
G2L["202"].ZIndex = 1
G2L["202"].Parent = G2L["201"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame
G2L["203"].Name = [[ArrowFrame]]
G2L["203"].Active = false
G2L["203"].AnchorPoint = Vector2.new(0, 0)
G2L["203"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["203"].BackgroundTransparency = 1
G2L["203"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["203"].BorderSizePixel = 0
G2L["203"].ClipsDescendants = false
G2L["203"].Draggable = false
G2L["203"].Position = UDim2.new(1, -16, 0, 0)
G2L["203"].Rotation = 0
G2L["203"].Selectable = false
G2L["203"].SelectionOrder = 0
G2L["203"].Size = UDim2.new(0, 16, 1, 0)
G2L["203"].Visible = true
G2L["203"].ZIndex = 1
G2L["203"].Parent = G2L["202"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up
G2L["204"].Name = [[Up]]
G2L["204"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["204"].Text = [[]]
G2L["204"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["204"].TextScaled = false
G2L["204"].TextSize = 14
G2L["204"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["204"].TextStrokeTransparency = 1
G2L["204"].TextWrapped = false
G2L["204"].TextXAlignment = Enum.TextXAlignment.Center
G2L["204"].TextYAlignment = Enum.TextYAlignment.Center
G2L["204"].Active = false
G2L["204"].AnchorPoint = Vector2.new(0, 0)
G2L["204"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["204"].BackgroundTransparency = 1
G2L["204"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["204"].BorderSizePixel = 0
G2L["204"].ClipsDescendants = false
G2L["204"].Draggable = false
G2L["204"].Position = UDim2.new(0, 0, 0, 0)
G2L["204"].Rotation = 0
G2L["204"].Selectable = true
G2L["204"].SelectionOrder = 0
G2L["204"].Size = UDim2.new(1, 0, 0, 8)
G2L["204"].Visible = true
G2L["204"].ZIndex = 1
G2L["204"].Parent = G2L["203"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow
G2L["205"].Name = [[Arrow]]
G2L["205"].Active = false
G2L["205"].AnchorPoint = Vector2.new(0, 0)
G2L["205"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["205"].BackgroundTransparency = 1
G2L["205"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["205"].BorderSizePixel = 1
G2L["205"].ClipsDescendants = false
G2L["205"].Draggable = false
G2L["205"].Position = UDim2.new(0, 0, 0, 0)
G2L["205"].Rotation = 0
G2L["205"].Selectable = false
G2L["205"].SelectionOrder = 0
G2L["205"].Size = UDim2.new(0, 16, 0, 8)
G2L["205"].Visible = true
G2L["205"].ZIndex = 1
G2L["205"].Parent = G2L["204"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow.Frame
G2L["206"].Name = [[Frame]]
G2L["206"].Active = false
G2L["206"].AnchorPoint = Vector2.new(0, 0)
G2L["206"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["206"].BackgroundTransparency = 0
G2L["206"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["206"].BorderSizePixel = 0
G2L["206"].ClipsDescendants = false
G2L["206"].Draggable = false
G2L["206"].Position = UDim2.new(0, 8, 0, 3)
G2L["206"].Rotation = 0
G2L["206"].Selectable = false
G2L["206"].SelectionOrder = 0
G2L["206"].Size = UDim2.new(0, 1, 0, 1)
G2L["206"].Visible = true
G2L["206"].ZIndex = 1
G2L["206"].Parent = G2L["205"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow.Frame
G2L["207"].Name = [[Frame]]
G2L["207"].Active = false
G2L["207"].AnchorPoint = Vector2.new(0, 0)
G2L["207"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["207"].BackgroundTransparency = 0
G2L["207"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["207"].BorderSizePixel = 0
G2L["207"].ClipsDescendants = false
G2L["207"].Draggable = false
G2L["207"].Position = UDim2.new(0, 7, 0, 4)
G2L["207"].Rotation = 0
G2L["207"].Selectable = false
G2L["207"].SelectionOrder = 0
G2L["207"].Size = UDim2.new(0, 3, 0, 1)
G2L["207"].Visible = true
G2L["207"].ZIndex = 1
G2L["207"].Parent = G2L["205"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Up.Arrow.Frame
G2L["208"].Name = [[Frame]]
G2L["208"].Active = false
G2L["208"].AnchorPoint = Vector2.new(0, 0)
G2L["208"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["208"].BackgroundTransparency = 0
G2L["208"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["208"].BorderSizePixel = 0
G2L["208"].ClipsDescendants = false
G2L["208"].Draggable = false
G2L["208"].Position = UDim2.new(0, 6, 0, 5)
G2L["208"].Rotation = 0
G2L["208"].Selectable = false
G2L["208"].SelectionOrder = 0
G2L["208"].Size = UDim2.new(0, 5, 0, 1)
G2L["208"].Visible = true
G2L["208"].ZIndex = 1
G2L["208"].Parent = G2L["205"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down
G2L["209"].Name = [[Down]]
G2L["209"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["209"].Text = [[]]
G2L["209"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["209"].TextScaled = false
G2L["209"].TextSize = 14
G2L["209"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["209"].TextStrokeTransparency = 1
G2L["209"].TextWrapped = false
G2L["209"].TextXAlignment = Enum.TextXAlignment.Center
G2L["209"].TextYAlignment = Enum.TextYAlignment.Center
G2L["209"].Active = false
G2L["209"].AnchorPoint = Vector2.new(0, 0)
G2L["209"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["209"].BackgroundTransparency = 1
G2L["209"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["209"].BorderSizePixel = 0
G2L["209"].ClipsDescendants = false
G2L["209"].Draggable = false
G2L["209"].Position = UDim2.new(0, 0, 0, 8)
G2L["209"].Rotation = 0
G2L["209"].Selectable = true
G2L["209"].SelectionOrder = 0
G2L["209"].Size = UDim2.new(1, 0, 0, 8)
G2L["209"].Visible = true
G2L["209"].ZIndex = 1
G2L["209"].Parent = G2L["203"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow
G2L["210"].Name = [[Arrow]]
G2L["210"].Active = false
G2L["210"].AnchorPoint = Vector2.new(0, 0)
G2L["210"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["210"].BackgroundTransparency = 1
G2L["210"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["210"].BorderSizePixel = 1
G2L["210"].ClipsDescendants = false
G2L["210"].Draggable = false
G2L["210"].Position = UDim2.new(0, 0, 0, 0)
G2L["210"].Rotation = 0
G2L["210"].Selectable = false
G2L["210"].SelectionOrder = 0
G2L["210"].Size = UDim2.new(0, 16, 0, 8)
G2L["210"].Visible = true
G2L["210"].ZIndex = 1
G2L["210"].Parent = G2L["209"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow.Frame
G2L["211"].Name = [[Frame]]
G2L["211"].Active = false
G2L["211"].AnchorPoint = Vector2.new(0, 0)
G2L["211"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["211"].BackgroundTransparency = 0
G2L["211"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["211"].BorderSizePixel = 0
G2L["211"].ClipsDescendants = false
G2L["211"].Draggable = false
G2L["211"].Position = UDim2.new(0, 8, 0, 5)
G2L["211"].Rotation = 0
G2L["211"].Selectable = false
G2L["211"].SelectionOrder = 0
G2L["211"].Size = UDim2.new(0, 1, 0, 1)
G2L["211"].Visible = true
G2L["211"].ZIndex = 1
G2L["211"].Parent = G2L["210"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow.Frame
G2L["212"].Name = [[Frame]]
G2L["212"].Active = false
G2L["212"].AnchorPoint = Vector2.new(0, 0)
G2L["212"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["212"].BackgroundTransparency = 0
G2L["212"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["212"].BorderSizePixel = 0
G2L["212"].ClipsDescendants = false
G2L["212"].Draggable = false
G2L["212"].Position = UDim2.new(0, 7, 0, 4)
G2L["212"].Rotation = 0
G2L["212"].Selectable = false
G2L["212"].SelectionOrder = 0
G2L["212"].Size = UDim2.new(0, 3, 0, 1)
G2L["212"].Visible = true
G2L["212"].ZIndex = 1
G2L["212"].Parent = G2L["210"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Input.ArrowFrame.Down.Arrow.Frame
G2L["213"].Name = [[Frame]]
G2L["213"].Active = false
G2L["213"].AnchorPoint = Vector2.new(0, 0)
G2L["213"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["213"].BackgroundTransparency = 0
G2L["213"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["213"].BorderSizePixel = 0
G2L["213"].ClipsDescendants = false
G2L["213"].Draggable = false
G2L["213"].Position = UDim2.new(0, 6, 0, 3)
G2L["213"].Rotation = 0
G2L["213"].Selectable = false
G2L["213"].SelectionOrder = 0
G2L["213"].Size = UDim2.new(0, 5, 0, 1)
G2L["213"].Visible = true
G2L["213"].ZIndex = 1
G2L["213"].Parent = G2L["210"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Val.Title
G2L["214"].Name = [[Title]]
G2L["214"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["214"].Text = [[Val:]]
G2L["214"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["214"].TextScaled = false
G2L["214"].TextSize = 14
G2L["214"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["214"].TextStrokeTransparency = 1
G2L["214"].TextWrapped = false
G2L["214"].TextXAlignment = Enum.TextXAlignment.Right
G2L["214"].TextYAlignment = Enum.TextYAlignment.Center
G2L["214"].Active = false
G2L["214"].AnchorPoint = Vector2.new(0, 0)
G2L["214"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["214"].BackgroundTransparency = 1
G2L["214"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["214"].BorderSizePixel = 1
G2L["214"].ClipsDescendants = false
G2L["214"].Draggable = false
G2L["214"].Position = UDim2.new(0, -40, 0, 0)
G2L["214"].Rotation = 0
G2L["214"].Selectable = false
G2L["214"].SelectionOrder = 0
G2L["214"].Size = UDim2.new(0, 34, 1, 0)
G2L["214"].Visible = true
G2L["214"].ZIndex = 1
G2L["214"].Parent = G2L["201"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green
G2L["215"].Name = [[Green]]
G2L["215"].Active = false
G2L["215"].AnchorPoint = Vector2.new(0, 0)
G2L["215"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["215"].BackgroundTransparency = 0
G2L["215"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["215"].BorderSizePixel = 1
G2L["215"].ClipsDescendants = false
G2L["215"].Draggable = false
G2L["215"].Position = UDim2.new(1, -63, 0, 233)
G2L["215"].Rotation = 0
G2L["215"].Selectable = false
G2L["215"].SelectionOrder = 0
G2L["215"].Size = UDim2.new(0, 52, 0, 16)
G2L["215"].Visible = true
G2L["215"].ZIndex = 1
G2L["215"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input
G2L["216"].Name = [[Input]]
G2L["216"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["216"].MultiLine = false
G2L["216"].PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
G2L["216"].PlaceholderText = [[]]
G2L["216"].Text = [[0]]
G2L["216"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["216"].TextScaled = false
G2L["216"].TextSize = 14
G2L["216"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["216"].TextStrokeTransparency = 1
G2L["216"].TextWrapped = false
G2L["216"].TextXAlignment = Enum.TextXAlignment.Left
G2L["216"].TextYAlignment = Enum.TextYAlignment.Center
G2L["216"].Active = false
G2L["216"].AnchorPoint = Vector2.new(0, 0)
G2L["216"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["216"].BackgroundTransparency = 1
G2L["216"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["216"].BorderSizePixel = 1
G2L["216"].ClipsDescendants = false
G2L["216"].Draggable = false
G2L["216"].Position = UDim2.new(0, 2, 0, 0)
G2L["216"].Rotation = 0
G2L["216"].Selectable = true
G2L["216"].SelectionOrder = 0
G2L["216"].Size = UDim2.new(0, 50, 0, 16)
G2L["216"].Visible = true
G2L["216"].ZIndex = 1
G2L["216"].Parent = G2L["215"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame
G2L["217"].Name = [[ArrowFrame]]
G2L["217"].Active = false
G2L["217"].AnchorPoint = Vector2.new(0, 0)
G2L["217"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["217"].BackgroundTransparency = 1
G2L["217"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["217"].BorderSizePixel = 0
G2L["217"].ClipsDescendants = false
G2L["217"].Draggable = false
G2L["217"].Position = UDim2.new(1, -16, 0, 0)
G2L["217"].Rotation = 0
G2L["217"].Selectable = false
G2L["217"].SelectionOrder = 0
G2L["217"].Size = UDim2.new(0, 16, 1, 0)
G2L["217"].Visible = true
G2L["217"].ZIndex = 1
G2L["217"].Parent = G2L["216"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up
G2L["218"].Name = [[Up]]
G2L["218"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["218"].Text = [[]]
G2L["218"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["218"].TextScaled = false
G2L["218"].TextSize = 14
G2L["218"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["218"].TextStrokeTransparency = 1
G2L["218"].TextWrapped = false
G2L["218"].TextXAlignment = Enum.TextXAlignment.Center
G2L["218"].TextYAlignment = Enum.TextYAlignment.Center
G2L["218"].Active = false
G2L["218"].AnchorPoint = Vector2.new(0, 0)
G2L["218"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["218"].BackgroundTransparency = 1
G2L["218"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["218"].BorderSizePixel = 0
G2L["218"].ClipsDescendants = false
G2L["218"].Draggable = false
G2L["218"].Position = UDim2.new(0, 0, 0, 0)
G2L["218"].Rotation = 0
G2L["218"].Selectable = true
G2L["218"].SelectionOrder = 0
G2L["218"].Size = UDim2.new(1, 0, 0, 8)
G2L["218"].Visible = true
G2L["218"].ZIndex = 1
G2L["218"].Parent = G2L["217"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow
G2L["219"].Name = [[Arrow]]
G2L["219"].Active = false
G2L["219"].AnchorPoint = Vector2.new(0, 0)
G2L["219"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["219"].BackgroundTransparency = 1
G2L["219"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["219"].BorderSizePixel = 1
G2L["219"].ClipsDescendants = false
G2L["219"].Draggable = false
G2L["219"].Position = UDim2.new(0, 0, 0, 0)
G2L["219"].Rotation = 0
G2L["219"].Selectable = false
G2L["219"].SelectionOrder = 0
G2L["219"].Size = UDim2.new(0, 16, 0, 8)
G2L["219"].Visible = true
G2L["219"].ZIndex = 1
G2L["219"].Parent = G2L["218"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow.Frame
G2L["220"].Name = [[Frame]]
G2L["220"].Active = false
G2L["220"].AnchorPoint = Vector2.new(0, 0)
G2L["220"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["220"].BackgroundTransparency = 0
G2L["220"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["220"].BorderSizePixel = 0
G2L["220"].ClipsDescendants = false
G2L["220"].Draggable = false
G2L["220"].Position = UDim2.new(0, 8, 0, 3)
G2L["220"].Rotation = 0
G2L["220"].Selectable = false
G2L["220"].SelectionOrder = 0
G2L["220"].Size = UDim2.new(0, 1, 0, 1)
G2L["220"].Visible = true
G2L["220"].ZIndex = 1
G2L["220"].Parent = G2L["219"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow.Frame
G2L["221"].Name = [[Frame]]
G2L["221"].Active = false
G2L["221"].AnchorPoint = Vector2.new(0, 0)
G2L["221"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["221"].BackgroundTransparency = 0
G2L["221"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["221"].BorderSizePixel = 0
G2L["221"].ClipsDescendants = false
G2L["221"].Draggable = false
G2L["221"].Position = UDim2.new(0, 7, 0, 4)
G2L["221"].Rotation = 0
G2L["221"].Selectable = false
G2L["221"].SelectionOrder = 0
G2L["221"].Size = UDim2.new(0, 3, 0, 1)
G2L["221"].Visible = true
G2L["221"].ZIndex = 1
G2L["221"].Parent = G2L["219"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Up.Arrow.Frame
G2L["222"].Name = [[Frame]]
G2L["222"].Active = false
G2L["222"].AnchorPoint = Vector2.new(0, 0)
G2L["222"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["222"].BackgroundTransparency = 0
G2L["222"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["222"].BorderSizePixel = 0
G2L["222"].ClipsDescendants = false
G2L["222"].Draggable = false
G2L["222"].Position = UDim2.new(0, 6, 0, 5)
G2L["222"].Rotation = 0
G2L["222"].Selectable = false
G2L["222"].SelectionOrder = 0
G2L["222"].Size = UDim2.new(0, 5, 0, 1)
G2L["222"].Visible = true
G2L["222"].ZIndex = 1
G2L["222"].Parent = G2L["219"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down
G2L["223"].Name = [[Down]]
G2L["223"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["223"].Text = [[]]
G2L["223"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["223"].TextScaled = false
G2L["223"].TextSize = 14
G2L["223"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["223"].TextStrokeTransparency = 1
G2L["223"].TextWrapped = false
G2L["223"].TextXAlignment = Enum.TextXAlignment.Center
G2L["223"].TextYAlignment = Enum.TextYAlignment.Center
G2L["223"].Active = false
G2L["223"].AnchorPoint = Vector2.new(0, 0)
G2L["223"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["223"].BackgroundTransparency = 1
G2L["223"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["223"].BorderSizePixel = 0
G2L["223"].ClipsDescendants = false
G2L["223"].Draggable = false
G2L["223"].Position = UDim2.new(0, 0, 0, 8)
G2L["223"].Rotation = 0
G2L["223"].Selectable = true
G2L["223"].SelectionOrder = 0
G2L["223"].Size = UDim2.new(1, 0, 0, 8)
G2L["223"].Visible = true
G2L["223"].ZIndex = 1
G2L["223"].Parent = G2L["217"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow
G2L["224"].Name = [[Arrow]]
G2L["224"].Active = false
G2L["224"].AnchorPoint = Vector2.new(0, 0)
G2L["224"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["224"].BackgroundTransparency = 1
G2L["224"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["224"].BorderSizePixel = 1
G2L["224"].ClipsDescendants = false
G2L["224"].Draggable = false
G2L["224"].Position = UDim2.new(0, 0, 0, 0)
G2L["224"].Rotation = 0
G2L["224"].Selectable = false
G2L["224"].SelectionOrder = 0
G2L["224"].Size = UDim2.new(0, 16, 0, 8)
G2L["224"].Visible = true
G2L["224"].ZIndex = 1
G2L["224"].Parent = G2L["223"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow.Frame
G2L["225"].Name = [[Frame]]
G2L["225"].Active = false
G2L["225"].AnchorPoint = Vector2.new(0, 0)
G2L["225"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["225"].BackgroundTransparency = 0
G2L["225"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["225"].BorderSizePixel = 0
G2L["225"].ClipsDescendants = false
G2L["225"].Draggable = false
G2L["225"].Position = UDim2.new(0, 8, 0, 5)
G2L["225"].Rotation = 0
G2L["225"].Selectable = false
G2L["225"].SelectionOrder = 0
G2L["225"].Size = UDim2.new(0, 1, 0, 1)
G2L["225"].Visible = true
G2L["225"].ZIndex = 1
G2L["225"].Parent = G2L["224"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow.Frame
G2L["226"].Name = [[Frame]]
G2L["226"].Active = false
G2L["226"].AnchorPoint = Vector2.new(0, 0)
G2L["226"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["226"].BackgroundTransparency = 0
G2L["226"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["226"].BorderSizePixel = 0
G2L["226"].ClipsDescendants = false
G2L["226"].Draggable = false
G2L["226"].Position = UDim2.new(0, 7, 0, 4)
G2L["226"].Rotation = 0
G2L["226"].Selectable = false
G2L["226"].SelectionOrder = 0
G2L["226"].Size = UDim2.new(0, 3, 0, 1)
G2L["226"].Visible = true
G2L["226"].ZIndex = 1
G2L["226"].Parent = G2L["224"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Input.ArrowFrame.Down.Arrow.Frame
G2L["227"].Name = [[Frame]]
G2L["227"].Active = false
G2L["227"].AnchorPoint = Vector2.new(0, 0)
G2L["227"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["227"].BackgroundTransparency = 0
G2L["227"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["227"].BorderSizePixel = 0
G2L["227"].ClipsDescendants = false
G2L["227"].Draggable = false
G2L["227"].Position = UDim2.new(0, 6, 0, 3)
G2L["227"].Rotation = 0
G2L["227"].Selectable = false
G2L["227"].SelectionOrder = 0
G2L["227"].Size = UDim2.new(0, 5, 0, 1)
G2L["227"].Visible = true
G2L["227"].ZIndex = 1
G2L["227"].Parent = G2L["224"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Green.Title
G2L["228"].Name = [[Title]]
G2L["228"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["228"].Text = [[Green:]]
G2L["228"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["228"].TextScaled = false
G2L["228"].TextSize = 14
G2L["228"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["228"].TextStrokeTransparency = 1
G2L["228"].TextWrapped = false
G2L["228"].TextXAlignment = Enum.TextXAlignment.Right
G2L["228"].TextYAlignment = Enum.TextYAlignment.Center
G2L["228"].Active = false
G2L["228"].AnchorPoint = Vector2.new(0, 0)
G2L["228"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["228"].BackgroundTransparency = 1
G2L["228"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["228"].BorderSizePixel = 1
G2L["228"].ClipsDescendants = false
G2L["228"].Draggable = false
G2L["228"].Position = UDim2.new(0, -40, 0, 0)
G2L["228"].Rotation = 0
G2L["228"].Selectable = false
G2L["228"].SelectionOrder = 0
G2L["228"].Size = UDim2.new(0, 34, 1, 0)
G2L["228"].Visible = true
G2L["228"].ZIndex = 1
G2L["228"].Parent = G2L["215"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red
G2L["229"].Name = [[Red]]
G2L["229"].Active = false
G2L["229"].AnchorPoint = Vector2.new(0, 0)
G2L["229"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["229"].BackgroundTransparency = 0
G2L["229"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["229"].BorderSizePixel = 1
G2L["229"].ClipsDescendants = false
G2L["229"].Draggable = false
G2L["229"].Position = UDim2.new(1, -63, 0, 211)
G2L["229"].Rotation = 0
G2L["229"].Selectable = false
G2L["229"].SelectionOrder = 0
G2L["229"].Size = UDim2.new(0, 52, 0, 16)
G2L["229"].Visible = true
G2L["229"].ZIndex = 1
G2L["229"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input
G2L["230"].Name = [[Input]]
G2L["230"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["230"].MultiLine = false
G2L["230"].PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
G2L["230"].PlaceholderText = [[]]
G2L["230"].Text = [[0]]
G2L["230"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["230"].TextScaled = false
G2L["230"].TextSize = 14
G2L["230"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["230"].TextStrokeTransparency = 1
G2L["230"].TextWrapped = false
G2L["230"].TextXAlignment = Enum.TextXAlignment.Left
G2L["230"].TextYAlignment = Enum.TextYAlignment.Center
G2L["230"].Active = false
G2L["230"].AnchorPoint = Vector2.new(0, 0)
G2L["230"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["230"].BackgroundTransparency = 1
G2L["230"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["230"].BorderSizePixel = 1
G2L["230"].ClipsDescendants = false
G2L["230"].Draggable = false
G2L["230"].Position = UDim2.new(0, 2, 0, 0)
G2L["230"].Rotation = 0
G2L["230"].Selectable = true
G2L["230"].SelectionOrder = 0
G2L["230"].Size = UDim2.new(0, 50, 0, 16)
G2L["230"].Visible = true
G2L["230"].ZIndex = 1
G2L["230"].Parent = G2L["229"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame
G2L["231"].Name = [[ArrowFrame]]
G2L["231"].Active = false
G2L["231"].AnchorPoint = Vector2.new(0, 0)
G2L["231"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["231"].BackgroundTransparency = 1
G2L["231"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["231"].BorderSizePixel = 0
G2L["231"].ClipsDescendants = false
G2L["231"].Draggable = false
G2L["231"].Position = UDim2.new(1, -16, 0, 0)
G2L["231"].Rotation = 0
G2L["231"].Selectable = false
G2L["231"].SelectionOrder = 0
G2L["231"].Size = UDim2.new(0, 16, 1, 0)
G2L["231"].Visible = true
G2L["231"].ZIndex = 1
G2L["231"].Parent = G2L["230"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up
G2L["232"].Name = [[Up]]
G2L["232"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["232"].Text = [[]]
G2L["232"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["232"].TextScaled = false
G2L["232"].TextSize = 14
G2L["232"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["232"].TextStrokeTransparency = 1
G2L["232"].TextWrapped = false
G2L["232"].TextXAlignment = Enum.TextXAlignment.Center
G2L["232"].TextYAlignment = Enum.TextYAlignment.Center
G2L["232"].Active = false
G2L["232"].AnchorPoint = Vector2.new(0, 0)
G2L["232"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["232"].BackgroundTransparency = 1
G2L["232"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["232"].BorderSizePixel = 0
G2L["232"].ClipsDescendants = false
G2L["232"].Draggable = false
G2L["232"].Position = UDim2.new(0, 0, 0, 0)
G2L["232"].Rotation = 0
G2L["232"].Selectable = true
G2L["232"].SelectionOrder = 0
G2L["232"].Size = UDim2.new(1, 0, 0, 8)
G2L["232"].Visible = true
G2L["232"].ZIndex = 1
G2L["232"].Parent = G2L["231"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow
G2L["233"].Name = [[Arrow]]
G2L["233"].Active = false
G2L["233"].AnchorPoint = Vector2.new(0, 0)
G2L["233"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["233"].BackgroundTransparency = 1
G2L["233"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["233"].BorderSizePixel = 1
G2L["233"].ClipsDescendants = false
G2L["233"].Draggable = false
G2L["233"].Position = UDim2.new(0, 0, 0, 0)
G2L["233"].Rotation = 0
G2L["233"].Selectable = false
G2L["233"].SelectionOrder = 0
G2L["233"].Size = UDim2.new(0, 16, 0, 8)
G2L["233"].Visible = true
G2L["233"].ZIndex = 1
G2L["233"].Parent = G2L["232"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow.Frame
G2L["234"].Name = [[Frame]]
G2L["234"].Active = false
G2L["234"].AnchorPoint = Vector2.new(0, 0)
G2L["234"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["234"].BackgroundTransparency = 0
G2L["234"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["234"].BorderSizePixel = 0
G2L["234"].ClipsDescendants = false
G2L["234"].Draggable = false
G2L["234"].Position = UDim2.new(0, 8, 0, 3)
G2L["234"].Rotation = 0
G2L["234"].Selectable = false
G2L["234"].SelectionOrder = 0
G2L["234"].Size = UDim2.new(0, 1, 0, 1)
G2L["234"].Visible = true
G2L["234"].ZIndex = 1
G2L["234"].Parent = G2L["233"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow.Frame
G2L["235"].Name = [[Frame]]
G2L["235"].Active = false
G2L["235"].AnchorPoint = Vector2.new(0, 0)
G2L["235"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["235"].BackgroundTransparency = 0
G2L["235"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["235"].BorderSizePixel = 0
G2L["235"].ClipsDescendants = false
G2L["235"].Draggable = false
G2L["235"].Position = UDim2.new(0, 7, 0, 4)
G2L["235"].Rotation = 0
G2L["235"].Selectable = false
G2L["235"].SelectionOrder = 0
G2L["235"].Size = UDim2.new(0, 3, 0, 1)
G2L["235"].Visible = true
G2L["235"].ZIndex = 1
G2L["235"].Parent = G2L["233"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Up.Arrow.Frame
G2L["236"].Name = [[Frame]]
G2L["236"].Active = false
G2L["236"].AnchorPoint = Vector2.new(0, 0)
G2L["236"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["236"].BackgroundTransparency = 0
G2L["236"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["236"].BorderSizePixel = 0
G2L["236"].ClipsDescendants = false
G2L["236"].Draggable = false
G2L["236"].Position = UDim2.new(0, 6, 0, 5)
G2L["236"].Rotation = 0
G2L["236"].Selectable = false
G2L["236"].SelectionOrder = 0
G2L["236"].Size = UDim2.new(0, 5, 0, 1)
G2L["236"].Visible = true
G2L["236"].ZIndex = 1
G2L["236"].Parent = G2L["233"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down
G2L["237"].Name = [[Down]]
G2L["237"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["237"].Text = [[]]
G2L["237"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["237"].TextScaled = false
G2L["237"].TextSize = 14
G2L["237"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["237"].TextStrokeTransparency = 1
G2L["237"].TextWrapped = false
G2L["237"].TextXAlignment = Enum.TextXAlignment.Center
G2L["237"].TextYAlignment = Enum.TextYAlignment.Center
G2L["237"].Active = false
G2L["237"].AnchorPoint = Vector2.new(0, 0)
G2L["237"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["237"].BackgroundTransparency = 1
G2L["237"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["237"].BorderSizePixel = 0
G2L["237"].ClipsDescendants = false
G2L["237"].Draggable = false
G2L["237"].Position = UDim2.new(0, 0, 0, 8)
G2L["237"].Rotation = 0
G2L["237"].Selectable = true
G2L["237"].SelectionOrder = 0
G2L["237"].Size = UDim2.new(1, 0, 0, 8)
G2L["237"].Visible = true
G2L["237"].ZIndex = 1
G2L["237"].Parent = G2L["231"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow
G2L["238"].Name = [[Arrow]]
G2L["238"].Active = false
G2L["238"].AnchorPoint = Vector2.new(0, 0)
G2L["238"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["238"].BackgroundTransparency = 1
G2L["238"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["238"].BorderSizePixel = 1
G2L["238"].ClipsDescendants = false
G2L["238"].Draggable = false
G2L["238"].Position = UDim2.new(0, 0, 0, 0)
G2L["238"].Rotation = 0
G2L["238"].Selectable = false
G2L["238"].SelectionOrder = 0
G2L["238"].Size = UDim2.new(0, 16, 0, 8)
G2L["238"].Visible = true
G2L["238"].ZIndex = 1
G2L["238"].Parent = G2L["237"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow.Frame
G2L["239"].Name = [[Frame]]
G2L["239"].Active = false
G2L["239"].AnchorPoint = Vector2.new(0, 0)
G2L["239"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["239"].BackgroundTransparency = 0
G2L["239"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["239"].BorderSizePixel = 0
G2L["239"].ClipsDescendants = false
G2L["239"].Draggable = false
G2L["239"].Position = UDim2.new(0, 8, 0, 5)
G2L["239"].Rotation = 0
G2L["239"].Selectable = false
G2L["239"].SelectionOrder = 0
G2L["239"].Size = UDim2.new(0, 1, 0, 1)
G2L["239"].Visible = true
G2L["239"].ZIndex = 1
G2L["239"].Parent = G2L["238"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow.Frame
G2L["240"].Name = [[Frame]]
G2L["240"].Active = false
G2L["240"].AnchorPoint = Vector2.new(0, 0)
G2L["240"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["240"].BackgroundTransparency = 0
G2L["240"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["240"].BorderSizePixel = 0
G2L["240"].ClipsDescendants = false
G2L["240"].Draggable = false
G2L["240"].Position = UDim2.new(0, 7, 0, 4)
G2L["240"].Rotation = 0
G2L["240"].Selectable = false
G2L["240"].SelectionOrder = 0
G2L["240"].Size = UDim2.new(0, 3, 0, 1)
G2L["240"].Visible = true
G2L["240"].ZIndex = 1
G2L["240"].Parent = G2L["238"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Input.ArrowFrame.Down.Arrow.Frame
G2L["241"].Name = [[Frame]]
G2L["241"].Active = false
G2L["241"].AnchorPoint = Vector2.new(0, 0)
G2L["241"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["241"].BackgroundTransparency = 0
G2L["241"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["241"].BorderSizePixel = 0
G2L["241"].ClipsDescendants = false
G2L["241"].Draggable = false
G2L["241"].Position = UDim2.new(0, 6, 0, 3)
G2L["241"].Rotation = 0
G2L["241"].Selectable = false
G2L["241"].SelectionOrder = 0
G2L["241"].Size = UDim2.new(0, 5, 0, 1)
G2L["241"].Visible = true
G2L["241"].ZIndex = 1
G2L["241"].Parent = G2L["238"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Red.Title
G2L["242"].Name = [[Title]]
G2L["242"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["242"].Text = [[Red:]]
G2L["242"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["242"].TextScaled = false
G2L["242"].TextSize = 14
G2L["242"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["242"].TextStrokeTransparency = 1
G2L["242"].TextWrapped = false
G2L["242"].TextXAlignment = Enum.TextXAlignment.Right
G2L["242"].TextYAlignment = Enum.TextYAlignment.Center
G2L["242"].Active = false
G2L["242"].AnchorPoint = Vector2.new(0, 0)
G2L["242"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["242"].BackgroundTransparency = 1
G2L["242"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["242"].BorderSizePixel = 1
G2L["242"].ClipsDescendants = false
G2L["242"].Draggable = false
G2L["242"].Position = UDim2.new(0, -40, 0, 0)
G2L["242"].Rotation = 0
G2L["242"].Selectable = false
G2L["242"].SelectionOrder = 0
G2L["242"].Size = UDim2.new(0, 34, 1, 0)
G2L["242"].Visible = true
G2L["242"].ZIndex = 1
G2L["242"].Parent = G2L["229"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue
G2L["243"].Name = [[Blue]]
G2L["243"].Active = false
G2L["243"].AnchorPoint = Vector2.new(0, 0)
G2L["243"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["243"].BackgroundTransparency = 0
G2L["243"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["243"].BorderSizePixel = 1
G2L["243"].ClipsDescendants = false
G2L["243"].Draggable = false
G2L["243"].Position = UDim2.new(1, -63, 0, 255)
G2L["243"].Rotation = 0
G2L["243"].Selectable = false
G2L["243"].SelectionOrder = 0
G2L["243"].Size = UDim2.new(0, 52, 0, 16)
G2L["243"].Visible = true
G2L["243"].ZIndex = 1
G2L["243"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input
G2L["244"].Name = [[Input]]
G2L["244"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["244"].MultiLine = false
G2L["244"].PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
G2L["244"].PlaceholderText = [[]]
G2L["244"].Text = [[0]]
G2L["244"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["244"].TextScaled = false
G2L["244"].TextSize = 14
G2L["244"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["244"].TextStrokeTransparency = 1
G2L["244"].TextWrapped = false
G2L["244"].TextXAlignment = Enum.TextXAlignment.Left
G2L["244"].TextYAlignment = Enum.TextYAlignment.Center
G2L["244"].Active = false
G2L["244"].AnchorPoint = Vector2.new(0, 0)
G2L["244"].BackgroundColor3 = Color3.fromRGB(64, 64, 64)
G2L["244"].BackgroundTransparency = 1
G2L["244"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["244"].BorderSizePixel = 1
G2L["244"].ClipsDescendants = false
G2L["244"].Draggable = false
G2L["244"].Position = UDim2.new(0, 2, 0, 0)
G2L["244"].Rotation = 0
G2L["244"].Selectable = true
G2L["244"].SelectionOrder = 0
G2L["244"].Size = UDim2.new(0, 50, 0, 16)
G2L["244"].Visible = true
G2L["244"].ZIndex = 1
G2L["244"].Parent = G2L["243"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame
G2L["245"].Name = [[ArrowFrame]]
G2L["245"].Active = false
G2L["245"].AnchorPoint = Vector2.new(0, 0)
G2L["245"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["245"].BackgroundTransparency = 1
G2L["245"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["245"].BorderSizePixel = 0
G2L["245"].ClipsDescendants = false
G2L["245"].Draggable = false
G2L["245"].Position = UDim2.new(1, -16, 0, 0)
G2L["245"].Rotation = 0
G2L["245"].Selectable = false
G2L["245"].SelectionOrder = 0
G2L["245"].Size = UDim2.new(0, 16, 1, 0)
G2L["245"].Visible = true
G2L["245"].ZIndex = 1
G2L["245"].Parent = G2L["244"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up
G2L["246"].Name = [[Up]]
G2L["246"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["246"].Text = [[]]
G2L["246"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["246"].TextScaled = false
G2L["246"].TextSize = 14
G2L["246"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["246"].TextStrokeTransparency = 1
G2L["246"].TextWrapped = false
G2L["246"].TextXAlignment = Enum.TextXAlignment.Center
G2L["246"].TextYAlignment = Enum.TextYAlignment.Center
G2L["246"].Active = false
G2L["246"].AnchorPoint = Vector2.new(0, 0)
G2L["246"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["246"].BackgroundTransparency = 1
G2L["246"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["246"].BorderSizePixel = 0
G2L["246"].ClipsDescendants = false
G2L["246"].Draggable = false
G2L["246"].Position = UDim2.new(0, 0, 0, 0)
G2L["246"].Rotation = 0
G2L["246"].Selectable = true
G2L["246"].SelectionOrder = 0
G2L["246"].Size = UDim2.new(1, 0, 0, 8)
G2L["246"].Visible = true
G2L["246"].ZIndex = 1
G2L["246"].Parent = G2L["245"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow
G2L["247"].Name = [[Arrow]]
G2L["247"].Active = false
G2L["247"].AnchorPoint = Vector2.new(0, 0)
G2L["247"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["247"].BackgroundTransparency = 1
G2L["247"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["247"].BorderSizePixel = 1
G2L["247"].ClipsDescendants = false
G2L["247"].Draggable = false
G2L["247"].Position = UDim2.new(0, 0, 0, 0)
G2L["247"].Rotation = 0
G2L["247"].Selectable = false
G2L["247"].SelectionOrder = 0
G2L["247"].Size = UDim2.new(0, 16, 0, 8)
G2L["247"].Visible = true
G2L["247"].ZIndex = 1
G2L["247"].Parent = G2L["246"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow.Frame
G2L["248"].Name = [[Frame]]
G2L["248"].Active = false
G2L["248"].AnchorPoint = Vector2.new(0, 0)
G2L["248"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["248"].BackgroundTransparency = 0
G2L["248"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["248"].BorderSizePixel = 0
G2L["248"].ClipsDescendants = false
G2L["248"].Draggable = false
G2L["248"].Position = UDim2.new(0, 8, 0, 3)
G2L["248"].Rotation = 0
G2L["248"].Selectable = false
G2L["248"].SelectionOrder = 0
G2L["248"].Size = UDim2.new(0, 1, 0, 1)
G2L["248"].Visible = true
G2L["248"].ZIndex = 1
G2L["248"].Parent = G2L["247"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow.Frame
G2L["249"].Name = [[Frame]]
G2L["249"].Active = false
G2L["249"].AnchorPoint = Vector2.new(0, 0)
G2L["249"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["249"].BackgroundTransparency = 0
G2L["249"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["249"].BorderSizePixel = 0
G2L["249"].ClipsDescendants = false
G2L["249"].Draggable = false
G2L["249"].Position = UDim2.new(0, 7, 0, 4)
G2L["249"].Rotation = 0
G2L["249"].Selectable = false
G2L["249"].SelectionOrder = 0
G2L["249"].Size = UDim2.new(0, 3, 0, 1)
G2L["249"].Visible = true
G2L["249"].ZIndex = 1
G2L["249"].Parent = G2L["247"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Up.Arrow.Frame
G2L["250"].Name = [[Frame]]
G2L["250"].Active = false
G2L["250"].AnchorPoint = Vector2.new(0, 0)
G2L["250"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["250"].BackgroundTransparency = 0
G2L["250"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["250"].BorderSizePixel = 0
G2L["250"].ClipsDescendants = false
G2L["250"].Draggable = false
G2L["250"].Position = UDim2.new(0, 6, 0, 5)
G2L["250"].Rotation = 0
G2L["250"].Selectable = false
G2L["250"].SelectionOrder = 0
G2L["250"].Size = UDim2.new(0, 5, 0, 1)
G2L["250"].Visible = true
G2L["250"].ZIndex = 1
G2L["250"].Parent = G2L["247"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down
G2L["251"].Name = [[Down]]
G2L["251"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["251"].Text = [[]]
G2L["251"].TextColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["251"].TextScaled = false
G2L["251"].TextSize = 14
G2L["251"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["251"].TextStrokeTransparency = 1
G2L["251"].TextWrapped = false
G2L["251"].TextXAlignment = Enum.TextXAlignment.Center
G2L["251"].TextYAlignment = Enum.TextYAlignment.Center
G2L["251"].Active = false
G2L["251"].AnchorPoint = Vector2.new(0, 0)
G2L["251"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["251"].BackgroundTransparency = 1
G2L["251"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["251"].BorderSizePixel = 0
G2L["251"].ClipsDescendants = false
G2L["251"].Draggable = false
G2L["251"].Position = UDim2.new(0, 0, 0, 8)
G2L["251"].Rotation = 0
G2L["251"].Selectable = true
G2L["251"].SelectionOrder = 0
G2L["251"].Size = UDim2.new(1, 0, 0, 8)
G2L["251"].Visible = true
G2L["251"].ZIndex = 1
G2L["251"].Parent = G2L["245"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow
G2L["252"].Name = [[Arrow]]
G2L["252"].Active = false
G2L["252"].AnchorPoint = Vector2.new(0, 0)
G2L["252"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["252"].BackgroundTransparency = 1
G2L["252"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["252"].BorderSizePixel = 1
G2L["252"].ClipsDescendants = false
G2L["252"].Draggable = false
G2L["252"].Position = UDim2.new(0, 0, 0, 0)
G2L["252"].Rotation = 0
G2L["252"].Selectable = false
G2L["252"].SelectionOrder = 0
G2L["252"].Size = UDim2.new(0, 16, 0, 8)
G2L["252"].Visible = true
G2L["252"].ZIndex = 1
G2L["252"].Parent = G2L["251"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow.Frame
G2L["253"].Name = [[Frame]]
G2L["253"].Active = false
G2L["253"].AnchorPoint = Vector2.new(0, 0)
G2L["253"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["253"].BackgroundTransparency = 0
G2L["253"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["253"].BorderSizePixel = 0
G2L["253"].ClipsDescendants = false
G2L["253"].Draggable = false
G2L["253"].Position = UDim2.new(0, 8, 0, 5)
G2L["253"].Rotation = 0
G2L["253"].Selectable = false
G2L["253"].SelectionOrder = 0
G2L["253"].Size = UDim2.new(0, 1, 0, 1)
G2L["253"].Visible = true
G2L["253"].ZIndex = 1
G2L["253"].Parent = G2L["252"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow.Frame
G2L["254"].Name = [[Frame]]
G2L["254"].Active = false
G2L["254"].AnchorPoint = Vector2.new(0, 0)
G2L["254"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["254"].BackgroundTransparency = 0
G2L["254"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["254"].BorderSizePixel = 0
G2L["254"].ClipsDescendants = false
G2L["254"].Draggable = false
G2L["254"].Position = UDim2.new(0, 7, 0, 4)
G2L["254"].Rotation = 0
G2L["254"].Selectable = false
G2L["254"].SelectionOrder = 0
G2L["254"].Size = UDim2.new(0, 3, 0, 1)
G2L["254"].Visible = true
G2L["254"].ZIndex = 1
G2L["254"].Parent = G2L["252"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Input.ArrowFrame.Down.Arrow.Frame
G2L["255"].Name = [[Frame]]
G2L["255"].Active = false
G2L["255"].AnchorPoint = Vector2.new(0, 0)
G2L["255"].BackgroundColor3 = Color3.fromRGB(220, 220, 220)
G2L["255"].BackgroundTransparency = 0
G2L["255"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["255"].BorderSizePixel = 0
G2L["255"].ClipsDescendants = false
G2L["255"].Draggable = false
G2L["255"].Position = UDim2.new(0, 6, 0, 3)
G2L["255"].Rotation = 0
G2L["255"].Selectable = false
G2L["255"].SelectionOrder = 0
G2L["255"].Size = UDim2.new(0, 5, 0, 1)
G2L["255"].Visible = true
G2L["255"].ZIndex = 1
G2L["255"].Parent = G2L["252"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Blue.Title
G2L["256"].Name = [[Title]]
G2L["256"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["256"].Text = [[Blue:]]
G2L["256"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["256"].TextScaled = false
G2L["256"].TextSize = 14
G2L["256"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["256"].TextStrokeTransparency = 1
G2L["256"].TextWrapped = false
G2L["256"].TextXAlignment = Enum.TextXAlignment.Right
G2L["256"].TextYAlignment = Enum.TextYAlignment.Center
G2L["256"].Active = false
G2L["256"].AnchorPoint = Vector2.new(0, 0)
G2L["256"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["256"].BackgroundTransparency = 1
G2L["256"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["256"].BorderSizePixel = 1
G2L["256"].ClipsDescendants = false
G2L["256"].Draggable = false
G2L["256"].Position = UDim2.new(0, -40, 0, 0)
G2L["256"].Rotation = 0
G2L["256"].Selectable = false
G2L["256"].SelectionOrder = 0
G2L["256"].Size = UDim2.new(0, 34, 1, 0)
G2L["256"].Visible = true
G2L["256"].ZIndex = 1
G2L["256"].Parent = G2L["243"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Ok
G2L["257"].Name = [[Ok]]
G2L["257"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["257"].Text = [[OK]]
G2L["257"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["257"].TextScaled = false
G2L["257"].TextSize = 14
G2L["257"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["257"].TextStrokeTransparency = 1
G2L["257"].TextWrapped = false
G2L["257"].TextXAlignment = Enum.TextXAlignment.Center
G2L["257"].TextYAlignment = Enum.TextYAlignment.Center
G2L["257"].Active = false
G2L["257"].AnchorPoint = Vector2.new(0, 0)
G2L["257"].BackgroundColor3 = Color3.fromRGB(48.000004, 48.000004, 48.000004)
G2L["257"].BackgroundTransparency = 0
G2L["257"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["257"].BorderSizePixel = 0
G2L["257"].ClipsDescendants = false
G2L["257"].Draggable = false
G2L["257"].Position = UDim2.new(1, -235, 1, -28)
G2L["257"].Rotation = 0
G2L["257"].Selectable = true
G2L["257"].SelectionOrder = 0
G2L["257"].Size = UDim2.new(0, 100, 0, 25)
G2L["257"].Visible = true
G2L["257"].ZIndex = 1
G2L["257"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.Content.Cancel
G2L["258"].Name = [[Cancel]]
G2L["258"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["258"].Text = [[Cancel]]
G2L["258"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["258"].TextScaled = false
G2L["258"].TextSize = 14
G2L["258"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["258"].TextStrokeTransparency = 1
G2L["258"].TextWrapped = false
G2L["258"].TextXAlignment = Enum.TextXAlignment.Center
G2L["258"].TextYAlignment = Enum.TextYAlignment.Center
G2L["258"].Active = false
G2L["258"].AnchorPoint = Vector2.new(0, 0)
G2L["258"].BackgroundColor3 = Color3.fromRGB(48.000004, 48.000004, 48.000004)
G2L["258"].BackgroundTransparency = 0
G2L["258"].BorderColor3 = Color3.fromRGB(96.00001, 96.00001, 96.00001)
G2L["258"].BorderSizePixel = 0
G2L["258"].ClipsDescendants = false
G2L["258"].Draggable = false
G2L["258"].Position = UDim2.new(1, -130, 1, -28)
G2L["258"].Rotation = 0
G2L["258"].Selectable = true
G2L["258"].SelectionOrder = 0
G2L["258"].Size = UDim2.new(0, 100, 0, 25)
G2L["258"].Visible = true
G2L["258"].ZIndex = 1
G2L["258"].Parent = G2L["158"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.TopBar
G2L["259"].Name = [[TopBar]]
G2L["259"].Active = false
G2L["259"].AnchorPoint = Vector2.new(0, 0)
G2L["259"].BackgroundColor3 = Color3.fromRGB(48.000004, 48.000004, 48.000004)
G2L["259"].BackgroundTransparency = 0
G2L["259"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["259"].BorderSizePixel = 0
G2L["259"].ClipsDescendants = false
G2L["259"].Draggable = false
G2L["259"].Position = UDim2.new(0, 0, 0, 0)
G2L["259"].Rotation = 0
G2L["259"].Selectable = false
G2L["259"].SelectionOrder = 0
G2L["259"].Size = UDim2.new(1, 0, 0, 25)
G2L["259"].Visible = true
G2L["259"].ZIndex = 1
G2L["259"].Parent = G2L["157"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.TopBar.WindowTitle
G2L["260"].Name = [[WindowTitle]]
G2L["260"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["260"].Text = [[Choose a color]]
G2L["260"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["260"].TextScaled = false
G2L["260"].TextSize = 14
G2L["260"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["260"].TextStrokeTransparency = 1
G2L["260"].TextWrapped = false
G2L["260"].TextXAlignment = Enum.TextXAlignment.Center
G2L["260"].TextYAlignment = Enum.TextYAlignment.Center
G2L["260"].Active = false
G2L["260"].AnchorPoint = Vector2.new(0, 0)
G2L["260"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["260"].BackgroundTransparency = 1
G2L["260"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["260"].BorderSizePixel = 1
G2L["260"].ClipsDescendants = false
G2L["260"].Draggable = false
G2L["260"].Position = UDim2.new(0, 25, 0, 0)
G2L["260"].Rotation = 0
G2L["260"].Selectable = false
G2L["260"].SelectionOrder = 0
G2L["260"].Size = UDim2.new(1, -50, 0, 25)
G2L["260"].Visible = true
G2L["260"].ZIndex = 1
G2L["260"].Parent = G2L["259"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.ColorPicker.TopBar.Close
G2L["261"].Name = [[Close]]
G2L["261"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["261"].Text = [[X]]
G2L["261"].TextColor3 = Color3.fromRGB(220.00002, 220.00002, 220.00002)
G2L["261"].TextScaled = false
G2L["261"].TextSize = 14
G2L["261"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["261"].TextStrokeTransparency = 1
G2L["261"].TextWrapped = false
G2L["261"].TextXAlignment = Enum.TextXAlignment.Center
G2L["261"].TextYAlignment = Enum.TextYAlignment.Center
G2L["261"].Active = false
G2L["261"].AnchorPoint = Vector2.new(0, 0)
G2L["261"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["261"].BackgroundTransparency = 1
G2L["261"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["261"].BorderSizePixel = 0
G2L["261"].ClipsDescendants = false
G2L["261"].Draggable = false
G2L["261"].Position = UDim2.new(1, -27, 0, 0)
G2L["261"].Rotation = 0
G2L["261"].Selectable = true
G2L["261"].SelectionOrder = 0
G2L["261"].Size = UDim2.new(0, 25, 0, 25)
G2L["261"].Visible = true
G2L["261"].ZIndex = 1
G2L["261"].Parent = G2L["259"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.Main
G2L["262"].Name = [[Main]]
G2L["262"].Parent = G2L["156"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu
G2L["263"].Name = [[ContextMenu]]
G2L["263"].Parent = G2L["153"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu
G2L["264"].Name = [[Menu]]
G2L["264"].Active = true
G2L["264"].ClipsDescendants = true
G2L["264"].Size = UDim2.new(10, 0, 10.58, 0)
G2L["264"].Enabled = false
G2L["264"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["264"].Parent = G2L["263"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu.Frame
G2L["265"].Name = [[Frame]]
G2L["265"].Active = false
G2L["265"].AnchorPoint = Vector2.new(0, 0)
G2L["265"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["265"].BackgroundTransparency = 0
G2L["265"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["265"].BorderSizePixel = 2
G2L["265"].ClipsDescendants = true
G2L["265"].Draggable = false
G2L["265"].Position = UDim2.new(-0.01, 0, 0, 0)
G2L["265"].Rotation = 0
G2L["265"].Selectable = false
G2L["265"].SelectionOrder = 0
G2L["265"].Size = UDim2.new(1.02, 0, 1, 0)
G2L["265"].Visible = true
G2L["265"].ZIndex = 1
G2L["265"].Parent = G2L["264"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu.Frame.TemplateBtn
G2L["266"].Name = [[TemplateBtn]]
G2L["266"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["266"].Text = [[Kill]]
G2L["266"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["266"].TextScaled = true
G2L["266"].TextSize = 14
G2L["266"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["266"].TextStrokeTransparency = 1
G2L["266"].TextWrapped = true
G2L["266"].TextXAlignment = Enum.TextXAlignment.Center
G2L["266"].TextYAlignment = Enum.TextYAlignment.Center
G2L["266"].Active = false
G2L["266"].AnchorPoint = Vector2.new(0, 0)
G2L["266"].BackgroundColor3 = Color3.fromRGB(36, 64, 191)
G2L["266"].BackgroundTransparency = 0.5
G2L["266"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["266"].BorderSizePixel = 0
G2L["266"].ClipsDescendants = false
G2L["266"].Draggable = false
G2L["266"].Position = UDim2.new(0, 0, 0, 0)
G2L["266"].Rotation = 0
G2L["266"].Selectable = true
G2L["266"].SelectionOrder = 0
G2L["266"].Size = UDim2.new(1, 0, 0.135, 0)
G2L["266"].Visible = true
G2L["266"].ZIndex = 1
G2L["266"].Parent = G2L["265"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu.Menu.Frame.UIListLayout
G2L["267"].Name = [[UIListLayout]]
G2L["267"].Parent = G2L["265"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Scripts
G2L["268"].Name = [[Scripts]]
G2L["268"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Executor
G2L["269"].Name = [[Executor]]
G2L["269"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Runner
G2L["270"].Name = [[Runner]]
G2L["270"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Follow
G2L["271"].Name = [[Follow]]
G2L["271"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover
G2L["272"].Name = [[ChatRemover]]
G2L["272"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript
G2L["273"].Name = [[ChatScript]]
G2L["273"].Parent = G2L["272"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain
G2L["274"].Name = [[ChatMain]]
G2L["274"].Parent = G2L["273"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChannelsBar
G2L["275"].Name = [[ChannelsBar]]
G2L["275"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatBar
G2L["276"].Name = [[ChatBar]]
G2L["276"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatChannel
G2L["277"].Name = [[ChatChannel]]
G2L["277"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageLogDisplay
G2L["278"].Name = [[MessageLogDisplay]]
G2L["278"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatWindow
G2L["279"].Name = [[ChatWindow]]
G2L["279"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageLabelCreator
G2L["280"].Name = [[MessageLabelCreator]]
G2L["280"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.CommandProcessor
G2L["281"].Name = [[CommandProcessor]]
G2L["281"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChannelsTab
G2L["282"].Name = [[ChannelsTab]]
G2L["282"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ObjectPool
G2L["283"].Name = [[ObjectPool]]
G2L["283"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageSender
G2L["284"].Name = [[MessageSender]]
G2L["284"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.CurveUtil
G2L["285"].Name = [[CurveUtil]]
G2L["285"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.Remote
G2L["286"].Name = [[Remote]]
G2L["286"].Parent = G2L["274"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Anonymify
G2L["287"].Name = [[Anonymify]]
G2L["287"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Wall
G2L["288"].Name = [[Wall]]
G2L["288"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Commands
G2L["289"].Name = [[Commands]]
G2L["289"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Gear
G2L["290"].Name = [[Gear]]
G2L["290"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Bleach
G2L["291"].Name = [[Bleach]]
G2L["291"].Parent = G2L["65"]

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["292"].Name = [[LocalScript]]
G2L["292"].Parent = G2L["62"]

--ScreenGui.Frame.menu.sc.grab.RemoteEvent
G2L["293"].Name = [[RemoteEvent]]
G2L["293"].Parent = G2L["62"]

--ScreenGui.Frame.menu.sc.top
G2L["294"].Name = [[top]]
G2L["294"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["294"].Text = [[T0pk3k 3.0]]
G2L["294"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["294"].TextScaled = true
G2L["294"].TextSize = 14
G2L["294"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["294"].TextStrokeTransparency = 1
G2L["294"].TextWrapped = true
G2L["294"].TextXAlignment = Enum.TextXAlignment.Center
G2L["294"].TextYAlignment = Enum.TextYAlignment.Center
G2L["294"].Active = true
G2L["294"].AnchorPoint = Vector2.new(0, 0)
G2L["294"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["294"].BackgroundTransparency = 0
G2L["294"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["294"].BorderSizePixel = 1
G2L["294"].ClipsDescendants = false
G2L["294"].Draggable = false
G2L["294"].Position = UDim2.new(0.10560345, 0, 0.16022746, 0)
G2L["294"].Rotation = 0
G2L["294"].Selectable = true
G2L["294"].SelectionOrder = 0
G2L["294"].Size = UDim2.new(0, 49, 0, 37)
G2L["294"].Visible = true
G2L["294"].ZIndex = 1
G2L["294"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.top.LocalScript
G2L["295"].Name = [[LocalScript]]
G2L["295"].Parent = G2L["294"]

--ScreenGui.Frame.menu.sc.top.LocalScript.ServerEvent
G2L["296"].Name = [[ServerEvent]]
G2L["296"].Parent = G2L["295"]

--ScreenGui.Frame.menu.sc.top.LocalScript.ServerEvent.Script
G2L["297"].Name = [[Script]]
G2L["297"].Parent = G2L["296"]

--ScreenGui.Frame.menu.sc.top
G2L["298"].Name = [[top]]
G2L["298"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["298"].Text = [[Rek3k]]
G2L["298"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["298"].TextScaled = true
G2L["298"].TextSize = 14
G2L["298"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["298"].TextStrokeTransparency = 1
G2L["298"].TextWrapped = true
G2L["298"].TextXAlignment = Enum.TextXAlignment.Center
G2L["298"].TextYAlignment = Enum.TextYAlignment.Center
G2L["298"].Active = true
G2L["298"].AnchorPoint = Vector2.new(0, 0)
G2L["298"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["298"].BackgroundTransparency = 0
G2L["298"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["298"].BorderSizePixel = 1
G2L["298"].ClipsDescendants = false
G2L["298"].Draggable = false
G2L["298"].Position = UDim2.new(0.21551724, 0, 0.15887497, 0)
G2L["298"].Rotation = 0
G2L["298"].Selectable = true
G2L["298"].SelectionOrder = 0
G2L["298"].Size = UDim2.new(0, 49, 0, 37)
G2L["298"].Visible = true
G2L["298"].ZIndex = 1
G2L["298"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.top.Script
G2L["299"].Name = [[Script]]
G2L["299"].Parent = G2L["298"]

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse
G2L["300"].Name = [[FakeMouse]]
G2L["300"].Parent = G2L["299"]

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse.Client
G2L["301"].Name = [[Client]]
G2L["301"].Parent = G2L["300"]

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse.GetPlr
G2L["302"].Name = [[GetPlr]]
G2L["302"].Parent = G2L["300"]

--ScreenGui.Frame.menu.sc.top.Script.FakeMouse.GetPlrE
G2L["303"].Name = [[GetPlrE]]
G2L["303"].Parent = G2L["300"]

--ScreenGui.Frame.menu.sc.Csutom
G2L["304"].Name = [[Csutom]]
G2L["304"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["304"].Text = [[Roxploit v7]]
G2L["304"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["304"].TextScaled = true
G2L["304"].TextSize = 14
G2L["304"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["304"].TextStrokeTransparency = 1
G2L["304"].TextWrapped = true
G2L["304"].TextXAlignment = Enum.TextXAlignment.Center
G2L["304"].TextYAlignment = Enum.TextYAlignment.Center
G2L["304"].Active = true
G2L["304"].AnchorPoint = Vector2.new(0, 0)
G2L["304"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["304"].BackgroundTransparency = 0
G2L["304"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["304"].BorderSizePixel = 1
G2L["304"].ClipsDescendants = false
G2L["304"].Draggable = false
G2L["304"].Position = UDim2.new(0.31681034, 0, 0.15945867, 0)
G2L["304"].Rotation = 0
G2L["304"].Selectable = true
G2L["304"].SelectionOrder = 0
G2L["304"].Size = UDim2.new(0, 49, 0, 37)
G2L["304"].Visible = true
G2L["304"].ZIndex = 1
G2L["304"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["305"].Name = [[Script]]
G2L["305"].Parent = G2L["304"]

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["306"].Name = [[LocalScript]]
G2L["306"].Parent = G2L["304"]

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["307"].Name = [[RemoteEvent]]
G2L["307"].Parent = G2L["304"]

--ScreenGui.Frame.menu.sc.Xester
G2L["308"].Name = [[Xester]]
G2L["308"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["308"].Text = [[Xester]]
G2L["308"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["308"].TextScaled = true
G2L["308"].TextSize = 14
G2L["308"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["308"].TextStrokeTransparency = 1
G2L["308"].TextWrapped = true
G2L["308"].TextXAlignment = Enum.TextXAlignment.Center
G2L["308"].TextYAlignment = Enum.TextYAlignment.Center
G2L["308"].Active = true
G2L["308"].AnchorPoint = Vector2.new(0, 0)
G2L["308"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["308"].BackgroundTransparency = 0
G2L["308"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["308"].BorderSizePixel = 1
G2L["308"].ClipsDescendants = false
G2L["308"].Draggable = false
G2L["308"].Position = UDim2.new(0.4224138, 0, 0.15758015, 0)
G2L["308"].Rotation = 0
G2L["308"].Selectable = true
G2L["308"].SelectionOrder = 0
G2L["308"].Size = UDim2.new(0, 49, 0, 37)
G2L["308"].Visible = true
G2L["308"].ZIndex = 1
G2L["308"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Xester.LocalScript
G2L["309"].Name = [[LocalScript]]
G2L["309"].Parent = G2L["308"]

--ScreenGui.Frame.menu.sc.Xester.LocalScript.ServerEvent
G2L["310"].Name = [[ServerEvent]]
G2L["310"].Parent = G2L["309"]

--ScreenGui.Frame.menu.sc.Xester.LocalScript.ServerEvent.Script
G2L["311"].Name = [[Script]]
G2L["311"].Parent = G2L["310"]

--ScreenGui.Frame.menu.sc.suis
G2L["312"].Name = [[suis]]
G2L["312"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["312"].Text = [[spread the virus]]
G2L["312"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["312"].TextScaled = true
G2L["312"].TextSize = 14
G2L["312"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["312"].TextStrokeTransparency = 1
G2L["312"].TextWrapped = true
G2L["312"].TextXAlignment = Enum.TextXAlignment.Center
G2L["312"].TextYAlignment = Enum.TextYAlignment.Center
G2L["312"].Active = true
G2L["312"].AnchorPoint = Vector2.new(0, 0)
G2L["312"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["312"].BackgroundTransparency = 0
G2L["312"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["312"].BorderSizePixel = 1
G2L["312"].ClipsDescendants = false
G2L["312"].Draggable = false
G2L["312"].Position = UDim2.new(0.5280172, 0, 0.15843388, 0)
G2L["312"].Rotation = 0
G2L["312"].Selectable = true
G2L["312"].SelectionOrder = 0
G2L["312"].Size = UDim2.new(0, 49, 0, 37)
G2L["312"].Visible = true
G2L["312"].ZIndex = 1
G2L["312"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.suis.LocalScript
G2L["313"].Name = [[LocalScript]]
G2L["313"].Parent = G2L["312"]

--ScreenGui.Frame.menu.sc.suis.LocalScript.ServerEvent
G2L["314"].Name = [[ServerEvent]]
G2L["314"].Parent = G2L["313"]

--ScreenGui.Frame.menu.sc.suis.LocalScript.ServerEvent.Script
G2L["315"].Name = [[Script]]
G2L["315"].Parent = G2L["314"]

--ScreenGui.Frame.menu.sc.chicos
G2L["316"].Name = [[chicos]]
G2L["316"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["316"].Text = [[Suicide]]
G2L["316"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["316"].TextScaled = true
G2L["316"].TextSize = 14
G2L["316"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["316"].TextStrokeTransparency = 1
G2L["316"].TextWrapped = true
G2L["316"].TextXAlignment = Enum.TextXAlignment.Center
G2L["316"].TextYAlignment = Enum.TextYAlignment.Center
G2L["316"].Active = true
G2L["316"].AnchorPoint = Vector2.new(0, 0)
G2L["316"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["316"].BackgroundTransparency = 0
G2L["316"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["316"].BorderSizePixel = 1
G2L["316"].ClipsDescendants = false
G2L["316"].Draggable = false
G2L["316"].Position = UDim2.new(0.6336207, 0, 0.15944856, 0)
G2L["316"].Rotation = 0
G2L["316"].Selectable = true
G2L["316"].SelectionOrder = 0
G2L["316"].Size = UDim2.new(0, 49, 0, 37)
G2L["316"].Visible = true
G2L["316"].ZIndex = 1
G2L["316"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.chicos.LocalScript
G2L["317"].Name = [[LocalScript]]
G2L["317"].Parent = G2L["316"]

--ScreenGui.Frame.menu.sc.chicos.LocalScript.ServerEvent
G2L["318"].Name = [[ServerEvent]]
G2L["318"].Parent = G2L["317"]

--ScreenGui.Frame.menu.sc.chicos.LocalScript.ServerEvent.Script
G2L["319"].Name = [[Script]]
G2L["319"].Parent = G2L["318"]

--ScreenGui.Frame.menu.sc.c4
G2L["320"].Name = [[c4]]
G2L["320"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["320"].Text = [[C4 bomb]]
G2L["320"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["320"].TextScaled = true
G2L["320"].TextSize = 14
G2L["320"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["320"].TextStrokeTransparency = 1
G2L["320"].TextWrapped = true
G2L["320"].TextXAlignment = Enum.TextXAlignment.Center
G2L["320"].TextYAlignment = Enum.TextYAlignment.Center
G2L["320"].Active = true
G2L["320"].AnchorPoint = Vector2.new(0, 0)
G2L["320"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["320"].BackgroundTransparency = 0
G2L["320"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["320"].BorderSizePixel = 1
G2L["320"].ClipsDescendants = false
G2L["320"].Draggable = false
G2L["320"].Position = UDim2.new(0.73922414, 0, 0.1616363, 0)
G2L["320"].Rotation = 0
G2L["320"].Selectable = true
G2L["320"].SelectionOrder = 0
G2L["320"].Size = UDim2.new(0, 49, 0, 37)
G2L["320"].Visible = true
G2L["320"].ZIndex = 1
G2L["320"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.c4.LocalScript
G2L["321"].Name = [[LocalScript]]
G2L["321"].Parent = G2L["320"]

--ScreenGui.Frame.menu.sc.c4.LocalScript.ServerEvent
G2L["322"].Name = [[ServerEvent]]
G2L["322"].Parent = G2L["321"]

--ScreenGui.Frame.menu.sc.c4.LocalScript.ServerEvent.Script
G2L["323"].Name = [[Script]]
G2L["323"].Parent = G2L["322"]

--ScreenGui.Frame.menu.sc.low taper fade
G2L["324"].Name = [[low taper fade]]
G2L["324"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["324"].Text = [[Ninja girl]]
G2L["324"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["324"].TextScaled = true
G2L["324"].TextSize = 14
G2L["324"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["324"].TextStrokeTransparency = 1
G2L["324"].TextWrapped = true
G2L["324"].TextXAlignment = Enum.TextXAlignment.Center
G2L["324"].TextYAlignment = Enum.TextYAlignment.Center
G2L["324"].Active = true
G2L["324"].AnchorPoint = Vector2.new(0, 0)
G2L["324"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["324"].BackgroundTransparency = 0
G2L["324"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["324"].BorderSizePixel = 1
G2L["324"].ClipsDescendants = false
G2L["324"].Draggable = false
G2L["324"].Position = UDim2.new(0.8448276, 0, 0.16083875, 0)
G2L["324"].Rotation = 0
G2L["324"].Selectable = true
G2L["324"].SelectionOrder = 0
G2L["324"].Size = UDim2.new(0, 49, 0, 37)
G2L["324"].Visible = true
G2L["324"].ZIndex = 1
G2L["324"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.low taper fade.LocalScript
G2L["325"].Name = [[LocalScript]]
G2L["325"].Parent = G2L["324"]

--ScreenGui.Frame.menu.sc.low taper fade.LocalScript.ServerEvent
G2L["326"].Name = [[ServerEvent]]
G2L["326"].Parent = G2L["325"]

--ScreenGui.Frame.menu.sc.low taper fade.LocalScript.ServerEvent.Script
G2L["327"].Name = [[Script]]
G2L["327"].Parent = G2L["326"]

--ScreenGui.Frame.menu.sc.doggo
G2L["328"].Name = [[doggo]]
G2L["328"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["328"].Text = [[Doge army]]
G2L["328"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["328"].TextScaled = true
G2L["328"].TextSize = 14
G2L["328"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["328"].TextStrokeTransparency = 1
G2L["328"].TextWrapped = true
G2L["328"].TextXAlignment = Enum.TextXAlignment.Center
G2L["328"].TextYAlignment = Enum.TextYAlignment.Center
G2L["328"].Active = true
G2L["328"].AnchorPoint = Vector2.new(0, 0)
G2L["328"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["328"].BackgroundTransparency = 0
G2L["328"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["328"].BorderSizePixel = 1
G2L["328"].ClipsDescendants = false
G2L["328"].Draggable = false
G2L["328"].Position = UDim2.new(0, 0, 0.23588885, 0)
G2L["328"].Rotation = 0
G2L["328"].Selectable = true
G2L["328"].SelectionOrder = 0
G2L["328"].Size = UDim2.new(0, 49, 0, 37)
G2L["328"].Visible = true
G2L["328"].ZIndex = 1
G2L["328"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.doggo.LocalScript
G2L["329"].Name = [[LocalScript]]
G2L["329"].Parent = G2L["328"]

--ScreenGui.Frame.menu.sc.doggo.LocalScript.ServerEvent
G2L["330"].Name = [[ServerEvent]]
G2L["330"].Parent = G2L["329"]

--ScreenGui.Frame.menu.sc.doggo.LocalScript.ServerEvent.Script
G2L["331"].Name = [[Script]]
G2L["331"].Parent = G2L["330"]

--ScreenGui.Frame.menu.sc.soldier
G2L["332"].Name = [[soldier]]
G2L["332"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["332"].Text = [[Syrian Soldier]]
G2L["332"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["332"].TextScaled = true
G2L["332"].TextSize = 14
G2L["332"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["332"].TextStrokeTransparency = 1
G2L["332"].TextWrapped = true
G2L["332"].TextXAlignment = Enum.TextXAlignment.Center
G2L["332"].TextYAlignment = Enum.TextYAlignment.Center
G2L["332"].Active = true
G2L["332"].AnchorPoint = Vector2.new(0, 0)
G2L["332"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["332"].BackgroundTransparency = 0
G2L["332"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["332"].BorderSizePixel = 1
G2L["332"].ClipsDescendants = false
G2L["332"].Draggable = false
G2L["332"].Position = UDim2.new(0.109913796, 0, 0.23723254, 0)
G2L["332"].Rotation = 0
G2L["332"].Selectable = true
G2L["332"].SelectionOrder = 0
G2L["332"].Size = UDim2.new(0, 49, 0, 37)
G2L["332"].Visible = true
G2L["332"].ZIndex = 1
G2L["332"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.soldier.LocalScript
G2L["333"].Name = [[LocalScript]]
G2L["333"].Parent = G2L["332"]

--ScreenGui.Frame.menu.sc.soldier.LocalScript.ServerEvent
G2L["334"].Name = [[ServerEvent]]
G2L["334"].Parent = G2L["333"]

--ScreenGui.Frame.menu.sc.soldier.LocalScript.ServerEvent.Script
G2L["335"].Name = [[Script]]
G2L["335"].Parent = G2L["334"]

--ScreenGui.Frame.menu.sc.chicos
G2L["336"].Name = [[chicos]]
G2L["336"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["336"].Text = [[Rc7 Cloud]]
G2L["336"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["336"].TextScaled = true
G2L["336"].TextSize = 14
G2L["336"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["336"].TextStrokeTransparency = 1
G2L["336"].TextWrapped = true
G2L["336"].TextXAlignment = Enum.TextXAlignment.Center
G2L["336"].TextYAlignment = Enum.TextYAlignment.Center
G2L["336"].Active = true
G2L["336"].AnchorPoint = Vector2.new(0, 0)
G2L["336"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["336"].BackgroundTransparency = 0
G2L["336"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["336"].BorderSizePixel = 1
G2L["336"].ClipsDescendants = false
G2L["336"].Draggable = false
G2L["336"].Position = UDim2.new(0.21551724, 0, 0.23598574, 0)
G2L["336"].Rotation = 0
G2L["336"].Selectable = true
G2L["336"].SelectionOrder = 0
G2L["336"].Size = UDim2.new(0, 49, 0, 37)
G2L["336"].Visible = true
G2L["336"].ZIndex = 1
G2L["336"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.chicos.Script
G2L["337"].Name = [[Script]]
G2L["337"].Parent = G2L["336"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse
G2L["338"].Name = [[FakeMouse]]
G2L["338"].Parent = G2L["337"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.Client
G2L["339"].Name = [[Client]]
G2L["339"].Parent = G2L["338"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlr
G2L["340"].Name = [[GetPlr]]
G2L["340"].Parent = G2L["338"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlrE
G2L["341"].Name = [[GetPlrE]]
G2L["341"].Parent = G2L["338"]

--ScreenGui.Frame.menu.sc.chicos
G2L["342"].Name = [[chicos]]
G2L["342"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["342"].Text = [[stigma cloud]]
G2L["342"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["342"].TextScaled = true
G2L["342"].TextSize = 14
G2L["342"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["342"].TextStrokeTransparency = 1
G2L["342"].TextWrapped = true
G2L["342"].TextXAlignment = Enum.TextXAlignment.Center
G2L["342"].TextYAlignment = Enum.TextYAlignment.Center
G2L["342"].Active = true
G2L["342"].AnchorPoint = Vector2.new(0, 0)
G2L["342"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["342"].BackgroundTransparency = 0
G2L["342"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["342"].BorderSizePixel = 1
G2L["342"].ClipsDescendants = false
G2L["342"].Draggable = false
G2L["342"].Position = UDim2.new(0.31681034, 0, 0.23604712, 0)
G2L["342"].Rotation = 0
G2L["342"].Selectable = true
G2L["342"].SelectionOrder = 0
G2L["342"].Size = UDim2.new(0, 49, 0, 37)
G2L["342"].Visible = true
G2L["342"].ZIndex = 1
G2L["342"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.chicos.Script
G2L["343"].Name = [[Script]]
G2L["343"].Parent = G2L["342"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse
G2L["344"].Name = [[FakeMouse]]
G2L["344"].Parent = G2L["343"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.Client
G2L["345"].Name = [[Client]]
G2L["345"].Parent = G2L["344"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlr
G2L["346"].Name = [[GetPlr]]
G2L["346"].Parent = G2L["344"]

--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.GetPlrE
G2L["347"].Name = [[GetPlrE]]
G2L["347"].Parent = G2L["344"]

--ScreenGui.Frame.menu.sc.CodeScroll
G2L["348"].Name = [[CodeScroll]]
G2L["348"].BottomImage = [[rbxasset://textures/ui/Scroll/scroll-bottom.png]]
G2L["348"].CanvasSize = UDim2.new(0, 0, 0, 0)
G2L["348"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["348"].ScrollBarThickness = 6
G2L["348"].TopImage = [[rbxasset://textures/ui/Scroll/scroll-top.png]]
G2L["348"].Active = false
G2L["348"].AnchorPoint = Vector2.new(0, 0)
G2L["348"].BackgroundColor3 = Color3.fromRGB(30, 30, 30)
G2L["348"].BackgroundTransparency = 0.5
G2L["348"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["348"].BorderSizePixel = 0
G2L["348"].ClipsDescendants = true
G2L["348"].Draggable = false
G2L["348"].Position = UDim2.new(0.06352602, 0, 0.53928417, 0)
G2L["348"].Rotation = 0
G2L["348"].Selectable = true
G2L["348"].SelectionOrder = 0
G2L["348"].Size = UDim2.new(0, 396, 0, 111)
G2L["348"].Visible = true
G2L["348"].ZIndex = 1
G2L["348"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code
G2L["349"].Name = [[Code]]
G2L["349"].FontFace = Font.new([[rbxasset://fonts/families/Inconsolata.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["349"].MultiLine = true
G2L["349"].PlaceholderColor3 = Color3.new(1, 1, 1)
G2L["349"].PlaceholderText = [[]]
G2L["349"].Text = [[print("Premium")]]
G2L["349"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["349"].TextScaled = false
G2L["349"].TextSize = 14
G2L["349"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["349"].TextStrokeTransparency = 1
G2L["349"].TextWrapped = false
G2L["349"].TextXAlignment = Enum.TextXAlignment.Left
G2L["349"].TextYAlignment = Enum.TextYAlignment.Top
G2L["349"].Active = true
G2L["349"].AnchorPoint = Vector2.new(1, 0)
G2L["349"].BackgroundColor3 = Color3.fromRGB(30, 30, 30)
G2L["349"].BackgroundTransparency = 1
G2L["349"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["349"].BorderSizePixel = 0
G2L["349"].ClipsDescendants = false
G2L["349"].Draggable = false
G2L["349"].Position = UDim2.new(0.97909814, 0, 0, 0)
G2L["349"].Rotation = 0
G2L["349"].Selectable = true
G2L["349"].SelectionOrder = 0
G2L["349"].Size = UDim2.new(0.93537414, 0, 1, 0)
G2L["349"].Visible = true
G2L["349"].ZIndex = 2
G2L["349"].Parent = G2L["348"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Tokens_
G2L["350"].Name = [[Tokens_]]
G2L["350"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["350"].Text = [[





     (                                       )]]
G2L["350"].TextColor3 = Color3.fromRGB(180, 180, 180)
G2L["350"].TextScaled = false
G2L["350"].TextSize = 14
G2L["350"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["350"].TextStrokeTransparency = 1
G2L["350"].TextWrapped = false
G2L["350"].TextXAlignment = Enum.TextXAlignment.Left
G2L["350"].TextYAlignment = Enum.TextYAlignment.Top
G2L["350"].Active = false
G2L["350"].AnchorPoint = Vector2.new(0, 0)
G2L["350"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["350"].BackgroundTransparency = 1
G2L["350"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["350"].BorderSizePixel = 3
G2L["350"].ClipsDescendants = false
G2L["350"].Draggable = false
G2L["350"].Position = UDim2.new(0, 0, 0, 0)
G2L["350"].Rotation = 0
G2L["350"].Selectable = false
G2L["350"].SelectionOrder = 0
G2L["350"].Size = UDim2.new(1, 0, 1, 0)
G2L["350"].Visible = false
G2L["350"].ZIndex = 2
G2L["350"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Strings_
G2L["351"].Name = [[Strings_]]
G2L["351"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["351"].Text = [[





      "ExecuSer is a Server/Client Executor."]]
G2L["351"].TextColor3 = Color3.fromRGB(214, 157, 133)
G2L["351"].TextScaled = false
G2L["351"].TextSize = 14
G2L["351"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["351"].TextStrokeTransparency = 1
G2L["351"].TextWrapped = false
G2L["351"].TextXAlignment = Enum.TextXAlignment.Left
G2L["351"].TextYAlignment = Enum.TextYAlignment.Top
G2L["351"].Active = false
G2L["351"].AnchorPoint = Vector2.new(0, 0)
G2L["351"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["351"].BackgroundTransparency = 1
G2L["351"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["351"].BorderSizePixel = 3
G2L["351"].ClipsDescendants = false
G2L["351"].Draggable = false
G2L["351"].Position = UDim2.new(0, 0, 0, 0)
G2L["351"].Rotation = 0
G2L["351"].Selectable = false
G2L["351"].SelectionOrder = 0
G2L["351"].Size = UDim2.new(1, 0, 1, 0)
G2L["351"].Visible = false
G2L["351"].ZIndex = 2
G2L["351"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.SSwords_
G2L["352"].Name = [[SSwords_]]
G2L["352"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["352"].Text = [[]]
G2L["352"].TextColor3 = Color3.fromRGB(0, 255, 255)
G2L["352"].TextScaled = false
G2L["352"].TextSize = 14
G2L["352"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["352"].TextStrokeTransparency = 1
G2L["352"].TextWrapped = false
G2L["352"].TextXAlignment = Enum.TextXAlignment.Left
G2L["352"].TextYAlignment = Enum.TextYAlignment.Top
G2L["352"].Active = false
G2L["352"].AnchorPoint = Vector2.new(0, 0)
G2L["352"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["352"].BackgroundTransparency = 1
G2L["352"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["352"].BorderSizePixel = 3
G2L["352"].ClipsDescendants = false
G2L["352"].Draggable = false
G2L["352"].Position = UDim2.new(0, 0, 0, 0)
G2L["352"].Rotation = 0
G2L["352"].Selectable = false
G2L["352"].SelectionOrder = 0
G2L["352"].Size = UDim2.new(0.9999999, 0, 1, 0)
G2L["352"].Visible = false
G2L["352"].ZIndex = 2
G2L["352"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.RemoteHighlight_
G2L["353"].Name = [[RemoteHighlight_]]
G2L["353"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["353"].Text = [[]]
G2L["353"].TextColor3 = Color3.fromRGB(112.00001, 255, 227.00002)
G2L["353"].TextScaled = false
G2L["353"].TextSize = 14
G2L["353"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["353"].TextStrokeTransparency = 1
G2L["353"].TextWrapped = false
G2L["353"].TextXAlignment = Enum.TextXAlignment.Left
G2L["353"].TextYAlignment = Enum.TextYAlignment.Top
G2L["353"].Active = false
G2L["353"].AnchorPoint = Vector2.new(0, 0)
G2L["353"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["353"].BackgroundTransparency = 1
G2L["353"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["353"].BorderSizePixel = 3
G2L["353"].ClipsDescendants = false
G2L["353"].Draggable = false
G2L["353"].Position = UDim2.new(0, 0, 0, 0)
G2L["353"].Rotation = 0
G2L["353"].Selectable = false
G2L["353"].SelectionOrder = 0
G2L["353"].Size = UDim2.new(1, 0, 1, 0)
G2L["353"].Visible = false
G2L["353"].ZIndex = 2
G2L["353"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Numbers_
G2L["354"].Name = [[Numbers_]]
G2L["354"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["354"].Text = [[]]
G2L["354"].TextColor3 = Color3.fromRGB(181, 206, 168)
G2L["354"].TextScaled = false
G2L["354"].TextSize = 14
G2L["354"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["354"].TextStrokeTransparency = 1
G2L["354"].TextWrapped = false
G2L["354"].TextXAlignment = Enum.TextXAlignment.Left
G2L["354"].TextYAlignment = Enum.TextYAlignment.Top
G2L["354"].Active = false
G2L["354"].AnchorPoint = Vector2.new(0, 0)
G2L["354"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["354"].BackgroundTransparency = 1
G2L["354"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["354"].BorderSizePixel = 3
G2L["354"].ClipsDescendants = false
G2L["354"].Draggable = false
G2L["354"].Position = UDim2.new(0, 0, 0, 0)
G2L["354"].Rotation = 0
G2L["354"].Selectable = false
G2L["354"].SelectionOrder = 0
G2L["354"].Size = UDim2.new(1, 0, 1, 0)
G2L["354"].Visible = false
G2L["354"].ZIndex = 2
G2L["354"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Keywords_
G2L["355"].Name = [[Keywords_]]
G2L["355"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["355"].Text = [[





print]]
G2L["355"].TextColor3 = Color3.fromRGB(86, 156, 214)
G2L["355"].TextScaled = false
G2L["355"].TextSize = 14
G2L["355"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["355"].TextStrokeTransparency = 1
G2L["355"].TextWrapped = false
G2L["355"].TextXAlignment = Enum.TextXAlignment.Left
G2L["355"].TextYAlignment = Enum.TextYAlignment.Top
G2L["355"].Active = false
G2L["355"].AnchorPoint = Vector2.new(0, 0)
G2L["355"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["355"].BackgroundTransparency = 1
G2L["355"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["355"].BorderSizePixel = 3
G2L["355"].ClipsDescendants = false
G2L["355"].Draggable = false
G2L["355"].Position = UDim2.new(0, 0, 0, 0)
G2L["355"].Rotation = 0
G2L["355"].Selectable = false
G2L["355"].SelectionOrder = 0
G2L["355"].Size = UDim2.new(0.9999999, 0, 1, 0)
G2L["355"].Visible = false
G2L["355"].ZIndex = 2
G2L["355"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Globals_
G2L["356"].Name = [[Globals_]]
G2L["356"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["356"].Text = [[]]
G2L["356"].TextColor3 = Color3.fromRGB(86, 156, 214)
G2L["356"].TextScaled = false
G2L["356"].TextSize = 14
G2L["356"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["356"].TextStrokeTransparency = 1
G2L["356"].TextWrapped = false
G2L["356"].TextXAlignment = Enum.TextXAlignment.Left
G2L["356"].TextYAlignment = Enum.TextYAlignment.Top
G2L["356"].Active = false
G2L["356"].AnchorPoint = Vector2.new(0, 0)
G2L["356"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["356"].BackgroundTransparency = 1
G2L["356"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["356"].BorderSizePixel = 3
G2L["356"].ClipsDescendants = false
G2L["356"].Draggable = false
G2L["356"].Position = UDim2.new(0, 0, 0, 0)
G2L["356"].Rotation = 0
G2L["356"].Selectable = false
G2L["356"].SelectionOrder = 0
G2L["356"].Size = UDim2.new(1, 0, 1, 0)
G2L["356"].Visible = false
G2L["356"].ZIndex = 2
G2L["356"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Custom_
G2L["357"].Name = [[Custom_]]
G2L["357"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["357"].Text = [[]]
G2L["357"].TextColor3 = Color3.fromRGB(97, 175, 239)
G2L["357"].TextScaled = false
G2L["357"].TextSize = 14
G2L["357"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["357"].TextStrokeTransparency = 1
G2L["357"].TextWrapped = false
G2L["357"].TextXAlignment = Enum.TextXAlignment.Left
G2L["357"].TextYAlignment = Enum.TextYAlignment.Top
G2L["357"].Active = false
G2L["357"].AnchorPoint = Vector2.new(0, 0)
G2L["357"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["357"].BackgroundTransparency = 1
G2L["357"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["357"].BorderSizePixel = 3
G2L["357"].ClipsDescendants = false
G2L["357"].Draggable = false
G2L["357"].Position = UDim2.new(0, 0, 0, 0)
G2L["357"].Rotation = 0
G2L["357"].Selectable = false
G2L["357"].SelectionOrder = 0
G2L["357"].Size = UDim2.new(1, 0, 1, 0)
G2L["357"].Visible = false
G2L["357"].ZIndex = 2
G2L["357"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Code.Comments_
G2L["358"].Name = [[Comments_]]
G2L["358"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["358"].Text = [[--[[
New Custom Environment like Sinner!
LocalPlayer - Returns LocalPlayer Instance
loadstring - loadstring on LoadStringDisabled!
sinner_player() - Returns LocalPlayer like Sinner!
]]--]]
G2L["358"].TextColor3 = Color3.fromRGB(87, 166, 74)
G2L["358"].TextScaled = false
G2L["358"].TextSize = 14
G2L["358"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["358"].TextStrokeTransparency = 1
G2L["358"].TextWrapped = false
G2L["358"].TextXAlignment = Enum.TextXAlignment.Left
G2L["358"].TextYAlignment = Enum.TextYAlignment.Top
G2L["358"].Active = false
G2L["358"].AnchorPoint = Vector2.new(0, 0)
G2L["358"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["358"].BackgroundTransparency = 1
G2L["358"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["358"].BorderSizePixel = 3
G2L["358"].ClipsDescendants = false
G2L["358"].Draggable = false
G2L["358"].Position = UDim2.new(0, 0, 0, 0)
G2L["358"].Rotation = 0
G2L["358"].Selectable = false
G2L["358"].SelectionOrder = 0
G2L["358"].Size = UDim2.new(1, 0, 1, 0)
G2L["358"].Visible = false
G2L["358"].ZIndex = 2
G2L["358"].Parent = G2L["349"]

--ScreenGui.Frame.menu.sc.CodeScroll.Lines
G2L["359"].Name = [[Lines]]
G2L["359"].FontFace = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["359"].Text = [[  1]]
G2L["359"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["359"].TextScaled = false
G2L["359"].TextSize = 14
G2L["359"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["359"].TextStrokeTransparency = 1
G2L["359"].TextWrapped = false
G2L["359"].TextXAlignment = Enum.TextXAlignment.Left
G2L["359"].TextYAlignment = Enum.TextYAlignment.Top
G2L["359"].Active = false
G2L["359"].AnchorPoint = Vector2.new(0, 0)
G2L["359"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["359"].BackgroundTransparency = 1
G2L["359"].BorderColor3 = Color3.fromRGB(255, 0, 0)
G2L["359"].BorderSizePixel = 3
G2L["359"].ClipsDescendants = false
G2L["359"].Draggable = false
G2L["359"].Position = UDim2.new(-0.010526284, 0, 0, 0)
G2L["359"].Rotation = 0
G2L["359"].Selectable = false
G2L["359"].SelectionOrder = 0
G2L["359"].Size = UDim2.new(0.039437857, 0, 1, 0)
G2L["359"].Visible = true
G2L["359"].ZIndex = 1
G2L["359"].Parent = G2L["348"]

--ScreenGui.Frame.menu.sc.CodeScroll.LLine
G2L["360"].Name = [[LLine]]
G2L["360"].Active = false
G2L["360"].AnchorPoint = Vector2.new(0, 0)
G2L["360"].BackgroundColor3 = Color3.fromRGB(81, 81, 81)
G2L["360"].BackgroundTransparency = 0
G2L["360"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["360"].BorderSizePixel = 0
G2L["360"].ClipsDescendants = false
G2L["360"].Draggable = false
G2L["360"].Position = UDim2.new(0.035, 0, 0, 0)
G2L["360"].Rotation = 0
G2L["360"].Selectable = false
G2L["360"].SelectionOrder = 0
G2L["360"].Size = UDim2.new(0, 1, 1, 0)
G2L["360"].Visible = true
G2L["360"].ZIndex = 50
G2L["360"].Parent = G2L["348"]

--ScreenGui.Frame.menu.sc.CodeScroll.UIStroke
G2L["361"].Name = [[UIStroke]]
G2L["361"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
G2L["361"].Color = Color3.fromRGB(255, 255, 255)
G2L["361"].Enabled = true
G2L["361"].Thickness = 1
G2L["361"].Transparency = 0.5
G2L["361"].Parent = G2L["348"]

--ScreenGui.Frame.menu.sc.TextLabel
G2L["362"].Name = [[TextLabel]]
G2L["362"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["362"].Text = [[--Executer--]]
G2L["362"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["362"].TextScaled = true
G2L["362"].TextSize = 14
G2L["362"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["362"].TextStrokeTransparency = 1
G2L["362"].TextWrapped = true
G2L["362"].TextXAlignment = Enum.TextXAlignment.Center
G2L["362"].TextYAlignment = Enum.TextYAlignment.Center
G2L["362"].Active = false
G2L["362"].AnchorPoint = Vector2.new(0, 0)
G2L["362"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["362"].BackgroundTransparency = 1
G2L["362"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["362"].BorderSizePixel = 0
G2L["362"].ClipsDescendants = false
G2L["362"].Draggable = false
G2L["362"].Position = UDim2.new(0.38793105, 0, 0.49112085, 0)
G2L["362"].Rotation = 0
G2L["362"].Selectable = false
G2L["362"].SelectionOrder = 0
G2L["362"].Size = UDim2.new(0, 93, 0, 28)
G2L["362"].Visible = true
G2L["362"].ZIndex = 1
G2L["362"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.exe
G2L["363"].Name = [[exe]]
G2L["363"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["363"].Text = [[Exe]]
G2L["363"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["363"].TextScaled = true
G2L["363"].TextSize = 14
G2L["363"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["363"].TextStrokeTransparency = 1
G2L["363"].TextWrapped = true
G2L["363"].TextXAlignment = Enum.TextXAlignment.Center
G2L["363"].TextYAlignment = Enum.TextYAlignment.Center
G2L["363"].Active = true
G2L["363"].AnchorPoint = Vector2.new(0, 0)
G2L["363"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["363"].BackgroundTransparency = 0
G2L["363"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["363"].BorderSizePixel = 1
G2L["363"].ClipsDescendants = false
G2L["363"].Draggable = false
G2L["363"].Position = UDim2.new(0.06896552, 0, 0.76779604, 0)
G2L["363"].Rotation = 0
G2L["363"].Selectable = true
G2L["363"].SelectionOrder = 0
G2L["363"].Size = UDim2.new(0, 68, 0, 45)
G2L["363"].Visible = true
G2L["363"].ZIndex = 1
G2L["363"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.exe.Server Event
G2L["364"].Name = [[Server Event]]
G2L["364"].Parent = G2L["363"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring
G2L["365"].Name = [[Loadstring]]
G2L["365"].Parent = G2L["364"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.Rerubi
G2L["366"].Name = [[Rerubi]]
G2L["366"].Parent = G2L["365"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaP
G2L["367"].Name = [[LuaP]]
G2L["367"].Parent = G2L["365"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaU
G2L["368"].Name = [[LuaU]]
G2L["368"].Parent = G2L["365"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaK
G2L["369"].Name = [[LuaK]]
G2L["369"].Parent = G2L["365"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaY
G2L["370"].Name = [[LuaY]]
G2L["370"].Parent = G2L["365"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaX
G2L["371"].Name = [[LuaX]]
G2L["371"].Parent = G2L["365"]

--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaZ
G2L["372"].Name = [[LuaZ]]
G2L["372"].Parent = G2L["365"]

--ScreenGui.Frame.menu.sc.exe.Server Event.LocalScript
G2L["373"].Name = [[LocalScript]]
G2L["373"].Parent = G2L["364"]

--ScreenGui.Frame.menu.sc.exe.Server Event.LocalScript.RemoteEvent
G2L["374"].Name = [[RemoteEvent]]
G2L["374"].Parent = G2L["373"]

--ScreenGui.Frame.menu.sc.exe.Server Event.LocalScript.RemoteEvent.Script
G2L["375"].Name = [[Script]]
G2L["375"].Parent = G2L["374"]

--ScreenGui.Frame.menu.sc.exe.VK
G2L["376"].Name = [[VK]]
G2L["376"].Parent = G2L["363"]

--ScreenGui.Frame.menu.sc.hte
G2L["377"].Name = [[hte]]
G2L["377"].FontFace = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["377"].Text = [[hite text]]
G2L["377"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["377"].TextScaled = true
G2L["377"].TextSize = 14
G2L["377"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["377"].TextStrokeTransparency = 1
G2L["377"].TextWrapped = true
G2L["377"].TextXAlignment = Enum.TextXAlignment.Center
G2L["377"].TextYAlignment = Enum.TextYAlignment.Center
G2L["377"].Active = true
G2L["377"].AnchorPoint = Vector2.new(0, 0)
G2L["377"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
G2L["377"].BackgroundTransparency = 0
G2L["377"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["377"].BorderSizePixel = 1
G2L["377"].ClipsDescendants = false
G2L["377"].Draggable = false
G2L["377"].Position = UDim2.new(0.31570408, -7, 0.76464933, 1)
G2L["377"].Rotation = 0
G2L["377"].Selectable = true
G2L["377"].SelectionOrder = 0
G2L["377"].Size = UDim2.new(0, 67, 0, 45)
G2L["377"].Visible = true
G2L["377"].ZIndex = 1
G2L["377"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.hte.UICorner
G2L["378"].Name = [[UICorner]]
G2L["378"].CornerRadius = UDim.new(0, 8)
G2L["378"].Parent = G2L["377"]

--ScreenGui.Frame.menu.sc.hte.shadowHolder
G2L["379"].Name = [[shadowHolder]]
G2L["379"].Active = false
G2L["379"].AnchorPoint = Vector2.new(0, 0)
G2L["379"].BackgroundColor3 = Color3.fromRGB(163, 162, 165)
G2L["379"].BackgroundTransparency = 1
G2L["379"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["379"].BorderSizePixel = 1
G2L["379"].ClipsDescendants = false
G2L["379"].Draggable = false
G2L["379"].Position = UDim2.new(0, 0, 0, 0)
G2L["379"].Rotation = 0
G2L["379"].Selectable = false
G2L["379"].SelectionOrder = 0
G2L["379"].Size = UDim2.new(1, 0, 1, 0)
G2L["379"].Visible = true
G2L["379"].ZIndex = 0
G2L["379"].Parent = G2L["377"]

--ScreenGui.Frame.menu.sc.hte.LocalScript
G2L["380"].Name = [[LocalScript]]
G2L["380"].Parent = G2L["377"]

--ScreenGui.Frame.menu.sc.service
G2L["381"].Name = [[service]]
G2L["381"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["381"].Text = [[Secret service Panel]]
G2L["381"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["381"].TextScaled = true
G2L["381"].TextSize = 14
G2L["381"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["381"].TextStrokeTransparency = 1
G2L["381"].TextWrapped = true
G2L["381"].TextXAlignment = Enum.TextXAlignment.Center
G2L["381"].TextYAlignment = Enum.TextYAlignment.Center
G2L["381"].Active = true
G2L["381"].AnchorPoint = Vector2.new(0, 0)
G2L["381"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["381"].BackgroundTransparency = 0
G2L["381"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["381"].BorderSizePixel = 1
G2L["381"].ClipsDescendants = false
G2L["381"].Draggable = false
G2L["381"].Position = UDim2.new(0.4224138, 0, 0.23467813, 0)
G2L["381"].Rotation = 0
G2L["381"].Selectable = true
G2L["381"].SelectionOrder = 0
G2L["381"].Size = UDim2.new(0, 49, 0, 37)
G2L["381"].Visible = true
G2L["381"].ZIndex = 1
G2L["381"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.service.LocalScript
G2L["382"].Name = [[LocalScript]]
G2L["382"].Parent = G2L["381"]

--ScreenGui.Frame.menu.sc.service.LocalScript.ServerEvent
G2L["383"].Name = [[ServerEvent]]
G2L["383"].Parent = G2L["382"]

--ScreenGui.Frame.menu.sc.service.LocalScript.ServerEvent.Script
G2L["384"].Name = [[Script]]
G2L["384"].Parent = G2L["383"]

--ScreenGui.Frame.menu.sc.guns
G2L["385"].Name = [[guns]]
G2L["385"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["385"].Text = [[Gun]]
G2L["385"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["385"].TextScaled = true
G2L["385"].TextSize = 14
G2L["385"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["385"].TextStrokeTransparency = 1
G2L["385"].TextWrapped = true
G2L["385"].TextXAlignment = Enum.TextXAlignment.Center
G2L["385"].TextYAlignment = Enum.TextYAlignment.Center
G2L["385"].Active = true
G2L["385"].AnchorPoint = Vector2.new(0, 0)
G2L["385"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["385"].BackgroundTransparency = 0
G2L["385"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["385"].BorderSizePixel = 1
G2L["385"].ClipsDescendants = false
G2L["385"].Draggable = false
G2L["385"].Position = UDim2.new(0.5280172, 0, 0.23415536, 0)
G2L["385"].Rotation = 0
G2L["385"].Selectable = true
G2L["385"].SelectionOrder = 0
G2L["385"].Size = UDim2.new(0, 49, 0, 37)
G2L["385"].Visible = true
G2L["385"].ZIndex = 1
G2L["385"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.guns.LocalScript
G2L["386"].Name = [[LocalScript]]
G2L["386"].Parent = G2L["385"]

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent
G2L["387"].Name = [[ServerEvent]]
G2L["387"].Parent = G2L["386"]

--ScreenGui.Frame.menu.sc.guns.LocalScript.ServerEvent.Script
G2L["388"].Name = [[Script]]
G2L["388"].Parent = G2L["387"]

--ScreenGui.Frame.menu.sc.grab
G2L["389"].Name = [[grab]]
G2L["389"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["389"].Text = [[Grab Knife]]
G2L["389"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["389"].TextScaled = true
G2L["389"].TextSize = 14
G2L["389"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["389"].TextStrokeTransparency = 1
G2L["389"].TextWrapped = true
G2L["389"].TextXAlignment = Enum.TextXAlignment.Center
G2L["389"].TextYAlignment = Enum.TextYAlignment.Center
G2L["389"].Active = true
G2L["389"].AnchorPoint = Vector2.new(0, 0)
G2L["389"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["389"].BackgroundTransparency = 0
G2L["389"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["389"].BorderSizePixel = 1
G2L["389"].ClipsDescendants = false
G2L["389"].Draggable = false
G2L["389"].Position = UDim2.new(0.10560345, 0, 0.093324855, 0)
G2L["389"].Rotation = 0
G2L["389"].Selectable = true
G2L["389"].SelectionOrder = 0
G2L["389"].Size = UDim2.new(0, 49, 0, 37)
G2L["389"].Visible = true
G2L["389"].ZIndex = 1
G2L["389"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.grab.LocalScript
G2L["390"].Name = [[LocalScript]]
G2L["390"].Parent = G2L["389"]

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent
G2L["391"].Name = [[ServerEvent]]
G2L["391"].Parent = G2L["390"]

--ScreenGui.Frame.menu.sc.grab.LocalScript.ServerEvent.Script
G2L["392"].Name = [[Script]]
G2L["392"].Parent = G2L["391"]

--ScreenGui.Frame.menu.sc.guner
G2L["393"].Name = [[guner]]
G2L["393"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["393"].Text = [[Kick gui.Cracked]]
G2L["393"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["393"].TextScaled = true
G2L["393"].TextSize = 14
G2L["393"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["393"].TextStrokeTransparency = 1
G2L["393"].TextWrapped = true
G2L["393"].TextXAlignment = Enum.TextXAlignment.Center
G2L["393"].TextYAlignment = Enum.TextYAlignment.Center
G2L["393"].Active = true
G2L["393"].AnchorPoint = Vector2.new(0, 0)
G2L["393"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["393"].BackgroundTransparency = 0
G2L["393"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["393"].BorderSizePixel = 1
G2L["393"].ClipsDescendants = false
G2L["393"].Draggable = false
G2L["393"].Position = UDim2.new(0.73922414, 0, 0.2365008, 0)
G2L["393"].Rotation = 0
G2L["393"].Selectable = true
G2L["393"].SelectionOrder = 0
G2L["393"].Size = UDim2.new(0, 49, 0, 37)
G2L["393"].Visible = true
G2L["393"].ZIndex = 1
G2L["393"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["394"].Name = [[LocalScript]]
G2L["394"].Parent = G2L["393"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["395"].Name = [[ServerEvent]]
G2L["395"].Parent = G2L["394"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["396"].Name = [[Script]]
G2L["396"].Parent = G2L["395"]

--ScreenGui.Frame.menu.sc.guner
G2L["397"].Name = [[guner]]
G2L["397"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["397"].Text = [[Jumpscare]]
G2L["397"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["397"].TextScaled = true
G2L["397"].TextSize = 14
G2L["397"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["397"].TextStrokeTransparency = 1
G2L["397"].TextWrapped = true
G2L["397"].TextXAlignment = Enum.TextXAlignment.Center
G2L["397"].TextYAlignment = Enum.TextYAlignment.Center
G2L["397"].Active = true
G2L["397"].AnchorPoint = Vector2.new(0, 0)
G2L["397"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["397"].BackgroundTransparency = 0
G2L["397"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["397"].BorderSizePixel = 1
G2L["397"].ClipsDescendants = false
G2L["397"].Draggable = false
G2L["397"].Position = UDim2.new(0.8448276, 0, 0.23855194, 0)
G2L["397"].Rotation = 0
G2L["397"].Selectable = true
G2L["397"].SelectionOrder = 0
G2L["397"].Size = UDim2.new(0, 49, 0, 37)
G2L["397"].Visible = true
G2L["397"].ZIndex = 1
G2L["397"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["398"].Name = [[LocalScript]]
G2L["398"].Parent = G2L["397"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["399"].Name = [[ServerEvent]]
G2L["399"].Parent = G2L["398"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["400"].Name = [[Script]]
G2L["400"].Parent = G2L["399"]

--ScreenGui.Frame.menu.sc.guner
G2L["401"].Name = [[guner]]
G2L["401"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["401"].Text = [[ligma fake]]
G2L["401"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["401"].TextScaled = true
G2L["401"].TextSize = 14
G2L["401"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["401"].TextStrokeTransparency = 1
G2L["401"].TextWrapped = true
G2L["401"].TextXAlignment = Enum.TextXAlignment.Center
G2L["401"].TextYAlignment = Enum.TextYAlignment.Center
G2L["401"].Active = true
G2L["401"].AnchorPoint = Vector2.new(0, 0)
G2L["401"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["401"].BackgroundTransparency = 0
G2L["401"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["401"].BorderSizePixel = 1
G2L["401"].ClipsDescendants = false
G2L["401"].Draggable = false
G2L["401"].Position = UDim2.new(0, 0, 0.3339349, 0)
G2L["401"].Rotation = 0
G2L["401"].Selectable = true
G2L["401"].SelectionOrder = 0
G2L["401"].Size = UDim2.new(0, 49, 0, 37)
G2L["401"].Visible = true
G2L["401"].ZIndex = 1
G2L["401"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.guner.LocalScript
G2L["402"].Name = [[LocalScript]]
G2L["402"].Parent = G2L["401"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent
G2L["403"].Name = [[ServerEvent]]
G2L["403"].Parent = G2L["402"]

--ScreenGui.Frame.menu.sc.guner.LocalScript.ServerEvent.Script
G2L["404"].Name = [[Script]]
G2L["404"].Parent = G2L["403"]

--ScreenGui.Frame.menu.sc.uj
G2L["405"].Name = [[uj]]
G2L["405"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["405"].Text = [[crusfix]]
G2L["405"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["405"].TextScaled = true
G2L["405"].TextSize = 14
G2L["405"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["405"].TextStrokeTransparency = 1
G2L["405"].TextWrapped = true
G2L["405"].TextXAlignment = Enum.TextXAlignment.Center
G2L["405"].TextYAlignment = Enum.TextYAlignment.Center
G2L["405"].Active = true
G2L["405"].AnchorPoint = Vector2.new(0, 0)
G2L["405"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["405"].BackgroundTransparency = 0
G2L["405"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["405"].BorderSizePixel = 1
G2L["405"].ClipsDescendants = false
G2L["405"].Draggable = false
G2L["405"].Position = UDim2.new(0.109913796, 0, 0.3356761, 0)
G2L["405"].Rotation = 0
G2L["405"].Selectable = true
G2L["405"].SelectionOrder = 0
G2L["405"].Size = UDim2.new(0, 49, 0, 37)
G2L["405"].Visible = true
G2L["405"].ZIndex = 1
G2L["405"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.uj.LocalScript
G2L["406"].Name = [[LocalScript]]
G2L["406"].Parent = G2L["405"]

--ScreenGui.Frame.menu.sc.uj.LocalScript.ServerEvent
G2L["407"].Name = [[ServerEvent]]
G2L["407"].Parent = G2L["406"]

--ScreenGui.Frame.menu.sc.uj.LocalScript.ServerEvent.Script
G2L["408"].Name = [[Script]]
G2L["408"].Parent = G2L["407"]

--ScreenGui.Frame.menu.sc.unico
G2L["409"].Name = [[unico]]
G2L["409"].Image = [[http://www.roblox.com/asset/?id=90424876670551]]
G2L["409"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["409"].ScaleType = Enum.ScaleType.Stretch
G2L["409"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["409"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["409"].Active = false
G2L["409"].AnchorPoint = Vector2.new(0, 0)
G2L["409"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["409"].BackgroundTransparency = 0
G2L["409"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["409"].BorderSizePixel = 0
G2L["409"].ClipsDescendants = false
G2L["409"].Draggable = false
G2L["409"].Position = UDim2.new(0.06465517, 0, 0.53315276, 0)
G2L["409"].Rotation = 0
G2L["409"].Selectable = false
G2L["409"].SelectionOrder = 0
G2L["409"].Size = UDim2.new(0, 396, 0, 111)
G2L["409"].Visible = false
G2L["409"].ZIndex = 1
G2L["409"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Csutom
G2L["410"].Name = [[Csutom]]
G2L["410"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["410"].Text = [[Console]]
G2L["410"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["410"].TextScaled = true
G2L["410"].TextSize = 14
G2L["410"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["410"].TextStrokeTransparency = 1
G2L["410"].TextWrapped = true
G2L["410"].TextXAlignment = Enum.TextXAlignment.Center
G2L["410"].TextYAlignment = Enum.TextYAlignment.Center
G2L["410"].Active = true
G2L["410"].AnchorPoint = Vector2.new(0, 0)
G2L["410"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["410"].BackgroundTransparency = 0
G2L["410"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["410"].BorderSizePixel = 1
G2L["410"].ClipsDescendants = false
G2L["410"].Draggable = false
G2L["410"].Position = UDim2.new(0.86422414, 0, -0.0019106953, 0)
G2L["410"].Rotation = 0
G2L["410"].Selectable = true
G2L["410"].SelectionOrder = 0
G2L["410"].Size = UDim2.new(0, 49, 0, 37)
G2L["410"].Visible = true
G2L["410"].ZIndex = 1
G2L["410"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["411"].Name = [[Script]]
G2L["411"].Parent = G2L["410"]

--ScreenGui.Frame.menu.sc.Mr bean
G2L["412"].Name = [[Mr bean]]
G2L["412"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["412"].Text = [[Hax gui 2]]
G2L["412"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["412"].TextScaled = true
G2L["412"].TextSize = 14
G2L["412"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["412"].TextStrokeTransparency = 1
G2L["412"].TextWrapped = true
G2L["412"].TextXAlignment = Enum.TextXAlignment.Center
G2L["412"].TextYAlignment = Enum.TextYAlignment.Center
G2L["412"].Active = true
G2L["412"].AnchorPoint = Vector2.new(0, 0)
G2L["412"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["412"].BackgroundTransparency = 0
G2L["412"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["412"].BorderSizePixel = 1
G2L["412"].ClipsDescendants = false
G2L["412"].Draggable = false
G2L["412"].Position = UDim2.new(0.21551724, 0, 0.33683532, 0)
G2L["412"].Rotation = 0
G2L["412"].Selectable = true
G2L["412"].SelectionOrder = 0
G2L["412"].Size = UDim2.new(0, 49, 0, 37)
G2L["412"].Visible = true
G2L["412"].ZIndex = 1
G2L["412"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Mr bean.Script
G2L["413"].Name = [[Script]]
G2L["413"].Parent = G2L["412"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["414"].Name = [[LocalScript]]
G2L["414"].Parent = G2L["412"]

--ScreenGui.Frame.menu.sc.Mr bean.RemoteEvent
G2L["415"].Name = [[RemoteEvent]]
G2L["415"].Parent = G2L["412"]

--ScreenGui.Frame.menu.sc.Mr bean
G2L["416"].Name = [[Mr bean]]
G2L["416"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["416"].Text = [[sheldoni]]
G2L["416"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["416"].TextScaled = true
G2L["416"].TextSize = 14
G2L["416"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["416"].TextStrokeTransparency = 1
G2L["416"].TextWrapped = true
G2L["416"].TextXAlignment = Enum.TextXAlignment.Center
G2L["416"].TextYAlignment = Enum.TextYAlignment.Center
G2L["416"].Active = true
G2L["416"].AnchorPoint = Vector2.new(0, 0)
G2L["416"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["416"].BackgroundTransparency = 0
G2L["416"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["416"].BorderSizePixel = 1
G2L["416"].ClipsDescendants = false
G2L["416"].Draggable = false
G2L["416"].Position = UDim2.new(0.32112068, 0, 0.33513087, 0)
G2L["416"].Rotation = 0
G2L["416"].Selectable = true
G2L["416"].SelectionOrder = 0
G2L["416"].Size = UDim2.new(0, 49, 0, 37)
G2L["416"].Visible = true
G2L["416"].ZIndex = 1
G2L["416"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Mr bean.Script
G2L["417"].Name = [[Script]]
G2L["417"].Parent = G2L["416"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["418"].Name = [[LocalScript]]
G2L["418"].Parent = G2L["416"]

--ScreenGui.Frame.menu.sc.Mr bean.RemoteEvent
G2L["419"].Name = [[RemoteEvent]]
G2L["419"].Parent = G2L["416"]

--ScreenGui.Frame.menu.sc.Mr bean
G2L["420"].Name = [[Mr bean]]
G2L["420"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["420"].Text = [[Uzi]]
G2L["420"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["420"].TextScaled = true
G2L["420"].TextSize = 14
G2L["420"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["420"].TextStrokeTransparency = 1
G2L["420"].TextWrapped = true
G2L["420"].TextXAlignment = Enum.TextXAlignment.Center
G2L["420"].TextYAlignment = Enum.TextYAlignment.Center
G2L["420"].Active = true
G2L["420"].AnchorPoint = Vector2.new(0, 0)
G2L["420"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["420"].BackgroundTransparency = 0
G2L["420"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["420"].BorderSizePixel = 1
G2L["420"].ClipsDescendants = false
G2L["420"].Draggable = false
G2L["420"].Position = UDim2.new(0.43534482, 0, 0.33596995, 0)
G2L["420"].Rotation = 0
G2L["420"].Selectable = true
G2L["420"].SelectionOrder = 0
G2L["420"].Size = UDim2.new(0, 49, 0, 37)
G2L["420"].Visible = true
G2L["420"].ZIndex = 1
G2L["420"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Mr bean.Script
G2L["421"].Name = [[Script]]
G2L["421"].Parent = G2L["420"]

--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
G2L["422"].Name = [[LocalScript]]
G2L["422"].Parent = G2L["420"]

--ScreenGui.Frame.menu.sc.Mr bean.RemoteEvent
G2L["423"].Name = [[RemoteEvent]]
G2L["423"].Parent = G2L["420"]

--ScreenGui.Frame.menu.sc.Csutom
G2L["424"].Name = [[Csutom]]
G2L["424"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["424"].Text = [[Trash hub]]
G2L["424"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["424"].TextScaled = true
G2L["424"].TextSize = 14
G2L["424"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["424"].TextStrokeTransparency = 1
G2L["424"].TextWrapped = true
G2L["424"].TextXAlignment = Enum.TextXAlignment.Center
G2L["424"].TextYAlignment = Enum.TextYAlignment.Center
G2L["424"].Active = true
G2L["424"].AnchorPoint = Vector2.new(0, 0)
G2L["424"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["424"].BackgroundTransparency = 0
G2L["424"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["424"].BorderSizePixel = 1
G2L["424"].ClipsDescendants = false
G2L["424"].Draggable = false
G2L["424"].Position = UDim2.new(0.5409483, 0, 0.33637926, 0)
G2L["424"].Rotation = 0
G2L["424"].Selectable = true
G2L["424"].SelectionOrder = 0
G2L["424"].Size = UDim2.new(0, 49, 0, 37)
G2L["424"].Visible = true
G2L["424"].ZIndex = 1
G2L["424"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["425"].Name = [[Script]]
G2L["425"].Parent = G2L["424"]

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["426"].Name = [[LocalScript]]
G2L["426"].Parent = G2L["424"]

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["427"].Name = [[RemoteEvent]]
G2L["427"].Parent = G2L["424"]

--ScreenGui.Frame.menu.sc.Csutom
G2L["428"].Name = [[Csutom]]
G2L["428"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["428"].Text = [[Mlg gun]]
G2L["428"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["428"].TextScaled = true
G2L["428"].TextSize = 14
G2L["428"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["428"].TextStrokeTransparency = 1
G2L["428"].TextWrapped = true
G2L["428"].TextXAlignment = Enum.TextXAlignment.Center
G2L["428"].TextYAlignment = Enum.TextYAlignment.Center
G2L["428"].Active = true
G2L["428"].AnchorPoint = Vector2.new(0, 0)
G2L["428"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["428"].BackgroundTransparency = 0
G2L["428"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["428"].BorderSizePixel = 1
G2L["428"].ClipsDescendants = false
G2L["428"].Draggable = false
G2L["428"].Position = UDim2.new(0.6465517, 0, 0.3393954, 0)
G2L["428"].Rotation = 0
G2L["428"].Selectable = true
G2L["428"].SelectionOrder = 0
G2L["428"].Size = UDim2.new(0, 49, 0, 37)
G2L["428"].Visible = true
G2L["428"].ZIndex = 1
G2L["428"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["429"].Name = [[Script]]
G2L["429"].Parent = G2L["428"]

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["430"].Name = [[LocalScript]]
G2L["430"].Parent = G2L["428"]

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["431"].Name = [[RemoteEvent]]
G2L["431"].Parent = G2L["428"]

--ScreenGui.Frame.menu.sc.abds
G2L["432"].Name = [[abds]]
G2L["432"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["432"].Text = [[noot noot]]
G2L["432"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["432"].TextScaled = true
G2L["432"].TextSize = 14
G2L["432"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["432"].TextStrokeTransparency = 1
G2L["432"].TextWrapped = true
G2L["432"].TextXAlignment = Enum.TextXAlignment.Center
G2L["432"].TextYAlignment = Enum.TextYAlignment.Center
G2L["432"].Active = true
G2L["432"].AnchorPoint = Vector2.new(0, 0)
G2L["432"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["432"].BackgroundTransparency = 0
G2L["432"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["432"].BorderSizePixel = 1
G2L["432"].ClipsDescendants = false
G2L["432"].Draggable = false
G2L["432"].Position = UDim2.new(0.7521552, 0, 0.3451648, 0)
G2L["432"].Rotation = 0
G2L["432"].Selectable = true
G2L["432"].SelectionOrder = 0
G2L["432"].Size = UDim2.new(0, 49, 0, 37)
G2L["432"].Visible = true
G2L["432"].ZIndex = 1
G2L["432"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.abds.Script
G2L["433"].Name = [[Script]]
G2L["433"].Parent = G2L["432"]

--ScreenGui.Frame.menu.sc.abds.LocalScript
G2L["434"].Name = [[LocalScript]]
G2L["434"].Parent = G2L["432"]

--ScreenGui.Frame.menu.sc.abds.RemoteEvent
G2L["435"].Name = [[RemoteEvent]]
G2L["435"].Parent = G2L["432"]

--ScreenGui.Frame.menu.sc.Csutom
G2L["436"].Name = [[Csutom]]
G2L["436"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["436"].Text = [[NATURAL DISASTER MAP]]
G2L["436"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["436"].TextScaled = true
G2L["436"].TextSize = 14
G2L["436"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["436"].TextStrokeTransparency = 1
G2L["436"].TextWrapped = true
G2L["436"].TextXAlignment = Enum.TextXAlignment.Center
G2L["436"].TextYAlignment = Enum.TextYAlignment.Center
G2L["436"].Active = true
G2L["436"].AnchorPoint = Vector2.new(0, 0)
G2L["436"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["436"].BackgroundTransparency = 0
G2L["436"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["436"].BorderSizePixel = 1
G2L["436"].ClipsDescendants = false
G2L["436"].Draggable = false
G2L["436"].Position = UDim2.new(0.86422414, 0, 0.34753168, 0)
G2L["436"].Rotation = 0
G2L["436"].Selectable = true
G2L["436"].SelectionOrder = 0
G2L["436"].Size = UDim2.new(0, 49, 0, 37)
G2L["436"].Visible = true
G2L["436"].ZIndex = 1
G2L["436"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["437"].Name = [[LocalScript]]
G2L["437"].Parent = G2L["436"]

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["438"].Name = [[RemoteEvent]]
G2L["438"].Parent = G2L["436"]

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["439"].Name = [[Script]]
G2L["439"].Parent = G2L["436"]

--ScreenGui.Frame.menu.sc.Csutom
G2L["440"].Name = [[Csutom]]
G2L["440"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["440"].Text = [[Patrick Destroyer]]
G2L["440"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["440"].TextScaled = true
G2L["440"].TextSize = 14
G2L["440"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["440"].TextStrokeTransparency = 1
G2L["440"].TextWrapped = true
G2L["440"].TextXAlignment = Enum.TextXAlignment.Center
G2L["440"].TextYAlignment = Enum.TextYAlignment.Center
G2L["440"].Active = true
G2L["440"].AnchorPoint = Vector2.new(0, 0)
G2L["440"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["440"].BackgroundTransparency = 0
G2L["440"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["440"].BorderSizePixel = 1
G2L["440"].ClipsDescendants = false
G2L["440"].Draggable = false
G2L["440"].Position = UDim2.new(0.004310345, 0, 0.42962214, 0)
G2L["440"].Rotation = 0
G2L["440"].Selectable = true
G2L["440"].SelectionOrder = 0
G2L["440"].Size = UDim2.new(0, 49, 0, 37)
G2L["440"].Visible = true
G2L["440"].ZIndex = 1
G2L["440"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Csutom.Script
G2L["441"].Name = [[Script]]
G2L["441"].Parent = G2L["440"]

--ScreenGui.Frame.menu.sc.Csutom.LocalScript
G2L["442"].Name = [[LocalScript]]
G2L["442"].Parent = G2L["440"]

--ScreenGui.Frame.menu.sc.Csutom.RemoteEvent
G2L["443"].Name = [[RemoteEvent]]
G2L["443"].Parent = G2L["440"]

--ScreenGui.Frame.menu.sc.laser
G2L["444"].Name = [[laser]]
G2L["444"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["444"].Text = [[Laser Cat]]
G2L["444"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["444"].TextScaled = true
G2L["444"].TextSize = 14
G2L["444"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["444"].TextStrokeTransparency = 1
G2L["444"].TextWrapped = true
G2L["444"].TextXAlignment = Enum.TextXAlignment.Center
G2L["444"].TextYAlignment = Enum.TextYAlignment.Center
G2L["444"].Active = true
G2L["444"].AnchorPoint = Vector2.new(0, 0)
G2L["444"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["444"].BackgroundTransparency = 0
G2L["444"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["444"].BorderSizePixel = 1
G2L["444"].ClipsDescendants = false
G2L["444"].Draggable = false
G2L["444"].Position = UDim2.new(0.109913796, 0, 0.4281816, 0)
G2L["444"].Rotation = 0
G2L["444"].Selectable = true
G2L["444"].SelectionOrder = 0
G2L["444"].Size = UDim2.new(0, 49, 0, 37)
G2L["444"].Visible = true
G2L["444"].ZIndex = 1
G2L["444"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.laser.Script
G2L["445"].Name = [[Script]]
G2L["445"].Parent = G2L["444"]

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["446"].Name = [[LocalScript]]
G2L["446"].Parent = G2L["444"]

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["447"].Name = [[RemoteEvent]]
G2L["447"].Parent = G2L["444"]

--ScreenGui.Frame.menu.sc.laser
G2L["448"].Name = [[laser]]
G2L["448"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["448"].Text = [[Void laser cannon]]
G2L["448"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["448"].TextScaled = true
G2L["448"].TextSize = 14
G2L["448"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["448"].TextStrokeTransparency = 1
G2L["448"].TextWrapped = true
G2L["448"].TextXAlignment = Enum.TextXAlignment.Center
G2L["448"].TextYAlignment = Enum.TextYAlignment.Center
G2L["448"].Active = true
G2L["448"].AnchorPoint = Vector2.new(0, 0)
G2L["448"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["448"].BackgroundTransparency = 0
G2L["448"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["448"].BorderSizePixel = 1
G2L["448"].ClipsDescendants = false
G2L["448"].Draggable = false
G2L["448"].Position = UDim2.new(0.2112069, 0, 0.428793, 0)
G2L["448"].Rotation = 0
G2L["448"].Selectable = true
G2L["448"].SelectionOrder = 0
G2L["448"].Size = UDim2.new(0, 49, 0, 37)
G2L["448"].Visible = true
G2L["448"].ZIndex = 1
G2L["448"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.laser.Script
G2L["449"].Name = [[Script]]
G2L["449"].Parent = G2L["448"]

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["450"].Name = [[LocalScript]]
G2L["450"].Parent = G2L["448"]

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["451"].Name = [[RemoteEvent]]
G2L["451"].Parent = G2L["448"]

--ScreenGui.Frame.menu.sc.laser
G2L["452"].Name = [[laser]]
G2L["452"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["452"].Text = [[Ro-xploit 5.0]]
G2L["452"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["452"].TextScaled = true
G2L["452"].TextSize = 14
G2L["452"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["452"].TextStrokeTransparency = 1
G2L["452"].TextWrapped = true
G2L["452"].TextXAlignment = Enum.TextXAlignment.Center
G2L["452"].TextYAlignment = Enum.TextYAlignment.Center
G2L["452"].Active = true
G2L["452"].AnchorPoint = Vector2.new(0, 0)
G2L["452"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["452"].BackgroundTransparency = 0
G2L["452"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["452"].BorderSizePixel = 1
G2L["452"].ClipsDescendants = false
G2L["452"].Draggable = false
G2L["452"].Position = UDim2.new(0.32112068, 0, 0.4329539, 0)
G2L["452"].Rotation = 0
G2L["452"].Selectable = true
G2L["452"].SelectionOrder = 0
G2L["452"].Size = UDim2.new(0, 49, 0, 37)
G2L["452"].Visible = true
G2L["452"].ZIndex = 1
G2L["452"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.laser.Script
G2L["453"].Name = [[Script]]
G2L["453"].Parent = G2L["452"]

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["454"].Name = [[LocalScript]]
G2L["454"].Parent = G2L["452"]

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["455"].Name = [[RemoteEvent]]
G2L["455"].Parent = G2L["452"]

--ScreenGui.Frame.menu.sc.suki
G2L["456"].Name = [[suki]]
G2L["456"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["456"].Text = [[Bird wing]]
G2L["456"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["456"].TextScaled = true
G2L["456"].TextSize = 14
G2L["456"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["456"].TextStrokeTransparency = 1
G2L["456"].TextWrapped = true
G2L["456"].TextXAlignment = Enum.TextXAlignment.Center
G2L["456"].TextYAlignment = Enum.TextYAlignment.Center
G2L["456"].Active = true
G2L["456"].AnchorPoint = Vector2.new(0, 0)
G2L["456"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["456"].BackgroundTransparency = 0
G2L["456"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["456"].BorderSizePixel = 1
G2L["456"].ClipsDescendants = false
G2L["456"].Draggable = false
G2L["456"].Position = UDim2.new(0.43534482, 0, 0.4316479, 0)
G2L["456"].Rotation = 0
G2L["456"].Selectable = true
G2L["456"].SelectionOrder = 0
G2L["456"].Size = UDim2.new(0, 49, 0, 37)
G2L["456"].Visible = true
G2L["456"].ZIndex = 1
G2L["456"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.suki.LocalScript
G2L["457"].Name = [[LocalScript]]
G2L["457"].Parent = G2L["456"]

--ScreenGui.Frame.menu.sc.suki
G2L["458"].Name = [[suki]]
G2L["458"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["458"].Text = [[Mlg Particles]]
G2L["458"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["458"].TextScaled = true
G2L["458"].TextSize = 14
G2L["458"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["458"].TextStrokeTransparency = 1
G2L["458"].TextWrapped = true
G2L["458"].TextXAlignment = Enum.TextXAlignment.Center
G2L["458"].TextYAlignment = Enum.TextYAlignment.Center
G2L["458"].Active = true
G2L["458"].AnchorPoint = Vector2.new(0, 0)
G2L["458"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["458"].BackgroundTransparency = 0
G2L["458"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["458"].BorderSizePixel = 1
G2L["458"].ClipsDescendants = false
G2L["458"].Draggable = false
G2L["458"].Position = UDim2.new(0.5409483, 0, 0.43254936, 0)
G2L["458"].Rotation = 0
G2L["458"].Selectable = true
G2L["458"].SelectionOrder = 0
G2L["458"].Size = UDim2.new(0, 49, 0, 37)
G2L["458"].Visible = true
G2L["458"].ZIndex = 1
G2L["458"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.suki.Script
G2L["459"].Name = [[Script]]
G2L["459"].Parent = G2L["458"]

--ScreenGui.Frame.menu.sc.suki
G2L["460"].Name = [[suki]]
G2L["460"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["460"].Text = [[Meepcity 4 map]]
G2L["460"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["460"].TextScaled = true
G2L["460"].TextSize = 14
G2L["460"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["460"].TextStrokeTransparency = 1
G2L["460"].TextWrapped = true
G2L["460"].TextXAlignment = Enum.TextXAlignment.Center
G2L["460"].TextYAlignment = Enum.TextYAlignment.Center
G2L["460"].Active = true
G2L["460"].AnchorPoint = Vector2.new(0, 0)
G2L["460"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["460"].BackgroundTransparency = 0
G2L["460"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["460"].BorderSizePixel = 1
G2L["460"].ClipsDescendants = false
G2L["460"].Draggable = false
G2L["460"].Position = UDim2.new(0.64569134, 0, 0.43077546, 0)
G2L["460"].Rotation = 0
G2L["460"].Selectable = true
G2L["460"].SelectionOrder = 0
G2L["460"].Size = UDim2.new(0, 49, 0, 37)
G2L["460"].Visible = true
G2L["460"].ZIndex = 1
G2L["460"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.suki.Script
G2L["461"].Name = [[Script]]
G2L["461"].Parent = G2L["460"]

--ScreenGui.Frame.menu.sc.suki.LocalScript
G2L["462"].Name = [[LocalScript]]
G2L["462"].Parent = G2L["460"]

--ScreenGui.Frame.menu.sc.suki.RemoteEvent
G2L["463"].Name = [[RemoteEvent]]
G2L["463"].Parent = G2L["460"]

--ScreenGui.Frame.menu.sc.suki
G2L["464"].Name = [[suki]]
G2L["464"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["464"].Text = [[Sumo face all]]
G2L["464"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["464"].TextScaled = true
G2L["464"].TextSize = 14
G2L["464"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["464"].TextStrokeTransparency = 1
G2L["464"].TextWrapped = true
G2L["464"].TextXAlignment = Enum.TextXAlignment.Center
G2L["464"].TextYAlignment = Enum.TextYAlignment.Center
G2L["464"].Active = true
G2L["464"].AnchorPoint = Vector2.new(0, 0)
G2L["464"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["464"].BackgroundTransparency = 0
G2L["464"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["464"].BorderSizePixel = 1
G2L["464"].ClipsDescendants = false
G2L["464"].Draggable = false
G2L["464"].Position = UDim2.new(0.75129473, 0, 0.43066826, 0)
G2L["464"].Rotation = 0
G2L["464"].Selectable = true
G2L["464"].SelectionOrder = 0
G2L["464"].Size = UDim2.new(0, 49, 0, 37)
G2L["464"].Visible = true
G2L["464"].ZIndex = 1
G2L["464"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.suki.Script
G2L["465"].Name = [[Script]]
G2L["465"].Parent = G2L["464"]

--ScreenGui.Frame.menu.sc.suki.Script
G2L["466"].Name = [[Script]]
G2L["466"].Parent = G2L["464"]

--ScreenGui.Frame.menu.sc.suki.LocalScript
G2L["467"].Name = [[LocalScript]]
G2L["467"].Parent = G2L["464"]

--ScreenGui.Frame.menu.sc.suki.RemoteEvent
G2L["468"].Name = [[RemoteEvent]]
G2L["468"].Parent = G2L["464"]

--ScreenGui.Frame.menu.sc.laser
G2L["469"].Name = [[laser]]
G2L["469"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["469"].Text = [[No chat filter]]
G2L["469"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["469"].TextScaled = true
G2L["469"].TextSize = 14
G2L["469"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["469"].TextStrokeTransparency = 1
G2L["469"].TextWrapped = true
G2L["469"].TextXAlignment = Enum.TextXAlignment.Center
G2L["469"].TextYAlignment = Enum.TextYAlignment.Center
G2L["469"].Active = true
G2L["469"].AnchorPoint = Vector2.new(0, 0)
G2L["469"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["469"].BackgroundTransparency = 0
G2L["469"].BorderColor3 = Color3.fromRGB(59.000004, 59.000004, 59.000004)
G2L["469"].BorderSizePixel = 1
G2L["469"].ClipsDescendants = false
G2L["469"].Draggable = false
G2L["469"].Position = UDim2.new(0.85775864, 0, 0.43251055, 0)
G2L["469"].Rotation = 0
G2L["469"].Selectable = true
G2L["469"].SelectionOrder = 0
G2L["469"].Size = UDim2.new(0, 49, 0, 37)
G2L["469"].Visible = true
G2L["469"].ZIndex = 1
G2L["469"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.laser.Script
G2L["470"].Name = [[Script]]
G2L["470"].Parent = G2L["469"]

--ScreenGui.Frame.menu.sc.laser.LocalScript
G2L["471"].Name = [[LocalScript]]
G2L["471"].Parent = G2L["469"]

--ScreenGui.Frame.menu.sc.laser.RemoteEvent
G2L["472"].Name = [[RemoteEvent]]
G2L["472"].Parent = G2L["469"]

--ScreenGui.Frame.menu.sc.Console
G2L["473"].Name = [[Console]]
G2L["473"].Active = false
G2L["473"].AnchorPoint = Vector2.new(0, 0)
G2L["473"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["473"].BackgroundTransparency = 1
G2L["473"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["473"].BorderSizePixel = 0
G2L["473"].ClipsDescendants = false
G2L["473"].Draggable = false
G2L["473"].Position = UDim2.new(0.095914744, 0, 0.13301282, 0)
G2L["473"].Rotation = 0
G2L["473"].Selectable = false
G2L["473"].SelectionOrder = 0
G2L["473"].Size = UDim2.new(0, 100, 0, 100)
G2L["473"].Visible = true
G2L["473"].ZIndex = 1
G2L["473"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.Console.outputUpdate
G2L["474"].Name = [[outputUpdate]]
G2L["474"].Parent = G2L["473"]

--ScreenGui.Frame.menu.sc.Console.outputUpdate.blankLine
G2L["475"].Name = [[blankLine]]
G2L["475"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["475"].Text = [[]]
G2L["475"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["475"].TextScaled = false
G2L["475"].TextSize = 18
G2L["475"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["475"].TextStrokeTransparency = 1
G2L["475"].TextWrapped = false
G2L["475"].TextXAlignment = Enum.TextXAlignment.Left
G2L["475"].TextYAlignment = Enum.TextYAlignment.Center
G2L["475"].Active = false
G2L["475"].AnchorPoint = Vector2.new(0, 0)
G2L["475"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["475"].BackgroundTransparency = 1
G2L["475"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["475"].BorderSizePixel = 0
G2L["475"].ClipsDescendants = false
G2L["475"].Draggable = false
G2L["475"].Position = UDim2.new(0, 0, 0, 0)
G2L["475"].Rotation = 0
G2L["475"].Selectable = false
G2L["475"].SelectionOrder = 0
G2L["475"].Size = UDim2.new(0, 0, 0, 0)
G2L["475"].Visible = true
G2L["475"].ZIndex = 10
G2L["475"].Parent = G2L["474"]

--ScreenGui.Frame.menu.sc.Console.Drag
G2L["476"].Name = [[Drag]]
G2L["476"].Parent = G2L["473"]

--ScreenGui.Frame.menu.sc.Console.Drag.zacksisk
G2L["477"].Name = [[zacksisk]]
G2L["477"].Enabled = true
G2L["477"].Parent = G2L["476"]

--ScreenGui.Frame.menu.sc.Console.Drag.zacksisk.zacksisk
G2L["478"].Name = [[zacksisk]]
G2L["478"].Parent = G2L["477"]

--ScreenGui.Frame.menu.sc.Console.GUSTICO W👀👀
G2L["479"].Name = [[GUSTICO W👀👀]]
G2L["479"].Active = false
G2L["479"].AnchorPoint = Vector2.new(0, 0)
G2L["479"].BackgroundColor3 = Color3.fromRGB(193.00002, 193.00002, 193.00002)
G2L["479"].BackgroundTransparency = 0
G2L["479"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["479"].BorderSizePixel = 1
G2L["479"].ClipsDescendants = false
G2L["479"].Draggable = false
G2L["479"].Position = UDim2.new(1.8467898, -2, 3.5744457, -2)
G2L["479"].Rotation = 0
G2L["479"].Selectable = false
G2L["479"].SelectionOrder = 0
G2L["479"].Size = UDim2.new(0, 197, 0, 25)
G2L["479"].Visible = true
G2L["479"].ZIndex = 1
G2L["479"].Parent = G2L["473"]

--ScreenGui.Frame.menu.sc.Console.GUSTICO W👀👀.TextLabel
G2L["480"].Name = [[TextLabel]]
G2L["480"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["480"].Text = [[Console]]
G2L["480"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["480"].TextScaled = false
G2L["480"].TextSize = 14
G2L["480"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["480"].TextStrokeTransparency = 1
G2L["480"].TextWrapped = false
G2L["480"].TextXAlignment = Enum.TextXAlignment.Left
G2L["480"].TextYAlignment = Enum.TextYAlignment.Center
G2L["480"].Active = false
G2L["480"].AnchorPoint = Vector2.new(0, 0)
G2L["480"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["480"].BackgroundTransparency = 1
G2L["480"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["480"].BorderSizePixel = 0
G2L["480"].ClipsDescendants = false
G2L["480"].Draggable = false
G2L["480"].Position = UDim2.new(0.00879278, -2, 0.2206665, -2)
G2L["480"].Rotation = 0
G2L["480"].Selectable = false
G2L["480"].SelectionOrder = 0
G2L["480"].Size = UDim2.new(0, 108, 0, 18)
G2L["480"].Visible = true
G2L["480"].ZIndex = 1
G2L["480"].Parent = G2L["479"]

--ScreenGui.Frame.menu.sc.Console.scroll
G2L["481"].Name = [[scroll]]
G2L["481"].BottomImage = [[]]
G2L["481"].CanvasSize = UDim2.new(0, 0, 2, 0)
G2L["481"].HorizontalScrollBarInset = Enum.ScrollBarInset.None
G2L["481"].ScrollBarThickness = 12
G2L["481"].TopImage = [[]]
G2L["481"].Active = true
G2L["481"].AnchorPoint = Vector2.new(0, 0)
G2L["481"].BackgroundColor3 = Color3.fromRGB(194.00002, 194.00002, 194.00002)
G2L["481"].BackgroundTransparency = 0.6
G2L["481"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["481"].BorderSizePixel = 0
G2L["481"].ClipsDescendants = true
G2L["481"].Draggable = false
G2L["481"].Position = UDim2.new(1.8767905, -5, 3.8358047, -2)
G2L["481"].Rotation = 0
G2L["481"].Selectable = true
G2L["481"].SelectionOrder = 0
G2L["481"].Size = UDim2.new(0, 197, 0, 85)
G2L["481"].Visible = true
G2L["481"].ZIndex = 1
G2L["481"].Parent = G2L["473"]

--ScreenGui.Frame.menu.sc.Console.scroll.outputUpdate
G2L["482"].Name = [[outputUpdate]]
G2L["482"].Parent = G2L["481"]

--ScreenGui.Frame.menu.sc.Console.scroll.outputUpdate.blankLine
G2L["483"].Name = [[blankLine]]
G2L["483"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
G2L["483"].Text = [[]]
G2L["483"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["483"].TextScaled = false
G2L["483"].TextSize = 18
G2L["483"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["483"].TextStrokeTransparency = 1
G2L["483"].TextWrapped = false
G2L["483"].TextXAlignment = Enum.TextXAlignment.Left
G2L["483"].TextYAlignment = Enum.TextYAlignment.Center
G2L["483"].Active = false
G2L["483"].AnchorPoint = Vector2.new(0, 0)
G2L["483"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["483"].BackgroundTransparency = 1
G2L["483"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["483"].BorderSizePixel = 0
G2L["483"].ClipsDescendants = false
G2L["483"].Draggable = false
G2L["483"].Position = UDim2.new(0, 0, 0, 0)
G2L["483"].Rotation = 0
G2L["483"].Selectable = false
G2L["483"].SelectionOrder = 0
G2L["483"].Size = UDim2.new(0, 0, 0, 0)
G2L["483"].Visible = true
G2L["483"].ZIndex = 10
G2L["483"].Parent = G2L["482"]

--ScreenGui.Frame.menu.sc.user
G2L["484"].Name = [[user]]
G2L["484"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["484"].Text = [[idk]]
G2L["484"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["484"].TextScaled = false
G2L["484"].TextSize = 18
G2L["484"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["484"].TextStrokeTransparency = 1
G2L["484"].TextWrapped = false
G2L["484"].TextXAlignment = Enum.TextXAlignment.Left
G2L["484"].TextYAlignment = Enum.TextYAlignment.Center
G2L["484"].Active = false
G2L["484"].AnchorPoint = Vector2.new(0, 0)
G2L["484"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["484"].BackgroundTransparency = 1
G2L["484"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["484"].BorderSizePixel = 0
G2L["484"].ClipsDescendants = false
G2L["484"].Draggable = false
G2L["484"].Position = UDim2.new(0.1513289, 0, 0.8650706, 0)
G2L["484"].Rotation = 0
G2L["484"].Selectable = false
G2L["484"].SelectionOrder = 0
G2L["484"].Size = UDim2.new(0, 96, 0, 29)
G2L["484"].Visible = true
G2L["484"].ZIndex = 1
G2L["484"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.user.LocalScript
G2L["485"].Name = [[LocalScript]]
G2L["485"].Parent = G2L["484"]

--ScreenGui.Frame.menu.sc.user
G2L["486"].Name = [[user]]
G2L["486"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["486"].Text = [[Hello]]
G2L["486"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["486"].TextScaled = false
G2L["486"].TextSize = 18
G2L["486"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["486"].TextStrokeTransparency = 1
G2L["486"].TextWrapped = false
G2L["486"].TextXAlignment = Enum.TextXAlignment.Left
G2L["486"].TextYAlignment = Enum.TextYAlignment.Center
G2L["486"].Active = false
G2L["486"].AnchorPoint = Vector2.new(0, 0)
G2L["486"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["486"].BackgroundTransparency = 1
G2L["486"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["486"].BorderSizePixel = 0
G2L["486"].ClipsDescendants = false
G2L["486"].Draggable = false
G2L["486"].Position = UDim2.new(0.0069323573, 0, 0.86328274, 0)
G2L["486"].Rotation = 0
G2L["486"].Selectable = false
G2L["486"].SelectionOrder = 0
G2L["486"].Size = UDim2.new(0, 96, 0, 29)
G2L["486"].Visible = true
G2L["486"].ZIndex = 1
G2L["486"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.unicord
G2L["487"].Name = [[unicord]]
G2L["487"].Image = [[https://www.roblox.com/headshot-thumbnail/image?userId=7904295483&width=420&height=420&format=png]]
G2L["487"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["487"].ScaleType = Enum.ScaleType.Stretch
G2L["487"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["487"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["487"].Active = false
G2L["487"].AnchorPoint = Vector2.new(0, 0)
G2L["487"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["487"].BackgroundTransparency = 1
G2L["487"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["487"].BorderSizePixel = 0
G2L["487"].ClipsDescendants = false
G2L["487"].Draggable = false
G2L["487"].Position = UDim2.new(0.15109318, 0, 0.003293289, 0)
G2L["487"].Rotation = 0
G2L["487"].Selectable = false
G2L["487"].SelectionOrder = 0
G2L["487"].Size = UDim2.new(0, 50, 0, 52)
G2L["487"].Visible = true
G2L["487"].ZIndex = 1
G2L["487"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.unicord.LocalScript
G2L["488"].Name = [[LocalScript]]
G2L["488"].Parent = G2L["487"]

--ScreenGui.Frame.menu.sc.unicord
G2L["489"].Name = [[unicord]]
G2L["489"].Image = [[https://www.roblox.com/headshot-thumbnail/image?userId=7904295483&width=420&height=420&format=png]]
G2L["489"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["489"].ScaleType = Enum.ScaleType.Stretch
G2L["489"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["489"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["489"].Active = false
G2L["489"].AnchorPoint = Vector2.new(0, 0)
G2L["489"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["489"].BackgroundTransparency = 1
G2L["489"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["489"].BorderSizePixel = 0
G2L["489"].ClipsDescendants = false
G2L["489"].Draggable = false
G2L["489"].Position = UDim2.new(0.75454146, 0, -0.00014010859, 0)
G2L["489"].Rotation = 0
G2L["489"].Selectable = false
G2L["489"].SelectionOrder = 0
G2L["489"].Size = UDim2.new(0, 50, 0, 52)
G2L["489"].Visible = true
G2L["489"].ZIndex = 1
G2L["489"].Parent = G2L["12"]

--ScreenGui.Frame.menu.sc.unicord.LocalScript
G2L["490"].Name = [[LocalScript]]
G2L["490"].Parent = G2L["489"]

--ScreenGui.Frame.menu.Drag
G2L["491"].Name = [[Drag]]
G2L["491"].Parent = G2L["11"]

--ScreenGui.Frame.menu.Drag.zacksisk
G2L["492"].Name = [[zacksisk]]
G2L["492"].Enabled = true
G2L["492"].Parent = G2L["491"]

--ScreenGui.Frame.menu.Drag.zacksisk.zacksisk
G2L["493"].Name = [[zacksisk]]
G2L["493"].Parent = G2L["492"]

--ScreenGui.Frame.menu.UICorner
G2L["494"].Name = [[UICorner]]
G2L["494"].CornerRadius = UDim.new(0, 8)
G2L["494"].Parent = G2L["11"]

--ScreenGui.Frame.homes
G2L["495"].Name = [[homes]]
G2L["495"].Active = false
G2L["495"].AnchorPoint = Vector2.new(0, 0)
G2L["495"].BackgroundColor3 = Color3.fromRGB(225.00002, 225.00002, 225.00002)
G2L["495"].BackgroundTransparency = 0.8
G2L["495"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["495"].BorderSizePixel = 0
G2L["495"].ClipsDescendants = false
G2L["495"].Draggable = false
G2L["495"].Position = UDim2.new(2.350213, 0, 1.1147437, 0)
G2L["495"].Rotation = 0
G2L["495"].Selectable = false
G2L["495"].SelectionOrder = 0
G2L["495"].Size = UDim2.new(0, 486, 0, 290)
G2L["495"].Visible = false
G2L["495"].ZIndex = 1
G2L["495"].Parent = G2L["7"]

--ScreenGui.Frame.homes.Frame
G2L["496"].Name = [[Frame]]
G2L["496"].Active = false
G2L["496"].AnchorPoint = Vector2.new(0, 0)
G2L["496"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["496"].BackgroundTransparency = 0
G2L["496"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["496"].BorderSizePixel = 0
G2L["496"].ClipsDescendants = false
G2L["496"].Draggable = false
G2L["496"].Position = UDim2.new(0.020576132, 0, 0.027586207, 0)
G2L["496"].Rotation = 0
G2L["496"].Selectable = false
G2L["496"].SelectionOrder = 0
G2L["496"].Size = UDim2.new(0, 461, 0, 275)
G2L["496"].Visible = true
G2L["496"].ZIndex = 1
G2L["496"].Parent = G2L["495"]

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["497"].Name = [[TextLabel]]
G2L["497"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["497"].Text = [[Dominius Gui]]
G2L["497"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["497"].TextScaled = true
G2L["497"].TextSize = 14
G2L["497"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["497"].TextStrokeTransparency = 1
G2L["497"].TextWrapped = true
G2L["497"].TextXAlignment = Enum.TextXAlignment.Center
G2L["497"].TextYAlignment = Enum.TextYAlignment.Center
G2L["497"].Active = false
G2L["497"].AnchorPoint = Vector2.new(0, 0)
G2L["497"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["497"].BackgroundTransparency = 0
G2L["497"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["497"].BorderSizePixel = 0
G2L["497"].ClipsDescendants = false
G2L["497"].Draggable = false
G2L["497"].Position = UDim2.new(0, 0, 0, 0)
G2L["497"].Rotation = 0
G2L["497"].Selectable = false
G2L["497"].SelectionOrder = 0
G2L["497"].Size = UDim2.new(0, 461, 0, 50)
G2L["497"].Visible = true
G2L["497"].ZIndex = 1
G2L["497"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.user
G2L["498"].Name = [[user]]
G2L["498"].Image = [[http://www.roblox.com/asset/?id=99861303430504]]
G2L["498"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["498"].ScaleType = Enum.ScaleType.Stretch
G2L["498"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["498"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["498"].Active = false
G2L["498"].AnchorPoint = Vector2.new(0, 0)
G2L["498"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["498"].BackgroundTransparency = 1
G2L["498"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["498"].BorderSizePixel = 0
G2L["498"].ClipsDescendants = false
G2L["498"].Draggable = false
G2L["498"].Position = UDim2.new(0.019655703, 0, 0.18051946, 0)
G2L["498"].Rotation = 0
G2L["498"].Selectable = false
G2L["498"].SelectionOrder = 0
G2L["498"].Size = UDim2.new(0, 100, 0, 100)
G2L["498"].Visible = true
G2L["498"].ZIndex = 1
G2L["498"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.user.LocalScript
G2L["499"].Name = [[LocalScript]]
G2L["499"].Parent = G2L["498"]

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["500"].Name = [[TextLabel]]
G2L["500"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["500"].Text = [[Hello]]
G2L["500"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["500"].TextScaled = true
G2L["500"].TextSize = 14
G2L["500"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["500"].TextStrokeTransparency = 1
G2L["500"].TextWrapped = true
G2L["500"].TextXAlignment = Enum.TextXAlignment.Center
G2L["500"].TextYAlignment = Enum.TextYAlignment.Center
G2L["500"].Active = false
G2L["500"].AnchorPoint = Vector2.new(0, 0)
G2L["500"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["500"].BackgroundTransparency = 1
G2L["500"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["500"].BorderSizePixel = 0
G2L["500"].ClipsDescendants = false
G2L["500"].Draggable = false
G2L["500"].Position = UDim2.new(0.21258135, 0, 0.17818181, 0)
G2L["500"].Rotation = 0
G2L["500"].Selectable = false
G2L["500"].SelectionOrder = 0
G2L["500"].Size = UDim2.new(0, 128, 0, 35)
G2L["500"].Visible = true
G2L["500"].ZIndex = 1
G2L["500"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["501"].Name = [[TextLabel]]
G2L["501"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["501"].Text = [[Hello]]
G2L["501"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["501"].TextScaled = true
G2L["501"].TextSize = 14
G2L["501"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["501"].TextStrokeTransparency = 1
G2L["501"].TextWrapped = true
G2L["501"].TextXAlignment = Enum.TextXAlignment.Center
G2L["501"].TextYAlignment = Enum.TextYAlignment.Center
G2L["501"].Active = false
G2L["501"].AnchorPoint = Vector2.new(0, 0)
G2L["501"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["501"].BackgroundTransparency = 1
G2L["501"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["501"].BorderSizePixel = 0
G2L["501"].ClipsDescendants = false
G2L["501"].Draggable = false
G2L["501"].Position = UDim2.new(0.43167028, 0, 0.17818181, 0)
G2L["501"].Rotation = 0
G2L["501"].Selectable = false
G2L["501"].SelectionOrder = 0
G2L["501"].Size = UDim2.new(0, 128, 0, 35)
G2L["501"].Visible = true
G2L["501"].ZIndex = 1
G2L["501"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.TextLabel.LocalScript
G2L["502"].Name = [[LocalScript]]
G2L["502"].Parent = G2L["501"]

--ScreenGui.Frame.homes.Frame.TextLabel
G2L["503"].Name = [[TextLabel]]
G2L["503"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["503"].Text = [[🤗🤗]]
G2L["503"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["503"].TextScaled = true
G2L["503"].TextSize = 14
G2L["503"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["503"].TextStrokeTransparency = 1
G2L["503"].TextWrapped = true
G2L["503"].TextXAlignment = Enum.TextXAlignment.Center
G2L["503"].TextYAlignment = Enum.TextYAlignment.Center
G2L["503"].Active = false
G2L["503"].AnchorPoint = Vector2.new(0, 0)
G2L["503"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["503"].BackgroundTransparency = 1
G2L["503"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["503"].BorderSizePixel = 0
G2L["503"].ClipsDescendants = false
G2L["503"].Draggable = false
G2L["503"].Position = UDim2.new(0.29934925, 0, 0.48, 0)
G2L["503"].Rotation = 0
G2L["503"].Selectable = false
G2L["503"].SelectionOrder = 0
G2L["503"].Size = UDim2.new(0, 159, 0, 38)
G2L["503"].Visible = true
G2L["503"].ZIndex = 1
G2L["503"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.TextLabel.script
G2L["504"].Name = [[script]]
G2L["504"].Parent = G2L["503"]

--ScreenGui.Frame.homes.Frame.h
G2L["505"].Name = [[h]]
G2L["505"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["505"].Text = [[Acc Days :]]
G2L["505"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["505"].TextScaled = false
G2L["505"].TextSize = 18
G2L["505"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["505"].TextStrokeTransparency = 1
G2L["505"].TextWrapped = false
G2L["505"].TextXAlignment = Enum.TextXAlignment.Left
G2L["505"].TextYAlignment = Enum.TextYAlignment.Center
G2L["505"].Active = false
G2L["505"].AnchorPoint = Vector2.new(0, 0)
G2L["505"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["505"].BackgroundTransparency = 1
G2L["505"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["505"].BorderSizePixel = 0
G2L["505"].ClipsDescendants = false
G2L["505"].Draggable = false
G2L["505"].Position = UDim2.new(0.2841601, 0, 0.3062987, 0)
G2L["505"].Rotation = 0
G2L["505"].Selectable = false
G2L["505"].SelectionOrder = 0
G2L["505"].Size = UDim2.new(0, 96, 0, 29)
G2L["505"].Visible = true
G2L["505"].ZIndex = 1
G2L["505"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.g
G2L["506"].Name = [[g]]
G2L["506"].FontFace = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["506"].Text = [[0 Days]]
G2L["506"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["506"].TextScaled = true
G2L["506"].TextSize = 18
G2L["506"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["506"].TextStrokeTransparency = 1
G2L["506"].TextWrapped = true
G2L["506"].TextXAlignment = Enum.TextXAlignment.Left
G2L["506"].TextYAlignment = Enum.TextYAlignment.Center
G2L["506"].Active = false
G2L["506"].AnchorPoint = Vector2.new(0, 0)
G2L["506"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["506"].BackgroundTransparency = 1
G2L["506"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["506"].BorderSizePixel = 0
G2L["506"].ClipsDescendants = false
G2L["506"].Draggable = false
G2L["506"].Position = UDim2.new(0.47904137, 0, 0.3172078, 0)
G2L["506"].Rotation = 0
G2L["506"].Selectable = false
G2L["506"].SelectionOrder = 0
G2L["506"].Size = UDim2.new(0, 98, 0, 23)
G2L["506"].Visible = true
G2L["506"].ZIndex = 1
G2L["506"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.g.LocalScript
G2L["507"].Name = [[LocalScript]]
G2L["507"].Parent = G2L["506"]

--ScreenGui.Frame.homes.Frame.TextButton
G2L["508"].Name = [[TextButton]]
G2L["508"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["508"].Text = [[Next]]
G2L["508"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["508"].TextScaled = true
G2L["508"].TextSize = 14
G2L["508"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["508"].TextStrokeTransparency = 1
G2L["508"].TextWrapped = true
G2L["508"].TextXAlignment = Enum.TextXAlignment.Center
G2L["508"].TextYAlignment = Enum.TextYAlignment.Center
G2L["508"].Active = true
G2L["508"].AnchorPoint = Vector2.new(0, 0)
G2L["508"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["508"].BackgroundTransparency = 0
G2L["508"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["508"].BorderSizePixel = 1
G2L["508"].ClipsDescendants = false
G2L["508"].Draggable = false
G2L["508"].Position = UDim2.new(0.34924078, 0, 0.8819114, 0)
G2L["508"].Rotation = 0
G2L["508"].Selectable = true
G2L["508"].SelectionOrder = 0
G2L["508"].Size = UDim2.new(0, 157, 0, 32)
G2L["508"].Visible = true
G2L["508"].ZIndex = 1
G2L["508"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Frame.TextButton.Script
G2L["509"].Name = [[Script]]
G2L["509"].Parent = G2L["508"]

--ScreenGui.Frame.homes.Frame.bypass
G2L["510"].Name = [[bypass]]
G2L["510"].Image = [[http://www.roblox.com/asset/?id=99861303430504]]
G2L["510"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["510"].ScaleType = Enum.ScaleType.Stretch
G2L["510"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["510"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["510"].Active = false
G2L["510"].AnchorPoint = Vector2.new(0, 0)
G2L["510"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["510"].BackgroundTransparency = 0
G2L["510"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["510"].BorderSizePixel = 0
G2L["510"].ClipsDescendants = false
G2L["510"].Draggable = false
G2L["510"].Position = UDim2.new(0, 0, 0, 0)
G2L["510"].Rotation = 0
G2L["510"].Selectable = false
G2L["510"].SelectionOrder = 0
G2L["510"].Size = UDim2.new(0, 461, 0, 274)
G2L["510"].Visible = false
G2L["510"].ZIndex = 1
G2L["510"].Parent = G2L["496"]

--ScreenGui.Frame.homes.Drag
G2L["511"].Name = [[Drag]]
G2L["511"].Parent = G2L["495"]

--ScreenGui.Frame.homes.Drag.zacksisk
G2L["512"].Name = [[zacksisk]]
G2L["512"].Enabled = true
G2L["512"].Parent = G2L["511"]

--ScreenGui.Frame.homes.Drag.zacksisk.zacksisk
G2L["513"].Name = [[zacksisk]]
G2L["513"].Parent = G2L["512"]

--ScreenGui.Frame.homes.UICorner
G2L["514"].Name = [[UICorner]]
G2L["514"].CornerRadius = UDim.new(0, 8)
G2L["514"].Parent = G2L["495"]

--ScreenGui.veran
G2L["515"].Name = [[veran]]
G2L["515"].Active = false
G2L["515"].AnchorPoint = Vector2.new(0, 0)
G2L["515"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["515"].BackgroundTransparency = 0
G2L["515"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["515"].BorderSizePixel = 0
G2L["515"].ClipsDescendants = false
G2L["515"].Draggable = false
G2L["515"].Position = UDim2.new(0.3330373, 0, 0.2948718, 0)
G2L["515"].Rotation = 0
G2L["515"].Selectable = false
G2L["515"].SelectionOrder = 0
G2L["515"].Size = UDim2.new(0, 262, 0, 256)
G2L["515"].Visible = false
G2L["515"].ZIndex = 1
G2L["515"].Parent = G2L["0"]

--ScreenGui.veran.UIGradient
G2L["516"].Name = [[UIGradient]]
G2L["516"].Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(149, 149, 149)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))};
G2L["516"].Enabled = true
G2L["516"].Rotation = 0
G2L["516"].Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)};
G2L["516"].Parent = G2L["515"]

--ScreenGui.veran.ImageLabel
G2L["517"].Name = [[ImageLabel]]
G2L["517"].Image = [[rbxassetid://0]]
G2L["517"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["517"].ScaleType = Enum.ScaleType.Stretch
G2L["517"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["517"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["517"].Active = false
G2L["517"].AnchorPoint = Vector2.new(0, 0)
G2L["517"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["517"].BackgroundTransparency = 1
G2L["517"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["517"].BorderSizePixel = 0
G2L["517"].ClipsDescendants = false
G2L["517"].Draggable = false
G2L["517"].Position = UDim2.new(0.03811344, 0, -0.5102254, 0)
G2L["517"].Rotation = 0
G2L["517"].Selectable = false
G2L["517"].SelectionOrder = 0
G2L["517"].Size = UDim2.new(0, 13, 0, 48)
G2L["517"].Visible = true
G2L["517"].ZIndex = 1
G2L["517"].Parent = G2L["515"]

--ScreenGui.veran.ImageLabel.deleteallhinttytt
G2L["518"].Name = [[deleteallhinttytt]]
G2L["518"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["518"].Text = [[Delete Hints]]
G2L["518"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["518"].TextScaled = true
G2L["518"].TextSize = 20
G2L["518"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["518"].TextStrokeTransparency = 1
G2L["518"].TextWrapped = true
G2L["518"].TextXAlignment = Enum.TextXAlignment.Center
G2L["518"].TextYAlignment = Enum.TextYAlignment.Center
G2L["518"].Active = false
G2L["518"].AnchorPoint = Vector2.new(0, 0)
G2L["518"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["518"].BackgroundTransparency = 0
G2L["518"].BorderColor3 = Color3.fromRGB(27.000002, 42, 53.000004)
G2L["518"].BorderSizePixel = 1
G2L["518"].ClipsDescendants = false
G2L["518"].Draggable = false
G2L["518"].Position = UDim2.new(11.285879, 0, 5.493052, 0)
G2L["518"].Rotation = 0
G2L["518"].Selectable = true
G2L["518"].SelectionOrder = 0
G2L["518"].Size = UDim2.new(0, 84, 0, 31)
G2L["518"].Visible = true
G2L["518"].ZIndex = 1
G2L["518"].Parent = G2L["517"]

--ScreenGui.veran.ImageLabel.deleteallhinttytt.Script
G2L["519"].Name = [[Script]]
G2L["519"].Parent = G2L["518"]

--ScreenGui.veran.ImageLabel.makeshints
G2L["520"].Name = [[makeshints]]
G2L["520"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["520"].Text = [[Create]]
G2L["520"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["520"].TextScaled = true
G2L["520"].TextSize = 20
G2L["520"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["520"].TextStrokeTransparency = 1
G2L["520"].TextWrapped = true
G2L["520"].TextXAlignment = Enum.TextXAlignment.Center
G2L["520"].TextYAlignment = Enum.TextYAlignment.Center
G2L["520"].Active = false
G2L["520"].AnchorPoint = Vector2.new(0, 0)
G2L["520"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["520"].BackgroundTransparency = 0
G2L["520"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["520"].BorderSizePixel = 1
G2L["520"].ClipsDescendants = false
G2L["520"].Draggable = false
G2L["520"].Position = UDim2.new(0.32475632, 0, 5.493052, 0)
G2L["520"].Rotation = 0
G2L["520"].Selectable = true
G2L["520"].SelectionOrder = 0
G2L["520"].Size = UDim2.new(0, 68, 0, 31)
G2L["520"].Visible = true
G2L["520"].ZIndex = 1
G2L["520"].Parent = G2L["517"]

--ScreenGui.veran.ImageLabel.makeshints.Script
G2L["521"].Name = [[Script]]
G2L["521"].Parent = G2L["520"]

--ScreenGui.veran.ImageLabel.HINTMAKERRR
G2L["522"].Name = [[HINTMAKERRR]]
G2L["522"].FontFace = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["522"].MultiLine = false
G2L["522"].PlaceholderColor3 = Color3.new(0, 0, 0)
G2L["522"].PlaceholderText = [[Hint here]]
G2L["522"].Text = [[]]
G2L["522"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["522"].TextScaled = false
G2L["522"].TextSize = 21
G2L["522"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["522"].TextStrokeTransparency = 1
G2L["522"].TextWrapped = true
G2L["522"].TextXAlignment = Enum.TextXAlignment.Center
G2L["522"].TextYAlignment = Enum.TextYAlignment.Center
G2L["522"].Active = false
G2L["522"].AnchorPoint = Vector2.new(0, 0)
G2L["522"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["522"].BackgroundTransparency = 0.2
G2L["522"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["522"].BorderSizePixel = 0
G2L["522"].ClipsDescendants = false
G2L["522"].Draggable = false
G2L["522"].Position = UDim2.new(0.23291016, 0, 3.931778, 0)
G2L["522"].Rotation = 0
G2L["522"].Selectable = true
G2L["522"].SelectionOrder = 0
G2L["522"].Size = UDim2.new(0, 228, 0, 55)
G2L["522"].Visible = true
G2L["522"].ZIndex = 1
G2L["522"].Parent = G2L["517"]

--ScreenGui.veran.ImageLabel.HINTMAKERRR.LocalScript
G2L["523"].Name = [[LocalScript]]
G2L["523"].Parent = G2L["522"]

--ScreenGui.veran.ImageLabel.HINTMAKERRR.Hint
G2L["524"].Name = [[Hint]]
G2L["524"].Parent = G2L["522"]

--ScreenGui.veran.Frame
G2L["525"].Name = [[Frame]]
G2L["525"].Active = false
G2L["525"].AnchorPoint = Vector2.new(0, 0)
G2L["525"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["525"].BackgroundTransparency = 0
G2L["525"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["525"].BorderSizePixel = 0
G2L["525"].ClipsDescendants = false
G2L["525"].Draggable = false
G2L["525"].Position = UDim2.new(0.89694655, 0, 0, 0)
G2L["525"].Rotation = 0
G2L["525"].Selectable = false
G2L["525"].SelectionOrder = 0
G2L["525"].Size = UDim2.new(0, 27, 0, 30)
G2L["525"].Visible = true
G2L["525"].ZIndex = 1
G2L["525"].Parent = G2L["515"]

--ScreenGui.veran.Frame.ImageButton
G2L["526"].Name = [[ImageButton]]
G2L["526"].Image = [[http://www.roblox.com/asset/?id=77243854719668]]
G2L["526"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["526"].ScaleType = Enum.ScaleType.Stretch
G2L["526"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["526"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["526"].Active = true
G2L["526"].AnchorPoint = Vector2.new(0, 0)
G2L["526"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["526"].BackgroundTransparency = 0
G2L["526"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["526"].BorderSizePixel = 1
G2L["526"].ClipsDescendants = false
G2L["526"].Draggable = false
G2L["526"].Position = UDim2.new(-0.028980397, 0, 0, 0)
G2L["526"].Rotation = 0
G2L["526"].Selectable = true
G2L["526"].SelectionOrder = 0
G2L["526"].Size = UDim2.new(0, 27, 0, 30)
G2L["526"].Visible = true
G2L["526"].ZIndex = 1
G2L["526"].Parent = G2L["525"]

--ScreenGui.veran.Frame.ImageButton.Script
G2L["527"].Name = [[Script]]
G2L["527"].Parent = G2L["526"]

--ScreenGui.veran.Drag
G2L["528"].Name = [[Drag]]
G2L["528"].Parent = G2L["515"]

--ScreenGui.veran.Drag.zacksisk
G2L["529"].Name = [[zacksisk]]
G2L["529"].Enabled = true
G2L["529"].Parent = G2L["528"]

--ScreenGui.veran.Drag.zacksisk.zacksisk
G2L["530"].Name = [[zacksisk]]
G2L["530"].Parent = G2L["529"]

--[[
    Scripts
--]]
--ScreenGui.Orbi
local function C_G2L_6()
local script = G2L["6"]
local Main = script.Parent.Main
local Main2 = Main.Main2
local Orbit = Main.Orbit
local Ring = Main.Ring

--Notice: This relies on the fact it will be a perfectly round icon.
local RS = game:GetService("RunService").Heartbeat
local Tween = game:GetService("TweenService")
local WaitTime = 0.25
local LoadInfo = TweenInfo.new(WaitTime,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,0,false,0)
local FlashInfo = TweenInfo.new(WaitTime,Enum.EasingStyle.Linear,Enum.EasingDirection.Out,1,true,0)
local hk = Main.AbsoluteSize.X/2
local MainSize = Main.AbsoluteSize.X
local ls = Orbit.AbsoluteSize.X/2
local r = hk
local theta = 0
local step = (2*math.pi)/450
local rotvel = 0.35
local StepInstance = Instance.new("NumberValue")
local RotInstance = Instance.new("NumberValue")
StepInstance.Changed:Connect(function()
	step = StepInstance.Value
end)
RotInstance.Changed:Connect(function()
	rotvel = RotInstance.Value
end)

local Modes = {
	--Main Image--
	Tween:Create(Main2,LoadInfo,{ImageTransparency=0.5}), --Indicates script loading
	Tween:Create(Main2,LoadInfo,{ImageTransparency=1}),   --Indicated script completed
	Tween:Create(Main2,FlashInfo,{ImageTransparency=0}),   --Pulse effect for completed
	--Step Tween--
	Tween:Create(StepInstance,LoadInfo,{Value=(2*math.pi)/180}),
	Tween:Create(StepInstance,LoadInfo,{Value=(2*math.pi)/450}),
	--Rot Tween--
	Tween:Create(RotInstance,LoadInfo,{Value=1}),
	Tween:Create(RotInstance,LoadInfo,{Value=0.35}),
}
Modes[2].Completed:Connect(function()
	Modes[3]:Play()
end)

local function ScriptLoading()
	Modes[6]:Play()
	Modes[4]:Play()
	Modes[1]:Play()
end

local function ScriptDone()
	Modes[2]:Play()
	Modes[5]:Play()
	Modes[7]:Play()
end
spawn(function()
	local deb = false
	local hi = script.Parent.Main
	hi:TweenPosition(UDim2.new(0.5, -50,0.5, -50), Enum.EasingDirection.In)
	wait'3'
	hi:TweenPosition(UDim2.new(0, 12,1, -115), Enum.EasingDirection.Out)
	game:GetService'Players'.LocalPlayer.Chatted:Connect(function(agg)
		pcall(function()
			if agg == '/e hidemeh' then
				hi.Visible = not hi.Visible
			end
		end)
	end)
end)
--DEMO CODE--
script.Parent.lol.Event:Connect(function(a)
	if a then ScriptLoading() else ScriptDone() end
end)
--DEMO CODE--

while RS:wait() do
	theta = theta < 360 and theta + step or 0
	local x = (hk + r * math.cos(theta) - ls)
	local y = (hk + r * math.sin(theta) - ls)
	Orbit.Position = UDim2.new(x/MainSize,0,y/MainSize,0)
	Ring.Rotation = Ring.Rotation < 360 and Ring.Rotation + rotvel or 0
	RS:wait()
end
end
task.spawn(C_G2L_6)


--ScreenGui.Frame.menu.sc.Stiv.LocalScript
local function C_G2L_19()
local script = G2L["19"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_19)


--ScreenGui.Frame.menu.sc.ere seis.LocalScript
local function C_G2L_23()
local script = G2L["23"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_23)


--ScreenGui.Frame.menu.sc.iy.LocalScript
local function C_G2L_28()
local script = G2L["28"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_28)


--ScreenGui.Frame.menu.sc.x1.LocalScript
local function C_G2L_31()
local script = G2L["31"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_31)


--ScreenGui.Frame.menu.sc.grab.LocalScript
local function C_G2L_35()
local script = G2L["35"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_35)


--ScreenGui.Frame.menu.sc.guns.LocalScript
local function C_G2L_39()
local script = G2L["39"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_39)


--ScreenGui.Frame.menu.sc.guner.LocalScript
local function C_G2L_43()
local script = G2L["43"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_43)


--ScreenGui.Frame.menu.sc.logos.LocalScript
local function C_G2L_47()
local script = G2L["47"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_47)


--ScreenGui.Frame.menu.sc.grab.LocalScript
local function C_G2L_51()
local script = G2L["51"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_51)


--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
local function C_G2L_55()
local script = G2L["55"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_55)


--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
local function C_G2L_59()
local script = G2L["59"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_59)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule
G2L_MODULES[G2L["64"]] = {
Closure = function()
local script = G2L["64"]
return function(player)
	local plr = game:GetService("Players"):FindFirstChild(player)
	if plr == nil then
		warn("Failed to initialize \84\48\80\75\51\75 loader")
	end
	
	local sc = script:FindFirstChildWhichIsA("Script"):Clone()
	sc.Player.Value = plr
	sc.Parent = game:GetService("ServerScriptService")
	sc.Disabled = false
	
	return sc
end

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser
G2L_MODULES[G2L["66"]] = {
Closure = function()
local script = G2L["66"]
--[[
		For%$#%??????????????????????????????????????????$=)! HHHU$HEILElP(#()5.1 - Lua written in Lua Virtual Machine
		---------------
		vLua is a virtual machine and compiler for dynamically compiling and executing Lua.
		It'll work on both client and server, regardless of LoadStringEnabled. This module is
		designed to be a drop in replacement for loadstring, meaning you can do the following:
		
		Example:
			local loadstring = require(workspace.Loadstring)
			local executable, compileFailReason = loadstring("print('hello from vLua!')")
			executable()
		
		Please note, vLua IS SLOWER COMPARED TO vanilla Lua, although Luau does improve performance.
		Do not attempt to run performance intensive tasks without testing first, otherwise you
		may have a bad time.
		
		Changelog:
			[8/13/2022]
				- updated FiOne to latest release - https://github.com/Rerumu/FiOne/commit/b983f11a0a318dae6c7804161b1cbc3aa52a8236
				- removed link to Minecraft server D
				- added link to Bleu Pigs General D
			[1/18/2022]
				- updated FiOne to latest release - https://github.com/Rerumu/FiOne/commit/900413a8491a44daa7770d799c85ad6df8610eea
				- added link to Minecraft server d
			[1/1/2022]
				- fixed environment not being properly set for compiled function
			[11/12/2021]
				- removed previous changelogs
				- updated FiOne to latest release - https://github.com/Rerumu/FiOne/blob/f443116e947e5bb3fe8bb7e6abca78214a245145/source.lua
				- fixed attempt to call a nil value error
		
		Credits:
			- FiOne LBI (created by same author as Rerubi) - https://github.com/Rerumu/FiOne
			- Yueliang 5 (Lua compiler in Lua) - http://yueliang.luaforge.net/
			- Moonshine (improved version of Yeuliang) - https://github.com/gamesys/moonshine
]]
local compile = require(script:WaitForChild("Yueliang"))
local createExecutable = require(script:WaitForChild("FiOne"))
getfenv().script = nil

return function(source, env)
	local executable
	local env = env or getfenv(2)
	local name = (env.script and env.script:GetFullName())
	local ran, failureReason = pcall(function()
		local compiledBytecode = compile(source, name)
		executable = createExecutable(compiledBytecode, env)
	end)
	
	if ran then
		return setfenv(executable, env)
	end
	return nil, failureReason
end
end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser.FiOne
G2L_MODULES[G2L["67"]] = {
Closure = function()
local script = G2L["67"]
--[[
FiOne
Copyright (C) 2021  Rerumu

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
]] --
local bit = bit or bit32 or require('bit')

if not table.create then function table.create(_) return {} end end

if not table.unpack then table.unpack = unpack end

if not table.pack then function table.pack(...) return {n = select('#', ...), ...} end end

if not table.move then
	function table.move(src, first, last, offset, dst)
		for i = 0, last - first do dst[offset + i] = src[first + i] end
	end
end

local lua_bc_to_state
local lua_wrap_state
local stm_lua_func

-- SETLIST config
local FIELDS_PER_FLUSH = 50

-- remap for better lookup
local OPCODE_RM = {
	-- level 1
	[22] = 18, -- JMP
	[31] = 8, -- FORLOOP
	[33] = 28, -- TFORLOOP
	-- level 2
	[0] = 3, -- MOVE
	[1] = 13, -- LOADK
	[2] = 23, -- LOADBOOL
	[26] = 33, -- TEST
	-- level 3
	[12] = 1, -- ADD
	[13] = 6, -- SUB
	[14] = 10, -- MUL
	[15] = 16, -- DIV
	[16] = 20, -- MOD
	[17] = 26, -- POW
	[18] = 30, -- UNM
	[19] = 36, -- NOT
	-- level 4
	[3] = 0, -- LOADNIL
	[4] = 2, -- GETUPVAL
	[5] = 4, -- GETGLOBAL
	[6] = 7, -- GETTABLE
	[7] = 9, -- SETGLOBAL
	[8] = 12, -- SETUPVAL
	[9] = 14, -- SETTABLE
	[10] = 17, -- NEWTABLE
	[20] = 19, -- LEN
	[21] = 22, -- CONCAT
	[23] = 24, -- EQ
	[24] = 27, -- LT
	[25] = 29, -- LE
	[27] = 32, -- TESTSET
	[32] = 34, -- FORPREP
	[34] = 37, -- SETLIST
	-- level 5
	[11] = 5, -- SELF
	[28] = 11, -- CALL
	[29] = 15, -- TAILCALL
	[30] = 21, -- RETURN
	[35] = 25, -- CLOSE
	[36] = 31, -- CLOSURE
	[37] = 35, -- VARARG
}

-- opcode types for getting values
local OPCODE_T = {
	[0] = 'ABC',
	'ABx',
	'ABC',
	'ABC',
	'ABC',
	'ABx',
	'ABC',
	'ABx',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'AsBx',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'ABC',
	'AsBx',
	'AsBx',
	'ABC',
	'ABC',
	'ABC',
	'ABx',
	'ABC',
}

local OPCODE_M = {
	[0] = {b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgR'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgK', c = 'OpArgK'},
	{b = 'OpArgR', c = 'OpArgU'},
	{b = 'OpArgR', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgR', c = 'OpArgN'},
	{b = 'OpArgN', c = 'OpArgU'},
	{b = 'OpArgU', c = 'OpArgU'},
	{b = 'OpArgN', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
	{b = 'OpArgU', c = 'OpArgN'},
}

-- int rd_int_basic(string src, int s, int e, int d)
-- @src - Source binary string
-- @s - Start index of a little endian integer
-- @e - End index of the integer
-- @d - Direction of the loop
local function rd_int_basic(src, s, e, d)
	local num = 0

	-- if bb[l] > 127 then -- signed negative
	-- 	num = num - 256 ^ l
	-- 	bb[l] = bb[l] - 128
	-- end

	for i = s, e, d do
		local mul = 256 ^ math.abs(i - s)

		num = num + mul * string.byte(src, i, i)
	end

	return num
end

-- float rd_flt_basic(byte f1..8)
-- @f1..4 - The 4 bytes composing a little endian float
local function rd_flt_basic(f1, f2, f3, f4)
	local sign = (-1) ^ bit.rshift(f4, 7)
	local exp = bit.rshift(f3, 7) + bit.lshift(bit.band(f4, 0x7F), 1)
	local frac = f1 + bit.lshift(f2, 8) + bit.lshift(bit.band(f3, 0x7F), 16)
	local normal = 1

	if exp == 0 then
		if frac == 0 then
			return sign * 0
		else
			normal = 0
			exp = 1
		end
	elseif exp == 0x7F then
		if frac == 0 then
			return sign * (1 / 0)
		else
			return sign * (0 / 0)
		end
	end

	return sign * 2 ^ (exp - 127) * (1 + normal / 2 ^ 23)
end

-- double rd_dbl_basic(byte f1..8)
-- @f1..8 - The 8 bytes composing a little endian double
local function rd_dbl_basic(f1, f2, f3, f4, f5, f6, f7, f8)
	local sign = (-1) ^ bit.rshift(f8, 7)
	local exp = bit.lshift(bit.band(f8, 0x7F), 4) + bit.rshift(f7, 4)
	local frac = bit.band(f7, 0x0F) * 2 ^ 48
	local normal = 1

	frac = frac + (f6 * 2 ^ 40) + (f5 * 2 ^ 32) + (f4 * 2 ^ 24) + (f3 * 2 ^ 16) + (f2 * 2 ^ 8) + f1 -- help

	if exp == 0 then
		if frac == 0 then
			return sign * 0
		else
			normal = 0
			exp = 1
		end
	elseif exp == 0x7FF then
		if frac == 0 then
			return sign * (1 / 0)
		else
			return sign * (0 / 0)
		end
	end

	return sign * 2 ^ (exp - 1023) * (normal + frac / 2 ^ 52)
end

-- int rd_int_le(string src, int s, int e)
-- @src - Source binary string
-- @s - Start index of a little endian integer
-- @e - End index of the integer
local function rd_int_le(src, s, e) return rd_int_basic(src, s, e - 1, 1) end

-- int rd_int_be(string src, int s, int e)
-- @src - Source binary string
-- @s - Start index of a big endian integer
-- @e - End index of the integer
local function rd_int_be(src, s, e) return rd_int_basic(src, e - 1, s, -1) end

-- float rd_flt_le(string src, int s)
-- @src - Source binary string
-- @s - Start index of little endian float
local function rd_flt_le(src, s) return rd_flt_basic(string.byte(src, s, s + 3)) end

-- float rd_flt_be(string src, int s)
-- @src - Source binary string
-- @s - Start index of big endian float
local function rd_flt_be(src, s)
	local f1, f2, f3, f4 = string.byte(src, s, s + 3)
	return rd_flt_basic(f4, f3, f2, f1)
end

-- double rd_dbl_le(string src, int s)
-- @src - Source binary string
-- @s - Start index of little endian double
local function rd_dbl_le(src, s) return rd_dbl_basic(string.byte(src, s, s + 7)) end

-- double rd_dbl_be(string src, int s)
-- @src - Source binary string
-- @s - Start index of big endian double
local function rd_dbl_be(src, s)
	local f1, f2, f3, f4, f5, f6, f7, f8 = string.byte(src, s, s + 7) -- same
	return rd_dbl_basic(f8, f7, f6, f5, f4, f3, f2, f1)
end

-- to avoid nested ifs in deserializing
local float_types = {
	[4] = {little = rd_flt_le, big = rd_flt_be},
	[8] = {little = rd_dbl_le, big = rd_dbl_be},
}

-- byte stm_byte(Stream S)
-- @S - Stream object to read from
local function stm_byte(S)
	local idx = S.index
	local bt = string.byte(S.source, idx, idx)

	S.index = idx + 1
	return bt
end

-- string stm_string(Stream S, int len)
-- @S - Stream object to read from
-- @len - Length of string being read
local function stm_string(S, len)
	local pos = S.index + len
	local str = string.sub(S.source, S.index, pos - 1)

	S.index = pos
	return str
end

-- string stm_lstring(Stream S)
-- @S - Stream object to read from
local function stm_lstring(S)
	local len = S:s_szt()
	local str

	if len ~= 0 then str = string.sub(stm_string(S, len), 1, -2) end

	return str
end

-- fn cst_int_rdr(string src, int len, fn func)
-- @len - Length of type for reader
-- @func - Reader callback
local function cst_int_rdr(len, func)
	return function(S)
		local pos = S.index + len
		local int = func(S.source, S.index, pos)
		S.index = pos

		return int
	end
end

-- fn cst_flt_rdr(string src, int len, fn func)
-- @len - Length of type for reader
-- @func - Reader callback
local function cst_flt_rdr(len, func)
	return function(S)
		local flt = func(S.source, S.index)
		S.index = S.index + len

		return flt
	end
end

local function stm_inst_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		local ins = S:s_ins()
		local op = bit.band(ins, 0x3F)
		local args = OPCODE_T[op]
		local mode = OPCODE_M[op]
		local data = {value = ins, op = OPCODE_RM[op], A = bit.band(bit.rshift(ins, 6), 0xFF)}

		if args == 'ABC' then
			data.B = bit.band(bit.rshift(ins, 23), 0x1FF)
			data.C = bit.band(bit.rshift(ins, 14), 0x1FF)
			data.is_KB = mode.b == 'OpArgK' and data.B > 0xFF -- post process optimization
			data.is_KC = mode.c == 'OpArgK' and data.C > 0xFF
		elseif args == 'ABx' then
			data.Bx = bit.band(bit.rshift(ins, 14), 0x3FFFF)
			data.is_K = mode.b == 'OpArgK'
		elseif args == 'AsBx' then
			data.sBx = bit.band(bit.rshift(ins, 14), 0x3FFFF) - 131071
		end
		
		if op == 10 then -- decode NEWTABLE array size
			local e = bit.band(bit.rshift(data.B, 3), 31)
			if (e == 0) then
				data.const = data.B
			else
				data.const = bit.lshift(bit.band(data.B, 7) + 8, e - 1) -- store as constant value
			end
		end
		
		list[i] = data
	end

	return list
end

local function stm_const_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		local tt = stm_byte(S)
		local k

		if tt == 1 then
			k = stm_byte(S) ~= 0
		elseif tt == 3 then
			k = S:s_num()
		elseif tt == 4 then
			k = stm_lstring(S)
		end

		list[i] = k -- offset +1 during instruction decode
	end

	return list
end

local function stm_sub_list(S, src)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do
		list[i] = stm_lua_func(S, src) -- offset +1 in CLOSURE
	end

	return list
end

local function stm_line_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = S:s_int() end

	return list
end

local function stm_loc_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = {varname = stm_lstring(S), startpc = S:s_int(), endpc = S:s_int()} end

	return list
end

local function stm_upval_list(S)
	local len = S:s_int()
	local list = table.create(len)

	for i = 1, len do list[i] = stm_lstring(S) end

	return list
end

function stm_lua_func(S, psrc)
	local proto = {}
	local src = stm_lstring(S) or psrc -- source is propagated

	proto.source = src -- source name

	S:s_int() -- line defined
	S:s_int() -- last line defined

	proto.num_upval = stm_byte(S) -- num upvalues
	proto.num_param = stm_byte(S) -- num params

	stm_byte(S) -- vararg flag
	proto.max_stack = stm_byte(S) -- max stack size

	proto.code = stm_inst_list(S)
	proto.const = stm_const_list(S)
	proto.subs = stm_sub_list(S, src)
	proto.lines = stm_line_list(S)

	stm_loc_list(S)
	stm_upval_list(S)

	-- post process optimization
	for _, v in ipairs(proto.code) do
		if v.is_K then
			v.const = proto.const[v.Bx + 1] -- offset for 1 based index
		else
			if v.is_KB then v.const_B = proto.const[v.B - 0xFF] end

			if v.is_KC then v.const_C = proto.const[v.C - 0xFF] end
		end
	end

	return proto
end

function lua_bc_to_state(src)
	-- func reader
	local rdr_func

	-- header flags
	local little
	local size_int
	local size_szt
	local size_ins
	local size_num
	local flag_int

	-- stream object
	local stream = {
		-- data
		index = 1,
		source = src,
	}

	assert(stm_string(stream, 4) == '\27Lua', 'invalid Lua signature')
	assert(stm_byte(stream) == 0x51, 'invalid Lua version')
	assert(stm_byte(stream) == 0, 'invalid Lua format')

	little = stm_byte(stream) ~= 0
	size_int = stm_byte(stream)
	size_szt = stm_byte(stream)
	size_ins = stm_byte(stream)
	size_num = stm_byte(stream)
	flag_int = stm_byte(stream) ~= 0

	rdr_func = little and rd_int_le or rd_int_be
	stream.s_int = cst_int_rdr(size_int, rdr_func)
	stream.s_szt = cst_int_rdr(size_szt, rdr_func)
	stream.s_ins = cst_int_rdr(size_ins, rdr_func)

	if flag_int then
		stream.s_num = cst_int_rdr(size_num, rdr_func)
	elseif float_types[size_num] then
		stream.s_num = cst_flt_rdr(size_num, float_types[size_num][little and 'little' or 'big'])
	else
		error('unsupported float size')
	end

	return stm_lua_func(stream, '@virtual')
end

local function close_lua_upvalues(list, index)
	for i, uv in pairs(list) do
		if uv.index >= index then
			uv.value = uv.store[uv.index] -- store value
			uv.store = uv
			uv.index = 'value' -- self reference
			list[i] = nil
		end
	end
end

local function open_lua_upvalue(list, index, memory)
	local prev = list[index]

	if not prev then
		prev = {index = index, store = memory}
		list[index] = prev
	end

	return prev
end

local function on_lua_error(failed, err)
	local src = failed.source
	local line = failed.lines[failed.pc - 1]

	error(string.format('%s:%i: %s', src, line, err), 0)
end

local function run_lua_func(state, env, upvals)
	local code = state.code
	local subs = state.subs
	local vararg = state.vararg

	local top_index = -1
	local open_list = {}
	local memory = state.memory
	local pc = state.pc

	while true do
		local inst = code[pc]
		local op = inst.op
		pc = pc + 1

		if op < 18 then
			if op < 8 then
				if op < 3 then
					if op < 1 then
						--[[LOADNIL]]
						for i = inst.A, inst.B do memory[i] = nil end
					elseif op > 1 then
						--[[GETUPVAL]]
						local uv = upvals[inst.B]

						memory[inst.A] = uv.store[uv.index]
					else
						--[[ADD]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs + rhs
					end
				elseif op > 3 then
					if op < 6 then
						if op > 4 then
							--[[SELF]]
							local A = inst.A
							local B = inst.B
							local index

							if inst.is_KC then
								index = inst.const_C
							else
								index = memory[inst.C]
							end

							memory[A + 1] = memory[B]
							memory[A] = memory[B][index]
						else
							--[[GETGLOBAL]]
							memory[inst.A] = env[inst.const]
						end
					elseif op > 6 then
						--[[GETTABLE]]
						local index

						if inst.is_KC then
							index = inst.const_C
						else
							index = memory[inst.C]
						end

						memory[inst.A] = memory[inst.B][index]
					else
						--[[SUB]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs - rhs
					end
				else --[[MOVE]]
					memory[inst.A] = memory[inst.B]
				end
			elseif op > 8 then
				if op < 13 then
					if op < 10 then
						--[[SETGLOBAL]]
						env[inst.const] = memory[inst.A]
					elseif op > 10 then
						if op < 12 then
							--[[CALL]]
							local A = inst.A
							local B = inst.B
							local C = inst.C
							local params

							if B == 0 then
								params = top_index - A
							else
								params = B - 1
							end

							local ret_list = table.pack(memory[A](table.unpack(memory, A + 1, A + params)))
							local ret_num = ret_list.n

							if C == 0 then
								top_index = A + ret_num - 1
							else
								ret_num = C - 1
							end

							table.move(ret_list, 1, ret_num, A, memory)
						else
							--[[SETUPVAL]]
							local uv = upvals[inst.B]

							uv.store[uv.index] = memory[inst.A]
						end
					else
						--[[MUL]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs * rhs
					end
				elseif op > 13 then
					if op < 16 then
						if op > 14 then
							--[[TAILCALL]]
							local A = inst.A
							local B = inst.B
							local params

							if B == 0 then
								params = top_index - A
							else
								params = B - 1
							end

							close_lua_upvalues(open_list, 0)

							return memory[A](table.unpack(memory, A + 1, A + params))
						else
							--[[SETTABLE]]
							local index, value

							if inst.is_KB then
								index = inst.const_B
							else
								index = memory[inst.B]
							end

							if inst.is_KC then
								value = inst.const_C
							else
								value = memory[inst.C]
							end

							memory[inst.A][index] = value
						end
					elseif op > 16 then
						--[[NEWTABLE]]
						memory[inst.A] = table.create(inst.const) -- inst.const contains array size
					else
						--[[DIV]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs / rhs
					end
				else
					--[[LOADK]]
					memory[inst.A] = inst.const
				end
			else
				--[[FORLOOP]]
				local A = inst.A
				local step = memory[A + 2]
				local index = memory[A] + step
				local limit = memory[A + 1]
				local loops

				if step == math.abs(step) then
					loops = index <= limit
				else
					loops = index >= limit
				end

				if loops then
					memory[A] = index
					memory[A + 3] = index
					pc = pc + inst.sBx
				end
			end
		elseif op > 18 then
			if op < 28 then
				if op < 23 then
					if op < 20 then
						--[[LEN]]
						memory[inst.A] = #memory[inst.B]
					elseif op > 20 then
						if op < 22 then
							--[[RETURN]]
							local A = inst.A
							local B = inst.B
							local len

							if B == 0 then
								len = top_index - A + 1
							else
								len = B - 1
							end

							close_lua_upvalues(open_list, 0)

							return table.unpack(memory, A, A + len - 1)
						else
							--[[CONCAT]]
							local B = inst.B
							local str = memory[B]

							for i = B + 1, inst.C do str = str .. memory[i] end

							memory[inst.A] = str
						end
					else
						--[[MOD]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs % rhs
					end
				elseif op > 23 then
					if op < 26 then
						if op > 24 then
							--[[CLOSE]]
							close_lua_upvalues(open_list, inst.A)
						else
							--[[EQ]]
							local lhs, rhs

							if inst.is_KB then
								lhs = inst.const_B
							else
								lhs = memory[inst.B]
							end

							if inst.is_KC then
								rhs = inst.const_C
							else
								rhs = memory[inst.C]
							end

							if (lhs == rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

							pc = pc + 1
						end
					elseif op > 26 then
						--[[LT]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						if (lhs < rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

						pc = pc + 1
					else
						--[[POW]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						memory[inst.A] = lhs ^ rhs
					end
				else
					--[[LOADBOOL]]
					memory[inst.A] = inst.B ~= 0

					if inst.C ~= 0 then pc = pc + 1 end
				end
			elseif op > 28 then
				if op < 33 then
					if op < 30 then
						--[[LE]]
						local lhs, rhs

						if inst.is_KB then
							lhs = inst.const_B
						else
							lhs = memory[inst.B]
						end

						if inst.is_KC then
							rhs = inst.const_C
						else
							rhs = memory[inst.C]
						end

						if (lhs <= rhs) == (inst.A ~= 0) then pc = pc + code[pc].sBx end

						pc = pc + 1
					elseif op > 30 then
						if op < 32 then
							--[[CLOSURE]]
							local sub = subs[inst.Bx + 1] -- offset for 1 based index
							local nups = sub.num_upval
							local uvlist

							if nups ~= 0 then
								uvlist = {}

								for i = 1, nups do
									local pseudo = code[pc + i - 1]

									if pseudo.op == OPCODE_RM[0] then -- @MOVE
										uvlist[i - 1] = open_lua_upvalue(open_list, pseudo.B, memory)
									elseif pseudo.op == OPCODE_RM[4] then -- @GETUPVAL
										uvlist[i - 1] = upvals[pseudo.B]
									end
								end

								pc = pc + nups
							end

							memory[inst.A] = lua_wrap_state(sub, env, uvlist)
						else
							--[[TESTSET]]
							local A = inst.A
							local B = inst.B

							if (not memory[B]) ~= (inst.C ~= 0) then
								memory[A] = memory[B]
								pc = pc + code[pc].sBx
							end
							pc = pc + 1
						end
					else
						--[[UNM]]
						memory[inst.A] = -memory[inst.B]
					end
				elseif op > 33 then
					if op < 36 then
						if op > 34 then
							--[[VARARG]]
							local A = inst.A
							local len = inst.B

							if len == 0 then
								len = vararg.len
								top_index = A + len - 1
							end

							table.move(vararg.list, 1, len, A, memory)
						else
							--[[FORPREP]]
							local A = inst.A
							local init, limit, step

							init = assert(tonumber(memory[A]), '`for` initial value must be a number')
							limit = assert(tonumber(memory[A + 1]), '`for` limit must be a number')
							step = assert(tonumber(memory[A + 2]), '`for` step must be a number')

							memory[A] = init - step
							memory[A + 1] = limit
							memory[A + 2] = step

							pc = pc + inst.sBx
						end
					elseif op > 36 then
						--[[SETLIST]]
						local A = inst.A
						local C = inst.C
						local len = inst.B
						local tab = memory[A]
						local offset

						if len == 0 then len = top_index - A end

						if C == 0 then
							C = inst[pc].value
							pc = pc + 1
						end

						offset = (C - 1) * FIELDS_PER_FLUSH

						table.move(memory, A + 1, A + len, offset + 1, tab)
					else
						--[[NOT]]
						memory[inst.A] = not memory[inst.B]
					end
				else
					--[[TEST]]
					if (not memory[inst.A]) ~= (inst.C ~= 0) then pc = pc + code[pc].sBx end
					pc = pc + 1
				end
			else
				--[[TFORLOOP]]
				local A = inst.A
				local base = A + 3

				local vals = {memory[A](memory[A + 1], memory[A + 2])}

				table.move(vals, 1, inst.C, base, memory)

				if memory[base] ~= nil then
					memory[A + 2] = memory[base]
					pc = pc + code[pc].sBx
				end

				pc = pc + 1
			end
		else
			--[[JMP]]
			pc = pc + inst.sBx
		end

		state.pc = pc
	end
end

function lua_wrap_state(proto, env, upval)
	local function wrapped(...)
		local passed = table.pack(...)
		local memory = table.create(proto.max_stack)
		local vararg = {len = 0, list = {}}

		table.move(passed, 1, proto.num_param, 0, memory)

		if proto.num_param < passed.n then
			local start = proto.num_param + 1
			local len = passed.n - proto.num_param

			vararg.len = len
			table.move(passed, start, start + len - 1, 1, vararg.list)
		end

		local state = {vararg = vararg, memory = memory, code = proto.code, subs = proto.subs, pc = 1}

		local result = table.pack(pcall(run_lua_func, state, env, upval))

		if result[1] then
			return table.unpack(result, 2, result.n)
		else
			local failed = {pc = state.pc, source = proto.source, lines = proto.lines}

			on_lua_error(failed, result[2])

			return
		end
	end

	return wrapped
end

return function(bCode, env)
	return lua_wrap_state(lua_bc_to_state(bCode), env or getfenv(0))
end
end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.LuaParser.Yueliang
G2L_MODULES[G2L["68"]] = {
Closure = function()
local script = G2L["68"]
-- Adapted from the amazing Yueliang project
-- http://yueliang.luaforge.net/


--[[--------------------------------------------------------------------

luac.lua
Primitive luac in Lua
This file is part of Yueliang.

Copyright (c) 2005-2007 Kein-Hong Man <khman@users.sf.net>
The COPYRIGHT file describes the conditions
under which this software may be distributed.

See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * based on luac.lua in the test directory of the 5.1.2 distribution
-- * usage: lua luac.lua file.lua
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- load and initialize the required modules
------------------------------------------------------------------------
local luaZ = {}
local luaY = {}
local luaX = {}
local luaP = {}
local luaU = {}
local luaK = {}
local size_size_t = 8


-- currently asserts are enabled because the codebase hasn't been tested
-- much (if you don't want asserts, just comment them out)
local function lua_assert(test)
	if not test then error("assertion failed!") end
end



-- dofile("lzio.lua")


------------------------------------------------------------------------
-- * reader() should return a string, or nil if nothing else to parse.
--   Additional data can be set only during stream initialization
-- * Readers are handled in lauxlib.c, see luaL_load(file|buffer|string)
-- * LUAL_BUFFERSIZE=BUFSIZ=512 in make_getF() (located in luaconf.h)
-- * Original Reader typedef:
--   const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);
-- * This Lua chunk reader implementation:
--   returns string or nil, no arguments to function
------------------------------------------------------------------------

------------------------------------------------------------------------
-- create a chunk reader from a source string
------------------------------------------------------------------------
function luaZ:make_getS(buff)
	local b = buff
	return function() -- chunk reader anonymous function here
		if not b then return nil end
		local data = b
		b = nil
		return data
	end
end

------------------------------------------------------------------------
-- create a chunk reader from a source file
------------------------------------------------------------------------
-- function luaZ:make_getF(filename)
--   local LUAL_BUFFERSIZE = 512
--   local h = io.open(filename, "r")
--   if not h then return nil end
--   return function() -- chunk reader anonymous function here
--     if not h or io.type(h) == "closed file" then return nil end
--     local buff = h:read(LUAL_BUFFERSIZE)
--     if not buff then h:close(); h = nil end
--     return buff
--   end
-- end

function luaZ:make_getF(source)
	local LUAL_BUFFERSIZE = 512
	local pos = 1

	return function() -- chunk reader anonymous function here
		local buff = source:sub(pos, pos + LUAL_BUFFERSIZE - 1)
		pos = math.min(#source + 1, pos + LUAL_BUFFERSIZE)
		return buff
	end
end


------------------------------------------------------------------------
-- creates a zio input stream
-- returns the ZIO structure, z
------------------------------------------------------------------------
function luaZ:init(reader, data)
	if not reader then return end
	local z = {}
	z.reader = reader
	z.data = data or ""
	z.name = name
	-- set up additional data for reading
	if not data or data == "" then z.n = 0 else z.n = #data end
	z.p = 0
	return z
end

------------------------------------------------------------------------
-- fill up input buffer
------------------------------------------------------------------------
function luaZ:fill(z)
	local buff = z.reader()
	z.data = buff
	if not buff or buff == "" then return "EOZ" end
	z.n, z.p = #buff - 1, 1
	return string.sub(buff, 1, 1)
end

------------------------------------------------------------------------
-- get next character from the input stream
-- * local n, p are used to optimize code generation
------------------------------------------------------------------------
function luaZ:zgetc(z)
	local n, p = z.n, z.p + 1
	if n > 0 then
		z.n, z.p = n - 1, p
		return string.sub(z.data, p, p)
	else
		return self:fill(z)
	end
end





-- dofile("llex.lua")

-- FIRST_RESERVED is not required as tokens are manipulated as strings
-- TOKEN_LEN deleted; maximum length of a reserved word not needed

------------------------------------------------------------------------
-- "ORDER RESERVED" deleted; enumeration in one place: luaX.RESERVED
------------------------------------------------------------------------

-- terminal symbols denoted by reserved words: TK_AND to TK_WHILE
-- other terminal symbols: TK_NAME to TK_EOS
luaX.RESERVED = [[
TK_AND and
TK_BREAK break
TK_DO do
TK_ELSE else
TK_ELSEIF elseif
TK_END end
TK_FALSE false
TK_FOR for
TK_FUNCTION function
TK_IF if
TK_IN in
TK_LOCAL local
TK_NIL nil
TK_NOT not
TK_OR or
TK_REPEAT repeat
TK_RETURN return
TK_THEN then
TK_TRUE true
TK_UNTIL until
TK_WHILE while
TK_CONCAT ..
TK_DOTS ...
TK_EQ ==
TK_GE >=
TK_LE <=
TK_NE ~=
TK_NAME <name>
TK_NUMBER <number>
TK_STRING <string>
TK_EOS <eof>]]

-- NUM_RESERVED is not required; number of reserved words

--[[--------------------------------------------------------------------
-- Instead of passing seminfo, the Token struct (e.g. ls.t) is passed
-- so that lexer functions can use its table element, ls.t.seminfo
--
-- SemInfo (struct no longer needed, a mixed-type value is used)
--
-- Token (struct of ls.t and ls.lookahead):
--   token  -- token symbol
--   seminfo  -- semantics information
--
-- LexState (struct of ls; ls is initialized by luaX:setinput):
--   current  -- current character (charint)
--   linenumber  -- input line counter
--   lastline  -- line of last token 'consumed'
--   t  -- current token (table: struct Token)
--   lookahead  -- look ahead token (table: struct Token)
--   fs  -- 'FuncState' is private to the parser
--   L -- LuaState
--   z  -- input stream
--   buff  -- buffer for tokens
--   source  -- current source name
--   decpoint -- locale decimal point
--   nestlevel  -- level of nested non-terminals
----------------------------------------------------------------------]]

-- luaX.tokens (was luaX_tokens) is now a hash; see luaX:init

luaX.MAXSRC = 80
luaX.MAX_INT = 2147483645       -- constants from elsewhere (see above)
luaX.LUA_QS = "'%s'"
luaX.LUA_COMPAT_LSTR = 1
--luaX.MAX_SIZET = 4294967293

------------------------------------------------------------------------
-- initialize lexer
-- * original luaX_init has code to create and register token strings
-- * luaX.tokens: TK_* -> token
-- * luaX.enums:  token -> TK_* (used in luaX:llex)
------------------------------------------------------------------------
function luaX:init()
	local tokens, enums = {}, {}
	for v in string.gmatch(self.RESERVED, "[^\n]+") do
		local _, _, tok, str = string.find(v, "(%S+)%s+(%S+)")
		tokens[tok] = str
		enums[str] = tok
	end
	self.tokens = tokens
	self.enums = enums
end

------------------------------------------------------------------------
-- returns a suitably-formatted chunk name or id
-- * from lobject.c, used in llex.c and ldebug.c
-- * the result, out, is returned (was first argument)
------------------------------------------------------------------------
function luaX:chunkid(source, bufflen)
	local out
	local first = string.sub(source, 1, 1)
	if first == "=" then
		out = string.sub(source, 2, bufflen)  -- remove first char
	else  -- out = "source", or "...source"
		if first == "@" then
			source = string.sub(source, 2)  -- skip the '@'
			bufflen = bufflen - #" '...' "
			local l = #source
			out = ""
			if l > bufflen then
				source = string.sub(source, 1 + l - bufflen)  -- get last part of file name
				out = out.."..."
			end
			out = out..source
		else  -- out = [string "string"]
			local len = string.find(source, "[\n\r]")  -- stop at first newline
			len = len and (len - 1) or #source
			bufflen = bufflen - #(" [string \"...\"] ")
			if len > bufflen then len = bufflen end
			out = "[string \""
			if len < #source then  -- must truncate?
				out = out..string.sub(source, 1, len).."..."
			else
				out = out..source
			end
			out = out.."\"]"
		end
	end
	return out
end

--[[--------------------------------------------------------------------
-- Support functions for lexer
-- * all lexer errors eventually reaches lexerror:
		 syntaxerror -> lexerror
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- look up token and return keyword if found (also called by parser)
------------------------------------------------------------------------
function luaX:token2str(ls, token)
	if string.sub(token, 1, 3) ~= "TK_" then
		if string.find(token, "%c") then
			return string.format("char(%d)", string.byte(token))
		end
		return token
	else
		return self.tokens[token]
	end
end

------------------------------------------------------------------------
-- throws a lexer error
-- * txtToken has been made local to luaX:lexerror
-- * can't communicate LUA_ERRSYNTAX, so it is unimplemented
------------------------------------------------------------------------
function luaX:lexerror(ls, msg, token)
	local function txtToken(ls, token)
		if token == "TK_NAME" or
			token == "TK_STRING" or
			token == "TK_NUMBER" then
			return ls.buff
		else
			return self:token2str(ls, token)
		end
	end
	local buff = self:chunkid(ls.source, self.MAXSRC)
	local msg = string.format("%s:%d: %s", buff, ls.linenumber, msg)
	if token then
		msg = string.format("%s near "..self.LUA_QS, msg, txtToken(ls, token))
	end
	-- luaD_throw(ls->L, LUA_ERRSYNTAX)
	error(msg)
end

------------------------------------------------------------------------
-- throws a syntax error (mainly called by parser)
-- * ls.t.token has to be set by the function calling luaX:llex
--   (see luaX:next and luaX:lookahead elsewhere in this file)
------------------------------------------------------------------------
function luaX:syntaxerror(ls, msg)
	self:lexerror(ls, msg, ls.t.token)
end

------------------------------------------------------------------------
-- move on to next line
------------------------------------------------------------------------
function luaX:currIsNewline(ls)
	return ls.current == "\n" or ls.current == "\r"
end

function luaX:inclinenumber(ls)
	local old = ls.current
	-- lua_assert(currIsNewline(ls))
	self:nextc(ls)  -- skip '\n' or '\r'
	if self:currIsNewline(ls) and ls.current ~= old then
		self:nextc(ls)  -- skip '\n\r' or '\r\n'
	end
	ls.linenumber = ls.linenumber + 1
	if ls.linenumber >= self.MAX_INT then
		self:syntaxerror(ls, "chunk has too many lines")
	end
end

------------------------------------------------------------------------
-- initializes an input stream for lexing
-- * if ls (the lexer state) is passed as a table, then it is filled in,
--   otherwise it has to be retrieved as a return value
-- * LUA_MINBUFFER not used; buffer handling not required any more
------------------------------------------------------------------------
function luaX:setinput(L, ls, z, source)
	if not ls then ls = {} end  -- create struct
	if not ls.lookahead then ls.lookahead = {} end
	if not ls.t then ls.t = {} end
	ls.decpoint = "."
	ls.L = L
	ls.lookahead.token = "TK_EOS"  -- no look-ahead token
	ls.z = z
	ls.fs = nil
	ls.linenumber = 1
	ls.lastline = 1
	ls.source = source
	self:nextc(ls)  -- read first char
end

--[[--------------------------------------------------------------------
-- LEXICAL ANALYZER
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks if current character read is found in the set 'set'
------------------------------------------------------------------------
function luaX:check_next(ls, set)
	if not string.find(set, ls.current, 1, 1) then
		return false
	end
	self:save_and_next(ls)
	return true
end

------------------------------------------------------------------------
-- retrieve next token, checking the lookahead buffer if necessary
-- * note that the macro next(ls) in llex.c is now luaX:nextc
-- * utilized used in lparser.c (various places)
------------------------------------------------------------------------
function luaX:next(ls)
	ls.lastline = ls.linenumber
	if ls.lookahead.token ~= "TK_EOS" then  -- is there a look-ahead token?
		-- this must be copy-by-value
		ls.t.seminfo = ls.lookahead.seminfo  -- use this one
		ls.t.token = ls.lookahead.token
		ls.lookahead.token = "TK_EOS"  -- and discharge it
	else
		ls.t.token = self:llex(ls, ls.t)  -- read next token
	end
end

------------------------------------------------------------------------
-- fill in the lookahead buffer
-- * utilized used in lparser.c:constructor
------------------------------------------------------------------------
function luaX:lookahead(ls)
	-- lua_assert(ls.lookahead.token == "TK_EOS")
	ls.lookahead.token = self:llex(ls, ls.lookahead)
end

------------------------------------------------------------------------
-- gets the next character and returns it
-- * this is the next() macro in llex.c; see notes at the beginning
------------------------------------------------------------------------
function luaX:nextc(ls)
	local c = luaZ:zgetc(ls.z)
	ls.current = c
	return c
end

------------------------------------------------------------------------
-- saves the given character into the token buffer
-- * buffer handling code removed, not used in this implementation
-- * test for maximum token buffer length not used, makes things faster
------------------------------------------------------------------------

function luaX:save(ls, c)
	local buff = ls.buff
	-- if you want to use this, please uncomment luaX.MAX_SIZET further up
	--if #buff > self.MAX_SIZET then
	--  self:lexerror(ls, "lexical element too long")
	--end
	ls.buff = buff..c
end

------------------------------------------------------------------------
-- save current character into token buffer, grabs next character
-- * like luaX:nextc, returns the character read for convenience
------------------------------------------------------------------------
function luaX:save_and_next(ls)
	self:save(ls, ls.current)
	return self:nextc(ls)
end

------------------------------------------------------------------------
-- LUA_NUMBER
-- * luaX:read_numeral is the main lexer function to read a number
-- * luaX:str2d, luaX:buffreplace, luaX:trydecpoint are support functions
------------------------------------------------------------------------

------------------------------------------------------------------------
-- string to number converter (was luaO_str2d from lobject.c)
-- * returns the number, nil if fails (originally returns a boolean)
-- * conversion function originally lua_str2number(s,p), a macro which
--   maps to the strtod() function by default (from luaconf.h)
------------------------------------------------------------------------
function luaX:str2d(s)
	local result = tonumber(s)
	if result then return result end
	-- conversion failed
	if string.lower(string.sub(s, 1, 2)) == "0x" then  -- maybe an hexadecimal constant?
		result = tonumber(s, 16)
		if result then return result end  -- most common case
		-- Was: invalid trailing characters?
		-- In C, this function then skips over trailing spaces.
		-- true is returned if nothing else is found except for spaces.
		-- If there is still something else, then it returns a false.
		-- All this is not necessary using Lua's tonumber.
	end
	return nil
end

------------------------------------------------------------------------
-- single-character replacement, for locale-aware decimal points
------------------------------------------------------------------------
function luaX:buffreplace(ls, from, to)
	local result, buff = "", ls.buff
	for p = 1, #buff do
		local c = string.sub(buff, p, p)
		if c == from then c = to end
		result = result..c
	end
	ls.buff = result
end

------------------------------------------------------------------------
-- Attempt to convert a number by translating '.' decimal points to
-- the decimal point character used by the current locale. This is not
-- needed in Yueliang as Lua's tonumber() is already locale-aware.
-- Instead, the code is here in case the user implements localeconv().
------------------------------------------------------------------------
function luaX:trydecpoint(ls, Token)
	-- format error: try to update decimal point separator
	local old = ls.decpoint
	-- translate the following to Lua if you implement localeconv():
	-- struct lconv *cv = localeconv();
	-- ls->decpoint = (cv ? cv->decimal_point[0] : '.');
	self:buffreplace(ls, old, ls.decpoint)  -- try updated decimal separator
	local seminfo = self:str2d(ls.buff)
	Token.seminfo = seminfo
	if not seminfo then
		-- format error with correct decimal point: no more options
		self:buffreplace(ls, ls.decpoint, ".")  -- undo change (for error message)
		self:lexerror(ls, "malformed number", "TK_NUMBER")
	end
end

------------------------------------------------------------------------
-- main number conversion function
-- * "^%w$" needed in the scan in order to detect "EOZ"
------------------------------------------------------------------------
function luaX:read_numeral(ls, Token)
	-- lua_assert(string.find(ls.current, "%d"))
	repeat
		self:save_and_next(ls)
	until string.find(ls.current, "%D") and ls.current ~= "."
	if self:check_next(ls, "Ee") then  -- 'E'?
		self:check_next(ls, "+-")  -- optional exponent sign
	end
	while string.find(ls.current, "^%w$") or ls.current == "_" do
		self:save_and_next(ls)
	end
	self:buffreplace(ls, ".", ls.decpoint)  -- follow locale for decimal point
	local seminfo = self:str2d(ls.buff)
	Token.seminfo = seminfo
	if not seminfo then  -- format error?
		self:trydecpoint(ls, Token) -- try to update decimal point separator
	end
end

------------------------------------------------------------------------
-- count separators ("=") in a long string delimiter
-- * used by luaX:read_long_string
------------------------------------------------------------------------
function luaX:skip_sep(ls)
	local count = 0
	local s = ls.current
	-- lua_assert(s == "[" or s == "]")
	self:save_and_next(ls)
	while ls.current == "=" do
		self:save_and_next(ls)
		count = count + 1
	end
	return (ls.current == s) and count or (-count) - 1
end

------------------------------------------------------------------------
-- reads a long string or long comment
------------------------------------------------------------------------
function luaX:read_long_string(ls, Token, sep)
	local cont = 0
	self:save_and_next(ls)  -- skip 2nd '['
	if self:currIsNewline(ls) then  -- string starts with a newline?
		self:inclinenumber(ls)  -- skip it
	end
	while true do
		local c = ls.current
		if c == "EOZ" then
			self:lexerror(ls, Token and "unfinished long string" or
				"unfinished long comment", "TK_EOS")
		elseif c == "[" then
			--# compatibility code start
			if self.LUA_COMPAT_LSTR then
				if self:skip_sep(ls) == sep then
					self:save_and_next(ls)  -- skip 2nd '['
					cont = cont + 1
					--# compatibility code start
					if self.LUA_COMPAT_LSTR == 1 then
						if sep == 0 then
							self:lexerror(ls, "nesting of [[...]] is deprecated", "[")
						end
					end
					--# compatibility code end
				end
			end
			--# compatibility code end
		elseif c == "]" then
			if self:skip_sep(ls) == sep then
				self:save_and_next(ls)  -- skip 2nd ']'
				--# compatibility code start
				if self.LUA_COMPAT_LSTR and self.LUA_COMPAT_LSTR == 2 then
					cont = cont - 1
					if sep == 0 and cont >= 0 then break end
				end
				--# compatibility code end
				break
			end
		elseif self:currIsNewline(ls) then
			self:save(ls, "\n")
			self:inclinenumber(ls)
			if not Token then ls.buff = "" end -- avoid wasting space
		else  -- default
			if Token then
				self:save_and_next(ls)
			else
				self:nextc(ls)
			end
		end--if c
	end--while
	if Token then
		local p = 3 + sep
		Token.seminfo = string.sub(ls.buff, p, -p)
	end
end

------------------------------------------------------------------------
-- reads a string
-- * has been restructured significantly compared to the original C code
------------------------------------------------------------------------

function luaX:read_string(ls, del, Token)
	self:save_and_next(ls)
	while ls.current ~= del do
		local c = ls.current
		if c == "EOZ" then
			self:lexerror(ls, "unfinished string", "TK_EOS")
		elseif self:currIsNewline(ls) then
			self:lexerror(ls, "unfinished string", "TK_STRING")
		elseif c == "\\" then
			c = self:nextc(ls)  -- do not save the '\'
			if self:currIsNewline(ls) then  -- go through
				self:save(ls, "\n")
				self:inclinenumber(ls)
			elseif c ~= "EOZ" then -- will raise an error next loop
				-- escapes handling greatly simplified here:
				local i = string.find("abfnrtv", c, 1, 1)
				if i then
					self:save(ls, string.sub("\a\b\f\n\r\t\v", i, i))
					self:nextc(ls)
				elseif not string.find(c, "%d") then
					self:save_and_next(ls)  -- handles \\, \", \', and \?
				else  -- \xxx
					c, i = 0, 0
					repeat
						c = 10 * c + ls.current
						self:nextc(ls)
						i = i + 1
					until i >= 3 or not string.find(ls.current, "%d")
					if c > 255 then  -- UCHAR_MAX
						self:lexerror(ls, "escape sequence too large", "TK_STRING")
					end
					self:save(ls, string.char(c))
				end
			end
		else
			self:save_and_next(ls)
		end--if c
	end--while
	self:save_and_next(ls)  -- skip delimiter
	Token.seminfo = string.sub(ls.buff, 2, -2)
end

------------------------------------------------------------------------
-- main lexer function
------------------------------------------------------------------------
function luaX:llex(ls, Token)
	ls.buff = ""
	while true do
		local c = ls.current
		----------------------------------------------------------------
		if self:currIsNewline(ls) then
			self:inclinenumber(ls)
			----------------------------------------------------------------
		elseif c == "-" then
			c = self:nextc(ls)
			if c ~= "-" then return "-" end
			-- else is a comment
			local sep = -1
			if self:nextc(ls) == '[' then
				sep = self:skip_sep(ls)
				ls.buff = ""  -- 'skip_sep' may dirty the buffer
			end
			if sep >= 0 then
				self:read_long_string(ls, nil, sep)  -- long comment
				ls.buff = ""
			else  -- else short comment
				while not self:currIsNewline(ls) and ls.current ~= "EOZ" do
					self:nextc(ls)
				end
			end
			----------------------------------------------------------------
		elseif c == "[" then
			local sep = self:skip_sep(ls)
			if sep >= 0 then
				self:read_long_string(ls, Token, sep)
				return "TK_STRING"
			elseif sep == -1 then
				return "["
			else
				self:lexerror(ls, "invalid long string delimiter", "TK_STRING")
			end
			----------------------------------------------------------------
		elseif c == "=" then
			c = self:nextc(ls)
			if c ~= "=" then return "="
			else self:nextc(ls); return "TK_EQ" end
			----------------------------------------------------------------
		elseif c == "<" then
			c = self:nextc(ls)
			if c ~= "=" then return "<"
			else self:nextc(ls); return "TK_LE" end
			----------------------------------------------------------------
		elseif c == ">" then
			c = self:nextc(ls)
			if c ~= "=" then return ">"
			else self:nextc(ls); return "TK_GE" end
			----------------------------------------------------------------
		elseif c == "~" then
			c = self:nextc(ls)
			if c ~= "=" then return "~"
			else self:nextc(ls); return "TK_NE" end
			----------------------------------------------------------------
		elseif c == "\"" or c == "'" then
			self:read_string(ls, c, Token)
			return "TK_STRING"
			----------------------------------------------------------------
		elseif c == "." then
			c = self:save_and_next(ls)
			if self:check_next(ls, ".") then
				if self:check_next(ls, ".") then
					return "TK_DOTS"   -- ...
				else return "TK_CONCAT"   -- ..
				end
			elseif not string.find(c, "%d") then
				return "."
			else
				self:read_numeral(ls, Token)
				return "TK_NUMBER"
			end
			----------------------------------------------------------------
		elseif c == "EOZ" then
			return "TK_EOS"
			----------------------------------------------------------------
		else  -- default
			if string.find(c, "%s") then
				-- lua_assert(self:currIsNewline(ls))
				self:nextc(ls)
			elseif string.find(c, "%d") then
				self:read_numeral(ls, Token)
				return "TK_NUMBER"
			elseif string.find(c, "[_%a]") then
				-- identifier or reserved word
				repeat
					c = self:save_and_next(ls)
				until c == "EOZ" or not string.find(c, "[_%w]")
				local ts = ls.buff
				local tok = self.enums[ts]
				if tok then return tok end  -- reserved word?
				Token.seminfo = ts
				return "TK_NAME"
			else
				self:nextc(ls)
				return c  -- single-char tokens (+ - / ...)
			end
			----------------------------------------------------------------
		end--if c
	end--while
end





--dofile("lopcodes.lua")


--[[
===========================================================================
	We assume that instructions are unsigned numbers.
	All instructions have an opcode in the first 6 bits.
	Instructions can have the following fields:
				'A' : 8 bits
				'B' : 9 bits
				'C' : 9 bits
				'Bx' : 18 bits ('B' and 'C' together)
				'sBx' : signed Bx

	A signed argument is represented in excess K; that is, the number
	value is the unsigned value minus K. K is exactly the maximum value
	for that argument (so that -max is represented by 0, and +max is
	represented by 2*max), which is half the maximum for the corresponding
	unsigned argument.
===========================================================================
--]]

luaP.OpMode = { iABC = 0, iABx = 1, iAsBx = 2 }  -- basic instruction format

------------------------------------------------------------------------
-- size and position of opcode arguments.
-- * WARNING size and position is hard-coded elsewhere in this script
------------------------------------------------------------------------
luaP.SIZE_C  = 9
luaP.SIZE_B  = 9
luaP.SIZE_Bx = luaP.SIZE_C + luaP.SIZE_B
luaP.SIZE_A  = 8

luaP.SIZE_OP = 6

luaP.POS_OP = 0
luaP.POS_A  = luaP.POS_OP + luaP.SIZE_OP
luaP.POS_C  = luaP.POS_A + luaP.SIZE_A
luaP.POS_B  = luaP.POS_C + luaP.SIZE_C
luaP.POS_Bx = luaP.POS_C

------------------------------------------------------------------------
-- limits for opcode arguments.
-- we use (signed) int to manipulate most arguments,
-- so they must fit in LUAI_BITSINT-1 bits (-1 for sign)
------------------------------------------------------------------------
-- removed "#if SIZE_Bx < BITS_INT-1" test, assume this script is
-- running on a Lua VM with double or int as LUA_NUMBER

luaP.MAXARG_Bx  = math.ldexp(1, luaP.SIZE_Bx) - 1
luaP.MAXARG_sBx = math.floor(luaP.MAXARG_Bx / 2)  -- 'sBx' is signed

luaP.MAXARG_A = math.ldexp(1, luaP.SIZE_A) - 1
luaP.MAXARG_B = math.ldexp(1, luaP.SIZE_B) - 1
luaP.MAXARG_C = math.ldexp(1, luaP.SIZE_C) - 1

-- creates a mask with 'n' 1 bits at position 'p'
-- MASK1(n,p) deleted, not required
-- creates a mask with 'n' 0 bits at position 'p'
-- MASK0(n,p) deleted, not required

--[[--------------------------------------------------------------------
	Visual representation for reference:

	 31    |    |     |            0      bit position
		+-----+-----+-----+----------+
		|  B  |  C  |  A  |  Opcode  |      iABC format
		+-----+-----+-----+----------+
		-  9  -  9  -  8  -    6     -      field sizes
		+-----+-----+-----+----------+
		|   [s]Bx   |  A  |  Opcode  |      iABx | iAsBx format
		+-----+-----+-----+----------+

----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- the following macros help to manipulate instructions
-- * changed to a table object representation, very clean compared to
--   the [nightmare] alternatives of using a number or a string
-- * Bx is a separate element from B and C, since there is never a need
--   to split Bx in the parser or code generator
------------------------------------------------------------------------

-- these accept or return opcodes in the form of string names
function luaP:GET_OPCODE(i) return self.ROpCode[i.OP] end
function luaP:SET_OPCODE(i, o) i.OP = self.OpCode[o] end

function luaP:GETARG_A(i) return i.A end
function luaP:SETARG_A(i, u) i.A = u end

function luaP:GETARG_B(i) return i.B end
function luaP:SETARG_B(i, b) i.B = b end

function luaP:GETARG_C(i) return i.C end
function luaP:SETARG_C(i, b) i.C = b end

function luaP:GETARG_Bx(i) return i.Bx end
function luaP:SETARG_Bx(i, b) i.Bx = b end

function luaP:GETARG_sBx(i) return i.Bx - self.MAXARG_sBx end
function luaP:SETARG_sBx(i, b) i.Bx = b + self.MAXARG_sBx end

function luaP:CREATE_ABC(o,a,b,c)
	return {OP = self.OpCode[o], A = a, B = b, C = c}
end

function luaP:CREATE_ABx(o,a,bc)
	return {OP = self.OpCode[o], A = a, Bx = bc}
end

------------------------------------------------------------------------
-- create an instruction from a number (for OP_SETLIST)
------------------------------------------------------------------------
function luaP:CREATE_Inst(c)
	local o = c % 64
	c = (c - o) / 64
	local a = c % 256
	c = (c - a) / 256
	return self:CREATE_ABx(o, a, c)
end

------------------------------------------------------------------------
-- returns a 4-char string little-endian encoded form of an instruction
------------------------------------------------------------------------
function luaP:Instruction(i)
	if i.Bx then
		-- change to OP/A/B/C format
		i.C = i.Bx % 512
		i.B = (i.Bx - i.C) / 512
	end
	local I = i.A * 64 + i.OP
	local c0 = I % 256
	I = i.C * 64 + (I - c0) / 256  -- 6 bits of A left
	local c1 = I % 256
	I = i.B * 128 + (I - c1) / 256  -- 7 bits of C left
	local c2 = I % 256
	local c3 = (I - c2) / 256
	return string.char(c0, c1, c2, c3)
end

------------------------------------------------------------------------
-- decodes a 4-char little-endian string into an instruction struct
------------------------------------------------------------------------
function luaP:DecodeInst(x)
	local byte = string.byte
	local i = {}
	local I = byte(x, 1)
	local op = I % 64
	i.OP = op
	I = byte(x, 2) * 4 + (I - op) / 64  -- 2 bits of c0 left
	local a = I % 256
	i.A = a
	I = byte(x, 3) * 4 + (I - a) / 256  -- 2 bits of c1 left
	local c = I % 512
	i.C = c
	i.B = byte(x, 4) * 2 + (I - c) / 512 -- 1 bits of c2 left
	local opmode = self.OpMode[tonumber(string.sub(self.opmodes[op + 1], 7, 7))]
	if opmode ~= "iABC" then
		i.Bx = i.B * 512 + i.C
	end
	return i
end

------------------------------------------------------------------------
-- Macros to operate RK indices
-- * these use arithmetic instead of bit ops
------------------------------------------------------------------------

-- this bit 1 means constant (0 means register)
luaP.BITRK = math.ldexp(1, luaP.SIZE_B - 1)

-- test whether value is a constant
function luaP:ISK(x) return x >= self.BITRK end

-- gets the index of the constant
function luaP:INDEXK(r) return x - self.BITRK end

luaP.MAXINDEXRK = luaP.BITRK - 1

-- code a constant index as a RK value
function luaP:RKASK(x) return x + self.BITRK end

------------------------------------------------------------------------
-- invalid register that fits in 8 bits
------------------------------------------------------------------------
luaP.NO_REG = luaP.MAXARG_A

------------------------------------------------------------------------
-- R(x) - register
-- Kst(x) - constant (in constant table)
-- RK(x) == if ISK(x) then Kst(INDEXK(x)) else R(x)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- grep "ORDER OP" if you change these enums
------------------------------------------------------------------------

--[[--------------------------------------------------------------------
Lua virtual machine opcodes (enum OpCode):
------------------------------------------------------------------------
name          args    description
------------------------------------------------------------------------
OP_MOVE       A B     R(A) := R(B)
OP_LOADK      A Bx    R(A) := Kst(Bx)
OP_LOADBOOL   A B C   R(A) := (Bool)B; if (C) pc++
OP_LOADNIL    A B     R(A) := ... := R(B) := nil
OP_GETUPVAL   A B     R(A) := UpValue[B]
OP_GETGLOBAL  A Bx    R(A) := Gbl[Kst(Bx)]
OP_GETTABLE   A B C   R(A) := R(B)[RK(C)]
OP_SETGLOBAL  A Bx    Gbl[Kst(Bx)] := R(A)
OP_SETUPVAL   A B     UpValue[B] := R(A)
OP_SETTABLE   A B C   R(A)[RK(B)] := RK(C)
OP_NEWTABLE   A B C   R(A) := {} (size = B,C)
OP_SELF       A B C   R(A+1) := R(B); R(A) := R(B)[RK(C)]
OP_ADD        A B C   R(A) := RK(B) + RK(C)
OP_SUB        A B C   R(A) := RK(B) - RK(C)
OP_MUL        A B C   R(A) := RK(B) * RK(C)
OP_DIV        A B C   R(A) := RK(B) / RK(C)
OP_MOD        A B C   R(A) := RK(B) % RK(C)
OP_POW        A B C   R(A) := RK(B) ^ RK(C)
OP_UNM        A B     R(A) := -R(B)
OP_NOT        A B     R(A) := not R(B)
OP_LEN        A B     R(A) := length of R(B)
OP_CONCAT     A B C   R(A) := R(B).. ... ..R(C)
OP_JMP        sBx     pc+=sBx
OP_EQ         A B C   if ((RK(B) == RK(C)) ~= A) then pc++
OP_LT         A B C   if ((RK(B) <  RK(C)) ~= A) then pc++
OP_LE         A B C   if ((RK(B) <= RK(C)) ~= A) then pc++
OP_TEST       A C     if not (R(A) <=> C) then pc++
OP_TESTSET    A B C   if (R(B) <=> C) then R(A) := R(B) else pc++
OP_CALL       A B C   R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1))
OP_TAILCALL   A B C   return R(A)(R(A+1), ... ,R(A+B-1))
OP_RETURN     A B     return R(A), ... ,R(A+B-2)  (see note)
OP_FORLOOP    A sBx   R(A)+=R(A+2);
											if R(A) <?= R(A+1) then { pc+=sBx; R(A+3)=R(A) }
OP_FORPREP    A sBx   R(A)-=R(A+2); pc+=sBx
OP_TFORLOOP   A C     R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));
											if R(A+3) ~= nil then R(A+2)=R(A+3) else pc++
OP_SETLIST    A B C   R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B
OP_CLOSE      A       close all variables in the stack up to (>=) R(A)
OP_CLOSURE    A Bx    R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))
OP_VARARG     A B     R(A), R(A+1), ..., R(A+B-1) = vararg
----------------------------------------------------------------------]]

luaP.opnames = {}  -- opcode names
luaP.OpCode = {}   -- lookup name -> number
luaP.ROpCode = {}  -- lookup number -> name

------------------------------------------------------------------------
-- ORDER OP
------------------------------------------------------------------------
local i = 0
for v in string.gmatch([[
MOVE LOADK LOADBOOL LOADNIL GETUPVAL
GETGLOBAL GETTABLE SETGLOBAL SETUPVAL SETTABLE
NEWTABLE SELF ADD SUB MUL
DIV MOD POW UNM NOT
LEN CONCAT JMP EQ LT
LE TEST TESTSET CALL TAILCALL
RETURN FORLOOP FORPREP TFORLOOP SETLIST
CLOSE CLOSURE VARARG
]], "%S+") do
	local n = "OP_"..v
	luaP.opnames[i] = v
	luaP.OpCode[n] = i
	luaP.ROpCode[i] = n
	i = i + 1
end
luaP.NUM_OPCODES = i

--[[
===========================================================================
	Notes:
	(*) In OP_CALL, if (B == 0) then B = top. C is the number of returns - 1,
			and can be 0: OP_CALL then sets 'top' to last_result+1, so
			next open instruction (OP_CALL, OP_RETURN, OP_SETLIST) may use 'top'.
	(*) In OP_VARARG, if (B == 0) then use actual number of varargs and
			set top (like in OP_CALL with C == 0).
	(*) In OP_RETURN, if (B == 0) then return up to 'top'
	(*) In OP_SETLIST, if (B == 0) then B = 'top';
			if (C == 0) then next 'instruction' is real C
	(*) For comparisons, A specifies what condition the test should accept
			(true or false).
	(*) All 'skips' (pc++) assume that next instruction is a jump
===========================================================================
--]]

--[[--------------------------------------------------------------------
	masks for instruction properties. The format is:
	bits 0-1: op mode
	bits 2-3: C arg mode
	bits 4-5: B arg mode
	bit 6: instruction set register A
	bit 7: operator is a test

	for OpArgMask:
	OpArgN - argument is not used
	OpArgU - argument is used
	OpArgR - argument is a register or a jump offset
	OpArgK - argument is a constant or register/constant
----------------------------------------------------------------------]]

-- was enum OpArgMask
luaP.OpArgMask = { OpArgN = 0, OpArgU = 1, OpArgR = 2, OpArgK = 3 }

------------------------------------------------------------------------
-- e.g. to compare with symbols, luaP:getOpMode(...) == luaP.OpCode.iABC
-- * accepts opcode parameter as strings, e.g. "OP_MOVE"
------------------------------------------------------------------------

function luaP:getOpMode(m)
	return self.opmodes[self.OpCode[m]] % 4
end

function luaP:getBMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 16) % 4
end

function luaP:getCMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 4) % 4
end

function luaP:testAMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 64) % 2
end

function luaP:testTMode(m)
	return math.floor(self.opmodes[self.OpCode[m]] / 128)
end

-- luaP_opnames[] is set above, as the luaP.opnames table

-- number of list items to accumulate before a SETLIST instruction
luaP.LFIELDS_PER_FLUSH = 50

------------------------------------------------------------------------
-- build instruction properties array
-- * deliberately coded to look like the C equivalent
------------------------------------------------------------------------
local function opmode(t, a, b, c, m)
	local luaP = luaP
	return t * 128 + a * 64 +
		luaP.OpArgMask[b] * 16 + luaP.OpArgMask[c] * 4 + luaP.OpMode[m]
end

-- ORDER OP
luaP.opmodes = {
	-- T A B C mode opcode
	opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_LOADK
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_LOADBOOL
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LOADNIL
	opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_GETUPVAL
	opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_GETGLOBAL
	opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_GETTABLE
	opmode(0, 0, "OpArgK", "OpArgN", "iABx"),     -- OP_SETGLOBAL
	opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_SETUPVAL
	opmode(0, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_SETTABLE
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_NEWTABLE
	opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_SELF
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_ADD
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_SUB
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MUL
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_DIV
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MOD
	opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_POW
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_UNM
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_NOT
	opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LEN
	opmode(0, 1, "OpArgR", "OpArgR", "iABC"),     -- OP_CONCAT
	opmode(0, 0, "OpArgR", "OpArgN", "iAsBx"),    -- OP_JMP
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_EQ
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LT
	opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LE
	opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TEST
	opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TESTSET
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_CALL
	opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_TAILCALL
	opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_RETURN
	opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORLOOP
	opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORPREP
	opmode(1, 0, "OpArgN", "OpArgU", "iABC"),     -- OP_TFORLOOP
	opmode(0, 0, "OpArgU", "OpArgU", "iABC"),     -- OP_SETLIST
	opmode(0, 0, "OpArgN", "OpArgN", "iABC"),     -- OP_CLOSE
	opmode(0, 1, "OpArgU", "OpArgN", "iABx"),     -- OP_CLOSURE
	opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_VARARG
}
-- an awkward way to set a zero-indexed table...
luaP.opmodes[0] =
	opmode(0, 1, "OpArgR", "OpArgN", "iABC")      -- OP_MOVE



--dofile("ldump.lua")

--requires luaP

-- mark for precompiled code ('<esc>Lua') (from lua.h)
luaU.LUA_SIGNATURE = "\27Lua"

-- constants used by dumper (from lua.h)
luaU.LUA_TNUMBER  = 3
luaU.LUA_TSTRING  = 4
luaU.LUA_TNIL     = 0
luaU.LUA_TBOOLEAN = 1
luaU.LUA_TNONE    = -1

-- constants for header of binary files (from lundump.h)
luaU.LUAC_VERSION    = 0x51     -- this is Lua 5.1
luaU.LUAC_FORMAT     = 0        -- this is the official format
luaU.LUAC_HEADERSIZE = 12       -- size of header of binary files

--[[--------------------------------------------------------------------
-- Additional functions to handle chunk writing
-- * to use make_setS and make_setF, see test_ldump.lua elsewhere
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- create a chunk writer that writes to a string
-- * returns the writer function and a table containing the string
-- * to get the final result, look in buff.data
------------------------------------------------------------------------
function luaU:make_setS()
	local buff = {}
	buff.data = ""
	local writer =
		function(s, buff)  -- chunk writer
		if not s then return 0 end
		buff.data = buff.data..s
		-- print (#buff.data, #s, string.byte(s,1,1), s)
		return 0
	end
	return writer, buff
end

------------------------------------------------------------------------
-- create a chunk writer that writes to a file
-- * returns the writer function and a table containing the file handle
-- * if a nil is passed, then writer should close the open file
------------------------------------------------------------------------
function luaU:make_setF(filename)
	local buff = {}
	buff.h = io.open(filename, "wb")
	if not buff.h then return nil end
	local writer =
		function(s, buff)  -- chunk writer
		if not buff.h then return 0 end
		if not s then
			if buff.h:close() then return 0 end
		else
			if buff.h:write(s) then return 0 end
		end
		return 1
	end
	return writer, buff
end

------------------------------------------------------------------------
-- works like the lobject.h version except that TObject used in these
-- scripts only has a 'value' field, no 'tt' field (native types used)
------------------------------------------------------------------------
function luaU:ttype(o)
	local tt = type(o.value)
	if tt == "number" then return self.LUA_TNUMBER
	elseif tt == "string" then return self.LUA_TSTRING
	elseif tt == "nil" then return self.LUA_TNIL
	elseif tt == "boolean" then return self.LUA_TBOOLEAN
	else
		return self.LUA_TNONE  -- the rest should not appear
	end
end

-----------------------------------------------------------------------
-- converts a IEEE754 double number to an 8-byte little-endian string
-- * luaU:from_double() and luaU:from_int() are adapted from ChunkBake
-- * supports +/- Infinity, but not denormals or NaNs
-----------------------------------------------------------------------
function luaU:from_double(x)
	local function grab_byte(v)
		local c = v % 256
		return (v - c) / 256, string.char(c)
	end
	local sign = 0
	if x < 0 then sign = 1; x = -x end
	local mantissa, exponent = math.frexp(x)
	if x == 0 then -- zero
		mantissa, exponent = 0, 0
	elseif x == 1/0 then
		mantissa, exponent = 0, 2047
	else
		mantissa = (mantissa * 2 - 1) * math.ldexp(0.5, 53)
		exponent = exponent + 1022
	end
	local v, byte = "" -- convert to bytes
	x = math.floor(mantissa)
	for i = 1,6 do
		x, byte = grab_byte(x); v = v..byte -- 47:0
	end
	x, byte = grab_byte(exponent * 16 + x); v = v..byte -- 55:48
	x, byte = grab_byte(sign * 128 + x); v = v..byte -- 63:56
	return v
end

-----------------------------------------------------------------------
-- converts a number to a little-endian 32-bit integer string
-- * input value assumed to not overflow, can be signed/unsigned
-----------------------------------------------------------------------
function luaU:from_int(x)
	local v = ""
	x = math.floor(x)
	if x < 0 then x = 4294967296 + x end  -- ULONG_MAX+1
	for i = 1, 4 do
		local c = x % 256
		v = v..string.char(c); x = math.floor(x / 256)
	end
	return v
end

--[[--------------------------------------------------------------------
-- Functions to make a binary chunk
-- * many functions have the size parameter removed, since output is
--   in the form of a string and some sizes are implicit or hard-coded
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct DumpState:
--   L  -- lua_State (not used in this script)
--   writer  -- lua_Writer (chunk writer function)
--   data  -- void* (chunk writer context or data already written)
--   strip  -- if true, don't write any debug information
--   status  -- if non-zero, an error has occured
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- dumps a block of bytes
-- * lua_unlock(D.L), lua_lock(D.L) unused
------------------------------------------------------------------------
function luaU:DumpBlock(b, D)
	if D.status == 0 then
		-- lua_unlock(D->L);
		D.status = D.write(b, D.data)
		-- lua_lock(D->L);
	end
end

------------------------------------------------------------------------
-- dumps a char
------------------------------------------------------------------------
function luaU:DumpChar(y, D)
	self:DumpBlock(string.char(y), D)
end

------------------------------------------------------------------------
-- dumps a 32-bit signed or unsigned integer (for int) (hard-coded)
------------------------------------------------------------------------
function luaU:DumpInt(x, D)
	self:DumpBlock(self:from_int(x), D)
end

------------------------------------------------------------------------
-- dumps a 32-bit signed or unsigned integer (for int) (hard-coded)
------------------------------------------------------------------------
function luaU:DumpSizeT(x, D)
	self:DumpBlock(self:from_int(x), D)
	if size_size_t == 8 then
		self:DumpBlock(self:from_int(0), D)
	end
end

------------------------------------------------------------------------
-- dumps a lua_Number (hard-coded as a double)
------------------------------------------------------------------------
function luaU:DumpNumber(x, D)
	self:DumpBlock(self:from_double(x), D)
end

------------------------------------------------------------------------
-- dumps a Lua string (size type is hard-coded)
------------------------------------------------------------------------
function luaU:DumpString(s, D)
	if s == nil then
		self:DumpSizeT(0, D)
	else
		s = s.."\0"  -- include trailing '\0'
		self:DumpSizeT(#s, D)
		self:DumpBlock(s, D)
	end
end

------------------------------------------------------------------------
-- dumps instruction block from function prototype
------------------------------------------------------------------------
function luaU:DumpCode(f, D)
	local n = f.sizecode
	--was DumpVector
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpBlock(luaP:Instruction(f.code[i]), D)
	end
end

------------------------------------------------------------------------
-- dump constant pool from function prototype
-- * bvalue(o), nvalue(o) and rawtsvalue(o) macros removed
------------------------------------------------------------------------
function luaU:DumpConstants(f, D)
	local n = f.sizek
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		local o = f.k[i]  -- TValue
		local tt = self:ttype(o)
		self:DumpChar(tt, D)
		if tt == self.LUA_TNIL then
		elseif tt == self.LUA_TBOOLEAN then
			self:DumpChar(o.value and 1 or 0, D)
		elseif tt == self.LUA_TNUMBER then
			self:DumpNumber(o.value, D)
		elseif tt == self.LUA_TSTRING then
			self:DumpString(o.value, D)
		else
			--lua_assert(0)  -- cannot happen
		end
	end
	n = f.sizep
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpFunction(f.p[i], f.source, D)
	end
end

------------------------------------------------------------------------
-- dump debug information
------------------------------------------------------------------------
function luaU:DumpDebug(f, D)
	local n
	n = D.strip and 0 or f.sizelineinfo           -- dump line information
	--was DumpVector
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpInt(f.lineinfo[i], D)
	end
	n = D.strip and 0 or f.sizelocvars            -- dump local information
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpString(f.locvars[i].varname, D)
		self:DumpInt(f.locvars[i].startpc, D)
		self:DumpInt(f.locvars[i].endpc, D)
	end
	n = D.strip and 0 or f.sizeupvalues           -- dump upvalue information
	self:DumpInt(n, D)
	for i = 0, n - 1 do
		self:DumpString(f.upvalues[i], D)
	end
end

------------------------------------------------------------------------
-- dump child function prototypes from function prototype
------------------------------------------------------------------------
function luaU:DumpFunction(f, p, D)
	local source = f.source
	if source == p or D.strip then source = nil end
	self:DumpString(source, D)
	self:DumpInt(f.lineDefined, D)
	self:DumpInt(f.lastlinedefined, D)
	self:DumpChar(f.nups, D)
	self:DumpChar(f.numparams, D)
	self:DumpChar(f.is_vararg, D)
	self:DumpChar(f.maxstacksize, D)
	self:DumpCode(f, D)
	self:DumpConstants(f, D)
	self:DumpDebug(f, D)
end

------------------------------------------------------------------------
-- dump Lua header section (some sizes hard-coded)
------------------------------------------------------------------------
function luaU:DumpHeader(D)
	local h = self:header()
	assert(#h == self.LUAC_HEADERSIZE) -- fixed buffer now an assert
	self:DumpBlock(h, D)
end

------------------------------------------------------------------------
-- make header (from lundump.c)
-- returns the header string
------------------------------------------------------------------------
function luaU:header()
	local x = 1
	return self.LUA_SIGNATURE..
		string.char(
			self.LUAC_VERSION,
			self.LUAC_FORMAT,
			x,                    -- endianness (1=little)
			4,                    -- sizeof(int)
			size_size_t,                    -- sizeof(size_t)
			4,                    -- sizeof(Instruction)
			8,                    -- sizeof(lua_Number)
			0)                    -- is lua_Number integral?
end

------------------------------------------------------------------------
-- dump Lua function as precompiled chunk
-- (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)
-- * w, data are created from make_setS, make_setF
------------------------------------------------------------------------
function luaU:dump(L, f, w, data, strip)
	local D = {}  -- DumpState
	D.L = L
	D.write = w
	D.data = data
	D.strip = strip
	D.status = 0
	self:DumpHeader(D)
	self:DumpFunction(f, nil, D)
	-- added: for a chunk writer writing to a file, this final call with
	-- nil data is to indicate to the writer to close the file
	D.write(nil, D.data)
	return D.status
end




--dofile("lcode.lua")

------------------------------------------------------------------------
-- constants used by code generator
------------------------------------------------------------------------
-- maximum stack for a Lua function
luaK.MAXSTACK = 250  -- (from llimits.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- emulation of TValue macros (these are from lobject.h)
-- * TValue is a table since lcode passes references around
-- * tt member field removed, using Lua's type() instead
-- * for setsvalue, sethvalue, parameter L (deleted here) in lobject.h
--   is used in an assert for testing, see checkliveness(g,obj)
------------------------------------------------------------------------
function luaK:ttisnumber(o)
	if o then return type(o.value) == "number" else return false end
end
function luaK:nvalue(o) return o.value end
function luaK:setnilvalue(o) o.value = nil end
function luaK:setsvalue(o, x) o.value = x end
luaK.setnvalue = luaK.setsvalue
luaK.sethvalue = luaK.setsvalue
luaK.setbvalue = luaK.setsvalue

------------------------------------------------------------------------
-- The luai_num* macros define the primitive operations over numbers.
-- * this is not the entire set of primitive operations from luaconf.h
-- * used in luaK:constfolding()
------------------------------------------------------------------------
function luaK:numadd(a, b) return a + b end
function luaK:numsub(a, b) return a - b end
function luaK:nummul(a, b) return a * b end
function luaK:numdiv(a, b) return a / b end
function luaK:nummod(a, b) return a % b end
-- ((a) - floor((a)/(b))*(b)) /* actual, for reference */
function luaK:numpow(a, b) return a ^ b end
function luaK:numunm(a) return -a end
function luaK:numisnan(a) return not a == a end
-- a NaN cannot equal another NaN

--[[--------------------------------------------------------------------
-- code generator functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- Marks the end of a patch list. It is an invalid value both as an absolute
-- address, and as a list link (would link an element to itself).
------------------------------------------------------------------------
luaK.NO_JUMP = -1

------------------------------------------------------------------------
-- grep "ORDER OPR" if you change these enums
------------------------------------------------------------------------
luaK.BinOpr = {
	OPR_ADD = 0, OPR_SUB = 1, OPR_MUL = 2, OPR_DIV = 3, OPR_MOD = 4, OPR_POW = 5,
	OPR_CONCAT = 6,
	OPR_NE = 7, OPR_EQ = 8,
	OPR_LT = 9, OPR_LE = 10, OPR_GT = 11, OPR_GE = 12,
	OPR_AND = 13, OPR_OR = 14,
	OPR_NOBINOPR = 15,
}

-- * UnOpr is used by luaK:prefix's op argument, but not directly used
--   because the function receives the symbols as strings, e.g. "OPR_NOT"
luaK.UnOpr = {
	OPR_MINUS = 0, OPR_NOT = 1, OPR_LEN = 2, OPR_NOUNOPR = 3
}

------------------------------------------------------------------------
-- returns the instruction object for given e (expdesc), was a macro
------------------------------------------------------------------------
function luaK:getcode(fs, e)
	return fs.f.code[e.info]
end

------------------------------------------------------------------------
-- codes an instruction with a signed Bx (sBx) field, was a macro
-- * used in luaK:jump(), (lparser) luaY:forbody()
------------------------------------------------------------------------
function luaK:codeAsBx(fs, o, A, sBx)
	return self:codeABx(fs, o, A, sBx + luaP.MAXARG_sBx)
end

------------------------------------------------------------------------
-- set the expdesc e instruction for multiple returns, was a macro
------------------------------------------------------------------------
function luaK:setmultret(fs, e)
	self:setreturns(fs, e, luaY.LUA_MULTRET)
end

------------------------------------------------------------------------
-- there is a jump if patch lists are not identical, was a macro
-- * used in luaK:exp2reg(), luaK:exp2anyreg(), luaK:exp2val()
------------------------------------------------------------------------
function luaK:hasjumps(e)
	return e.t ~= e.f
end

------------------------------------------------------------------------
-- true if the expression is a constant number (for constant folding)
-- * used in constfolding(), infix()
------------------------------------------------------------------------
function luaK:isnumeral(e)
	return e.k == "VKNUM" and e.t == self.NO_JUMP and e.f == self.NO_JUMP
end

------------------------------------------------------------------------
-- codes loading of nil, optimization done if consecutive locations
-- * used in luaK:discharge2reg(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:_nil(fs, from, n)
	if fs.pc > fs.lasttarget then  -- no jumps to current position?
		if fs.pc == 0 then  -- function start?
			if from >= fs.nactvar then
				return  -- positions are already clean
			end
		else
			local previous = fs.f.code[fs.pc - 1]
			if luaP:GET_OPCODE(previous) == "OP_LOADNIL" then
				local pfrom = luaP:GETARG_A(previous)
				local pto = luaP:GETARG_B(previous)
				if pfrom <= from and from <= pto + 1 then  -- can connect both?
					if from + n - 1 > pto then
						luaP:SETARG_B(previous, from + n - 1)
					end
					return
				end
			end
		end
	end
	self:codeABC(fs, "OP_LOADNIL", from, from + n - 1, 0)  -- else no optimization
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:jump(fs)
	local jpc = fs.jpc  -- save list of jumps to here
	fs.jpc = self.NO_JUMP
	local j = self:codeAsBx(fs, "OP_JMP", 0, self.NO_JUMP)
	j = self:concat(fs, j, jpc)  -- keep them on hold
	return j
end

------------------------------------------------------------------------
-- codes a RETURN instruction
-- * used in luaY:close_func(), luaY:retstat()
------------------------------------------------------------------------
function luaK:ret(fs, first, nret)
	self:codeABC(fs, "OP_RETURN", first, nret + 1, 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codecomp()
------------------------------------------------------------------------
function luaK:condjump(fs, op, A, B, C)
	self:codeABC(fs, op, A, B, C)
	return self:jump(fs)
end

------------------------------------------------------------------------
--
-- * used in luaK:patchlistaux(), luaK:concat()
------------------------------------------------------------------------
function luaK:fixjump(fs, pc, dest)
	local jmp = fs.f.code[pc]
	local offset = dest - (pc + 1)
	lua_assert(dest ~= self.NO_JUMP)
	if math.abs(offset) > luaP.MAXARG_sBx then
		luaX:syntaxerror(fs.ls, "control structure too long")
	end
	luaP:SETARG_sBx(jmp, offset)
end

------------------------------------------------------------------------
-- returns current 'pc' and marks it as a jump target (to avoid wrong
-- optimizations with consecutive instructions not in the same basic block).
-- * used in multiple locations
-- * fs.lasttarget tested only by luaK:_nil() when optimizing OP_LOADNIL
------------------------------------------------------------------------
function luaK:getlabel(fs)
	fs.lasttarget = fs.pc
	return fs.pc
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:removevalues(), luaK:patchlistaux(),
--   luaK:concat()
------------------------------------------------------------------------
function luaK:getjump(fs, pc)
	local offset = luaP:GETARG_sBx(fs.f.code[pc])
	if offset == self.NO_JUMP then  -- point to itself represents end of list
		return self.NO_JUMP  -- end of list
	else
		return (pc + 1) + offset  -- turn offset into absolute position
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:patchtestreg(), luaK:invertjump()
------------------------------------------------------------------------
function luaK:getjumpcontrol(fs, pc)
	local pi = fs.f.code[pc]
	local ppi = fs.f.code[pc - 1]
	if pc >= 1 and luaP:testTMode(luaP:GET_OPCODE(ppi)) ~= 0 then
		return ppi
	else
		return pi
	end
end

------------------------------------------------------------------------
-- check whether list has any jump that do not produce a value
-- (or produce an inverted value)
-- * return value changed to boolean
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:need_value(fs, list)
	while list ~= self.NO_JUMP do
		local i = self:getjumpcontrol(fs, list)
		if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then return true end
		list = self:getjump(fs, list)
	end
	return false  -- not found
end

------------------------------------------------------------------------
--
-- * used in luaK:removevalues(), luaK:patchlistaux()
------------------------------------------------------------------------
function luaK:patchtestreg(fs, node, reg)
	local i = self:getjumpcontrol(fs, node)
	if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then
		return false  -- cannot patch other instructions
	end
	if reg ~= luaP.NO_REG and reg ~= luaP:GETARG_B(i) then
		luaP:SETARG_A(i, reg)
	else  -- no register to put value or register already has the value
		-- due to use of a table as i, i cannot be replaced by another table
		-- so the following is required; there is no change to ARG_C
		luaP:SET_OPCODE(i, "OP_TEST")
		local b = luaP:GETARG_B(i)
		luaP:SETARG_A(i, b)
		luaP:SETARG_B(i, 0)
		-- *i = CREATE_ABC(OP_TEST, GETARG_B(*i), 0, GETARG_C(*i)); /* C */
	end
	return true
end

------------------------------------------------------------------------
--
-- * used only in luaK:codenot()
------------------------------------------------------------------------
function luaK:removevalues(fs, list)
	while list ~= self.NO_JUMP do
		self:patchtestreg(fs, list, luaP.NO_REG)
		list = self:getjump(fs, list)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargejpc(), luaK:patchlist(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:patchlistaux(fs, list, vtarget, reg, dtarget)
	while list ~= self.NO_JUMP do
		local _next = self:getjump(fs, list)
		if self:patchtestreg(fs, list, reg) then
			self:fixjump(fs, list, vtarget)
		else
			self:fixjump(fs, list, dtarget)  -- jump to default target
		end
		list = _next
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:code()
------------------------------------------------------------------------
function luaK:dischargejpc(fs)
	self:patchlistaux(fs, fs.jpc, fs.pc, luaP.NO_REG, fs.pc)
	fs.jpc = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:whilestat(), luaY:repeatstat(), luaY:forbody()
------------------------------------------------------------------------
function luaK:patchlist(fs, list, target)
	if target == fs.pc then
		self:patchtohere(fs, list)
	else
		lua_assert(target < fs.pc)
		self:patchlistaux(fs, list, target, luaP.NO_REG, target)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:patchtohere(fs, list)
	self:getlabel(fs)
	fs.jpc = self:concat(fs, fs.jpc, list)
end

------------------------------------------------------------------------
-- * l1 was a pointer, now l1 is returned and callee assigns the value
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:concat(fs, l1, l2)
	if l2 == self.NO_JUMP then return l1
	elseif l1 == self.NO_JUMP then
		return l2
	else
		local list = l1
		local _next = self:getjump(fs, list)
		while _next ~= self.NO_JUMP do  -- find last element
			list = _next
			_next = self:getjump(fs, list)
		end
		self:fixjump(fs, list, l2)
	end
	return l1
end

------------------------------------------------------------------------
--
-- * used in luaK:reserveregs(), (lparser) luaY:forlist()
------------------------------------------------------------------------
function luaK:checkstack(fs, n)
	local newstack = fs.freereg + n
	if newstack > fs.f.maxstacksize then
		if newstack >= self.MAXSTACK then
			luaX:syntaxerror(fs.ls, "function or expression too complex")
		end
		fs.f.maxstacksize = newstack
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:reserveregs(fs, n)
	self:checkstack(fs, n)
	fs.freereg = fs.freereg + n
end

------------------------------------------------------------------------
--
-- * used in luaK:freeexp(), luaK:dischargevars()
------------------------------------------------------------------------
function luaK:freereg(fs, reg)
	if not luaP:ISK(reg) and reg >= fs.nactvar then
		fs.freereg = fs.freereg - 1
		lua_assert(reg == fs.freereg)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:freeexp(fs, e)
	if e.k == "VNONRELOC" then
		self:freereg(fs, e.info)
	end
end

------------------------------------------------------------------------
-- * TODO NOTE implementation is not 100% correct, since the assert fails
-- * luaH_set, setobj deleted; direct table access used instead
-- * used in luaK:stringK(), luaK:numberK(), luaK:boolK(), luaK:nilK()
------------------------------------------------------------------------
function luaK:addk(fs, k, v)
	local L = fs.L
	local idx = fs.h[k.value]
	--TValue *idx = luaH_set(L, fs->h, k); /* C */
	local f = fs.f
	if self:ttisnumber(idx) then
		--TODO this assert currently FAILS (last tested for 5.0.2)
		--lua_assert(fs.f.k[self:nvalue(idx)] == v)
		--lua_assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v)); /* C */
		return self:nvalue(idx)
	else -- constant not found; create a new entry
		idx = {}
		self:setnvalue(idx, fs.nk)
		fs.h[k.value] = idx
		-- setnvalue(idx, cast_num(fs->nk)); /* C */
		luaY:growvector(L, f.k, fs.nk, f.sizek, nil,
			luaP.MAXARG_Bx, "constant table overflow")
		-- loop to initialize empty f.k positions not required
		f.k[fs.nk] = v
		-- setobj(L, &f->k[fs->nk], v); /* C */
		-- luaC_barrier(L, f, v); /* GC */
		local nk = fs.nk
		fs.nk = fs.nk + 1
		return nk
	end

end

------------------------------------------------------------------------
-- creates and sets a string object
-- * used in (lparser) luaY:codestring(), luaY:singlevar()
------------------------------------------------------------------------
function luaK:stringK(fs, s)
	local o = {}  -- TValue
	self:setsvalue(o, s)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a number object
-- * used in luaK:prefix() for negative (or negation of) numbers
-- * used in (lparser) luaY:simpleexp(), luaY:fornum()
------------------------------------------------------------------------
function luaK:numberK(fs, r)
	local o = {}  -- TValue
	self:setnvalue(o, r)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a boolean object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:boolK(fs, b)
	local o = {}  -- TValue
	self:setbvalue(o, b)
	return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a nil object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:nilK(fs)
	local k, v = {}, {}  -- TValue
	self:setnilvalue(v)
	-- cannot use nil as key; instead use table itself to represent nil
	self:sethvalue(k, fs.h)
	return self:addk(fs, k, v)
end

------------------------------------------------------------------------
--
-- * used in luaK:setmultret(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:setreturns(fs, e, nresults)
	if e.k == "VCALL" then  -- expression is an open function call?
		luaP:SETARG_C(self:getcode(fs, e), nresults + 1)
	elseif e.k == "VVARARG" then
		luaP:SETARG_B(self:getcode(fs, e), nresults + 1);
		luaP:SETARG_A(self:getcode(fs, e), fs.freereg);
		luaK:reserveregs(fs, 1)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargevars(), (lparser) luaY:assignment()
------------------------------------------------------------------------
function luaK:setoneret(fs, e)
	if e.k == "VCALL" then  -- expression is an open function call?
		e.k = "VNONRELOC"
		e.info = luaP:GETARG_A(self:getcode(fs, e))
	elseif e.k == "VVARARG" then
		luaP:SETARG_B(self:getcode(fs, e), 2)
		e.k = "VRELOCABLE"  -- can relocate its simple result
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:dischargevars(fs, e)
	local k = e.k
	if k == "VLOCAL" then
		e.k = "VNONRELOC"
	elseif k == "VUPVAL" then
		e.info = self:codeABC(fs, "OP_GETUPVAL", 0, e.info, 0)
		e.k = "VRELOCABLE"
	elseif k == "VGLOBAL" then
		e.info = self:codeABx(fs, "OP_GETGLOBAL", 0, e.info)
		e.k = "VRELOCABLE"
	elseif k == "VINDEXED" then
		self:freereg(fs, e.aux)
		self:freereg(fs, e.info)
		e.info = self:codeABC(fs, "OP_GETTABLE", 0, e.info, e.aux)
		e.k = "VRELOCABLE"
	elseif k == "VVARARG" or k == "VCALL" then
		self:setoneret(fs, e)
	else
		-- there is one value available (somewhere)
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:code_label(fs, A, b, jump)
	self:getlabel(fs)  -- those instructions may be jump targets
	return self:codeABC(fs, "OP_LOADBOOL", A, b, jump)
end

------------------------------------------------------------------------
--
-- * used in luaK:discharge2anyreg(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:discharge2reg(fs, e, reg)
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" then
		self:_nil(fs, reg, 1)
	elseif k == "VFALSE" or k == "VTRUE" then
		self:codeABC(fs, "OP_LOADBOOL", reg, (e.k == "VTRUE") and 1 or 0, 0)
	elseif k == "VK" then
		self:codeABx(fs, "OP_LOADK", reg, e.info)
	elseif k == "VKNUM" then
		self:codeABx(fs, "OP_LOADK", reg, self:numberK(fs, e.nval))
	elseif k == "VRELOCABLE" then
		local pc = self:getcode(fs, e)
		luaP:SETARG_A(pc, reg)
	elseif k == "VNONRELOC" then
		if reg ~= e.info then
			self:codeABC(fs, "OP_MOVE", reg, e.info, 0)
		end
	else
		lua_assert(e.k == "VVOID" or e.k == "VJMP")
		return  -- nothing to do...
	end
	e.info = reg
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codenot()
------------------------------------------------------------------------
function luaK:discharge2anyreg(fs, e)
	if e.k ~= "VNONRELOC" then
		self:reserveregs(fs, 1)
		self:discharge2reg(fs, e, fs.freereg - 1)
	end
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2nextreg(), luaK:exp2anyreg(), luaK:storevar()
------------------------------------------------------------------------
function luaK:exp2reg(fs, e, reg)
	self:discharge2reg(fs, e, reg)
	if e.k == "VJMP" then
		e.t = self:concat(fs, e.t, e.info)  -- put this jump in 't' list
	end
	if self:hasjumps(e) then
		local final  -- position after whole expression
		local p_f = self.NO_JUMP  -- position of an eventual LOAD false
		local p_t = self.NO_JUMP  -- position of an eventual LOAD true
		if self:need_value(fs, e.t) or self:need_value(fs, e.f) then
			local fj = (e.k == "VJMP") and self.NO_JUMP or self:jump(fs)
			p_f = self:code_label(fs, reg, 0, 1)
			p_t = self:code_label(fs, reg, 1, 0)
			self:patchtohere(fs, fj)
		end
		final = self:getlabel(fs)
		self:patchlistaux(fs, e.f, final, reg, p_f)
		self:patchlistaux(fs, e.t, final, reg, p_t)
	end
	e.f, e.t = self.NO_JUMP, self.NO_JUMP
	e.info = reg
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2nextreg(fs, e)
	self:dischargevars(fs, e)
	self:freeexp(fs, e)
	self:reserveregs(fs, 1)
	self:exp2reg(fs, e, fs.freereg - 1)
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2anyreg(fs, e)
	self:dischargevars(fs, e)
	if e.k == "VNONRELOC" then
		if not self:hasjumps(e) then  -- exp is already in a register
			return e.info
		end
		if e.info >= fs.nactvar then  -- reg. is not a local?
			self:exp2reg(fs, e, e.info)  -- put value on it
			return e.info
		end
	end
	self:exp2nextreg(fs, e)  -- default
	return e.info
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2RK(), luaK:prefix(), luaK:posfix()
-- * used in (lparser) luaY:yindex()
------------------------------------------------------------------------
function luaK:exp2val(fs, e)
	if self:hasjumps(e) then
		self:exp2anyreg(fs, e)
	else
		self:dischargevars(fs, e)
	end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2RK(fs, e)
	self:exp2val(fs, e)
	local k = e.k
	if k == "VKNUM" or k == "VTRUE" or k == "VFALSE" or k == "VNIL" then
		if fs.nk <= luaP.MAXINDEXRK then  -- constant fit in RK operand?
			-- converted from a 2-deep ternary operator expression
			if e.k == "VNIL" then
				e.info = self:nilK(fs)
			else
				e.info = (e.k == "VKNUM") and self:numberK(fs, e.nval)
					or self:boolK(fs, e.k == "VTRUE")
			end
			e.k = "VK"
			return luaP:RKASK(e.info)
		end
	elseif k == "VK" then
		if e.info <= luaP.MAXINDEXRK then  -- constant fit in argC?
			return luaP:RKASK(e.info)
		end
	else
		-- default
	end
	-- not a constant in the right range: put it in a register
	return self:exp2anyreg(fs, e)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:assignment(), luaY:localfunc(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:storevar(fs, var, ex)
	local k = var.k
	if k == "VLOCAL" then
		self:freeexp(fs, ex)
		self:exp2reg(fs, ex, var.info)
		return
	elseif k == "VUPVAL" then
		local e = self:exp2anyreg(fs, ex)
		self:codeABC(fs, "OP_SETUPVAL", e, var.info, 0)
	elseif k == "VGLOBAL" then
		local e = self:exp2anyreg(fs, ex)
		self:codeABx(fs, "OP_SETGLOBAL", e, var.info)
	elseif k == "VINDEXED" then
		local e = self:exp2RK(fs, ex)
		self:codeABC(fs, "OP_SETTABLE", var.info, var.aux, e)
	else
		lua_assert(0)  -- invalid var kind to store
	end
	self:freeexp(fs, ex)
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:primaryexp()
------------------------------------------------------------------------
function luaK:_self(fs, e, key)
	self:exp2anyreg(fs, e)
	self:freeexp(fs, e)
	local func = fs.freereg
	self:reserveregs(fs, 2)
	self:codeABC(fs, "OP_SELF", func, e.info, self:exp2RK(fs, key))
	self:freeexp(fs, key)
	e.info = func
	e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:codenot()
------------------------------------------------------------------------
function luaK:invertjump(fs, e)
	local pc = self:getjumpcontrol(fs, e.info)
	lua_assert(luaP:testTMode(luaP:GET_OPCODE(pc)) ~= 0 and
		luaP:GET_OPCODE(pc) ~= "OP_TESTSET" and
		luaP:GET_OPCODE(pc) ~= "OP_TEST")
	luaP:SETARG_A(pc, (luaP:GETARG_A(pc) == 0) and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:goiffalse()
------------------------------------------------------------------------
function luaK:jumponcond(fs, e, cond)
	if e.k == "VRELOCABLE" then
		local ie = self:getcode(fs, e)
		if luaP:GET_OPCODE(ie) == "OP_NOT" then
			fs.pc = fs.pc - 1  -- remove previous OP_NOT
			return self:condjump(fs, "OP_TEST", luaP:GETARG_B(ie), 0, cond and 0 or 1)
		end
		-- else go through
	end
	self:discharge2anyreg(fs, e)
	self:freeexp(fs, e)
	return self:condjump(fs, "OP_TESTSET", luaP.NO_REG, e.info, cond and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:infix(), (lparser) luaY:cond()
------------------------------------------------------------------------
function luaK:goiftrue(fs, e)
	local pc  -- pc of last jump
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VK" or k == "VKNUM" or k == "VTRUE" then
		pc = self.NO_JUMP  -- always true; do nothing
	elseif k == "VFALSE" then
		pc = self:jump(fs)  -- always jump
	elseif k == "VJMP" then
		self:invertjump(fs, e)
		pc = e.info
	else
		pc = self:jumponcond(fs, e, false)
	end
	e.f = self:concat(fs, e.f, pc)  -- insert last jump in `f' list
	self:patchtohere(fs, e.t)
	e.t = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in luaK:infix()
------------------------------------------------------------------------
function luaK:goiffalse(fs, e)
	local pc  -- pc of last jump
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" or k == "VFALSE"then
		pc = self.NO_JUMP  -- always false; do nothing
	elseif k == "VTRUE" then
		pc = self:jump(fs)  -- always jump
	elseif k == "VJMP" then
		pc = e.info
	else
		pc = self:jumponcond(fs, e, true)
	end
	e.t = self:concat(fs, e.t, pc)  -- insert last jump in `t' list
	self:patchtohere(fs, e.f)
	e.f = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used only in luaK:prefix()
------------------------------------------------------------------------
function luaK:codenot(fs, e)
	self:dischargevars(fs, e)
	local k = e.k
	if k == "VNIL" or k == "VFALSE" then
		e.k = "VTRUE"
	elseif k == "VK" or k == "VKNUM" or k == "VTRUE" then
		e.k = "VFALSE"
	elseif k == "VJMP" then
		self:invertjump(fs, e)
	elseif k == "VRELOCABLE" or k == "VNONRELOC" then
		self:discharge2anyreg(fs, e)
		self:freeexp(fs, e)
		e.info = self:codeABC(fs, "OP_NOT", 0, e.info, 0)
		e.k = "VRELOCABLE"
	else
		lua_assert(0)  -- cannot happen
	end
	-- interchange true and false lists
	e.f, e.t = e.t, e.f
	self:removevalues(fs, e.f)
	self:removevalues(fs, e.t)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:field(), luaY:primaryexp()
------------------------------------------------------------------------
function luaK:indexed(fs, t, k)
	t.aux = self:exp2RK(fs, k)
	t.k = "VINDEXED"
end

------------------------------------------------------------------------
--
-- * used only in luaK:codearith()
------------------------------------------------------------------------
function luaK:constfolding(op, e1, e2)
	local r
	if not self:isnumeral(e1) or not self:isnumeral(e2) then return false end
	local v1 = e1.nval
	local v2 = e2.nval
	if op == "OP_ADD" then
		r = self:numadd(v1, v2)
	elseif op == "OP_SUB" then
		r = self:numsub(v1, v2)
	elseif op == "OP_MUL" then
		r = self:nummul(v1, v2)
	elseif op == "OP_DIV" then
		if v2 == 0 then return false end  -- do not attempt to divide by 0
		r = self:numdiv(v1, v2)
	elseif op == "OP_MOD" then
		if v2 == 0 then return false end  -- do not attempt to divide by 0
		r = self:nummod(v1, v2)
	elseif op == "OP_POW" then
		r = self:numpow(v1, v2)
	elseif op == "OP_UNM" then
		r = self:numunm(v1)
	elseif op == "OP_LEN" then
		return false  -- no constant folding for 'len'
	else
		lua_assert(0)
		r = 0
	end
	if self:numisnan(r) then return false end  -- do not attempt to produce NaN
	e1.nval = r
	return true
end

------------------------------------------------------------------------
--
-- * used in luaK:prefix(), luaK:posfix()
------------------------------------------------------------------------
function luaK:codearith(fs, op, e1, e2)
	if self:constfolding(op, e1, e2) then
		return
	else
		local o2 = (op ~= "OP_UNM" and op ~= "OP_LEN") and self:exp2RK(fs, e2) or 0
		local o1 = self:exp2RK(fs, e1)
		if o1 > o2 then
			self:freeexp(fs, e1)
			self:freeexp(fs, e2)
		else
			self:freeexp(fs, e2)
			self:freeexp(fs, e1)
		end
		e1.info = self:codeABC(fs, op, 0, o1, o2)
		e1.k = "VRELOCABLE"
	end
end

------------------------------------------------------------------------
--
-- * used only in luaK:posfix()
------------------------------------------------------------------------
function luaK:codecomp(fs, op, cond, e1, e2)
	local o1 = self:exp2RK(fs, e1)
	local o2 = self:exp2RK(fs, e2)
	self:freeexp(fs, e2)
	self:freeexp(fs, e1)
	if cond == 0 and op ~= "OP_EQ" then
		-- exchange args to replace by `<' or `<='
		o1, o2 = o2, o1  -- o1 <==> o2
		cond = 1
	end
	e1.info = self:condjump(fs, op, cond, o1, o2)
	e1.k = "VJMP"
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:prefix(fs, op, e)
	local e2 = {}  -- expdesc
	e2.t, e2.f = self.NO_JUMP, self.NO_JUMP
	e2.k = "VKNUM"
	e2.nval = 0
	if op == "OPR_MINUS" then
		if not self:isnumeral(e) then
			self:exp2anyreg(fs, e)  -- cannot operate on non-numeric constants
		end
		self:codearith(fs, "OP_UNM", e, e2)
	elseif op == "OPR_NOT" then
		self:codenot(fs, e)
	elseif op == "OPR_LEN" then
		self:exp2anyreg(fs, e)  -- cannot operate on constants
		self:codearith(fs, "OP_LEN", e, e2)
	else
		lua_assert(0)
	end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:infix(fs, op, v)
	if op == "OPR_AND" then
		self:goiftrue(fs, v)
	elseif op == "OPR_OR" then
		self:goiffalse(fs, v)
	elseif op == "OPR_CONCAT" then
		self:exp2nextreg(fs, v)  -- operand must be on the 'stack'
	elseif op == "OPR_ADD" or op == "OPR_SUB" or
		op == "OPR_MUL" or op == "OPR_DIV" or
		op == "OPR_MOD" or op == "OPR_POW" then
		if not self:isnumeral(v) then self:exp2RK(fs, v) end
	else
		self:exp2RK(fs, v)
	end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
-- table lookups to simplify testing
luaK.arith_op = {
	OPR_ADD = "OP_ADD", OPR_SUB = "OP_SUB", OPR_MUL = "OP_MUL",
	OPR_DIV = "OP_DIV", OPR_MOD = "OP_MOD", OPR_POW = "OP_POW",
}
luaK.comp_op = {
	OPR_EQ = "OP_EQ", OPR_NE = "OP_EQ", OPR_LT = "OP_LT",
	OPR_LE = "OP_LE", OPR_GT = "OP_LT", OPR_GE = "OP_LE",
}
luaK.comp_cond = {
	OPR_EQ = 1, OPR_NE = 0, OPR_LT = 1,
	OPR_LE = 1, OPR_GT = 0, OPR_GE = 0,
}
function luaK:posfix(fs, op, e1, e2)
	-- needed because e1 = e2 doesn't copy values...
	-- * in 5.0.x, only k/info/aux/t/f copied, t for AND, f for OR
	--   but here, all elements are copied for completeness' sake
	local function copyexp(e1, e2)
		e1.k = e2.k
		e1.info = e2.info; e1.aux = e2.aux
		e1.nval = e2.nval
		e1.t = e2.t; e1.f = e2.f
	end
	if op == "OPR_AND" then
		lua_assert(e1.t == self.NO_JUMP)  -- list must be closed
		self:dischargevars(fs, e2)
		e2.f = self:concat(fs, e2.f, e1.f)
		copyexp(e1, e2)
	elseif op == "OPR_OR" then
		lua_assert(e1.f == self.NO_JUMP)  -- list must be closed
		self:dischargevars(fs, e2)
		e2.t = self:concat(fs, e2.t, e1.t)
		copyexp(e1, e2)
	elseif op == "OPR_CONCAT" then
		self:exp2val(fs, e2)
		if e2.k == "VRELOCABLE" and luaP:GET_OPCODE(self:getcode(fs, e2)) == "OP_CONCAT" then
			lua_assert(e1.info == luaP:GETARG_B(self:getcode(fs, e2)) - 1)
			self:freeexp(fs, e1)
			luaP:SETARG_B(self:getcode(fs, e2), e1.info)
			e1.k = "VRELOCABLE"
			e1.info = e2.info
		else
			self:exp2nextreg(fs, e2)  -- operand must be on the 'stack'
			self:codearith(fs, "OP_CONCAT", e1, e2)
		end
	else
		-- the following uses a table lookup in place of conditionals
		local arith = self.arith_op[op]
		if arith then
			self:codearith(fs, arith, e1, e2)
		else
			local comp = self.comp_op[op]
			if comp then
				self:codecomp(fs, comp, self.comp_cond[op], e1, e2)
			else
				lua_assert(0)
			end
		end--if arith
	end--if op
end

------------------------------------------------------------------------
-- adjusts debug information for last instruction written, in order to
-- change the line where item comes into existence
-- * used in (lparser) luaY:funcargs(), luaY:forbody(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:fixline(fs, line)
	fs.f.lineinfo[fs.pc - 1] = line
end

------------------------------------------------------------------------
-- general function to write an instruction into the instruction buffer,
-- sets debug information too
-- * used in luaK:codeABC(), luaK:codeABx()
-- * called directly by (lparser) luaY:whilestat()
------------------------------------------------------------------------
function luaK:code(fs, i, line)
	local f = fs.f
	self:dischargejpc(fs)  -- 'pc' will change
	-- put new instruction in code array
	luaY:growvector(fs.L, f.code, fs.pc, f.sizecode, nil,
		luaY.MAX_INT, "code size overflow")
	f.code[fs.pc] = i
	-- save corresponding line information
	luaY:growvector(fs.L, f.lineinfo, fs.pc, f.sizelineinfo, nil,
		luaY.MAX_INT, "code size overflow")
	f.lineinfo[fs.pc] = line
	local pc = fs.pc
	fs.pc = fs.pc + 1
	return pc
end

------------------------------------------------------------------------
-- writes an instruction of type ABC
-- * calls luaK:code()
------------------------------------------------------------------------
function luaK:codeABC(fs, o, a, b, c)
	lua_assert(luaP:getOpMode(o) == luaP.OpMode.iABC)
	lua_assert(luaP:getBMode(o) ~= luaP.OpArgMask.OpArgN or b == 0)
	lua_assert(luaP:getCMode(o) ~= luaP.OpArgMask.OpArgN or c == 0)
	return self:code(fs, luaP:CREATE_ABC(o, a, b, c), fs.ls.lastline)
end

------------------------------------------------------------------------
-- writes an instruction of type ABx
-- * calls luaK:code(), called by luaK:codeAsBx()
------------------------------------------------------------------------
function luaK:codeABx(fs, o, a, bc)
	lua_assert(luaP:getOpMode(o) == luaP.OpMode.iABx or
		luaP:getOpMode(o) == luaP.OpMode.iAsBx)
	lua_assert(luaP:getCMode(o) == luaP.OpArgMask.OpArgN)
	return self:code(fs, luaP:CREATE_ABx(o, a, bc), fs.ls.lastline)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:closelistfield(), luaY:lastlistfield()
------------------------------------------------------------------------
function luaK:setlist(fs, base, nelems, tostore)
	local c = math.floor((nelems - 1)/luaP.LFIELDS_PER_FLUSH) + 1
	local b = (tostore == luaY.LUA_MULTRET) and 0 or tostore
	lua_assert(tostore ~= 0)
	if c <= luaP.MAXARG_C then
		self:codeABC(fs, "OP_SETLIST", base, b, c)
	else
		self:codeABC(fs, "OP_SETLIST", base, b, 0)
		self:code(fs, luaP:CREATE_Inst(c), fs.ls.lastline)
	end
	fs.freereg = base + 1  -- free registers with list values
end




--dofile("lparser.lua")

--[[--------------------------------------------------------------------
-- Expression descriptor
-- * expkind changed to string constants; luaY:assignment was the only
--   function to use a relational operator with this enumeration
-- VVOID       -- no value
-- VNIL        -- no value
-- VTRUE       -- no value
-- VFALSE      -- no value
-- VK          -- info = index of constant in 'k'
-- VKNUM       -- nval = numerical value
-- VLOCAL      -- info = local register
-- VUPVAL,     -- info = index of upvalue in 'upvalues'
-- VGLOBAL     -- info = index of table; aux = index of global name in 'k'
-- VINDEXED    -- info = table register; aux = index register (or 'k')
-- VJMP        -- info = instruction pc
-- VRELOCABLE  -- info = instruction pc
-- VNONRELOC   -- info = result register
-- VCALL       -- info = instruction pc
-- VVARARG     -- info = instruction pc
} ----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- * expdesc in Lua 5.1.x has a union u and another struct s; this Lua
--   implementation ignores all instances of u and s usage
-- struct expdesc:
--   k  -- (enum: expkind)
--   info, aux -- (int, int)
--   nval -- (lua_Number)
--   t  -- patch list of 'exit when true'
--   f  -- patch list of 'exit when false'
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct upvaldesc:
--   k  -- (lu_byte)
--   info -- (lu_byte)
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- state needed to generate code for a given function
-- struct FuncState:
--   f  -- current function header (table: Proto)
--   h  -- table to find (and reuse) elements in 'k' (table: Table)
--   prev  -- enclosing function (table: FuncState)
--   ls  -- lexical state (table: LexState)
--   L  -- copy of the Lua state (table: lua_State)
--   bl  -- chain of current blocks (table: BlockCnt)
--   pc  -- next position to code (equivalent to 'ncode')
--   lasttarget   -- 'pc' of last 'jump target'
--   jpc  -- list of pending jumps to 'pc'
--   freereg  -- first free register
--   nk  -- number of elements in 'k'
--   np  -- number of elements in 'p'
--   nlocvars  -- number of elements in 'locvars'
--   nactvar  -- number of active local variables
--   upvalues[LUAI_MAXUPVALUES]  -- upvalues (table: upvaldesc)
--   actvar[LUAI_MAXVARS]  -- declared-variable stack
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- constants used by parser
-- * picks up duplicate values from luaX if required
------------------------------------------------------------------------
luaY.LUA_QS = luaX.LUA_QS or "'%s'"  -- (from luaconf.h)

luaY.SHRT_MAX = 32767 -- (from <limits.h>)
luaY.LUAI_MAXVARS = 200  -- (luaconf.h)
luaY.LUAI_MAXUPVALUES = 60  -- (luaconf.h)
luaY.MAX_INT = luaX.MAX_INT or 2147483645  -- (from llimits.h)
-- * INT_MAX-2 for 32-bit systems
luaY.LUAI_MAXCCALLS = 200  -- (from luaconf.h)

luaY.VARARG_HASARG = 1  -- (from lobject.h)
-- NOTE: HASARG_MASK is value-specific
luaY.HASARG_MASK = 2 -- this was added for a bitop in parlist()
luaY.VARARG_ISVARARG = 2
-- NOTE: there is some value-specific code that involves VARARG_NEEDSARG
luaY.VARARG_NEEDSARG = 4

luaY.LUA_MULTRET = -1  -- (lua.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- LUA_QL describes how error messages quote program elements.
-- CHANGE it if you want a different appearance. (from luaconf.h)
------------------------------------------------------------------------
function luaY:LUA_QL(x)
	return "'"..x.."'"
end

------------------------------------------------------------------------
-- this is a stripped-down luaM_growvector (from lmem.h) which is a
-- macro based on luaM_growaux (in lmem.c); all the following does is
-- reproduce the size limit checking logic of the original function
-- so that error behaviour is identical; all arguments preserved for
-- convenience, even those which are unused
-- * set the t field to nil, since this originally does a sizeof(t)
-- * size (originally a pointer) is never updated, their final values
--   are set by luaY:close_func(), so overall things should still work
------------------------------------------------------------------------
function luaY:growvector(L, v, nelems, size, t, limit, e)
	if nelems >= limit then
		error(e)  -- was luaG_runerror
	end
end

------------------------------------------------------------------------
-- initialize a new function prototype structure (from lfunc.c)
-- * used only in open_func()
------------------------------------------------------------------------
function luaY:newproto(L)
	local f = {} -- Proto
	-- luaC_link(L, obj2gco(f), LUA_TPROTO); /* GC */
	f.k = {}
	f.sizek = 0
	f.p = {}
	f.sizep = 0
	f.code = {}
	f.sizecode = 0
	f.sizelineinfo = 0
	f.sizeupvalues = 0
	f.nups = 0
	f.upvalues = {}
	f.numparams = 0
	f.is_vararg = 0
	f.maxstacksize = 0
	f.lineinfo = {}
	f.sizelocvars = 0
	f.locvars = {}
	f.lineDefined = 0
	f.lastlinedefined = 0
	f.source = nil
	return f
end

------------------------------------------------------------------------
-- converts an integer to a "floating point byte", represented as
-- (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if
-- eeeee != 0 and (xxx) otherwise.
------------------------------------------------------------------------
function luaY:int2fb(x)
	local e = 0  -- exponent
	while x >= 16 do
		x = math.floor((x + 1) / 2)
		e = e + 1
	end
	if x < 8 then
		return x
	else
		return ((e + 1) * 8) + (x - 8)
	end
end

--[[--------------------------------------------------------------------
-- parser functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- true of the kind of expression produces multiple return values
------------------------------------------------------------------------
function luaY:hasmultret(k)
	return k == "VCALL" or k == "VVARARG"
end

------------------------------------------------------------------------
-- convenience function to access active local i, returns entry
------------------------------------------------------------------------
function luaY:getlocvar(fs, i)
	return fs.f.locvars[ fs.actvar[i] ]
end

------------------------------------------------------------------------
-- check a limit, string m provided as an error message
------------------------------------------------------------------------
function luaY:checklimit(fs, v, l, m)
	if v > l then self:errorlimit(fs, l, m) end
end

--[[--------------------------------------------------------------------
-- nodes for block list (list of active blocks)
-- struct BlockCnt:
--   previous  -- chain (table: BlockCnt)
--   breaklist  -- list of jumps out of this loop
--   nactvar  -- # active local variables outside the breakable structure
--   upval  -- true if some variable in the block is an upvalue (boolean)
--   isbreakable  -- true if 'block' is a loop (boolean)
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- prototypes for recursive non-terminal functions
------------------------------------------------------------------------
-- prototypes deleted; not required in Lua

------------------------------------------------------------------------
-- reanchor if last token is has a constant string, see close_func()
-- * used only in close_func()
------------------------------------------------------------------------
function luaY:anchor_token(ls)
	if ls.t.token == "TK_NAME" or ls.t.token == "TK_STRING" then
		-- not relevant to Lua implementation of parser
		-- local ts = ls.t.seminfo
		-- luaX_newstring(ls, getstr(ts), ts->tsv.len); /* C */
	end
end

------------------------------------------------------------------------
-- throws a syntax error if token expected is not there
------------------------------------------------------------------------
function luaY:error_expected(ls, token)
	luaX:syntaxerror(ls,
		string.format(self.LUA_QS.." expected", luaX:token2str(ls, token)))
end

------------------------------------------------------------------------
-- prepares error message for display, for limits exceeded
-- * used only in checklimit()
------------------------------------------------------------------------
function luaY:errorlimit(fs, limit, what)
	local msg = (fs.f.linedefined == 0) and
		string.format("main function has more than %d %s", limit, what) or
		string.format("function at line %d has more than %d %s",
			fs.f.linedefined, limit, what)
	luaX:lexerror(fs.ls, msg, 0)
end

------------------------------------------------------------------------
-- tests for a token, returns outcome
-- * return value changed to boolean
------------------------------------------------------------------------
function luaY:testnext(ls, c)
	if ls.t.token == c then
		luaX:next(ls)
		return true
	else
		return false
	end
end

------------------------------------------------------------------------
-- check for existence of a token, throws error if not found
------------------------------------------------------------------------
function luaY:check(ls, c)
	if ls.t.token ~= c then
		self:error_expected(ls, c)
	end
end

------------------------------------------------------------------------
-- verify existence of a token, then skip it
------------------------------------------------------------------------
function luaY:checknext(ls, c)
	self:check(ls, c)
	luaX:next(ls)
end

------------------------------------------------------------------------
-- throws error if condition not matched
------------------------------------------------------------------------
function luaY:check_condition(ls, c, msg)
	if not c then luaX:syntaxerror(ls, msg) end
end

------------------------------------------------------------------------
-- verifies token conditions are met or else throw error
------------------------------------------------------------------------
function luaY:check_match(ls, what, who, where)
	if not self:testnext(ls, what) then
		if where == ls.linenumber then
			self:error_expected(ls, what)
		else
			luaX:syntaxerror(ls, string.format(
				self.LUA_QS.." expected (to close "..self.LUA_QS.." at line %d)",
				luaX:token2str(ls, what), luaX:token2str(ls, who), where))
		end
	end
end

------------------------------------------------------------------------
-- expect that token is a name, return the name
------------------------------------------------------------------------
function luaY:str_checkname(ls)
	self:check(ls, "TK_NAME")
	local ts = ls.t.seminfo
	luaX:next(ls)
	return ts
end

------------------------------------------------------------------------
-- initialize a struct expdesc, expression description data structure
------------------------------------------------------------------------
function luaY:init_exp(e, k, i)
	e.f, e.t = luaK.NO_JUMP, luaK.NO_JUMP
	e.k = k
	e.info = i
end

------------------------------------------------------------------------
-- adds given string s in string pool, sets e as VK
------------------------------------------------------------------------
function luaY:codestring(ls, e, s)
	self:init_exp(e, "VK", luaK:stringK(ls.fs, s))
end

------------------------------------------------------------------------
-- consume a name token, adds it to string pool, sets e as VK
------------------------------------------------------------------------
function luaY:checkname(ls, e)
	self:codestring(ls, e, self:str_checkname(ls))
end

------------------------------------------------------------------------
-- creates struct entry for a local variable
-- * used only in new_localvar()
------------------------------------------------------------------------
function luaY:registerlocalvar(ls, varname)
	local fs = ls.fs
	local f = fs.f
	self:growvector(ls.L, f.locvars, fs.nlocvars, f.sizelocvars,
		nil, self.SHRT_MAX, "too many local variables")
	-- loop to initialize empty f.locvar positions not required
	f.locvars[fs.nlocvars] = {} -- LocVar
	f.locvars[fs.nlocvars].varname = varname
	-- luaC_objbarrier(ls.L, f, varname) /* GC */
	local nlocvars = fs.nlocvars
	fs.nlocvars = fs.nlocvars + 1
	return nlocvars
end

------------------------------------------------------------------------
-- creates a new local variable given a name and an offset from nactvar
-- * used in fornum(), forlist(), parlist(), body()
------------------------------------------------------------------------
function luaY:new_localvarliteral(ls, v, n)
	self:new_localvar(ls, v, n)
end

------------------------------------------------------------------------
-- register a local variable, set in active variable list
------------------------------------------------------------------------
function luaY:new_localvar(ls, name, n)
	local fs = ls.fs
	self:checklimit(fs, fs.nactvar + n + 1, self.LUAI_MAXVARS, "local variables")
	fs.actvar[fs.nactvar + n] = self:registerlocalvar(ls, name)
end

------------------------------------------------------------------------
-- adds nvars number of new local variables, set debug information
------------------------------------------------------------------------
function luaY:adjustlocalvars(ls, nvars)
	local fs = ls.fs
	fs.nactvar = fs.nactvar + nvars
	for i = nvars, 1, -1 do
		self:getlocvar(fs, fs.nactvar - i).startpc = fs.pc
	end
end

------------------------------------------------------------------------
-- removes a number of locals, set debug information
------------------------------------------------------------------------
function luaY:removevars(ls, tolevel)
	local fs = ls.fs
	while fs.nactvar > tolevel do
		fs.nactvar = fs.nactvar - 1
		self:getlocvar(fs, fs.nactvar).endpc = fs.pc
	end
end

------------------------------------------------------------------------
-- returns an existing upvalue index based on the given name, or
-- creates a new upvalue struct entry and returns the new index
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:indexupvalue(fs, name, v)
	local f = fs.f
	for i = 0, f.nups - 1 do
		if fs.upvalues[i].k == v.k and fs.upvalues[i].info == v.info then
			lua_assert(f.upvalues[i] == name)
			return i
		end
	end
	-- new one
	self:checklimit(fs, f.nups + 1, self.LUAI_MAXUPVALUES, "upvalues")
	self:growvector(fs.L, f.upvalues, f.nups, f.sizeupvalues,
		nil, self.MAX_INT, "")
	-- loop to initialize empty f.upvalues positions not required
	f.upvalues[f.nups] = name
	-- luaC_objbarrier(fs->L, f, name); /* GC */
	lua_assert(v.k == "VLOCAL" or v.k == "VUPVAL")
	-- this is a partial copy; only k & info fields used
	fs.upvalues[f.nups] = { k = v.k, info = v.info }
	local nups = f.nups
	f.nups = f.nups + 1
	return nups
end

------------------------------------------------------------------------
-- search the local variable namespace of the given fs for a match
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:searchvar(fs, n)
	for i = fs.nactvar - 1, 0, -1 do
		if n == self:getlocvar(fs, i).varname then
			return i
		end
	end
	return -1  -- not found
end

------------------------------------------------------------------------
-- * mark upvalue flags in function states up to a given level
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:markupval(fs, level)
	local bl = fs.bl
	while bl and bl.nactvar > level do bl = bl.previous end
	if bl then bl.upval = true end
end

------------------------------------------------------------------------
-- handle locals, globals and upvalues and related processing
-- * search mechanism is recursive, calls itself to search parents
-- * used only in singlevar()
------------------------------------------------------------------------
function luaY:singlevaraux(fs, n, var, base)
	if fs == nil then  -- no more levels?
		self:init_exp(var, "VGLOBAL", luaP.NO_REG)  -- default is global variable
		return "VGLOBAL"
	else
		local v = self:searchvar(fs, n)  -- look up at current level
		if v >= 0 then
			self:init_exp(var, "VLOCAL", v)
			if base == 0 then
				self:markupval(fs, v)  -- local will be used as an upval
			end
			return "VLOCAL"
		else  -- not found at current level; try upper one
			if self:singlevaraux(fs.prev, n, var, 0) == "VGLOBAL" then
				return "VGLOBAL"
			end
			var.info = self:indexupvalue(fs, n, var)  -- else was LOCAL or UPVAL
			var.k = "VUPVAL"  -- upvalue in this level
			return "VUPVAL"
		end--if v
	end--if fs
end

------------------------------------------------------------------------
-- consume a name token, creates a variable (global|local|upvalue)
-- * used in prefixexp(), funcname()
------------------------------------------------------------------------
function luaY:singlevar(ls, var)
	local varname = self:str_checkname(ls)
	local fs = ls.fs
	if self:singlevaraux(fs, varname, var, 1) == "VGLOBAL" then
		var.info = luaK:stringK(fs, varname)  -- info points to global name
	end
end

------------------------------------------------------------------------
-- adjust RHS to match LHS in an assignment
-- * used in assignment(), forlist(), localstat()
------------------------------------------------------------------------
function luaY:adjust_assign(ls, nvars, nexps, e)
	local fs = ls.fs
	local extra = nvars - nexps
	if self:hasmultret(e.k) then
		extra = extra + 1  -- includes call itself
		if extra <= 0 then extra = 0 end
		luaK:setreturns(fs, e, extra)  -- last exp. provides the difference
		if extra > 1 then luaK:reserveregs(fs, extra - 1) end
	else
		if e.k ~= "VVOID" then luaK:exp2nextreg(fs, e) end  -- close last expression
		if extra > 0 then
			local reg = fs.freereg
			luaK:reserveregs(fs, extra)
			luaK:_nil(fs, reg, extra)
		end
	end
end

------------------------------------------------------------------------
-- tracks and limits parsing depth, assert check at end of parsing
------------------------------------------------------------------------
function luaY:enterlevel(ls)
	ls.L.nCcalls = ls.L.nCcalls + 1
	if ls.L.nCcalls > self.LUAI_MAXCCALLS then
		luaX:lexerror(ls, "chunk has too many syntax levels", 0)
	end
end

------------------------------------------------------------------------
-- tracks parsing depth, a pair with luaY:enterlevel()
------------------------------------------------------------------------
function luaY:leavelevel(ls)
	ls.L.nCcalls = ls.L.nCcalls - 1
end

------------------------------------------------------------------------
-- enters a code unit, initializes elements
------------------------------------------------------------------------
function luaY:enterblock(fs, bl, isbreakable)
	bl.breaklist = luaK.NO_JUMP
	bl.isbreakable = isbreakable
	bl.nactvar = fs.nactvar
	bl.upval = false
	bl.previous = fs.bl
	fs.bl = bl
	lua_assert(fs.freereg == fs.nactvar)
end

------------------------------------------------------------------------
-- leaves a code unit, close any upvalues
------------------------------------------------------------------------
function luaY:leaveblock(fs)
	local bl = fs.bl
	fs.bl = bl.previous
	self:removevars(fs.ls, bl.nactvar)
	if bl.upval then
		luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
	end
	-- a block either controls scope or breaks (never both)
	lua_assert(not bl.isbreakable or not bl.upval)
	lua_assert(bl.nactvar == fs.nactvar)
	fs.freereg = fs.nactvar  -- free registers
	luaK:patchtohere(fs, bl.breaklist)
end

------------------------------------------------------------------------
-- implement the instantiation of a function prototype, append list of
-- upvalues after the instantiation instruction
-- * used only in body()
------------------------------------------------------------------------
function luaY:pushclosure(ls, func, v)
	local fs = ls.fs
	local f = fs.f
	self:growvector(ls.L, f.p, fs.np, f.sizep, nil,
		luaP.MAXARG_Bx, "constant table overflow")
	-- loop to initialize empty f.p positions not required
	f.p[fs.np] = func.f
	fs.np = fs.np + 1
	-- luaC_objbarrier(ls->L, f, func->f); /* C */
	self:init_exp(v, "VRELOCABLE", luaK:codeABx(fs, "OP_CLOSURE", 0, fs.np - 1))
	for i = 0, func.f.nups - 1 do
		local o = (func.upvalues[i].k == "VLOCAL") and "OP_MOVE" or "OP_GETUPVAL"
		luaK:codeABC(fs, o, 0, func.upvalues[i].info, 0)
	end
end

------------------------------------------------------------------------
-- opening of a function
------------------------------------------------------------------------
function luaY:open_func(ls, fs)
	local L = ls.L
	local f = self:newproto(ls.L)
	fs.f = f
	fs.prev = ls.fs  -- linked list of funcstates
	fs.ls = ls
	fs.L = L
	ls.fs = fs
	fs.pc = 0
	fs.lasttarget = -1
	fs.jpc = luaK.NO_JUMP
	fs.freereg = 0
	fs.nk = 0
	fs.np = 0
	fs.nlocvars = 0
	fs.nactvar = 0
	fs.bl = nil
	f.source = ls.source
	f.maxstacksize = 2  -- registers 0/1 are always valid
	fs.h = {}  -- constant table; was luaH_new call
	-- anchor table of constants and prototype (to avoid being collected)
	-- sethvalue2s(L, L->top, fs->h); incr_top(L); /* C */
	-- setptvalue2s(L, L->top, f); incr_top(L);
end

------------------------------------------------------------------------
-- closing of a function
------------------------------------------------------------------------
function luaY:close_func(ls)
	local L = ls.L
	local fs = ls.fs
	local f = fs.f
	self:removevars(ls, 0)
	luaK:ret(fs, 0, 0)  -- final return
	-- luaM_reallocvector deleted for f->code, f->lineinfo, f->k, f->p,
	-- f->locvars, f->upvalues; not required for Lua table arrays
	f.sizecode = fs.pc
	f.sizelineinfo = fs.pc
	f.sizek = fs.nk
	f.sizep = fs.np
	f.sizelocvars = fs.nlocvars
	f.sizeupvalues = f.nups
	--lua_assert(luaG_checkcode(f))  -- currently not implemented
	lua_assert(fs.bl == nil)
	ls.fs = fs.prev
	-- the following is not required for this implementation; kept here
	-- for completeness
	-- L->top -= 2;  /* remove table and prototype from the stack */
	-- last token read was anchored in defunct function; must reanchor it
	if fs then self:anchor_token(ls) end
end

------------------------------------------------------------------------
-- parser initialization function
-- * note additional sub-tables needed for LexState, FuncState
------------------------------------------------------------------------
function luaY:parser(L, z, buff, name)
	local lexstate = {}  -- LexState
	lexstate.t = {}
	lexstate.lookahead = {}
	local funcstate = {}  -- FuncState
	funcstate.upvalues = {}
	funcstate.actvar = {}
	-- the following nCcalls initialization added for convenience
	L.nCcalls = 0
	lexstate.buff = buff
	luaX:setinput(L, lexstate, z, name)
	self:open_func(lexstate, funcstate)
	funcstate.f.is_vararg = self.VARARG_ISVARARG  -- main func. is always vararg
	luaX:next(lexstate)  -- read first token
	self:chunk(lexstate)
	self:check(lexstate, "TK_EOS")
	self:close_func(lexstate)
	lua_assert(funcstate.prev == nil)
	lua_assert(funcstate.f.nups == 0)
	lua_assert(lexstate.fs == nil)
	return funcstate.f
end

--[[--------------------------------------------------------------------
-- GRAMMAR RULES
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a function name suffix, for function call specifications
-- * used in primaryexp(), funcname()
------------------------------------------------------------------------
function luaY:field(ls, v)
	-- field -> ['.' | ':'] NAME
	local fs = ls.fs
	local key = {}  -- expdesc
	luaK:exp2anyreg(fs, v)
	luaX:next(ls)  -- skip the dot or colon
	self:checkname(ls, key)
	luaK:indexed(fs, v, key)
end

------------------------------------------------------------------------
-- parse a table indexing suffix, for constructors, expressions
-- * used in recfield(), primaryexp()
------------------------------------------------------------------------
function luaY:yindex(ls, v)
	-- index -> '[' expr ']'
	luaX:next(ls)  -- skip the '['
	self:expr(ls, v)
	luaK:exp2val(ls.fs, v)
	self:checknext(ls, "]")
end

--[[--------------------------------------------------------------------
-- Rules for Constructors
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct ConsControl:
--   v  -- last list item read (table: struct expdesc)
--   t  -- table descriptor (table: struct expdesc)
--   nh  -- total number of 'record' elements
--   na  -- total number of array elements
--   tostore  -- number of array elements pending to be stored
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a table record (hash) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:recfield(ls, cc)
	-- recfield -> (NAME | '['exp1']') = exp1
	local fs = ls.fs
	local reg = ls.fs.freereg
	local key, val = {}, {}  -- expdesc
	if ls.t.token == "TK_NAME" then
		self:checklimit(fs, cc.nh, self.MAX_INT, "items in a constructor")
		self:checkname(ls, key)
	else  -- ls->t.token == '['
		self:yindex(ls, key)
	end
	cc.nh = cc.nh + 1
	self:checknext(ls, "=")
	local rkkey = luaK:exp2RK(fs, key)
	self:expr(ls, val)
	luaK:codeABC(fs, "OP_SETTABLE", cc.t.info, rkkey, luaK:exp2RK(fs, val))
	fs.freereg = reg  -- free registers
end

------------------------------------------------------------------------
-- emit a set list instruction if enough elements (LFIELDS_PER_FLUSH)
-- * used in constructor()
------------------------------------------------------------------------
function luaY:closelistfield(fs, cc)
	if cc.v.k == "VVOID" then return end  -- there is no list item
	luaK:exp2nextreg(fs, cc.v)
	cc.v.k = "VVOID"
	if cc.tostore == luaP.LFIELDS_PER_FLUSH then
		luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)  -- flush
		cc.tostore = 0  -- no more items pending
	end
end

------------------------------------------------------------------------
-- emit a set list instruction at the end of parsing list constructor
-- * used in constructor()
------------------------------------------------------------------------
function luaY:lastlistfield(fs, cc)
	if cc.tostore == 0 then return end
	if self:hasmultret(cc.v.k) then
		luaK:setmultret(fs, cc.v)
		luaK:setlist(fs, cc.t.info, cc.na, self.LUA_MULTRET)
		cc.na = cc.na - 1  -- do not count last expression (unknown number of elements)
	else
		if cc.v.k ~= "VVOID" then
			luaK:exp2nextreg(fs, cc.v)
		end
		luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)
	end
end

------------------------------------------------------------------------
-- parse a table list (array) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:listfield(ls, cc)
	self:expr(ls, cc.v)
	self:checklimit(ls.fs, cc.na, self.MAX_INT, "items in a constructor")
	cc.na = cc.na + 1
	cc.tostore = cc.tostore + 1
end

------------------------------------------------------------------------
-- parse a table constructor
-- * used in funcargs(), simpleexp()
------------------------------------------------------------------------
function luaY:constructor(ls, t)
	-- constructor -> '{' [ field { fieldsep field } [ fieldsep ] ] '}'
	-- field -> recfield | listfield
	-- fieldsep -> ',' | ';'
	local fs = ls.fs
	local line = ls.linenumber
	local pc = luaK:codeABC(fs, "OP_NEWTABLE", 0, 0, 0)
	local cc = {}  -- ConsControl
	cc.v = {}
	cc.na, cc.nh, cc.tostore = 0, 0, 0
	cc.t = t
	self:init_exp(t, "VRELOCABLE", pc)
	self:init_exp(cc.v, "VVOID", 0)  -- no value (yet)
	luaK:exp2nextreg(ls.fs, t)  -- fix it at stack top (for gc)
	self:checknext(ls, "{")
	repeat
		lua_assert(cc.v.k == "VVOID" or cc.tostore > 0)
		if ls.t.token == "}" then break end
		self:closelistfield(fs, cc)
		local c = ls.t.token

		if c == "TK_NAME" then  -- may be listfields or recfields
			luaX:lookahead(ls)
			if ls.lookahead.token ~= "=" then  -- expression?
				self:listfield(ls, cc)
			else
				self:recfield(ls, cc)
			end
		elseif c == "[" then  -- constructor_item -> recfield
			self:recfield(ls, cc)
		else  -- constructor_part -> listfield
			self:listfield(ls, cc)
		end
	until not self:testnext(ls, ",") and not self:testnext(ls, ";")
	self:check_match(ls, "}", "{", line)
	self:lastlistfield(fs, cc)
	luaP:SETARG_B(fs.f.code[pc], self:int2fb(cc.na)) -- set initial array size
	luaP:SETARG_C(fs.f.code[pc], self:int2fb(cc.nh)) -- set initial table size
end

-- }======================================================================

------------------------------------------------------------------------
-- parse the arguments (parameters) of a function declaration
-- * used in body()
------------------------------------------------------------------------
function luaY:parlist(ls)
	-- parlist -> [ param { ',' param } ]
	local fs = ls.fs
	local f = fs.f
	local nparams = 0
	f.is_vararg = 0
	if ls.t.token ~= ")" then  -- is 'parlist' not empty?
		repeat
			local c = ls.t.token
			if c == "TK_NAME" then  -- param -> NAME
				self:new_localvar(ls, self:str_checkname(ls), nparams)
				nparams = nparams + 1
			elseif c == "TK_DOTS" then  -- param -> `...'
				luaX:next(ls)
				-- [[
				-- #if defined(LUA_COMPAT_VARARG)
				-- use `arg' as default name
				self:new_localvarliteral(ls, "arg", nparams)
				nparams = nparams + 1
				f.is_vararg = self.VARARG_HASARG + self.VARARG_NEEDSARG
				-- #endif
				--]]
				f.is_vararg = f.is_vararg + self.VARARG_ISVARARG
			else
				luaX:syntaxerror(ls, "<name> or "..self:LUA_QL("...").." expected")
			end
		until f.is_vararg ~= 0 or not self:testnext(ls, ",")
	end--if
	self:adjustlocalvars(ls, nparams)
	-- NOTE: the following works only when HASARG_MASK is 2!
	f.numparams = fs.nactvar - (f.is_vararg % self.HASARG_MASK)
	luaK:reserveregs(fs, fs.nactvar)  -- reserve register for parameters
end

------------------------------------------------------------------------
-- parse function declaration body
-- * used in simpleexp(), localfunc(), funcstat()
------------------------------------------------------------------------
function luaY:body(ls, e, needself, line)
	-- body ->  '(' parlist ')' chunk END
	local new_fs = {}  -- FuncState
	new_fs.upvalues = {}
	new_fs.actvar = {}
	self:open_func(ls, new_fs)
	new_fs.f.lineDefined = line
	self:checknext(ls, "(")
	if needself then
		self:new_localvarliteral(ls, "self", 0)
		self:adjustlocalvars(ls, 1)
	end
	self:parlist(ls)
	self:checknext(ls, ")")
	self:chunk(ls)
	new_fs.f.lastlinedefined = ls.linenumber
	self:check_match(ls, "TK_END", "TK_FUNCTION", line)
	self:close_func(ls)
	self:pushclosure(ls, new_fs, e)
end

------------------------------------------------------------------------
-- parse a list of comma-separated expressions
-- * used is multiple locations
------------------------------------------------------------------------
function luaY:explist1(ls, v)
	-- explist1 -> expr { ',' expr }
	local n = 1  -- at least one expression
	self:expr(ls, v)
	while self:testnext(ls, ",") do
		luaK:exp2nextreg(ls.fs, v)
		self:expr(ls, v)
		n = n + 1
	end
	return n
end

------------------------------------------------------------------------
-- parse the parameters of a function call
-- * contrast with parlist(), used in function declarations
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:funcargs(ls, f)
	local fs = ls.fs
	local args = {}  -- expdesc
	local nparams
	local line = ls.linenumber
	local c = ls.t.token
	if c == "(" then  -- funcargs -> '(' [ explist1 ] ')'
		if line ~= ls.lastline then
			luaX:syntaxerror(ls, "ambiguous syntax (function call x new statement)")
		end
		luaX:next(ls)
		if ls.t.token == ")" then  -- arg list is empty?
			args.k = "VVOID"
		else
			self:explist1(ls, args)
			luaK:setmultret(fs, args)
		end
		self:check_match(ls, ")", "(", line)
	elseif c == "{" then  -- funcargs -> constructor
		self:constructor(ls, args)
	elseif c == "TK_STRING" then  -- funcargs -> STRING
		self:codestring(ls, args, ls.t.seminfo)
		luaX:next(ls)  -- must use 'seminfo' before 'next'
	else
		luaX:syntaxerror(ls, "function arguments expected")
		return
	end
	lua_assert(f.k == "VNONRELOC")
	local base = f.info  -- base register for call
	if self:hasmultret(args.k) then
		nparams = self.LUA_MULTRET  -- open call
	else
		if args.k ~= "VVOID" then
			luaK:exp2nextreg(fs, args)  -- close last argument
		end
		nparams = fs.freereg - (base + 1)
	end
	self:init_exp(f, "VCALL", luaK:codeABC(fs, "OP_CALL", base, nparams + 1, 2))
	luaK:fixline(fs, line)
	fs.freereg = base + 1  -- call remove function and arguments and leaves
	-- (unless changed) one result
end

--[[--------------------------------------------------------------------
-- Expression parsing
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parses an expression in parentheses or a single variable
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:prefixexp(ls, v)
	-- prefixexp -> NAME | '(' expr ')'
	local c = ls.t.token
	if c == "(" then
		local line = ls.linenumber
		luaX:next(ls)
		self:expr(ls, v)
		self:check_match(ls, ")", "(", line)
		luaK:dischargevars(ls.fs, v)
	elseif c == "TK_NAME" then
		self:singlevar(ls, v)
	else
		luaX:syntaxerror(ls, "unexpected symbol")
	end--if c
	return
end

------------------------------------------------------------------------
-- parses a prefixexp (an expression in parentheses or a single variable)
-- or a function call specification
-- * used in simpleexp(), assignment(), exprstat()
------------------------------------------------------------------------
function luaY:primaryexp(ls, v)
	-- primaryexp ->
	--    prefixexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs }
	local fs = ls.fs
	self:prefixexp(ls, v)
	while true do
		local c = ls.t.token
		if c == "." then  -- field
			self:field(ls, v)
		elseif c == "[" then  -- '[' exp1 ']'
			local key = {}  -- expdesc
			luaK:exp2anyreg(fs, v)
			self:yindex(ls, key)
			luaK:indexed(fs, v, key)
		elseif c == ":" then  -- ':' NAME funcargs
			local key = {}  -- expdesc
			luaX:next(ls)
			self:checkname(ls, key)
			luaK:_self(fs, v, key)
			self:funcargs(ls, v)
		elseif c == "(" or c == "TK_STRING" or c == "{" then  -- funcargs
			luaK:exp2nextreg(fs, v)
			self:funcargs(ls, v)
		else
			return
		end--if c
	end--while
end

------------------------------------------------------------------------
-- parses general expression types, constants handled here
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:simpleexp(ls, v)
	-- simpleexp -> NUMBER | STRING | NIL | TRUE | FALSE | ... |
	--              constructor | FUNCTION body | primaryexp
	local c = ls.t.token
	if c == "TK_NUMBER" then
		self:init_exp(v, "VKNUM", 0)
		v.nval = ls.t.seminfo
	elseif c == "TK_STRING" then
		self:codestring(ls, v, ls.t.seminfo)
	elseif c == "TK_NIL" then
		self:init_exp(v, "VNIL", 0)
	elseif c == "TK_TRUE" then
		self:init_exp(v, "VTRUE", 0)
	elseif c == "TK_FALSE" then
		self:init_exp(v, "VFALSE", 0)
	elseif c == "TK_DOTS" then  -- vararg
		local fs = ls.fs
		self:check_condition(ls, fs.f.is_vararg ~= 0,
			"cannot use "..self:LUA_QL("...").." outside a vararg function");
		-- NOTE: the following substitutes for a bitop, but is value-specific
		local is_vararg = fs.f.is_vararg
		if is_vararg >= self.VARARG_NEEDSARG then
			fs.f.is_vararg = is_vararg - self.VARARG_NEEDSARG  -- don't need 'arg'
		end
		self:init_exp(v, "VVARARG", luaK:codeABC(fs, "OP_VARARG", 0, 1, 0))
	elseif c == "{" then  -- constructor
		self:constructor(ls, v)
		return
	elseif c == "TK_FUNCTION" then
		luaX:next(ls)
		self:body(ls, v, false, ls.linenumber)
		return
	else
		self:primaryexp(ls, v)
		return
	end--if c
	luaX:next(ls)
end

------------------------------------------------------------------------
-- Translates unary operators tokens if found, otherwise returns
-- OPR_NOUNOPR. getunopr() and getbinopr() are used in subexpr().
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:getunopr(op)
	if op == "TK_NOT" then
		return "OPR_NOT"
	elseif op == "-" then
		return "OPR_MINUS"
	elseif op == "#" then
		return "OPR_LEN"
	else
		return "OPR_NOUNOPR"
	end
end

------------------------------------------------------------------------
-- Translates binary operator tokens if found, otherwise returns
-- OPR_NOBINOPR. Code generation uses OPR_* style tokens.
-- * used in subexpr()
------------------------------------------------------------------------
luaY.getbinopr_table = {
	["+"] = "OPR_ADD",
	["-"] = "OPR_SUB",
	["*"] = "OPR_MUL",
	["/"] = "OPR_DIV",
	["%"] = "OPR_MOD",
	["^"] = "OPR_POW",
	["TK_CONCAT"] = "OPR_CONCAT",
	["TK_NE"] = "OPR_NE",
	["TK_EQ"] = "OPR_EQ",
	["<"] = "OPR_LT",
	["TK_LE"] = "OPR_LE",
	[">"] = "OPR_GT",
	["TK_GE"] = "OPR_GE",
	["TK_AND"] = "OPR_AND",
	["TK_OR"] = "OPR_OR",
}
function luaY:getbinopr(op)
	local opr = self.getbinopr_table[op]
	if opr then return opr else return "OPR_NOBINOPR" end
end

------------------------------------------------------------------------
-- the following priority table consists of pairs of left/right values
-- for binary operators (was a static const struct); grep for ORDER OPR
-- * the following struct is replaced:
--   static const struct {
--     lu_byte left;  /* left priority for each binary operator */
--     lu_byte right; /* right priority */
--   } priority[] = {  /* ORDER OPR */
------------------------------------------------------------------------
luaY.priority = {
	{6, 6}, {6, 6}, {7, 7}, {7, 7}, {7, 7}, -- `+' `-' `/' `%'
	{10, 9}, {5, 4},                 -- power and concat (right associative)
	{3, 3}, {3, 3},                  -- equality
	{3, 3}, {3, 3}, {3, 3}, {3, 3},  -- order
	{2, 2}, {1, 1}                   -- logical (and/or)
}

luaY.UNARY_PRIORITY = 8  -- priority for unary operators

------------------------------------------------------------------------
-- Parse subexpressions. Includes handling of unary operators and binary
-- operators. A subexpr is given the rhs priority level of the operator
-- immediately left of it, if any (limit is -1 if none,) and if a binop
-- is found, limit is compared with the lhs priority level of the binop
-- in order to determine which executes first.
------------------------------------------------------------------------

------------------------------------------------------------------------
-- subexpr -> (simpleexp | unop subexpr) { binop subexpr }
-- where 'binop' is any binary operator with a priority higher than 'limit'
-- * for priority lookups with self.priority[], 1=left and 2=right
-- * recursively called
-- * used in expr()
------------------------------------------------------------------------
function luaY:subexpr(ls, v, limit)
	self:enterlevel(ls)
	local uop = self:getunopr(ls.t.token)
	if uop ~= "OPR_NOUNOPR" then
		luaX:next(ls)
		self:subexpr(ls, v, self.UNARY_PRIORITY)
		luaK:prefix(ls.fs, uop, v)
	else
		self:simpleexp(ls, v)
	end
	-- expand while operators have priorities higher than 'limit'
	local op = self:getbinopr(ls.t.token)
	while op ~= "OPR_NOBINOPR" and self.priority[luaK.BinOpr[op] + 1][1] > limit do
		local v2 = {}  -- expdesc
		luaX:next(ls)
		luaK:infix(ls.fs, op, v)
		-- read sub-expression with higher priority
		local nextop = self:subexpr(ls, v2, self.priority[luaK.BinOpr[op] + 1][2])
		luaK:posfix(ls.fs, op, v, v2)
		op = nextop
	end
	self:leavelevel(ls)
	return op  -- return first untreated operator
end

------------------------------------------------------------------------
-- Expression parsing starts here. Function subexpr is entered with the
-- left operator (which is non-existent) priority of -1, which is lower
-- than all actual operators. Expr information is returned in parm v.
-- * used in multiple locations
------------------------------------------------------------------------
function luaY:expr(ls, v)
	self:subexpr(ls, v, 0)
end

-- }====================================================================

--[[--------------------------------------------------------------------
-- Rules for Statements
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks next token, used as a look-ahead
-- * returns boolean instead of 0|1
-- * used in retstat(), chunk()
------------------------------------------------------------------------
function luaY:block_follow(token)
	if token == "TK_ELSE" or token == "TK_ELSEIF" or token == "TK_END"
		or token == "TK_UNTIL" or token == "TK_EOS" then
		return true
	else
		return false
	end
end

------------------------------------------------------------------------
-- parse a code block or unit
-- * used in multiple functions
------------------------------------------------------------------------
function luaY:block(ls)
	-- block -> chunk
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	self:enterblock(fs, bl, false)
	self:chunk(ls)
	lua_assert(bl.breaklist == luaK.NO_JUMP)
	self:leaveblock(fs)
end

------------------------------------------------------------------------
-- structure to chain all variables in the left-hand side of an
-- assignment
-- struct LHS_assign:
--   prev  -- (table: struct LHS_assign)
--   v  -- variable (global, local, upvalue, or indexed) (table: expdesc)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- check whether, in an assignment to a local variable, the local variable
-- is needed in a previous assignment (to a table). If so, save original
-- local value in a safe place and use this safe copy in the previous
-- assignment.
-- * used in assignment()
------------------------------------------------------------------------
function luaY:check_conflict(ls, lh, v)
	local fs = ls.fs
	local extra = fs.freereg  -- eventual position to save local variable
	local conflict = false
	while lh do
		if lh.v.k == "VINDEXED" then
			if lh.v.info == v.info then  -- conflict?
				conflict = true
				lh.v.info = extra  -- previous assignment will use safe copy
			end
			if lh.v.aux == v.info then  -- conflict?
				conflict = true
				lh.v.aux = extra  -- previous assignment will use safe copy
			end
		end
		lh = lh.prev
	end
	if conflict then
		luaK:codeABC(fs, "OP_MOVE", fs.freereg, v.info, 0)  -- make copy
		luaK:reserveregs(fs, 1)
	end
end

------------------------------------------------------------------------
-- parse a variable assignment sequence
-- * recursively called
-- * used in exprstat()
------------------------------------------------------------------------
function luaY:assignment(ls, lh, nvars)
	local e = {}  -- expdesc
	-- test was: VLOCAL <= lh->v.k && lh->v.k <= VINDEXED
	local c = lh.v.k
	self:check_condition(ls, c == "VLOCAL" or c == "VUPVAL" or c == "VGLOBAL"
		or c == "VINDEXED", "syntax error")
	if self:testnext(ls, ",") then  -- assignment -> ',' primaryexp assignment
		local nv = {}  -- LHS_assign
		nv.v = {}
		nv.prev = lh
		self:primaryexp(ls, nv.v)
		if nv.v.k == "VLOCAL" then
			self:check_conflict(ls, lh, nv.v)
		end
		self:checklimit(ls.fs, nvars, self.LUAI_MAXCCALLS - ls.L.nCcalls,
			"variables in assignment")
		self:assignment(ls, nv, nvars + 1)
	else  -- assignment -> '=' explist1
		self:checknext(ls, "=")
		local nexps = self:explist1(ls, e)
		if nexps ~= nvars then
			self:adjust_assign(ls, nvars, nexps, e)
			if nexps > nvars then
				ls.fs.freereg = ls.fs.freereg - (nexps - nvars)  -- remove extra values
			end
		else
			luaK:setoneret(ls.fs, e)  -- close last expression
			luaK:storevar(ls.fs, lh.v, e)
			return  -- avoid default
		end
	end
	self:init_exp(e, "VNONRELOC", ls.fs.freereg - 1)  -- default assignment
	luaK:storevar(ls.fs, lh.v, e)
end

------------------------------------------------------------------------
-- parse condition in a repeat statement or an if control structure
-- * used in repeatstat(), test_then_block()
------------------------------------------------------------------------
function luaY:cond(ls)
	-- cond -> exp
	local v = {}  -- expdesc
	self:expr(ls, v)  -- read condition
	if v.k == "VNIL" then v.k = "VFALSE" end  -- 'falses' are all equal here
	luaK:goiftrue(ls.fs, v)
	return v.f
end

------------------------------------------------------------------------
-- parse a break statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:breakstat(ls)
	-- stat -> BREAK
	local fs = ls.fs
	local bl = fs.bl
	local upval = false
	while bl and not bl.isbreakable do
		if bl.upval then upval = true end
		bl = bl.previous
	end
	if not bl then
		luaX:syntaxerror(ls, "no loop to break")
	end
	if upval then
		luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
	end
	bl.breaklist = luaK:concat(fs, bl.breaklist, luaK:jump(fs))
end

------------------------------------------------------------------------
-- parse a while-do control structure, body processed by block()
-- * with dynamic array sizes, MAXEXPWHILE + EXTRAEXP limits imposed by
--   the function's implementation can be removed
-- * used in statements()
------------------------------------------------------------------------
function luaY:whilestat(ls, line)
	-- whilestat -> WHILE cond DO block END
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	luaX:next(ls)  -- skip WHILE
	local whileinit = luaK:getlabel(fs)
	local condexit = self:cond(ls)
	self:enterblock(fs, bl, true)
	self:checknext(ls, "TK_DO")
	self:block(ls)
	luaK:patchlist(fs, luaK:jump(fs), whileinit)
	self:check_match(ls, "TK_END", "TK_WHILE", line)
	self:leaveblock(fs)
	luaK:patchtohere(fs, condexit)  -- false conditions finish the loop
end

------------------------------------------------------------------------
-- parse a repeat-until control structure, body parsed by chunk()
-- * used in statements()
------------------------------------------------------------------------
function luaY:repeatstat(ls, line)
	-- repeatstat -> REPEAT block UNTIL cond
	local fs = ls.fs
	local repeat_init = luaK:getlabel(fs)
	local bl1, bl2 = {}, {}  -- BlockCnt
	self:enterblock(fs, bl1, true)  -- loop block
	self:enterblock(fs, bl2, false)  -- scope block
	luaX:next(ls)  -- skip REPEAT
	self:chunk(ls)
	self:check_match(ls, "TK_UNTIL", "TK_REPEAT", line)
	local condexit = self:cond(ls)  -- read condition (inside scope block)
	if not bl2.upval then  -- no upvalues?
		self:leaveblock(fs)  -- finish scope
		luaK:patchlist(ls.fs, condexit, repeat_init)  -- close the loop
	else  -- complete semantics when there are upvalues
		self:breakstat(ls)  -- if condition then break
		luaK:patchtohere(ls.fs, condexit)  -- else...
		self:leaveblock(fs)  -- finish scope...
		luaK:patchlist(ls.fs, luaK:jump(fs), repeat_init)  -- and repeat
	end
	self:leaveblock(fs)  -- finish loop
end

------------------------------------------------------------------------
-- parse the single expressions needed in numerical for loops
-- * used in fornum()
------------------------------------------------------------------------
function luaY:exp1(ls)
	local e = {}  -- expdesc
	self:expr(ls, e)
	local k = e.k
	luaK:exp2nextreg(ls.fs, e)
	return k
end

------------------------------------------------------------------------
-- parse a for loop body for both versions of the for loop
-- * used in fornum(), forlist()
------------------------------------------------------------------------
function luaY:forbody(ls, base, line, nvars, isnum)
	-- forbody -> DO block
	local bl = {}  -- BlockCnt
	local fs = ls.fs
	self:adjustlocalvars(ls, 3)  -- control variables
	self:checknext(ls, "TK_DO")
	local prep = isnum and luaK:codeAsBx(fs, "OP_FORPREP", base, luaK.NO_JUMP)
		or luaK:jump(fs)
	self:enterblock(fs, bl, false)  -- scope for declared variables
	self:adjustlocalvars(ls, nvars)
	luaK:reserveregs(fs, nvars)
	self:block(ls)
	self:leaveblock(fs)  -- end of scope for declared variables
	luaK:patchtohere(fs, prep)
	local endfor = isnum and luaK:codeAsBx(fs, "OP_FORLOOP", base, luaK.NO_JUMP)
		or luaK:codeABC(fs, "OP_TFORLOOP", base, 0, nvars)
	luaK:fixline(fs, line)  -- pretend that `OP_FOR' starts the loop
	luaK:patchlist(fs, isnum and endfor or luaK:jump(fs), prep + 1)
end

------------------------------------------------------------------------
-- parse a numerical for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:fornum(ls, varname, line)
	-- fornum -> NAME = exp1,exp1[,exp1] forbody
	local fs = ls.fs
	local base = fs.freereg
	self:new_localvarliteral(ls, "(for index)", 0)
	self:new_localvarliteral(ls, "(for limit)", 1)
	self:new_localvarliteral(ls, "(for step)", 2)
	self:new_localvar(ls, varname, 3)
	self:checknext(ls, '=')
	self:exp1(ls)  -- initial value
	self:checknext(ls, ",")
	self:exp1(ls)  -- limit
	if self:testnext(ls, ",") then
		self:exp1(ls)  -- optional step
	else  -- default step = 1
		luaK:codeABx(fs, "OP_LOADK", fs.freereg, luaK:numberK(fs, 1))
		luaK:reserveregs(fs, 1)
	end
	self:forbody(ls, base, line, 1, true)
end

------------------------------------------------------------------------
-- parse a generic for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:forlist(ls, indexname)
	-- forlist -> NAME {,NAME} IN explist1 forbody
	local fs = ls.fs
	local e = {}  -- expdesc
	local nvars = 0
	local base = fs.freereg
	-- create control variables
	self:new_localvarliteral(ls, "(for generator)", nvars)
	nvars = nvars + 1
	self:new_localvarliteral(ls, "(for state)", nvars)
	nvars = nvars + 1
	self:new_localvarliteral(ls, "(for control)", nvars)
	nvars = nvars + 1
	-- create declared variables
	self:new_localvar(ls, indexname, nvars)
	nvars = nvars + 1
	while self:testnext(ls, ",") do
		self:new_localvar(ls, self:str_checkname(ls), nvars)
		nvars = nvars + 1
	end
	self:checknext(ls, "TK_IN")
	local line = ls.linenumber
	self:adjust_assign(ls, 3, self:explist1(ls, e), e)
	luaK:checkstack(fs, 3)  -- extra space to call generator
	self:forbody(ls, base, line, nvars - 3, false)
end

------------------------------------------------------------------------
-- initial parsing for a for loop, calls fornum() or forlist()
-- * used in statements()
------------------------------------------------------------------------
function luaY:forstat(ls, line)
	-- forstat -> FOR (fornum | forlist) END
	local fs = ls.fs
	local bl = {}  -- BlockCnt
	self:enterblock(fs, bl, true)  -- scope for loop and control variables
	luaX:next(ls)  -- skip `for'
	local varname = self:str_checkname(ls)  -- first variable name
	local c = ls.t.token
	if c == "=" then
		self:fornum(ls, varname, line)
	elseif c == "," or c == "TK_IN" then
		self:forlist(ls, varname)
	else
		luaX:syntaxerror(ls, self:LUA_QL("=").." or "..self:LUA_QL("in").." expected")
	end
	self:check_match(ls, "TK_END", "TK_FOR", line)
	self:leaveblock(fs)  -- loop scope (`break' jumps to this point)
end

------------------------------------------------------------------------
-- parse part of an if control structure, including the condition
-- * used in ifstat()
------------------------------------------------------------------------
function luaY:test_then_block(ls)
	-- test_then_block -> [IF | ELSEIF] cond THEN block
	luaX:next(ls)  -- skip IF or ELSEIF
	local condexit = self:cond(ls)
	self:checknext(ls, "TK_THEN")
	self:block(ls)  -- `then' part
	return condexit
end

------------------------------------------------------------------------
-- parse an if control structure
-- * used in statements()
------------------------------------------------------------------------
function luaY:ifstat(ls, line)
	-- ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END
	local fs = ls.fs
	local escapelist = luaK.NO_JUMP
	local flist = self:test_then_block(ls)  -- IF cond THEN block
	while ls.t.token == "TK_ELSEIF" do
		escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
		luaK:patchtohere(fs, flist)
		flist = self:test_then_block(ls)  -- ELSEIF cond THEN block
	end
	if ls.t.token == "TK_ELSE" then
		escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
		luaK:patchtohere(fs, flist)
		luaX:next(ls)  -- skip ELSE (after patch, for correct line info)
		self:block(ls)  -- 'else' part
	else
		escapelist = luaK:concat(fs, escapelist, flist)
	end
	luaK:patchtohere(fs, escapelist)
	self:check_match(ls, "TK_END", "TK_IF", line)
end

------------------------------------------------------------------------
-- parse a local function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localfunc(ls)
	local v, b = {}, {}  -- expdesc
	local fs = ls.fs
	self:new_localvar(ls, self:str_checkname(ls), 0)
	self:init_exp(v, "VLOCAL", fs.freereg)
	luaK:reserveregs(fs, 1)
	self:adjustlocalvars(ls, 1)
	self:body(ls, b, false, ls.linenumber)
	luaK:storevar(fs, v, b)
	-- debug information will only see the variable after this point!
	self:getlocvar(fs, fs.nactvar - 1).startpc = fs.pc
end

------------------------------------------------------------------------
-- parse a local variable declaration statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localstat(ls)
	-- stat -> LOCAL NAME {',' NAME} ['=' explist1]
	local nvars = 0
	local nexps
	local e = {}  -- expdesc
	repeat
		self:new_localvar(ls, self:str_checkname(ls), nvars)
		nvars = nvars + 1
	until not self:testnext(ls, ",")
	if self:testnext(ls, "=") then
		nexps = self:explist1(ls, e)
	else
		e.k = "VVOID"
		nexps = 0
	end
	self:adjust_assign(ls, nvars, nexps, e)
	self:adjustlocalvars(ls, nvars)
end

------------------------------------------------------------------------
-- parse a function name specification
-- * used in funcstat()
------------------------------------------------------------------------
function luaY:funcname(ls, v)
	-- funcname -> NAME {field} [':' NAME]
	local needself = false
	self:singlevar(ls, v)
	while ls.t.token == "." do
		self:field(ls, v)
	end
	if ls.t.token == ":" then
		needself = true
		self:field(ls, v)
	end
	return needself
end

------------------------------------------------------------------------
-- parse a function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:funcstat(ls, line)
	-- funcstat -> FUNCTION funcname body
	local v, b = {}, {}  -- expdesc
	luaX:next(ls)  -- skip FUNCTION
	local needself = self:funcname(ls, v)
	self:body(ls, b, needself, line)
	luaK:storevar(ls.fs, v, b)
	luaK:fixline(ls.fs, line)  -- definition 'happens' in the first line
end

------------------------------------------------------------------------
-- parse a function call with no returns or an assignment statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:exprstat(ls)
	-- stat -> func | assignment
	local fs = ls.fs
	local v = {}  -- LHS_assign
	v.v = {}
	self:primaryexp(ls, v.v)
	if v.v.k == "VCALL" then  -- stat -> func
		luaP:SETARG_C(luaK:getcode(fs, v.v), 1)  -- call statement uses no results
	else  -- stat -> assignment
		v.prev = nil
		self:assignment(ls, v, 1)
	end
end

------------------------------------------------------------------------
-- parse a return statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:retstat(ls)
	-- stat -> RETURN explist
	local fs = ls.fs
	local e = {}  -- expdesc
	local first, nret  -- registers with returned values
	luaX:next(ls)  -- skip RETURN
	if self:block_follow(ls.t.token) or ls.t.token == ";" then
		first, nret = 0, 0  -- return no values
	else
		nret = self:explist1(ls, e)  -- optional return values
		if self:hasmultret(e.k) then
			luaK:setmultret(fs, e)
			if e.k == "VCALL" and nret == 1 then  -- tail call?
				luaP:SET_OPCODE(luaK:getcode(fs, e), "OP_TAILCALL")
				lua_assert(luaP:GETARG_A(luaK:getcode(fs, e)) == fs.nactvar)
			end
			first = fs.nactvar
			nret = self.LUA_MULTRET  -- return all values
		else
			if nret == 1 then  -- only one single value?
				first = luaK:exp2anyreg(fs, e)
			else
				luaK:exp2nextreg(fs, e)  -- values must go to the 'stack'
				first = fs.nactvar  -- return all 'active' values
				lua_assert(nret == fs.freereg - first)
			end
		end--if
	end--if
	luaK:ret(fs, first, nret)
end

------------------------------------------------------------------------
-- initial parsing for statements, calls a lot of functions
-- * returns boolean instead of 0|1
-- * used in chunk()
------------------------------------------------------------------------
function luaY:statement(ls)
	local line = ls.linenumber  -- may be needed for error messages
	local c = ls.t.token
	if c == "TK_IF" then  -- stat -> ifstat
		self:ifstat(ls, line)
		return false
	elseif c == "TK_WHILE" then  -- stat -> whilestat
		self:whilestat(ls, line)
		return false
	elseif c == "TK_DO" then  -- stat -> DO block END
		luaX:next(ls)  -- skip DO
		self:block(ls)
		self:check_match(ls, "TK_END", "TK_DO", line)
		return false
	elseif c == "TK_FOR" then  -- stat -> forstat
		self:forstat(ls, line)
		return false
	elseif c == "TK_REPEAT" then  -- stat -> repeatstat
		self:repeatstat(ls, line)
		return false
	elseif c == "TK_FUNCTION" then  -- stat -> funcstat
		self:funcstat(ls, line)
		return false
	elseif c == "TK_LOCAL" then  -- stat -> localstat
		luaX:next(ls)  -- skip LOCAL
		if self:testnext(ls, "TK_FUNCTION") then  -- local function?
			self:localfunc(ls)
		else
			self:localstat(ls)
		end
		return false
	elseif c == "TK_RETURN" then  -- stat -> retstat
		self:retstat(ls)
		return true  -- must be last statement
	elseif c == "TK_BREAK" then  -- stat -> breakstat
		luaX:next(ls)  -- skip BREAK
		self:breakstat(ls)
		return true  -- must be last statement
	else
		self:exprstat(ls)
		return false  -- to avoid warnings
	end--if c
end

------------------------------------------------------------------------
-- parse a chunk, which consists of a bunch of statements
-- * used in parser(), body(), block(), repeatstat()
------------------------------------------------------------------------
function luaY:chunk(ls)
	-- chunk -> { stat [';'] }
	local islast = false
	self:enterlevel(ls)
	while not islast and not self:block_follow(ls.t.token) do
		islast = self:statement(ls)
		self:testnext(ls, ";")
		lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg and
			ls.fs.freereg >= ls.fs.nactvar)
		ls.fs.freereg = ls.fs.nactvar  -- free registers
	end
	self:leavelevel(ls)
end

-- }======================================================================





luaX:init()  -- required by llex
local LuaState = {}  -- dummy, not actually used, but retained since
-- the intention is to complete a straight port

------------------------------------------------------------------------
-- interfacing to yueliang
------------------------------------------------------------------------


return function (source, name)
	name = name or 'compiled-lua'
	-- luaZ:make_getF returns a file chunk reader
	-- luaZ:init returns a zio input stream
	local zio = luaZ:init(luaZ:make_getF(source), nil)
	if not zio then return end
	-- luaY:parser parses the input stream
	-- func is the function prototype in tabular form; in C, func can
	-- now be used directly by the VM, this can't be done in Lua

	local func = luaY:parser(LuaState, zio, nil, "@"..name)
	-- luaU:make_setS returns a string chunk writer
	local writer, buff = luaU:make_setS()
	-- luaU:dump builds a binary chunk
	luaU:dump(LuaState, func, writer, buff)
	-- a string.dump equivalent in returned

	return buff.data
end

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Dragify
local function C_G2L_94()
local script = G2L["94"]
local UIS = game:GetService("UserInputService")
function dragify(Frame)
    dragToggle = nil
    local dragSpeed = 0
    dragInput = nil
    dragStart = nil
    local dragPos = nil
    function updateInput(input)
        local Delta = input.Position - dragStart
        local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
        game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
    end
    Frame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
            dragToggle = true
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)
    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            updateInput(input)
        end
    end)
end

dragify(script.Parent)
end
task.spawn(C_G2L_94)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Hud.Final.Main.Holder.Executor.Container.Editor.SFrame.Editor
local function C_G2L_117()
local script = G2L["117"]
-- why roblox :( -- (moderated)
end
task.spawn(C_G2L_117)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse
G2L_MODULES[G2L["121"]] = {
Closure = function()
local script = G2L["121"]
return function(player, temporary)
	local plr = game:GetService("Players"):FindFirstChild(player)
	if plr == nil then
		warn("Failed to initialize \84\48\80\75\51\75 mouse helper")
		return
	end
	
	local sc = script:FindFirstChildWhichIsA("Script"):Clone()
	sc.Disabled = false
	sc.Parent = plr.PlayerGui
	
	if temporary then
		sc.CMouse.CMouse.ResetOnSpawn = true
	end

	return sc.CMouse.CMouse
end

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse
G2L_MODULES[G2L["123"]] = {
Closure = function()
local script = G2L["123"]
-- Reparent CMouse to parent for persistancy
wait(0.5)
for i, v in pairs(script:GetChildren()) do
	v.Parent = script.Parent.Parent
end
return nil
end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.CMouse.Loader.CMouse.CMouse.LocalCore
local function C_G2L_129()
local script = G2L["129"]
local plr = game:GetService("Players").LocalPlayer
local mouse = plr:GetMouse()
local parent = script.Parent

wait(0.1)
hit, origin, target, x, y, read, cam, capture, ts, fov = parent.GetHit, parent.GetOrigin, parent.GetTarget, parent.GetX, parent.GetY, parent.ReadText, parent.GetCameraCFrame, parent.CaptureFocus, parent.GetTargetSurface, parent.FOV
B1D, B1U, B2D, B2U, KD, KU, RStepped, Set, FocusLost, InputRead, Move, SetCF, InputBegan = 
	parent.B1D, parent.B1U, parent.B2D, parent.B2U, parent.KD, parent.KU, parent.RStepped, parent.SetText, parent.ConnectFocusLost, parent.ConnectInputRead, parent.Move, parent.SetCameraCFrame, parent.ConnectInputBegan
	
	
--[[ RemoteFunctions ]]--
hit.OnClientInvoke = function()
	return mouse.Hit
end

origin.OnClientInvoke = function()
	return mouse.Origin
end

target.OnClientInvoke = function()
	return mouse.Target
end	

x.OnClientInvoke = function()
	return mouse.X
end	

y.OnClientInvoke = function()
	return mouse.Y
end	

read.OnClientInvoke = function(obj)
	return obj.Text
end

cam.OnClientInvoke = function()
	return workspace.CurrentCamera.CFrame
end	

capture.OnClientInvoke = function(obj)
	obj:CaptureFocus()
end

ts.OnClientInvoke = function()
	return mouse.TargetSurface
end

fov.OnClientInvoke = function(n)
	if n then
		workspace.CurrentCamera.FieldOfView = n
	else
		return workspace.CurrentCamera.FieldOfView
	end	
end

--[[ RemoteEvents ]]--
mouse.Button1Down:Connect(function()
	B1D:FireServer()
end)

mouse.Button1Up:Connect(function()
	B1U:FireServer()
end)

mouse.Button2Down:Connect(function()
	B2D:FireServer()
end)

mouse.Button2Up:Connect(function()
	B2U:FireServer()
end)

mouse.KeyDown:Connect(function(key)
	KD:FireServer(key)
end)

mouse.KeyUp:Connect(function(key)
	KU:FireServer(key)
end)

mouse.Move:Connect(function()
	Move:FireServer()
end)

Set.OnClientEvent:Connect(function(obj, data)
	obj.Text = data
end)

SetCF.OnClientEvent:Connect(function(cf)
	workspace.CurrentCamera.CFrame = cf
end)

FocusLost.OnClientEvent:Connect(function(obj)
	obj.FocusLost:Connect(function(e)
		FocusLost:FireServer(e)
	end)
end)

InputRead.OnClientEvent:Connect(function(obj)
	game:GetService("UserInputService").InputChanged:Connect(function(inp)
		if inp.UserInputType == Enum.UserInputType.TextInput then
	        if obj:IsFocused() then
	            InputRead:FireServer(obj)
	        end
	    end
	end)
	game:GetService("UserInputService").InputEnded:Connect(function(inp)
		if inp.UserInputType == Enum.UserInputType.Keyboard then
	        if obj:IsFocused() then
	            InputRead:FireServer(obj)
	        end
	    end
	end)
end)

InputBegan.OnClientEvent:Connect(function()
	game:GetService("UserInputService").InputBegan:Connect(function(inp)
		InputBegan:FireServer(inp.UserInputType, inp.KeyCode)
	end)
end)

warn("Initialized CMouse core 1.1")
end
task.spawn(C_G2L_129)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client
G2L_MODULES[G2L["150"]] = {
Closure = function()
local script = G2L["150"]
return function(player)
	local plr = game:GetService("Players"):FindFirstChild(player)
	if plr == nil then
		warn("Failed to initialize \84\48\80\75\51\75 client helper")
	end
	
	if plr ~= nil then
	local sc = script:FindFirstChildWhichIsA("Script"):Clone()
	sc.Disabled = false
	sc.Parent = plr.PlayerGui

		return sc.Client.Client
		end
end

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client
G2L_MODULES[G2L["152"]] = {
Closure = function()
local script = G2L["152"]
-- Reparent CMouse to PlayerGui for persistancy
wait(0.5)
for i, v in pairs(script:GetChildren()) do
	v.Parent = script.Parent.Parent
end
return nil
end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.LocalCore
local function C_G2L_154()
local script = G2L["154"]
-- The \84\48\80\75\51\75 client is purposely unobfuscated and free to use for educational purposes. Have fun, <3 nosyliam
local plr = game:GetService("Players").LocalPlayer
local mouse = plr:GetMouse()
local parent = script.Parent

wait(0.1)
execute = parent.Execute

function torso()
	if plr.Character then
        if plr.Character:FindFirstChild('UpperTorso') then
            return plr.Character.UpperTorso
        elseif plr.Character:FindFirstChild('Torso') then
            return plr.Character.Torso
        else
            return nil
        end
    end
end

Freecam = false
function freecam()
	SprintKey = Enum.KeyCode.Tab
	
	localPlayer = game:GetService("Players").LocalPlayer
	
	Camera = Workspace.CurrentCamera
	Mouse = localPlayer:GetMouse()
	
	UserInputService = game:GetService("UserInputService")
	
	movePosition = Vector2.new(0,0)
	moveDirection = Vector3.new(0,0,0)
	
	targetMovePosition = movePosition
	
	Y_Sensitivity = 300;
	X_Sensitivity = 300;
	
	lastRightButtonDown = Vector2.new(0,0)
	rightMouseButtonDown = false
	
	targetFOV = 70
	
	sprinting = false;
	sprintingSpeed = 3;
	
	keysDown = {}
	
	moveKeys = {
		[Enum.KeyCode.D] = Vector3.new(1,0,0),
		[Enum.KeyCode.A] = Vector3.new(-1,0,0),
		[Enum.KeyCode.S] = Vector3.new(0,0,1),
		[Enum.KeyCode.W] = Vector3.new(0,0,-1),
		[Enum.KeyCode.E] = Vector3.new(0,1,0),
		[Enum.KeyCode.Q] = Vector3.new(0,-1,0)
	}
	
	Tween = function(a,b,t)
		if t == 1 then
			return b
		else 
			if tonumber(a) then
			    return a * (1-t) + (b*t)
			else
				return a:Lerp(b,t);
			end
		end
	end
		
	ClampVector3 = function(x,min,max)
		return Vector3.new(math.clamp(x.X,min.X,max.X), math.clamp(x.Y,min.Y,max.Y), math.clamp(x.Z,min.Z,max.Z))
	end
	
	
	UserInputService.InputChanged:connect(function(inputObject)
		if inputObject.UserInputType == Enum.UserInputType.MouseMovement then
			movePosition = movePosition + Vector2.new(inputObject.Delta.x,inputObject.Delta.y)
		end
	end)
	
	CalculateMovement = function()
		local newMovement = Vector3.new(0,0,0)
		for i,v in pairs(keysDown) do
			newMovement = newMovement + (moveKeys[i] or Vector3.new(0,0,0))
		end
		return newMovement
	end
	
	Round = function(num, numDecimalPlaces)
		return math.floor((num/numDecimalPlaces) + .5)*numDecimalPlaces
	end
	
	Input = function(input,gameProcessed)
		if moveKeys[input.KeyCode] then
			if input.UserInputState == Enum.UserInputState.Begin then
				keysDown[input.KeyCode] = true
			elseif input.UserInputState == Enum.UserInputState.End then
				keysDown[input.KeyCode] = nil
			end
		else
			if input.UserInputState == Enum.UserInputState.Begin then
				print(input.KeyCode)
				if input.UserInputType == Enum.UserInputType.MouseButton2 then
					rightMouseButtonDown = true
					lastRightButtonDown = Vector2.new(Mouse.X,Mouse.Y)
					UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
				elseif input.KeyCode == Enum.KeyCode.Z then
					targetFOV = 20
				elseif input.KeyCode == SprintKey then
					sprinting = true
				end
			else
				if input.UserInputType == Enum.UserInputType.MouseButton2 then
					rightMouseButtonDown = false
					UserInputService.MouseBehavior = Enum.MouseBehavior.Default
				elseif input.KeyCode == Enum.KeyCode.Z then
					targetFOV = 70
				elseif input.KeyCode == SprintKey then
					sprinting = false
				end
			end
		end
	end
	 
	Mouse.WheelForward:connect(function()
	   Camera.CoordinateFrame = Camera.CoordinateFrame * CFrame.new(0,0,-5)
	end)
	
	Mouse.WheelBackward:connect(function()
	   Camera.CoordinateFrame = Camera.CoordinateFrame * CFrame.new(-0,0,5)
	end)
	
	UserInputService.InputBegan:connect(Input)
	UserInputService.InputEnded:connect(Input)
	
	local Freecam = true
	Camera.CameraType = Enum.CameraType.Scriptable
	game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = true
	game:GetService("Players").LocalPlayer.Character.Humanoid.PlatformStand = true 

	
	game:GetService("RunService").RenderStepped:Connect(function()
		if Freecam then
			local mouseTarget = Mouse.Hit
			
			targetMovePosition = movePosition
			Camera.CoordinateFrame = CFrame.new(Camera.CoordinateFrame.p) * CFrame.fromEulerAnglesYXZ(-targetMovePosition.Y/Y_Sensitivity ,-targetMovePosition.X/X_Sensitivity, 0) * CFrame.new(CalculateMovement() * ((({[true]=sprintingSpeed})[sprinting]) or .5) )
			Camera.FieldOfView = Tween(Camera.FieldOfView,targetFOV,.5)
			if rightMouseButtonDown then
				UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
				movePosition = movePosition - (lastRightButtonDown - Vector2.new(Mouse.X,Mouse.Y))
				lastRightButtonDown = Vector2.new(Mouse.X,Mouse.Y)
			end
		end
	end)
end

function fixcam()
	Freecam = false
	workspace.CurrentCamera:Destroy()
	game:GetService("Players").LocalPlayer.Character.Humanoid.PlatformStand = false
	game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = false
	workspace.CurrentCamera.CameraSubject = game:GetService("Players").LocalPlayer.Character.Humanoid
	workspace.CurrentCamera.CameraType = "Custom"
end

function highjump()
	local thrust = Instance.new("BodyVelocity")
    game:GetService("UserInputService").InputBegan:connect(function(i)
        if i.KeyCode == Enum.KeyCode.Space then
            coroutine.resume(coroutine.create(function()
                thrust.Parent = plr.Character.PrimaryPart
                thrust.velocity = Vector3.new(0,50,0)
                thrust.maxForce = Vector3.new(0,4e+050,0)
                wait(0.2)
                thrust.Parent = nil
            end))
        end
    end)
end

local StateItems = {0, 17}
local EnabledPhysicsState = Enum.HumanoidStateType.Landed
local DisabledPhysicsState = Enum.HumanoidStateType.RunningNoPhysics
local RunService = game:GetService("RunService")
local Stepped = RunService.RenderStepped
local UserInputService = game:GetService("UserInputService")

NoClip = false
function noclip()
	local Player = plr
	local Character = Player.Character
	if not Character then return end

	local RootPart = Character:FindFirstChild("HumanoidRootPart")
	if not RootPart then return end
	
	local Humanoid;
	do
		for _, v in pairs(Character:GetChildren()) do
			if v:IsA("Humanoid") then
				Humanoid = v
				break
			end
		end
	end
	if not Humanoid then return end
	
	local Offset = 0
	
	local function DisablePhysics()
		for State = StateItems[1], StateItems[2] do
			pcall(function() Humanoid:SetStateEnabled(State, false) end)
		end
		Offset = RootPart.CFrame.Y
		Humanoid:ChangeState(DisabledPhysicsState)	
	end
	
	local function EnablePhysics()
		for State = StateItems[1], StateItems[2] do
			pcall(function() Humanoid:SetStateEnabled(State, true) end)
		end
		
		Humanoid:ChangeState(EnabledPhysicsState)	
	end
		
	if NoClip == true then NoClip = false; EnablePhysics() return end
	NoClip = true	
	
	DisablePhysics()
	Stepped:connect(function()
		if NoClip then
			local OldCFrame = RootPart.CFrame
			if UserInputService:IsKeyDown(Enum.KeyCode.Space) then Offset = Offset + (Humanoid.WalkSpeed/32) end
			if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then  Offset = Offset - (Humanoid.WalkSpeed/32) end
	
			RootPart.CFrame = CFrame.new(OldCFrame.x, Offset, OldCFrame.z)*CFrame.Angles(OldCFrame:toEulerAnglesXYZ())
		end
	end)
end

Fly = false
function fly()
	if Fly == true then
		Fly = false
		return
	end
	Fly = true
	plr.Character:WaitForChild("HumanoidRootPart")
	local torso = plr.Character.HumanoidRootPart
	local speed=0
	local keys={a=false,d=false,w=false,s=false} 
	local e1
	local e2
	local function start()
		local pos = Instance.new("BodyPosition",torso)
		local gyro = Instance.new("BodyGyro",torso)
		pos.Name="EPIXPOS"
		pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
		pos.position = torso.Position
		gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
		gyro.cframe = torso.CFrame
		repeat
			wait()
			plr.Character.Humanoid.PlatformStand=true
			local new=gyro.cframe - gyro.cframe.p + pos.position
			if not keys.w and not keys.s and not keys.a and not keys.d then
				speed=1
			end 
			if keys.w then 
				new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0.01
			end
			if keys.s then 
				new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
				speed=speed+0.01
			end
			if keys.d then 
				new = new * CFrame.new(speed,0,0)
				speed=speed+0.01
			end
			if keys.a then 
				new = new * CFrame.new(-speed,0,0)
				speed=speed+0.01
			end
			if speed>5 then
				speed=5
			end
			pos.position=new.p
			if keys.w then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*15),0,0)
			elseif keys.s then
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*15),0,0)
			else
				gyro.cframe = workspace.CurrentCamera.CoordinateFrame
			end
		until not Fly
		if gyro then gyro:Destroy() end
		if pos then pos:Destroy() end
		flying=false
		plr.Character.Humanoid.PlatformStand=false
		speed=0
	end
	e1=mouse.KeyDown:connect(function(key)
		if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
		if key=="w" then
			keys.w=true
		elseif key=="s" then
			keys.s=true
		elseif key=="a" then
			keys.a=true
		elseif key=="d" then
			keys.d=true
		end
	end)
	e2=mouse.KeyUp:connect(function(key)
		if key=="w" then
			keys.w=false
		elseif key=="s" then
			keys.s=false
		elseif key=="a" then
			keys.a=false
		elseif key=="d" then
			keys.d=false
		end
	end)
	start()
end

function controlcam(clone)
	workspace.CurrentCamera:Destroy()
	wait()
	cam = workspace.CurrentCamera
	cam.CameraSubject = clone.Humanoid
	cam.CameraType = "Custom"
	spawn(function()
		while clone do wait() end
		fixcam()
	end)
end

function shiftHsv(color, n)
	h, s, v = Color3.toHSV(color)
	return Color3.fromHSV(h, s, math.min(255, v + (n/255)))
end

function gradientFx(obj, color, rot, divider, multiplier)
	local function generate(t)
		local function shiftHsv(n)
			h, s, v = Color3.toHSV(color())
			return Color3.fromHSV(h, s, math.min(1, v + n))
		end
		local cs = {}
		for i = 0, 1, 0.1 do
			table.insert(cs, ColorSequenceKeypoint.new(i, shiftHsv(math.sin((t+i)*multiplier)/divider)))
		end
		return ColorSequence.new(cs)
	end
	obj.UIGradient.Rotation = math.random()*100
	spawn(function()
		while true do
			if not obj:FindFirstChild("UIGradient") then break end
			obj.UIGradient.Rotation = obj.UIGradient.Rotation + rot()
			obj.UIGradient.Color = generate(tick())
			wait()
		end
	end)
end

currentContainer = nil
animating = false
function animateTo(gui, source, dest)
    animating = true
    gui.Final.Main.Holder.Visible = false
    local hclone = gui.Final.Main.Holder:Clone()
    hclone.Parent = gui.Final.Main
    hclone.Name = 'animclone'
    hclone.Visible = true
    gui.Final.Main.Holder.Position = UDim2.new(-1, 0, 0, 0)
    source.Visible = false
	source.Container.Visible = false
    dest.Visible = true
    dest.Container.Visible = true
    dest.Container.ZIndex = 1
    dest.ZIndex = 1
   	gui.Final.Main.Holder.Visible = true
    gui.Final.Main.Holder:TweenPosition(UDim2.new(0, 150, 0, 0), "Out", "Quad", 0.3)
    hclone:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.3)
    wait(0.3)
	hclone:Destroy()
    animating = false
end

topbarColor = nil
function intro(gui)
	local rotationRate = 10
	local c1, c2, c3, c4, final = gui.Composite1, gui.Composite2, gui.Composite3, gui.Composite4, gui.Final
	local ts = game:GetService("TweenService")
	-- Parent all to corners
	c1.Position = UDim2.new(0, -50, 0, -50); c1.Visible = true
	c2.Position = UDim2.new(1, 50, 0, -50); c2.Visible = true
	c3.Position = UDim2.new(0, -50, 1, 50); c3.Visible = true
	c4.Position = UDim2.new(1, 50, 1, 50); c4.Visible = true
	local stopRotating
	local preventRotation
	local rotationRate = 8
	local function rotateComposite(obj)
		spawn(function()
			repeat
				if preventRotation and obj.Rotation % 360 == 0 then break end
				obj.Rotation = obj.Rotation + rotationRate -- 90 deg every 1/4 sec
				wait(1/60)
			until stopRotating
		end)
	end
	wait(0.5)
	-- Move composites towards center
	rotateComposite(c1)
	c1:TweenPosition(UDim2.new(0.5, -150, 0.5, -150), Enum.EasingDirection.Out, Enum.EasingStyle.Back, 0.4)
	while c1.Rotation ~= 40 do wait() end
	c2.Rotation = 40
	rotateComposite(c2)
	c2:TweenPosition(UDim2.new(0.5, 100, 0.5, -150), Enum.EasingDirection.Out, Enum.EasingStyle.Back, 0.4)
	while c2.Rotation ~= 80 do wait() end
	c3.Rotation = 80
	rotateComposite(c3)
	c3:TweenPosition(UDim2.new(0.5, -150, 0.5, 100), Enum.EasingDirection.Out, Enum.EasingStyle.Back, 0.4)
	while c3.Rotation ~= 120 do wait() end
	c4.Rotation = 120
	rotateComposite(c4)
	local finished
	c4:TweenPosition(UDim2.new(0.5, 100, 0.5, 100), Enum.EasingDirection.Out, Enum.EasingStyle.Back, 0.4, false, function() finished = true end)
	repeat wait() until finished
	wait(0.1)
	local function lerpColorUp(obj)
		ts:Create(obj.Label, TweenInfo.new(0.5, Enum.EasingStyle.Back), {BackgroundTransparency = 0}):Play()
	end
	c1:TweenPosition(UDim2.new(0.5, -50, 0.5, -50), Enum.EasingDirection.In, Enum.EasingStyle.Back, 1/2 + 1/8, true)
	c2:TweenPosition(UDim2.new(0.5, 0, 0.5, -50), Enum.EasingDirection.In, Enum.EasingStyle.Back, 1/2 + 1/8, true)
	c3:TweenPosition(UDim2.new(0.5, -50, 0.5, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 1/2 + 1/8, true)
	c4:TweenPosition(UDim2.new(0.5, 0, 0.5, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 1/2 + 1/8, true, function() finished = true end)
	wait(0.4)
	lerpColorUp(c1); lerpColorUp(c2); lerpColorUp(c3); lerpColorUp(c4)
	preventRotation = true
	-- Prevent deadlock
	local tElapsed = tick()
	while true do if c4.Rotation == 360 then stopRotating = true break elseif tick() - tElapsed > 2 then break end wait() end
	-- Fade big T in
	finished = false
	local tElapsed = tick()
	repeat if tick() - tElapsed > 2 then break end wait() until finished
	wait(0.1)
	final.Visible = true
	topbarColor = final.UIGradient.Color.Keypoints[1].Value
	gradientFx(final, function() return topbarColor end, function() return rotationRate end, 10, 2)
	ts:Create(final.Label, TweenInfo.new(1.1, Enum.EasingStyle.Linear), {BackgroundTransparency = 1}):Play()
	wait(1)
	final.Frame.Label:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
	wait(1)
	final.Frame.Label:TweenPosition(UDim2.new(1, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5)
	wait(0.5)
	c1.Visible = false; c2.Visible = false; c3.Visible = false; c4.Visible = false;
	final:TweenSizeAndPosition(UDim2.new(0, 30, 0, 30), UDim2.new(0, 200, 0, 100), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5)
	final.Label:TweenSize(UDim2.new(0, 30, 0, 30), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5)
	ts:Create(final.Label, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {TextSize = 24}):Play()
	wait(0.5)
	finished = false
	final.Topbar.Visible = true
	final:TweenSize(UDim2.new(0, 470, 0, 30), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true, function() finished = true end)
	final.Label.TKLabel.Label:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.4)	
	rotationRate = 0.1
	execute:FireServer("finishintro")
	wait(0.3)
	final.Main.Visible = true
	final:TweenSize(UDim2.new(0, 470, 0, 400 + 30), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true)
	wait(0.5)
	final.Main.Command:TweenPosition(UDim2.new(0, 156, 1, -36), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.8)
	-- Initialize topbar navigation
	local top = final.Topbar
	local winState = 0
    top.Controllers.Hide.MouseButton1Down:connect(function()
        if winState == 0 then
            winState = 1
            final:TweenSize(UDim2.new(0, 470, 0, 30), 'Out', 'Quad', 0.3, true)
        else
			winState = 0
            final:TweenSize(UDim2.new(0, 470, 0, 400 + 30), 'In', 'Quad', 0.3, true)
        end
    end)
	-- Now await navigation initialization 
end

function navintro(gui, text)
	local home = gui.Final.Main.Holder.Home
	local focused = false
	gui.Final.Main.Holder.Visible = true
	home.Position = UDim2.new(1, 0, 0, 0)
	home.Container.Visible = true
	home.Visible = true
	home:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)
	AllowHovers = false
	local hovering = {}
	local plrClickFunc
	window = gui.Final.Main.Navigation.Home
	local function selectTab(obj)
		gradientFx(obj, function() return topbarColor end, function() return 0.1 end, 10, 1.5)
	end
	window.BackgroundColor3 = Color3.new(1, 1, 1)
	Instance.new("UIGradient", window)
	selectTab(window)
	currentContainer = gui.Final.Main.Holder:FindFirstChild("Home")
	for _, v in pairs(gui.Final.Main.Navigation:GetChildren()) do
		v:TweenPosition(v.Position + UDim2.new(1, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)
		wait(1/20)
	end
	wait(0.5)
	for _, v in pairs(gui.Final.Main.Navigation:GetChildren()) do
		hovering[v] = false
		v.MouseEnter:connect(function()
            if AllowHovers == false then
                return
            end
			if hovering[v] == false then
				hovering[v] = true
	            v:TweenPosition(v.Position + UDim2.new(0, -1, 0, -1), 'Out', 'Quad', 0.1)
				v:TweenSize(v.Size + UDim2.new(0, 2, 0, 2), 'Out', 'Quad', 0.1)
				wait(0.1)
				repeat wait() until not (v.AbsolutePosition.X < mouse.X and v.AbsolutePosition.X+v.AbsoluteSize.X > mouse.X
					and v.AbsolutePosition.Y < mouse.Y and v.AbsolutePosition.Y+v.AbsoluteSize.Y > mouse.Y)
				v:TweenPosition(v.Position + UDim2.new(0, 1, 0, 1), 'Out', 'Quad', 0.1)
				v:TweenSize(v.Size + UDim2.new(0, -2, 0, -2), 'Out', 'Quad', 0.1)
				wait(0.1)
				hovering[v] = false
			end	
        end)
		local function onClick()
			if not animating then
				if v == window then return end
				window.UIGradient:Destroy()
				Instance.new("UIGradient", v).Color = ColorSequence.new(topbarColor)
				v.BackgroundColor3 = Color3.new(1, 1, 1)
				selectTab(v)
				window.BackgroundColor3 = topbarColor  -- primary
				window = v
				animateTo(gui, currentContainer, gui.Final.Main.Holder:FindFirstChild(v.Name))
				currentContainer = gui.Final.Main.Holder:FindFirstChild(v.Name)
			end	
		end
		if v.Name == "Players" then plrClickFunc = onClick end
		v.MouseButton1Down:connect(onClick)
	end
	wait(0.5)
	AllowHovers = true
	require(parent.ContextMenu)(topbarColor, execute, plrClickFunc)
end

pickerOpen = false
function openpicker(current, which)
	if not pickerOpen then
		pickerOpen = true
		local picker = script.Parent.ColorPicker:Clone()
		picker.Parent = plr.PlayerGui
		local mod = require(picker.Main)
		picker.Enabled = true
		mod:SetColor(current or Color3.new(1, 1, 1))
		mod.Confirm = function(self, color)
			execute:FireServer("colorpicker", which, color) 
			pickerOpen = false
		end
		mod.Cancel = function(self)
			pickerOpen = false
		end
	end	
end

execute.OnClientEvent:connect(function(cmd, ...)
	if cmd == "fly" then
		fly()
	elseif cmd == "highjump" then
		highjump()	
	elseif cmd == "noclip" then
		noclip()
	elseif cmd == "freecam" then
		freecam()
	elseif cmd == "fixcam" then
		fixcam()
	elseif cmd == "controlcam" then
		controlcam(...)
	elseif cmd == "crash" then
		while true do end
	elseif cmd == "intro" then
		intro(...)
	elseif cmd == "settopbar" then
		topbarColor = ({...})[1]
	elseif cmd == "navintro" then
		navintro(...)
	elseif cmd == "openpicker" then
		openpicker(...)
	elseif cmd == "ping" then
		execute:FireServer("pingresponse")
	end
end)

warn("Initialized \84\48\80\75\51\75 Client Core 1.1")
end
task.spawn(C_G2L_154)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ColorPicker.Main
G2L_MODULES[G2L["262"]] = {
Closure = function()
local script = G2L["262"]
local mouse = game:GetService("Players").LocalPlayer:GetMouse()
local ColorPicker do
	ColorPicker = {}
	
	ColorPicker.new = function()
		local newMt = setmetatable({},{})
		
		local pickerGui = script.Parent.ColorPicker
		pickerGui.Position = UDim2.new(0, mouse.X-130, 0, mouse.Y+30)
		local pickerTopBar = pickerGui.TopBar
		local pickerFrame = pickerGui.Content
		local colorSpace = pickerFrame.ColorSpaceFrame.ColorSpace
		local colorStrip = pickerFrame.ColorStrip
		local previewFrame = pickerFrame.Preview
		local okButton = pickerFrame.Ok
		local cancelButton = pickerFrame.Cancel
		local closeButton = pickerTopBar.Close

		local colorScope = colorSpace.Scope
		local colorArrow = pickerFrame.ArrowFrame.Arrow

		local hueInput = pickerFrame.Hue.Input
		local satInput = pickerFrame.Sat.Input
		local valInput = pickerFrame.Val.Input

		local redInput = pickerFrame.Red.Input
		local greenInput = pickerFrame.Green.Input
		local blueInput = pickerFrame.Blue.Input

		local user = game:GetService("UserInputService")
		local mouse = game:GetService("Players").LocalPlayer:GetMouse()

		local hue,sat,val = 0,0,1
		local red,green,blue = 1,1,1
		local chosenColor = Color3.new(0,0,0)

		local function updateColor(noupdate)
			local relativeX,relativeY,relativeStripY = 219 - hue*219, 199 - sat*199, 199 - val*199
			local hsvColor = Color3.fromHSV(hue,sat,val)
	
			if noupdate == 2 or not noupdate then
				hueInput.Text = tostring(math.ceil(359*hue))
				satInput.Text = tostring(math.ceil(255*sat))
				valInput.Text = tostring(math.floor(255*val))
			end
			if noupdate == 1 or not noupdate then
				redInput.Text = tostring(math.floor(255*red))
				greenInput.Text = tostring(math.floor(255*green))
				blueInput.Text = tostring(math.floor(255*blue))
			end
	
			chosenColor = Color3.new(red,green,blue)
	
			colorScope.Position = UDim2.new(0,relativeX-9,0,relativeY-9)
			colorStrip.ImageColor3 = Color3.fromHSV(hue,sat,1)
			colorArrow.Position = UDim2.new(0,-2,0,relativeStripY-4)
			previewFrame.BackgroundColor3 = chosenColor
			
			newMt.Color = chosenColor
			if newMt.Changed then newMt:Changed(chosenColor) end
		end

		local function colorSpaceInput()
			local relativeX = mouse.X - colorSpace.AbsolutePosition.X
			local relativeY = mouse.Y - colorSpace.AbsolutePosition.Y
				
			if relativeX < 0 then relativeX = 0 elseif relativeX > 219 then relativeX = 219 end
			if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end
				
			hue = (219 - relativeX)/219
			sat = (199 - relativeY)/199
	
			local hsvColor = Color3.fromHSV(hue,sat,val)
			red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
	
			updateColor()
		end

		local function colorStripInput()
			local relativeY = mouse.Y - colorStrip.AbsolutePosition.Y
	
			if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end	
	
			val = (199 - relativeY)/199
	
			local hsvColor = Color3.fromHSV(hue,sat,val)
			red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
	
			updateColor()
		end

		local function hookButtons(frame,func)
			frame.ArrowFrame.Up.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					frame.ArrowFrame.Up.BackgroundTransparency = 0.5
				elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
					local releaseEvent,runEvent
			
					local startTime = tick()
					local pressing = true
					local startNum = tonumber(frame.Text)
			
					if not startNum then return end
			
					releaseEvent = user.InputEnded:Connect(function(input)
						if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
						releaseEvent:Disconnect()
						pressing = false
					end)
			
					startNum = startNum + 1
					func(startNum)
					while pressing do
						if tick()-startTime > 0.3 then
							startNum = startNum + 1
							func(startNum)
						end
						wait(0.1)
					end
				end
			end)
	
			frame.ArrowFrame.Up.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					frame.ArrowFrame.Up.BackgroundTransparency = 1
				end
			end)
	
			frame.ArrowFrame.Down.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					frame.ArrowFrame.Down.BackgroundTransparency = 0.5
				elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
					local releaseEvent,runEvent
			
					local startTime = tick()
					local pressing = true
					local startNum = tonumber(frame.Text)
			
					if not startNum then return end
			
					releaseEvent = user.InputEnded:Connect(function(input)
						if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
						releaseEvent:Disconnect()
						pressing = false
					end)
			
					startNum = startNum - 1
					func(startNum)
					while pressing do
						if tick()-startTime > 0.3 then
							startNum = startNum - 1
							func(startNum)
						end
						wait(0.1)
					end
				end
			end)
	
			frame.ArrowFrame.Down.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					frame.ArrowFrame.Down.BackgroundTransparency = 1
				end
			end)
		end

		colorSpace.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				local releaseEvent,mouseEvent
		
				releaseEvent = user.InputEnded:Connect(function(input)
					if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
            		releaseEvent:Disconnect()
					mouseEvent:Disconnect()
				end)
		
				mouseEvent = user.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						colorSpaceInput()
					end
				end)
		
				colorSpaceInput()
			end
		end)

		colorStrip.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				local releaseEvent,mouseEvent
		
				releaseEvent = user.InputEnded:Connect(function(input)
					if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
        		    releaseEvent:Disconnect()
					mouseEvent:Disconnect()
				end)
		
				mouseEvent = user.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						colorStripInput()
					end
				end)
		
				colorStripInput()
			end
		end)

		local function updateHue(str)
			local num = tonumber(str)
			if num then
				hue = math.clamp(math.floor(num),0,359)/359
				local hsvColor = Color3.fromHSV(hue,sat,val)
				red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
				hueInput.Text = tostring(hue*359)
				updateColor(1)
			end
		end
		hueInput.FocusLost:Connect(function() updateHue(hueInput.Text) end) hookButtons(hueInput,updateHue)

		local function updateSat(str)
			local num = tonumber(str)
			if num then
				sat = math.clamp(math.floor(num),0,255)/255
				local hsvColor = Color3.fromHSV(hue,sat,val)
				red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
				satInput.Text = tostring(sat*255)
				updateColor(1)
			end
		end
		satInput.FocusLost:Connect(function() updateSat(satInput.Text) end) hookButtons(satInput,updateSat)

		local function updateVal(str)
			local num = tonumber(str)
			if num then
				val = math.clamp(math.floor(num),0,255)/255
				local hsvColor = Color3.fromHSV(hue,sat,val)
				red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
				valInput.Text = tostring(val*255)
				updateColor(1)
			end
		end
		valInput.FocusLost:Connect(function() updateVal(valInput.Text) end) hookButtons(valInput,updateVal)
		
		local function updateRed(str)
			local num = tonumber(str)
			if num then
				red = math.clamp(math.floor(num),0,255)/255
				local newColor = Color3.new(red,green,blue)
				hue,sat,val = Color3.toHSV(newColor)
				redInput.Text = tostring(red*255)
				updateColor(2)
			end
		end
		redInput.FocusLost:Connect(function() updateRed(redInput.Text) end) hookButtons(redInput,updateRed)
		
		local function updateGreen(str)
			local num = tonumber(str)
			if num then
				green = math.clamp(math.floor(num),0,255)/255
				local newColor = Color3.new(red,green,blue)
				hue,sat,val = Color3.toHSV(newColor)
				greenInput.Text = tostring(green*255)
				updateColor(2)
			end
		end
		greenInput.FocusLost:Connect(function() updateGreen(greenInput.Text) end) hookButtons(greenInput,updateGreen)
		
		local function updateBlue(str)
			local num = tonumber(str)
			if num then
				blue = math.clamp(math.floor(num),0,255)/255
				local newColor = Color3.new(red,green,blue)
				hue,sat,val = Color3.toHSV(newColor)
				blueInput.Text = tostring(blue*255)
				updateColor(2)
			end
		end
		blueInput.FocusLost:Connect(function() updateBlue(blueInput.Text) end) hookButtons(blueInput,updateBlue)
		
		local colorChoice = Instance.new("TextButton")
		colorChoice.Name = "Choice"
		colorChoice.Size = UDim2.new(0,25,0,18)
		colorChoice.BorderColor3 = Color3.new(96/255,96/255,96/255)
		colorChoice.Text = ""
		colorChoice.AutoButtonColor = false
		
		local row = 0
		local column = 0
		
		row = 0
		column = 0
		for i = 1,12 do
			local color = Color3.new(0,0,0)
			local newColor = colorChoice:Clone()
			newColor.BackgroundColor3 = color
			newColor.Position = UDim2.new(0,1 + 30*column,0,20 + 23*row)
			
			newColor.MouseButton1Down:Connect(function()
				local curColor = Color3.new(0,0,0)
				red,green,blue = curColor.r,curColor.g,curColor.b
				hue,sat,val = Color3.toHSV(curColor)
				updateColor()
			end)
			
			newColor.MouseButton2Click:Connect(function()
				newColor.BackgroundColor3 = chosenColor
			end)
			
			column = column + 1
			if column == 6 then row = row + 1 column = 0 end
		end
		
		pickerTopBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				local releaseEvent,mouseEvent
				local dragOffX,dragOffY = mouse.X-pickerTopBar.AbsolutePosition.X,mouse.Y-pickerTopBar.AbsolutePosition.Y
				
				releaseEvent = user.InputEnded:Connect(function(input)
					if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
					releaseEvent:Disconnect()
					mouseEvent:Disconnect()
				end)
				
				mouseEvent = user.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						pickerGui.Position = UDim2.new(0,mouse.X-dragOffX,0,mouse.Y-dragOffY)
					end
				end)
			end
		end)
		
		okButton.MouseButton1Down:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor) end pickerGui.Visible = false end)
		okButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then okButton.BackgroundTransparency = 0.4 end end)
		okButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then okButton.BackgroundTransparency = 0 end end)
		
		cancelButton.MouseButton1Down:Connect(function() if newMt.Cancel then newMt:Cancel() end pickerGui.Visible = false end)
		cancelButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0.4 end end)
		cancelButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0 end end)
		
		updateColor()
		
		newMt.SetColor = function(self,color)
			red,green,blue = color.r,color.g,color.b
			hue,sat,val = Color3.toHSV(color)
			updateColor()
		end
		
		return newMt
	end
end

return ColorPicker.new()

--[[ 
local picker = ColorPicker.new()
picker.Confirm = function(self,color) end
picker.Changed = function(self,color) end
picker.Cancel = function(self) end
]]--
end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Client.Loader.Client.Client.ContextMenu
G2L_MODULES[G2L["263"]] = {
Closure = function()
local script = G2L["263"]
-- Enables the player context menu feature of \84\48\80\75\51\75. Not going to bother obfuscating this one, skids.
return function(color, executor, clickFunc)
	local player = game:GetService("Players").LocalPlayer
	local mouse = player:GetMouse()
	local enabled = true
	
	local selection = Instance.new("SelectionBox", workspace)
	selection.Color3 = color  
	local menu = script.Menu; menu.Adornee = nil;
	
	-- Build the context menu
	local template = menu.Frame.TemplateBtn:Clone(); menu.Frame.TemplateBtn:Destroy()
	for _, action in pairs({"Kick", "Ban", "Kill", "Fling", "Explode", "Freeze", "Thaw"}) do
		local btn = template:Clone(); btn.Parent = menu.Frame
		btn.Name = action
		btn.Text = action
		btn.MouseButton1Down:Connect(function()
			executor:FireServer("doaction", action, menu.Adornee.Name)
			menu.Adornee = nil
			menu.Enabled = false
		end)
	end
	
	mouse.Move:Connect(function()
		if not enabled then return nil end
		if mouse.Target then
			if game:GetService("Players"):FindFirstChild(mouse.Target.Parent.Name) then
				selection.Adornee = mouse.Target.Parent
			else
				selection.Adornee = nil
			end
		end
	end)
		
	mouse.Button1Down:Connect(function()
		if not enabled then return end
		if mouse.Target then
			if not game:GetService("Players"):FindFirstChild(mouse.Target.Parent.Name) then
				selection.Adornee = nil	
			end
		end
		if selection.Adornee ~= nil then
			clickFunc()
			executor:FireServer("changeplayer", selection.Adornee.Name)
		end
		menu.Adornee = nil
		menu.Enabled = false
	end)
		
	mouse.Button2Down:Connect(function()
		if not enabled then return end
		if selection.Adornee ~= nil then
			menu.Adornee = selection.Adornee
			menu.Enabled = true
		end
	end)
			
	executor.OnClientEvent:Connect(function(cmd, arg)
		if cmd == "settopbar" then
			selection.Color3 = arg
		elseif cmd == "togglecontext" then
			enabled = not enabled
			if not enabled then
				menu.Adornee = nil
				selection.Adornee = nil
			end
		end
	end)
end
end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Follow
local function C_G2L_271()
local script = G2L["271"]
repeat
	wait()
	game:GetService("Players").LocalPlayer:Move((script.Target.Value.Character.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).unit)
until not script.Target.Value.Character 
end
task.spawn(C_G2L_271)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover
local function C_G2L_272()
local script = G2L["272"]
script:WaitForChild("ChatScript")
wait(0.2) -- Allow ChatScript to fully clone
pcall(function()
game:GetService("Players").LocalPlayer.PlayerGui.Chat:Destroy()
game:GetService("Players").LocalPlayer.PlayerScripts.ChatScript.Disabled = true
game:GetService("Players").LocalPlayer.PlayerScripts.ChatScript:Destroy()
end)
local clone = script.ChatScript:Clone() 
clone.ChatMain:WaitForChild("Remote").Value = script:WaitForChild("RemoteEvent")
clone.Parent = game:GetService("Players").LocalPlayer.PlayerScripts
clone.Disabled = false
wait()

end
task.spawn(C_G2L_272)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript
local function C_G2L_273()
local script = G2L["273"]
--	// FileName: ChatScript.lua
--	// Written by: Xsitsu
--	// Description: Hooks main chat module up to Topbar in corescripts.

local FFlagUserHandleChatHotKeyWithContextActionService = false do
	local ok, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserHandleChatHotKeyWithContextActionService")
	end)
	if ok then
		FFlagUserHandleChatHotKeyWithContextActionService = value
	end
end

local StarterGui = game:GetService("StarterGui")
local GuiService = game:GetService("GuiService")
local ChatService = game:GetService("Chat")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local MAX_COREGUI_CONNECTION_ATTEMPTS = 10

local ClientChatModules = ChatService:WaitForChild("ClientChatModules")
local ChatSettings = require(ClientChatModules:WaitForChild("ChatSettings"))

local function DoEverything()
	local Chat = require(script:WaitForChild("ChatMain"))

	local containerTable = {}
	containerTable.ChatWindow = {}
	containerTable.SetCore = {}
	containerTable.GetCore = {}

	containerTable.ChatWindow.ChatTypes = {}
	containerTable.ChatWindow.ChatTypes.BubbleChatEnabled = ChatSettings.BubbleChatEnabled
	containerTable.ChatWindow.ChatTypes.ClassicChatEnabled = ChatSettings.ClassicChatEnabled

	--// Connection functions
	local function ConnectEvent(name)
		local event = Instance.new("BindableEvent")
		event.Name = name
		containerTable.ChatWindow[name] = event

		event.Event:connect(function(...) Chat[name](Chat, ...) end)
	end

	local function ConnectFunction(name)
		local func = Instance.new("BindableFunction")
		func.Name = name
		containerTable.ChatWindow[name] = func

		func.OnInvoke = function(...) return Chat[name](Chat, ...) end
	end

	local function ReverseConnectEvent(name)
		local event = Instance.new("BindableEvent")
		event.Name = name
		containerTable.ChatWindow[name] = event

		Chat[name]:connect(function(...) event:Fire(...) end)
	end

	local function ConnectSignal(name)
		local event = Instance.new("BindableEvent")
		event.Name = name
		containerTable.ChatWindow[name] = event

		event.Event:connect(function(...) Chat[name]:fire(...) end)
	end

	local function ConnectSetCore(name)
		local event = Instance.new("BindableEvent")
		event.Name = name
		containerTable.SetCore[name] = event

		event.Event:connect(function(...) Chat[name.."Event"]:fire(...) end)
	end

	local function ConnectGetCore(name)
		local func = Instance.new("BindableFunction")
		func.Name = name
		containerTable.GetCore[name] = func

		func.OnInvoke = function(...) return Chat["f"..name](...) end
	end

	--// Do connections
	ConnectEvent("ToggleVisibility")
	ConnectEvent("SetVisible")
	ConnectEvent("FocusChatBar")
	ConnectEvent("EnterWhisperState")
	ConnectFunction("GetVisibility")
	ConnectFunction("GetMessageCount")
	ConnectEvent("TopbarEnabledChanged")
	ConnectFunction("IsFocused")

	ReverseConnectEvent("ChatBarFocusChanged")
	ReverseConnectEvent("VisibilityStateChanged")
	ReverseConnectEvent("MessagesChanged")
	ReverseConnectEvent("MessagePosted")

	ConnectSignal("CoreGuiEnabled")

	ConnectSetCore("ChatMakeSystemMessage")
	ConnectSetCore("ChatWindowPosition")
	ConnectSetCore("ChatWindowSize")
	ConnectGetCore("ChatWindowPosition")
	ConnectGetCore("ChatWindowSize")
	ConnectSetCore("ChatBarDisabled")
	ConnectGetCore("ChatBarDisabled")

    if not FFlagUserHandleChatHotKeyWithContextActionService then    
        ConnectEvent("SpecialKeyPressed")
    end

	SetCoreGuiChatConnections(containerTable)
end

function SetCoreGuiChatConnections(containerTable)
	local tries = 0
	while tries < MAX_COREGUI_CONNECTION_ATTEMPTS do
		tries = tries + 1
		local success, ret = pcall(function() StarterGui:SetCore("CoreGuiChatConnections", containerTable) end)
		if success then
			break
		end
		if not success and tries == MAX_COREGUI_CONNECTION_ATTEMPTS then
			error("Error calling SetCore CoreGuiChatConnections: " .. ret)
		end
		wait()
	end
end

function checkBothChatTypesDisabled()
	if ChatSettings.BubbleChatEnabled ~= nil then
		if ChatSettings.ClassicChatEnabled ~= nil then
			return not (ChatSettings.BubbleChatEnabled or ChatSettings.ClassicChatEnabled)
		end
	end
	return false
end

if (not GuiService:IsTenFootInterface()) and (not game:GetService('UserInputService').VREnabled) then
	if not checkBothChatTypesDisabled() then
		DoEverything()
	else
		local containerTable = {}
		containerTable.ChatWindow = {}

		containerTable.ChatWindow.ChatTypes = {}
		containerTable.ChatWindow.ChatTypes.BubbleChatEnabled = false
		containerTable.ChatWindow.ChatTypes.ClassicChatEnabled = false
		SetCoreGuiChatConnections(containerTable)
	end
else
	-- Make init data request to register as a speaker
	local EventFolder = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents")
	EventFolder.GetInitDataRequest:InvokeServer()
end

end
task.spawn(C_G2L_273)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain
G2L_MODULES[G2L["274"]] = {
Closure = function()
local script = G2L["274"]
--	// FileName: ChatMain.lua
--	// Written by: Xsitsu
--	// Description: Main module to handle initializing chat window UI and hooking up events to individual UI pieces.

local moduleApiTable = {}

--// This section of code waits until all of the necessary RemoteEvents are found in EventFolder.
--// I have to do some weird stuff since people could potentially already have pre-existing
--// things in a folder with the same name, and they may have different class types.
--// I do the useEvents thing and set EventFolder to useEvents so I can have a pseudo folder that
--// the rest of the code can interface with and have the guarantee that the RemoteEvents they want
--// exist with their desired names.

local FFlagFixChatWindowHoverOver = false do
	local ok, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserFixChatWindowHoverOver")
	end)
	if ok then
		FFlagFixChatWindowHoverOver = value
	end
end

local FFlagFixMouseCapture = false do
	local ok, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserFixMouseCapture")
	end)
	if ok then
		FFlagFixMouseCapture = value
	end
end

local FFlagUserHandleChatHotKeyWithContextActionService = false do
	local ok, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserHandleChatHotKeyWithContextActionService")
	end)
	if ok then
		FFlagUserHandleChatHotKeyWithContextActionService = value
	end
end

local FILTER_MESSAGE_TIMEOUT = 60

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Chat = game:GetService("Chat")
local StarterGui = game:GetService("StarterGui")
local ContextActionService = game:GetService("ContextActionService")

local DefaultChatSystemChatEvents = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents")
local EventFolder = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local ChatConstants = require(clientChatModules:WaitForChild("ChatConstants"))
local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))
local messageCreatorModules = clientChatModules:WaitForChild("MessageCreatorModules")
local MessageCreatorUtil = require(messageCreatorModules:WaitForChild("Util"))

local ChatLocalization = nil
pcall(function() ChatLocalization = require(game:GetService("Chat").ClientChatModules.ChatLocalization) end)
if ChatLocalization == nil then ChatLocalization = {} function ChatLocalization:Get(key,default) return default end end

local FFlagUserChatNewMessageLengthCheck2 do
	local success, result = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserChatNewMessageLengthCheck2")
	end)
	FFlagUserChatNewMessageLengthCheck2 = success and result
end

local numChildrenRemaining = 10 -- #waitChildren returns 0 because it's a dictionary
local waitChildren =
{
	OnNewMessage = "RemoteEvent",
	OnMessageDoneFiltering = "RemoteEvent",
	OnNewSystemMessage = "RemoteEvent",
	OnChannelJoined = "RemoteEvent",
	OnChannelLeft = "RemoteEvent",
	OnMuted = "RemoteEvent",
	OnUnmuted = "RemoteEvent",
	OnMainChannelSet = "RemoteEvent",

	SayMessageRequest = "RemoteEvent",
	GetInitDataRequest = "RemoteFunction",
}
-- waitChildren/EventFolder does not contain all the remote events, because the server version could be older than the client version.
-- In that case it would not create the new events.
-- These events are accessed directly from DefaultChatSystemChatEvents

local useEvents = {}

local FoundAllEventsEvent = Instance.new("BindableEvent")

function TryRemoveChildWithVerifyingIsCorrectType(child)
	if (waitChildren[child.Name] and child:IsA(waitChildren[child.Name])) then
		waitChildren[child.Name] = nil
		useEvents[child.Name] = child
		numChildrenRemaining = numChildrenRemaining - 1
	end
end

for i, child in pairs(EventFolder:GetChildren()) do
	TryRemoveChildWithVerifyingIsCorrectType(child)
end

if (numChildrenRemaining > 0) then
	local con = EventFolder.ChildAdded:connect(function(child)
		TryRemoveChildWithVerifyingIsCorrectType(child)
		if (numChildrenRemaining < 1) then
			FoundAllEventsEvent:Fire()
		end
	end)

	FoundAllEventsEvent.Event:wait()
	con:disconnect()

	FoundAllEventsEvent:Destroy()
end

EventFolder = useEvents



--// Rest of code after waiting for correct events.

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

while not LocalPlayer do
	Players.ChildAdded:wait()
	LocalPlayer = Players.LocalPlayer
end

local canChat = true

local ChatDisplayOrder = 6
if ChatSettings.ScreenGuiDisplayOrder ~= nil then
	ChatDisplayOrder = ChatSettings.ScreenGuiDisplayOrder
end

local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local GuiParent = Instance.new("ScreenGui")
GuiParent.Name = "Chat"
GuiParent.ResetOnSpawn = false
GuiParent.DisplayOrder = ChatDisplayOrder
GuiParent.Parent = PlayerGui

local DidFirstChannelsLoads = false

local modulesFolder = script

local moduleChatWindow = require(modulesFolder:WaitForChild("ChatWindow"))
local moduleChatBar = require(modulesFolder:WaitForChild("ChatBar"))
local moduleChannelsBar = require(modulesFolder:WaitForChild("ChannelsBar"))
local moduleMessageLabelCreator = require(modulesFolder:WaitForChild("MessageLabelCreator"))
local moduleMessageLogDisplay = require(modulesFolder:WaitForChild("MessageLogDisplay"))
local moduleChatChannel = require(modulesFolder:WaitForChild("ChatChannel"))
local moduleCommandProcessor = require(modulesFolder:WaitForChild("CommandProcessor"))

local ChatWindow = moduleChatWindow.new()
local ChannelsBar = moduleChannelsBar.new()
local MessageLogDisplay = moduleMessageLogDisplay.new()
local CommandProcessor = moduleCommandProcessor.new()
local ChatBar = moduleChatBar.new(CommandProcessor, ChatWindow)

ChatWindow:CreateGuiObjects(GuiParent)

ChatWindow:RegisterChatBar(ChatBar)
ChatWindow:RegisterChannelsBar(ChannelsBar)
ChatWindow:RegisterMessageLogDisplay(MessageLogDisplay)

MessageCreatorUtil:RegisterChatWindow(ChatWindow)

local MessageSender = require(modulesFolder:WaitForChild("MessageSender"))
MessageSender:RegisterSayMessageFunction(script.Remote.Value)



if (UserInputService.TouchEnabled) then
	ChatBar:SetTextLabelText(ChatLocalization:Get("GameChat_ChatMain_ChatBarTextTouch",'Tap here to chat'))
else
	ChatBar:SetTextLabelText(ChatLocalization:Get("GameChat_ChatMain_ChatBarText",'To chat click here or press "/" key'))
end

spawn(function()
	local CurveUtil = require(modulesFolder:WaitForChild("CurveUtil"))
	local animationFps = ChatSettings.ChatAnimationFPS or 20.0

	local updateWaitTime = 1.0 / animationFps
	local lastTick = tick()
	while true do
		local currentTick = tick()
		local tickDelta = currentTick - lastTick
		local dtScale = CurveUtil:DeltaTimeToTimescale(tickDelta)

		if dtScale ~= 0 then
			ChatWindow:Update(dtScale)
		end

		lastTick = currentTick
		wait(updateWaitTime)
	end
end)




--////////////////////////////////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////// Code to do chat window fading
--////////////////////////////////////////////////////////////////////////////////////////////
function CheckIfPointIsInSquare(checkPos, topLeft, bottomRight)
	return (topLeft.X <= checkPos.X and checkPos.X <= bottomRight.X and
		topLeft.Y <= checkPos.Y and checkPos.Y <= bottomRight.Y)
end

local backgroundIsFaded = false
local textIsFaded = false
local lastTextFadeTime = 0
local lastBackgroundFadeTime = 0

local fadedChanged = Instance.new("BindableEvent")
local mouseStateChanged = Instance.new("BindableEvent")
local chatBarFocusChanged = Instance.new("BindableEvent")

function DoBackgroundFadeIn(setFadingTime)
	lastBackgroundFadeTime = tick()
	backgroundIsFaded = false
	fadedChanged:Fire()
	ChatWindow:FadeInBackground((setFadingTime or ChatSettings.ChatDefaultFadeDuration))

	local currentChannelObject = ChatWindow:GetCurrentChannel()
	if (currentChannelObject) then

		local Scroller = MessageLogDisplay.Scroller
		Scroller.ScrollingEnabled = true
		Scroller.ScrollBarThickness = moduleMessageLogDisplay.ScrollBarThickness
	end
end

function DoBackgroundFadeOut(setFadingTime)
	lastBackgroundFadeTime = tick()
	backgroundIsFaded = true
	fadedChanged:Fire()
	ChatWindow:FadeOutBackground((setFadingTime or ChatSettings.ChatDefaultFadeDuration))

	local currentChannelObject = ChatWindow:GetCurrentChannel()
	if (currentChannelObject) then

		local Scroller = MessageLogDisplay.Scroller
		Scroller.ScrollingEnabled = false
		Scroller.ScrollBarThickness = 0
	end
end

function DoTextFadeIn(setFadingTime)
	lastTextFadeTime = tick()
	textIsFaded = false
	fadedChanged:Fire()
	ChatWindow:FadeInText((setFadingTime or ChatSettings.ChatDefaultFadeDuration) * 0)
end

function DoTextFadeOut(setFadingTime)
	lastTextFadeTime = tick()
	textIsFaded = true
	fadedChanged:Fire()
	ChatWindow:FadeOutText((setFadingTime or ChatSettings.ChatDefaultFadeDuration))
end

function DoFadeInFromNewInformation()
	DoTextFadeIn()
	if ChatSettings.ChatShouldFadeInFromNewInformation then
		DoBackgroundFadeIn()
	end
end

function InstantFadeIn()
	DoBackgroundFadeIn(0)
	DoTextFadeIn(0)
end

function InstantFadeOut()
	DoBackgroundFadeOut(0)
	DoTextFadeOut(0)
end

local mouseIsInWindow = nil
function UpdateFadingForMouseState(mouseState)
	mouseIsInWindow = mouseState

	mouseStateChanged:Fire()

	if (ChatBar:IsFocused()) then return end

	if (mouseState) then
		DoBackgroundFadeIn()
		DoTextFadeIn()
	else
		DoBackgroundFadeIn()
	end
end


spawn(function()
	while true do
		RunService.RenderStepped:wait()

		while (mouseIsInWindow or ChatBar:IsFocused()) do
			if (mouseIsInWindow) then
				mouseStateChanged.Event:wait()
			end
			if (ChatBar:IsFocused()) then
				chatBarFocusChanged.Event:wait()
			end
		end

		if (not backgroundIsFaded) then
			local timeDiff = tick() - lastBackgroundFadeTime
			if (timeDiff > ChatSettings.ChatWindowBackgroundFadeOutTime) then
				DoBackgroundFadeOut()
			end

		elseif (not textIsFaded) then
			local timeDiff = tick() - lastTextFadeTime
			if (timeDiff > ChatSettings.ChatWindowTextFadeOutTime) then
				DoTextFadeOut()
			end

		else
			fadedChanged.Event:wait()

		end

	end
end)

function getClassicChatEnabled()
	if ChatSettings.ClassicChatEnabled ~= nil then
		return ChatSettings.ClassicChatEnabled
	end
	return Players.ClassicChat
end

function getBubbleChatEnabled()
	if ChatSettings.BubbleChatEnabled ~= nil then
		return ChatSettings.BubbleChatEnabled
	end
	return Players.BubbleChat
end

function bubbleChatOnly()
 	return not getClassicChatEnabled() and getBubbleChatEnabled()
end

function UpdateMousePosition(mousePos, ignoreForFadeIn)
	if not (moduleApiTable.Visible and moduleApiTable.IsCoreGuiEnabled and (moduleApiTable.TopbarEnabled or ChatSettings.ChatOnWithTopBarOff)) then return end

	if bubbleChatOnly() then
		return
	end

	local windowPos = ChatWindow.GuiObject.AbsolutePosition
	local windowSize = ChatWindow.GuiObject.AbsoluteSize

	local newMouseState = CheckIfPointIsInSquare(mousePos, windowPos, windowPos + windowSize)

	if FFlagFixChatWindowHoverOver then
		if ignoreForFadeIn and newMouseState == true then
			return
		end
	end

	if (newMouseState ~= mouseIsInWindow) then
		UpdateFadingForMouseState(newMouseState)
	end
end

UserInputService.InputChanged:connect(function(inputObject, gameProcessedEvent)
	if (inputObject.UserInputType == Enum.UserInputType.MouseMovement) then
		local mousePos = Vector2.new(inputObject.Position.X, inputObject.Position.Y)
		UpdateMousePosition(mousePos, --[[ ignoreForFadeIn = ]] gameProcessedEvent)
	end
end)

UserInputService.TouchTap:connect(function(tapPos, gameProcessedEvent)
	UpdateMousePosition(tapPos[1], --[[ ignoreForFadeIn = ]] false)
end)

UserInputService.TouchMoved:connect(function(inputObject, gameProcessedEvent)
	local tapPos = Vector2.new(inputObject.Position.X, inputObject.Position.Y)
	UpdateMousePosition(tapPos, --[[ ignoreForFadeIn = ]] false)
end)

if not FFlagFixMouseCapture then
	UserInputService.Changed:connect(function(prop)
		if prop == "MouseBehavior" then
			if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter then
				local windowPos = ChatWindow.GuiObject.AbsolutePosition
				local windowSize = ChatWindow.GuiObject.AbsoluteSize
				local screenSize = GuiParent.AbsoluteSize

				local centerScreenIsInWindow = CheckIfPointIsInSquare(screenSize/2, windowPos, windowPos + windowSize)
				if centerScreenIsInWindow then
					UserInputService.MouseBehavior = Enum.MouseBehavior.Default
				end
			end
		end
	end)
end

--// Start and stop fading sequences / timers
UpdateFadingForMouseState(true)
UpdateFadingForMouseState(false)


--////////////////////////////////////////////////////////////////////////////////////////////
--///////////// Code to talk to topbar and maintain set/get core backwards compatibility stuff
--////////////////////////////////////////////////////////////////////////////////////////////
local Util = {}
do
	function Util.Signal()
		local sig = {}

		local mSignaler = Instance.new('BindableEvent')

		local mArgData = nil
		local mArgDataCount = nil

		function sig:fire(...)
			mArgData = {...}
			mArgDataCount = select('#', ...)
			mSignaler:Fire()
		end

		function sig:connect(f)
			if not f then error("connect(nil)", 2) end
			return mSignaler.Event:connect(function()
				f(unpack(mArgData, 1, mArgDataCount))
			end)
		end

		function sig:wait()
			mSignaler.Event:wait()
			assert(mArgData, "Missing arg data, likely due to :TweenSize/Position corrupting threadrefs.")
			return unpack(mArgData, 1, mArgDataCount)
		end

		return sig
	end
end


function SetVisibility(val)
	ChatWindow:SetVisible(val)
	moduleApiTable.VisibilityStateChanged:fire(val)
	moduleApiTable.Visible = val

	if (moduleApiTable.IsCoreGuiEnabled) then
		if (val) then
			InstantFadeIn()
		else
			InstantFadeOut()
		end
	end
end

do
	moduleApiTable.TopbarEnabled = true
	moduleApiTable.MessageCount = 0
	moduleApiTable.Visible = true
	moduleApiTable.IsCoreGuiEnabled = true

	function moduleApiTable:ToggleVisibility()
		SetVisibility(not ChatWindow:GetVisible())
	end

	function moduleApiTable:SetVisible(visible)
		if (ChatWindow:GetVisible() ~= visible) then
			SetVisibility(visible)
		end
	end

	function moduleApiTable:FocusChatBar()
		ChatBar:CaptureFocus()
	end

	function moduleApiTable:EnterWhisperState(player)
		ChatBar:EnterWhisperState(player)
	end

	function moduleApiTable:GetVisibility()
		return ChatWindow:GetVisible()
	end

	function moduleApiTable:GetMessageCount()
		return self.MessageCount
	end

	function moduleApiTable:TopbarEnabledChanged(enabled)
		self.TopbarEnabled = enabled
		self.CoreGuiEnabled:fire(game:GetService("StarterGui"):GetCoreGuiEnabled(Enum.CoreGuiType.Chat))
	end

	function moduleApiTable:IsFocused(useWasFocused)
		return ChatBar:IsFocused()
	end

	moduleApiTable.ChatBarFocusChanged = Util.Signal()
	moduleApiTable.VisibilityStateChanged = Util.Signal()
	moduleApiTable.MessagesChanged = Util.Signal()


	moduleApiTable.MessagePosted = Util.Signal()
	moduleApiTable.CoreGuiEnabled = Util.Signal()

	moduleApiTable.ChatMakeSystemMessageEvent = Util.Signal()
	moduleApiTable.ChatWindowPositionEvent = Util.Signal()
	moduleApiTable.ChatWindowSizeEvent = Util.Signal()
	moduleApiTable.ChatBarDisabledEvent = Util.Signal()


	function moduleApiTable:fChatWindowPosition()
		return ChatWindow.GuiObject.Position
	end

	function moduleApiTable:fChatWindowSize()
		return ChatWindow.GuiObject.Size
	end

	function moduleApiTable:fChatBarDisabled()
		return not ChatBar:GetEnabled()
	end

    if FFlagUserHandleChatHotKeyWithContextActionService then
        local TOGGLE_CHAT_ACTION_NAME = "ToggleChat"

        -- Callback when chat hotkey is pressed
        local function handleAction(actionName, inputState, inputObject)
            if actionName == TOGGLE_CHAT_ACTION_NAME and inputState == Enum.UserInputState.Begin and canChat and inputObject.UserInputType == Enum.UserInputType.Keyboard then
                DoChatBarFocus()
            end
        end
        ContextActionService:BindAction(TOGGLE_CHAT_ACTION_NAME, handleAction, true, Enum.KeyCode.Slash)
    else
        function moduleApiTable:SpecialKeyPressed(key, modifiers)
            if (key == Enum.SpecialKey.ChatHotkey) then
                if canChat then
                    DoChatBarFocus()
                end
            end
        end
    end
end

moduleApiTable.CoreGuiEnabled:connect(function(enabled)
	moduleApiTable.IsCoreGuiEnabled = enabled

	enabled = enabled and (moduleApiTable.TopbarEnabled or ChatSettings.ChatOnWithTopBarOff)

	ChatWindow:SetCoreGuiEnabled(enabled)

	if (not enabled) then
		ChatBar:ReleaseFocus()
		InstantFadeOut()
	else
		InstantFadeIn()
	end
end)

function trimTrailingSpaces(str)
	local lastSpace = #str
	while lastSpace > 0 do
		--- The pattern ^%s matches whitespace at the start of the string. (Starting from lastSpace)
		if str:find("^%s", lastSpace) then
			lastSpace = lastSpace - 1
		else
			break
		end
	end
	return str:sub(1, lastSpace)
end

moduleApiTable.ChatMakeSystemMessageEvent:connect(function(valueTable)
	if (valueTable["Text"] and type(valueTable["Text"]) == "string") then
		while (not DidFirstChannelsLoads) do wait() end

		local channel = ChatSettings.GeneralChannelName
		local channelObj = ChatWindow:GetChannel(channel)

		if (channelObj) then
			local messageObject = {
				ID = -1,
				FromSpeaker = nil,
				SpeakerUserId = 0,
				OriginalChannel = channel,
				IsFiltered = true,
				MessageLength = string.len(valueTable.Text),
				Message = trimTrailingSpaces(valueTable.Text),
				MessageType = ChatConstants.MessageTypeSetCore,
				Time = os.time(),
				ExtraData = valueTable,
			}
			channelObj:AddMessageToChannel(messageObject)
			ChannelsBar:UpdateMessagePostedInChannel(channel)

			moduleApiTable.MessageCount = moduleApiTable.MessageCount + 1
			moduleApiTable.MessagesChanged:fire(moduleApiTable.MessageCount)
		end
	end
end)

moduleApiTable.ChatBarDisabledEvent:connect(function(disabled)
	if canChat then
		ChatBar:SetEnabled(not disabled)
		if (disabled) then
			ChatBar:ReleaseFocus()
		end
	end
end)

moduleApiTable.ChatWindowSizeEvent:connect(function(size)
	ChatWindow.GuiObject.Size = size
end)

moduleApiTable.ChatWindowPositionEvent:connect(function(position)
	ChatWindow.GuiObject.Position = position
end)

--////////////////////////////////////////////////////////////////////////////////////////////
--///////////////////////////////////////////////// Code to hook client UI up to server events
--////////////////////////////////////////////////////////////////////////////////////////////

function DoChatBarFocus()
	if (not ChatWindow:GetCoreGuiEnabled()) then return end
	if (not ChatBar:GetEnabled()) then return end

	if (not ChatBar:IsFocused() and ChatBar:GetVisible()) then
		moduleApiTable:SetVisible(true)
		InstantFadeIn()
		ChatBar:CaptureFocus()
		moduleApiTable.ChatBarFocusChanged:fire(true)
	end
end

chatBarFocusChanged.Event:connect(function(focused)
	moduleApiTable.ChatBarFocusChanged:fire(focused)
end)

function DoSwitchCurrentChannel(targetChannel)
	if (ChatWindow:GetChannel(targetChannel)) then
		ChatWindow:SwitchCurrentChannel(targetChannel)
	end
end

function SendMessageToSelfInTargetChannel(message, channelName, extraData)
	local channelObj = ChatWindow:GetChannel(channelName)
	if (channelObj) then
		local messageData =
		{
			ID = -1,
			FromSpeaker = nil,
			SpeakerUserId = 0,
			OriginalChannel = channelName,
			IsFiltered = true,
			MessageLength = string.len(message),
			Message = trimTrailingSpaces(message),
			MessageType = ChatConstants.MessageTypeSystem,
			Time = os.time(),
			ExtraData = extraData,
		}

		channelObj:AddMessageToChannel(messageData)
	end
end

function chatBarFocused()
	if (not mouseIsInWindow) then
		DoBackgroundFadeIn()
		if (textIsFaded) then
			DoTextFadeIn()
		end
	end

	chatBarFocusChanged:Fire(true)
end

--// Event for making player say chat message.
function chatBarFocusLost(enterPressed, inputObject)
	DoBackgroundFadeIn()
	chatBarFocusChanged:Fire(false)

	if (enterPressed) then
		local message = ChatBar:GetTextBox().Text

		if ChatBar:IsInCustomState() then
			local customMessage = ChatBar:GetCustomMessage()
			if customMessage then
				message = customMessage
			end
			local messageSunk = ChatBar:CustomStateProcessCompletedMessage(message)
			ChatBar:ResetCustomState()
			if messageSunk then
				return
			end
		end

		if not FFlagUserChatNewMessageLengthCheck2 then
			message = string.sub(message, 1, ChatSettings.MaximumMessageLength)
		end

		ChatBar:GetTextBox().Text = ""

		if message ~= "" then
			--// Sends signal to eventually call Player:Chat() to handle C++ side legacy stuff.
			moduleApiTable.MessagePosted:fire(message)

			if not CommandProcessor:ProcessCompletedChatMessage(message, ChatWindow) then
				if ChatSettings.DisallowedWhiteSpace then
					for i = 1, #ChatSettings.DisallowedWhiteSpace do
						if ChatSettings.DisallowedWhiteSpace[i] == "\t" then
							message = string.gsub(message, ChatSettings.DisallowedWhiteSpace[i], " ")
						else
							message = string.gsub(message, ChatSettings.DisallowedWhiteSpace[i], "")
						end
					end
				end
				message = string.gsub(message, "\n", "")
				message = string.gsub(message, "[ ]+", " ")

				local targetChannel = ChatWindow:GetTargetMessageChannel()
				if targetChannel then
					MessageSender:SendMessage(message, targetChannel)
				else
					MessageSender:SendMessage(message, nil)
				end
			end
		end

	end
end

local ChatBarConnections = {}
function setupChatBarConnections()
	for i = 1, #ChatBarConnections do
		ChatBarConnections[i]:Disconnect()
	end
	ChatBarConnections = {}

	local focusLostConnection = ChatBar:GetTextBox().FocusLost:connect(chatBarFocusLost)
	table.insert(ChatBarConnections, focusLostConnection)

	local focusGainedConnection = ChatBar:GetTextBox().Focused:connect(chatBarFocused)
	table.insert(ChatBarConnections, focusGainedConnection)
end

setupChatBarConnections()
ChatBar.GuiObjectsChanged:connect(setupChatBarConnections)

function getEchoMessagesInGeneral()
	if ChatSettings.EchoMessagesInGeneralChannel == nil then
		return true
	end
	return ChatSettings.EchoMessagesInGeneralChannel
end

EventFolder.OnMessageDoneFiltering.OnClientEvent:connect(function(messageData)
	if not ChatSettings.ShowUserOwnFilteredMessage then
		if messageData.FromSpeaker == LocalPlayer.Name then
			return
		end
	end

	local channelName = messageData.OriginalChannel
	local channelObj = ChatWindow:GetChannel(channelName)
	if channelObj then
		channelObj:UpdateMessageFiltered(messageData)
	end

	if getEchoMessagesInGeneral() and ChatSettings.GeneralChannelName and channelName ~= ChatSettings.GeneralChannelName then
		local generalChannel = ChatWindow:GetChannel(ChatSettings.GeneralChannelName)
		if generalChannel then
			generalChannel:UpdateMessageFiltered(messageData)
		end
	end
end)

EventFolder.OnNewMessage.OnClientEvent:connect(function(messageData, channelName)
	local channelObj = ChatWindow:GetChannel(channelName)
	if (channelObj) then
		channelObj:AddMessageToChannel(messageData)

		if (messageData.FromSpeaker ~= LocalPlayer.Name) then
			ChannelsBar:UpdateMessagePostedInChannel(channelName)
		end

		if getEchoMessagesInGeneral() and ChatSettings.GeneralChannelName and channelName ~= ChatSettings.GeneralChannelName then
			local generalChannel = ChatWindow:GetChannel(ChatSettings.GeneralChannelName)
			if generalChannel then
				generalChannel:AddMessageToChannel(messageData)
			end
		end

		moduleApiTable.MessageCount = moduleApiTable.MessageCount + 1
		moduleApiTable.MessagesChanged:fire(moduleApiTable.MessageCount)

		DoFadeInFromNewInformation()
	end
end)

EventFolder.OnNewSystemMessage.OnClientEvent:connect(function(messageData, channelName)
	channelName = channelName or "System"

	local channelObj = ChatWindow:GetChannel(channelName)
	if (channelObj) then
		channelObj:AddMessageToChannel(messageData)

		ChannelsBar:UpdateMessagePostedInChannel(channelName)

		moduleApiTable.MessageCount = moduleApiTable.MessageCount + 1
		moduleApiTable.MessagesChanged:fire(moduleApiTable.MessageCount)

		DoFadeInFromNewInformation()

		if getEchoMessagesInGeneral() and ChatSettings.GeneralChannelName and channelName ~= ChatSettings.GeneralChannelName then
			local generalChannel = ChatWindow:GetChannel(ChatSettings.GeneralChannelName)
			if generalChannel then
				generalChannel:AddMessageToChannel(messageData)
			end
		end
	else
		warn(string.format("Just received system message for channel I'm not in [%s]", channelName))
	end
end)


function HandleChannelJoined(channel, welcomeMessage, messageLog, channelNameColor, addHistoryToGeneralChannel,
	addWelcomeMessageToGeneralChannel)
	if ChatWindow:GetChannel(channel) then
		--- If the channel has already been added, remove it first.
		ChatWindow:RemoveChannel(channel)
	end

	if (channel == ChatSettings.GeneralChannelName) then
		DidFirstChannelsLoads = true
	end

	if channelNameColor then
		ChatBar:SetChannelNameColor(channel, channelNameColor)
	end

	local channelObj = ChatWindow:AddChannel(channel)

	if (channelObj) then
		if (channel == ChatSettings.GeneralChannelName) then
			DoSwitchCurrentChannel(channel)
		end

		if (messageLog) then
			local startIndex = 1
			if #messageLog > ChatSettings.MessageHistoryLengthPerChannel then
				startIndex = #messageLog - ChatSettings.MessageHistoryLengthPerChannel
			end

			for i = startIndex, #messageLog do
				channelObj:AddMessageToChannel(messageLog[i])
			end

			if getEchoMessagesInGeneral() and addHistoryToGeneralChannel then
				if ChatSettings.GeneralChannelName and channel ~= ChatSettings.GeneralChannelName then
					local generalChannel = ChatWindow:GetChannel(ChatSettings.GeneralChannelName)
					if generalChannel then
						generalChannel:AddMessagesToChannelByTimeStamp(messageLog, startIndex)
					end
				end
			end
		end

		if (welcomeMessage ~= "") then
			local welcomeMessageObject = {
				ID = -1,
				FromSpeaker = nil,
				SpeakerUserId = 0,
				OriginalChannel = channel,
				IsFiltered = true,
				MessageLength = string.len(welcomeMessage),
				Message = trimTrailingSpaces(welcomeMessage),
				MessageType = ChatConstants.MessageTypeWelcome,
				Time = os.time(),
				ExtraData = nil,
			}
			channelObj:AddMessageToChannel(welcomeMessageObject)

			if getEchoMessagesInGeneral() and addWelcomeMessageToGeneralChannel and not ChatSettings.ShowChannelsBar then
				if channel ~= ChatSettings.GeneralChannelName then
					local generalChannel = ChatWindow:GetChannel(ChatSettings.GeneralChannelName)
					if generalChannel then
						generalChannel:AddMessageToChannel(welcomeMessageObject)
					end
				end
			end
		end

		DoFadeInFromNewInformation()
	end

end

EventFolder.OnChannelJoined.OnClientEvent:connect(function(channel, welcomeMessage, messageLog, channelNameColor)
	HandleChannelJoined(channel, welcomeMessage, messageLog, channelNameColor, false, true)
end)

EventFolder.OnChannelLeft.OnClientEvent:connect(function(channel)
	ChatWindow:RemoveChannel(channel)

	DoFadeInFromNewInformation()
end)

EventFolder.OnMuted.OnClientEvent:connect(function(channel)
	--// Do something eventually maybe?
	--// This used to take away the chat bar in channels the player was muted in.
	--// We found out this behavior was inconvenient for doing chat commands though.
end)

EventFolder.OnUnmuted.OnClientEvent:connect(function(channel)
	--// Same as above.
end)

EventFolder.OnMainChannelSet.OnClientEvent:connect(function(channel)
	DoSwitchCurrentChannel(channel)
end)

coroutine.wrap(function()
	-- ChannelNameColorUpdated may not exist if the client version is older than the server version.
	local ChannelNameColorUpdated = DefaultChatSystemChatEvents:WaitForChild("ChannelNameColorUpdated", 5)
	if ChannelNameColorUpdated then
		ChannelNameColorUpdated.OnClientEvent:connect(function(channelName, channelNameColor)
			ChatBar:SetChannelNameColor(channelName, channelNameColor)
		end)
	end
end)()


--- Interaction with SetCore Player events.

local PlayerBlockedEvent = nil
local PlayerMutedEvent = nil
local PlayerUnBlockedEvent = nil
local PlayerUnMutedEvent = nil


-- This is pcalled because the SetCore methods may not be released yet.
pcall(function()
	PlayerBlockedEvent = StarterGui:GetCore("PlayerBlockedEvent")
	PlayerMutedEvent = StarterGui:GetCore("PlayerMutedEvent")
	PlayerUnBlockedEvent = StarterGui:GetCore("PlayerUnblockedEvent")
	PlayerUnMutedEvent = StarterGui:GetCore("PlayerUnmutedEvent")
end)

function SendSystemMessageToSelf(message)
	local currentChannel = ChatWindow:GetCurrentChannel()

	if currentChannel then
		local messageData =
		{
			ID = -1,
			FromSpeaker = nil,
			SpeakerUserId = 0,
			OriginalChannel = currentChannel.Name,
			IsFiltered = true,
			MessageLength = string.len(message),
			Message = trimTrailingSpaces(message),
			MessageType = ChatConstants.MessageTypeSystem,
			Time = os.time(),
			ExtraData = nil,
		}

		currentChannel:AddMessageToChannel(messageData)
	end
end

function MutePlayer(player)
	local mutePlayerRequest = DefaultChatSystemChatEvents:FindFirstChild("MutePlayerRequest")
	if mutePlayerRequest then
		return mutePlayerRequest:InvokeServer(player.Name)
	end
	return false
end

if PlayerBlockedEvent then
	PlayerBlockedEvent.Event:connect(function(player)
		if MutePlayer(player) then
			SendSystemMessageToSelf(
				string.gsub(
					ChatLocalization:Get(
						"GameChat_ChatMain_SpeakerHasBeenBlocked",
						string.format("Speaker '%s' has been blocked.", player.Name)
					),
					"{RBX_NAME}",player.Name
				)
			)
		end
	end)
end

if PlayerMutedEvent then
	PlayerMutedEvent.Event:connect(function(player)
		if MutePlayer(player) then
			SendSystemMessageToSelf(
				string.gsub(
					ChatLocalization:Get(
						"GameChat_ChatMain_SpeakerHasBeenMuted",
						string.format("Speaker '%s' has been muted.", player.Name)
					),
					"{RBX_NAME}", player.Name
				)
			)
		end
	end)
end

function UnmutePlayer(player)
	local unmutePlayerRequest = DefaultChatSystemChatEvents:FindFirstChild("UnMutePlayerRequest")
	if unmutePlayerRequest then
		return unmutePlayerRequest:InvokeServer(player.Name)
	end
	return false
end

if PlayerUnBlockedEvent then
	PlayerUnBlockedEvent.Event:connect(function(player)
		if UnmutePlayer(player) then
			SendSystemMessageToSelf(
				string.gsub(
					ChatLocalization:Get(
						"GameChat_ChatMain_SpeakerHasBeenUnBlocked",
						string.format("Speaker '%s' has been unblocked.", player.Name)
					),
					"{RBX_NAME}",player.Name
				)
			)
		end
	end)
end

if PlayerUnMutedEvent then
	PlayerUnMutedEvent.Event:connect(function(player)
		if UnmutePlayer(player) then
			SendSystemMessageToSelf(
				string.gsub(
					ChatLocalization:Get(
						"GameChat_ChatMain_SpeakerHasBeenUnMuted",
						string.format("Speaker '%s' has been unmuted.", player.Name)
					),
					"{RBX_NAME}",player.Name
				)
			)
		end
	end)
end

-- Get a list of blocked users from the corescripts.
-- Spawned because this method can yeild.
spawn(function()
	-- Pcalled because this method is not released on all platforms yet.
	if LocalPlayer.UserId > 0 then
		pcall(function()
			local blockedUserIds = StarterGui:GetCore("GetBlockedUserIds")
			if #blockedUserIds > 0 then
				local setInitalBlockedUserIds = DefaultChatSystemChatEvents:FindFirstChild("SetBlockedUserIdsRequest")
				if setInitalBlockedUserIds then
					setInitalBlockedUserIds:FireServer(blockedUserIds)
				end
			end
		end)
	end
end)

spawn(function()
	local success, canLocalUserChat = pcall(function()
		return Chat:CanUserChatAsync(LocalPlayer.UserId)
	end)
	if success then
		canChat = RunService:IsStudio() or canLocalUserChat
	end
end)

local initData = EventFolder.GetInitDataRequest:InvokeServer()

-- Handle joining general channel first.
for i, channelData in pairs(initData.Channels) do
	if channelData[1] == ChatSettings.GeneralChannelName then
		HandleChannelJoined(channelData[1], channelData[2], channelData[3], channelData[4], true, false)
	end
end

for i, channelData in pairs(initData.Channels) do
	if channelData[1] ~= ChatSettings.GeneralChannelName then
		HandleChannelJoined(channelData[1], channelData[2], channelData[3], channelData[4], true, false)
	end
end

return moduleApiTable

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChannelsBar
G2L_MODULES[G2L["275"]] = {
Closure = function()
local script = G2L["275"]
--	// FileName: ChannelsBar.lua
--	// Written by: Xsitsu
--	// Description: Manages creating, destroying, and displaying ChannelTabs.

local module = {}

local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local modulesFolder = script.Parent
local moduleChannelsTab = require(modulesFolder:WaitForChild("ChannelsTab"))
local MessageSender = require(modulesFolder:WaitForChild("MessageSender"))
local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))
local CurveUtil = require(modulesFolder:WaitForChild("CurveUtil"))

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

function methods:CreateGuiObjects(targetParent)
	local BaseFrame = Instance.new("Frame")
	BaseFrame.Selectable = false
	BaseFrame.Size = UDim2.new(1, 0, 1, 0)
	BaseFrame.BackgroundTransparency = 1
	BaseFrame.Parent = targetParent

	local ScrollingBase = Instance.new("Frame")
	ScrollingBase.Selectable = false
	ScrollingBase.Name = "ScrollingBase"
	ScrollingBase.BackgroundTransparency = 1
	ScrollingBase.ClipsDescendants = true
	ScrollingBase.Size = UDim2.new(1, 0, 1, 0)
	ScrollingBase.Position = UDim2.new(0, 0, 0, 0)
	ScrollingBase.Parent = BaseFrame

	local ScrollerSizer = Instance.new("Frame")
	ScrollerSizer.Selectable = false
	ScrollerSizer.Name = "ScrollerSizer"
	ScrollerSizer.BackgroundTransparency = 1
	ScrollerSizer.Size = UDim2.new(1, 0, 1, 0)
	ScrollerSizer.Position = UDim2.new(0, 0, 0, 0)
	ScrollerSizer.Parent = ScrollingBase

	local ScrollerFrame = Instance.new("Frame")
	ScrollerFrame.Selectable = false
	ScrollerFrame.Name = "ScrollerFrame"
	ScrollerFrame.BackgroundTransparency = 1
	ScrollerFrame.Size = UDim2.new(1, 0, 1, 0)
	ScrollerFrame.Position = UDim2.new(0, 0, 0, 0)
	ScrollerFrame.Parent = ScrollerSizer

	local LeaveConfirmationFrameBase = Instance.new("Frame")
	LeaveConfirmationFrameBase.Selectable = false
	LeaveConfirmationFrameBase.Size = UDim2.new(1, 0, 1, 0)
	LeaveConfirmationFrameBase.Position = UDim2.new(0, 0, 0, 0)
	LeaveConfirmationFrameBase.ClipsDescendants = true
	LeaveConfirmationFrameBase.BackgroundTransparency = 1
	LeaveConfirmationFrameBase.Parent = BaseFrame

	local LeaveConfirmationFrame = Instance.new("Frame")
	LeaveConfirmationFrame.Selectable = false
	LeaveConfirmationFrame.Name = "LeaveConfirmationFrame"
	LeaveConfirmationFrame.Size = UDim2.new(1, 0, 1, 0)
	LeaveConfirmationFrame.Position = UDim2.new(0, 0, 1, 0)
	LeaveConfirmationFrame.BackgroundTransparency = 0.6
	LeaveConfirmationFrame.BorderSizePixel = 0
	LeaveConfirmationFrame.BackgroundColor3 = Color3.new(0, 0, 0)
	LeaveConfirmationFrame.Parent = LeaveConfirmationFrameBase

	local InputBlocker = Instance.new("TextButton")
	InputBlocker.Selectable = false
	InputBlocker.Size = UDim2.new(1, 0, 1, 0)
	InputBlocker.BackgroundTransparency = 1
	InputBlocker.Text = ""
	InputBlocker.Parent = LeaveConfirmationFrame

	local LeaveConfirmationButtonYes = Instance.new("TextButton")
	LeaveConfirmationButtonYes.Selectable = false
	LeaveConfirmationButtonYes.Size = UDim2.new(0.25, 0, 1, 0)
	LeaveConfirmationButtonYes.BackgroundTransparency = 1
	LeaveConfirmationButtonYes.Font = ChatSettings.DefaultFont
	LeaveConfirmationButtonYes.TextSize = 18
	LeaveConfirmationButtonYes.TextStrokeTransparency = 0.75
	LeaveConfirmationButtonYes.Position = UDim2.new(0, 0, 0, 0)
	LeaveConfirmationButtonYes.TextColor3 = Color3.new(0, 1, 0)
	LeaveConfirmationButtonYes.Text = "Confirm"
	LeaveConfirmationButtonYes.Parent = LeaveConfirmationFrame

	local LeaveConfirmationButtonNo = LeaveConfirmationButtonYes:Clone()
	LeaveConfirmationButtonNo.Parent = LeaveConfirmationFrame
	LeaveConfirmationButtonNo.Position = UDim2.new(0.75, 0, 0, 0)
	LeaveConfirmationButtonNo.TextColor3 = Color3.new(1, 0, 0)
	LeaveConfirmationButtonNo.Text = "Cancel"

	local LeaveConfirmationNotice = Instance.new("TextLabel")
	LeaveConfirmationNotice.Selectable = false
	LeaveConfirmationNotice.Size = UDim2.new(0.5, 0, 1, 0)
	LeaveConfirmationNotice.Position = UDim2.new(0.25, 0, 0, 0)
	LeaveConfirmationNotice.BackgroundTransparency = 1
	LeaveConfirmationNotice.TextColor3 = Color3.new(1, 1, 1)
	LeaveConfirmationNotice.TextStrokeTransparency = 0.75
	LeaveConfirmationNotice.Text = "Leave channel <XX>?"
	LeaveConfirmationNotice.Font = ChatSettings.DefaultFont
	LeaveConfirmationNotice.TextSize = 18
	LeaveConfirmationNotice.Parent = LeaveConfirmationFrame

	local LeaveTarget = Instance.new("StringValue")
	LeaveTarget.Name = "LeaveTarget"
	LeaveTarget.Parent = LeaveConfirmationFrame

	local outPos = LeaveConfirmationFrame.Position
	LeaveConfirmationButtonYes.MouseButton1Down:connect(function()
		MessageSender:SendMessage(string.format("/leave %s", LeaveTarget.Value), nil)
		LeaveConfirmationFrame:TweenPosition(outPos, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
	end)
	LeaveConfirmationButtonNo.MouseButton1Down:connect(function()
		LeaveConfirmationFrame:TweenPosition(outPos, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
	end)



	local scale = 0.7
	local scaleOther = (1 - scale) / 2
	local pageButtonImage = "rbxasset://textures/ui/Chat/TabArrowBackground.png"
	local pageButtonArrowImage = "rbxasset://textures/ui/Chat/TabArrow.png"

	--// ToDo: Remove these lines when the assets are put into trunk.
	--// These grab unchanging versions hosted on the site, and not from the content folder.
	pageButtonImage = "rbxassetid://471630199"
	pageButtonArrowImage = "rbxassetid://471630112"


	local PageLeftButton = Instance.new("ImageButton", BaseFrame)
	PageLeftButton.Selectable = ChatSettings.GamepadNavigationEnabled
	PageLeftButton.Name = "PageLeftButton"
	PageLeftButton.SizeConstraint = Enum.SizeConstraint.RelativeYY
	PageLeftButton.Size = UDim2.new(scale, 0, scale, 0)
	PageLeftButton.BackgroundTransparency = 1
	PageLeftButton.Position = UDim2.new(0, 4, scaleOther, 0)
	PageLeftButton.Visible = false
	PageLeftButton.Image = pageButtonImage
	local ArrowLabel = Instance.new("ImageLabel", PageLeftButton)
	ArrowLabel.Name = "ArrowLabel"
	ArrowLabel.BackgroundTransparency = 1
	ArrowLabel.Size = UDim2.new(0.4, 0, 0.4, 0)
	ArrowLabel.Image = pageButtonArrowImage

	local PageRightButtonPositionalHelper = Instance.new("Frame", BaseFrame)
	PageRightButtonPositionalHelper.Selectable = false
	PageRightButtonPositionalHelper.BackgroundTransparency = 1
	PageRightButtonPositionalHelper.Name = "PositionalHelper"
	PageRightButtonPositionalHelper.Size = PageLeftButton.Size
	PageRightButtonPositionalHelper.SizeConstraint = PageLeftButton.SizeConstraint
	PageRightButtonPositionalHelper.Position = UDim2.new(1, 0, scaleOther, 0)

	local PageRightButton = PageLeftButton:Clone()
	PageRightButton.Parent = PageRightButtonPositionalHelper
	PageRightButton.Name = "PageRightButton"
	PageRightButton.Size = UDim2.new(1, 0, 1, 0)
	PageRightButton.SizeConstraint = Enum.SizeConstraint.RelativeXY
	PageRightButton.Position = UDim2.new(-1, -4, 0, 0)

	local positionOffset = UDim2.new(0.05, 0, 0, 0)

	PageRightButton.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) + positionOffset
	PageLeftButton.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) - positionOffset
	PageLeftButton.ArrowLabel.Rotation = 180


	self.GuiObject = BaseFrame

	self.GuiObjects.BaseFrame = BaseFrame
	self.GuiObjects.ScrollerSizer = ScrollerSizer
	self.GuiObjects.ScrollerFrame = ScrollerFrame
	self.GuiObjects.PageLeftButton = PageLeftButton
	self.GuiObjects.PageRightButton = PageRightButton
	self.GuiObjects.LeaveConfirmationFrame = LeaveConfirmationFrame
	self.GuiObjects.LeaveConfirmationNotice = LeaveConfirmationNotice

	self.GuiObjects.PageLeftButtonArrow = PageLeftButton.ArrowLabel
	self.GuiObjects.PageRightButtonArrow = PageRightButton.ArrowLabel
	self:AnimGuiObjects()

	PageLeftButton.MouseButton1Down:connect(function() self:ScrollChannelsFrame(-1) end)
	PageRightButton.MouseButton1Down:connect(function() self:ScrollChannelsFrame(1) end)

	self:ScrollChannelsFrame(0)
end


function methods:UpdateMessagePostedInChannel(channelName)
	local tab = self:GetChannelTab(channelName)
	if (tab) then
		tab:UpdateMessagePostedInChannel()
	else
		warn("ChannelsTab '" .. channelName .. "' does not exist!")
	end
end

function methods:AddChannelTab(channelName)
	if (self:GetChannelTab(channelName)) then
		error("Channel tab '" .. channelName .. "'already exists!")
	end

	local tab = moduleChannelsTab.new(channelName)
	tab.GuiObject.Parent = self.GuiObjects.ScrollerFrame
	self.ChannelTabs[channelName:lower()] = tab

	self.NumTabs = self.NumTabs + 1
	self:OrganizeChannelTabs()

	if (ChatSettings.RightClickToLeaveChannelEnabled) then
		tab.NameTag.MouseButton2Click:connect(function()
			self.LeaveConfirmationNotice.Text = string.format("Leave channel %s?", tab.ChannelName)
			self.LeaveConfirmationFrame.LeaveTarget.Value = tab.ChannelName
			self.LeaveConfirmationFrame:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 0.2, true)
		end)
	end

	return tab
end

function methods:RemoveChannelTab(channelName)
	if (not self:GetChannelTab(channelName)) then
		error("Channel tab '" .. channelName .. "'does not exist!")
	end

	local indexName = channelName:lower()
	self.ChannelTabs[indexName]:Destroy()
	self.ChannelTabs[indexName] = nil

	self.NumTabs = self.NumTabs - 1
	self:OrganizeChannelTabs()
end

function methods:GetChannelTab(channelName)
	return self.ChannelTabs[channelName:lower()]
end

function methods:OrganizeChannelTabs()
	local order = {}

	table.insert(order, self:GetChannelTab(ChatSettings.GeneralChannelName))
	table.insert(order, self:GetChannelTab("System"))

	for tabIndexName, tab in pairs(self.ChannelTabs) do
		if (tab.ChannelName ~= ChatSettings.GeneralChannelName and tab.ChannelName ~= "System") then
			table.insert(order, tab)
		end
	end

	for index, tab in pairs(order) do
		tab.GuiObject.Position = UDim2.new(index - 1, 0, 0, 0)
	end

	--// Dynamic tab resizing
	self.GuiObjects.ScrollerSizer.Size = UDim2.new(1 / math.max(1, math.min(ChatSettings.ChannelsBarFullTabSize, self.NumTabs)), 0, 1, 0)

	self:ScrollChannelsFrame(0)
end

function methods:ResizeChannelTabText(textSize)
	for i, tab in pairs(self.ChannelTabs) do
		tab:SetTextSize(textSize)
	end
end

function methods:ScrollChannelsFrame(dir)
	if (self.ScrollChannelsFrameLock) then return end
	self.ScrollChannelsFrameLock = true

	local tabNumber = ChatSettings.ChannelsBarFullTabSize

	local newPageNum = self.CurPageNum + dir
	if (newPageNum < 0) then
		newPageNum = 0
	elseif (newPageNum > 0 and newPageNum + tabNumber > self.NumTabs) then
		newPageNum = self.NumTabs - tabNumber
	end

	self.CurPageNum = newPageNum

	local tweenTime = 0.15
	local endPos = UDim2.new(-self.CurPageNum, 0, 0, 0)

	self.GuiObjects.PageLeftButton.Visible = (self.CurPageNum > 0)
	self.GuiObjects.PageRightButton.Visible = (self.CurPageNum + tabNumber < self.NumTabs)

	if dir == 0 then
		self.ScrollChannelsFrameLock = false
		return
	end

	local function UnlockFunc()
		self.ScrollChannelsFrameLock = false
	end

	self:WaitUntilParentedCorrectly()

	self.GuiObjects.ScrollerFrame:TweenPosition(endPos, Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, tweenTime, true, UnlockFunc)
end

function methods:FadeOutBackground(duration)
	for channelName, channelObj in pairs(self.ChannelTabs) do
		channelObj:FadeOutBackground(duration)
	end

	self.AnimParams.Background_TargetTransparency = 1
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeInBackground(duration)
	for channelName, channelObj in pairs(self.ChannelTabs) do
		channelObj:FadeInBackground(duration)
	end

	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeOutText(duration)
	for channelName, channelObj in pairs(self.ChannelTabs) do
		channelObj:FadeOutText(duration)
	end
end

function methods:FadeInText(duration)
	for channelName, channelObj in pairs(self.ChannelTabs) do
		channelObj:FadeInText(duration)
	end
end

function methods:AnimGuiObjects()
	self.GuiObjects.PageLeftButton.ImageTransparency = self.AnimParams.Background_CurrentTransparency
	self.GuiObjects.PageRightButton.ImageTransparency = self.AnimParams.Background_CurrentTransparency
	self.GuiObjects.PageLeftButtonArrow.ImageTransparency = self.AnimParams.Background_CurrentTransparency
	self.GuiObjects.PageRightButtonArrow.ImageTransparency = self.AnimParams.Background_CurrentTransparency
end

function methods:InitializeAnimParams()
	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_CurrentTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(0)
end

function methods:Update(dtScale)
	for channelName, channelObj in pairs(self.ChannelTabs) do
		channelObj:Update(dtScale)
	end

	self.AnimParams.Background_CurrentTransparency = CurveUtil:Expt(
			self.AnimParams.Background_CurrentTransparency,
			self.AnimParams.Background_TargetTransparency,
			self.AnimParams.Background_NormalizedExptValue,
			dtScale
	)

	self:AnimGuiObjects()
end

--// ToDo: Move to common modules
function methods:WaitUntilParentedCorrectly()
	while (not self.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer)) do
		self.GuiObject.AncestryChanged:wait()
	end
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new()
	local obj = setmetatable({}, methods)

	obj.GuiObject = nil
	obj.GuiObjects = {}

	obj.ChannelTabs = {}
	obj.NumTabs = 0
	obj.CurPageNum = 0

	obj.ScrollChannelsFrameLock = false

	obj.AnimParams = {}

	obj:InitializeAnimParams()

	ChatSettings.SettingsChanged:connect(function(setting, value)
		if (setting == "ChatChannelsTabTextSize") then
			obj:ResizeChannelTabText(value)
		end
	end)

	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatBar
G2L_MODULES[G2L["276"]] = {
Closure = function()
local script = G2L["276"]
--	// FileName: ChatBar.lua
--	// Written by: Xsitsu
--	// Description: Manages text typing and typing state.

local module = {}

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local TextService = game:GetService("TextService")
local LocalPlayer = Players.LocalPlayer

while not LocalPlayer do
	Players.PlayerAdded:wait()
	LocalPlayer = Players.LocalPlayer
end

--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local modulesFolder = script.Parent
local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))
local CurveUtil = require(modulesFolder:WaitForChild("CurveUtil"))

local commandModules = clientChatModules:WaitForChild("CommandModules")
local WhisperModule = require(commandModules:WaitForChild("Whisper"))

local MessageSender = require(modulesFolder:WaitForChild("MessageSender"))

local ChatLocalization = nil
pcall(function() ChatLocalization = require(game:GetService("Chat").ClientChatModules.ChatLocalization) end)
if ChatLocalization == nil then ChatLocalization = {} function ChatLocalization:Get(key,default) return default end end

local FFlagUserChatNewMessageLengthCheck2 do
	local success, result = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserChatNewMessageLengthCheck2")
	end)
	FFlagUserChatNewMessageLengthCheck2 = success and result
end

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

function methods:CreateGuiObjects(targetParent)
	self.ChatBarParentFrame = targetParent

	local backgroundImagePixelOffset = 7
	local textBoxPixelOffset = 5

	local BaseFrame = Instance.new("Frame")
	BaseFrame.Selectable = false
	BaseFrame.Size = UDim2.new(1, 0, 1, 0)
	BaseFrame.BackgroundTransparency = 0.6
	BaseFrame.BorderSizePixel = 0
	BaseFrame.BackgroundColor3 = ChatSettings.ChatBarBackGroundColor
	BaseFrame.Parent = targetParent

	local BoxFrame = Instance.new("Frame")
	BoxFrame.Selectable = false
	BoxFrame.Name = "BoxFrame"
	BoxFrame.BackgroundTransparency = 0.6
	BoxFrame.BorderSizePixel = 0
	BoxFrame.BackgroundColor3 = ChatSettings.ChatBarBoxColor
	BoxFrame.Size = UDim2.new(1, -backgroundImagePixelOffset * 2, 1, -backgroundImagePixelOffset * 2)
	BoxFrame.Position = UDim2.new(0, backgroundImagePixelOffset, 0, backgroundImagePixelOffset)
	BoxFrame.Parent = BaseFrame

	local TextBoxHolderFrame = Instance.new("Frame")
	TextBoxHolderFrame.BackgroundTransparency = 1
	TextBoxHolderFrame.Size = UDim2.new(1, -textBoxPixelOffset * 2, 1, -textBoxPixelOffset * 2)
	TextBoxHolderFrame.Position = UDim2.new(0, textBoxPixelOffset, 0, textBoxPixelOffset)
	TextBoxHolderFrame.Parent = BoxFrame

	local TextBox = Instance.new("TextBox")
	TextBox.Selectable = ChatSettings.GamepadNavigationEnabled
	TextBox.Name = "ChatBar"
	TextBox.BackgroundTransparency = 1
	TextBox.Size = UDim2.new(1, 0, 1, 0)
	TextBox.Position = UDim2.new(0, 0, 0, 0)
	TextBox.TextSize = ChatSettings.ChatBarTextSize
	TextBox.Font = ChatSettings.ChatBarFont
	TextBox.TextColor3 = ChatSettings.ChatBarTextColor
	TextBox.TextTransparency = 0.4
	TextBox.TextStrokeTransparency = 1
	TextBox.ClearTextOnFocus = false
	TextBox.TextXAlignment = Enum.TextXAlignment.Left
	TextBox.TextYAlignment = Enum.TextYAlignment.Top
	TextBox.TextWrapped = true
	TextBox.Text = ""
	TextBox.Parent = TextBoxHolderFrame

	local MessageModeTextButton = Instance.new("TextButton")
	MessageModeTextButton.Selectable = false
	MessageModeTextButton.Name = "MessageMode"
	MessageModeTextButton.BackgroundTransparency = 1
	MessageModeTextButton.Position = UDim2.new(0, 0, 0, 0)
	MessageModeTextButton.TextSize = ChatSettings.ChatBarTextSize
	MessageModeTextButton.Font = ChatSettings.ChatBarFont
	MessageModeTextButton.TextXAlignment = Enum.TextXAlignment.Left
	MessageModeTextButton.TextWrapped = true
	MessageModeTextButton.Text = ""
	MessageModeTextButton.Size = UDim2.new(0, 0, 0, 0)
	MessageModeTextButton.TextYAlignment = Enum.TextYAlignment.Center
	MessageModeTextButton.TextColor3 = self:GetDefaultChannelNameColor()
	MessageModeTextButton.Visible = true
	MessageModeTextButton.Parent = TextBoxHolderFrame

	local TextLabel = Instance.new("TextLabel")
	TextLabel.Selectable = false
	TextLabel.TextWrapped = true
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = TextBox.Size
	TextLabel.Position = TextBox.Position
	TextLabel.TextSize = TextBox.TextSize
	TextLabel.Font = TextBox.Font
	TextLabel.TextColor3 = TextBox.TextColor3
	TextLabel.TextTransparency = TextBox.TextTransparency
	TextLabel.TextStrokeTransparency = TextBox.TextStrokeTransparency
	TextLabel.TextXAlignment = TextBox.TextXAlignment
	TextLabel.TextYAlignment = TextBox.TextYAlignment
	TextLabel.Text = "..."
	TextLabel.Parent = TextBoxHolderFrame

	self.GuiObject = BaseFrame
	self.TextBox = TextBox
	self.TextLabel  = TextLabel

	self.GuiObjects.BaseFrame = BaseFrame
	self.GuiObjects.TextBoxFrame = BoxFrame
	self.GuiObjects.TextBox = TextBox
	self.GuiObjects.TextLabel = TextLabel
	self.GuiObjects.MessageModeTextButton = MessageModeTextButton

	self:AnimGuiObjects()
	self:SetUpTextBoxEvents(TextBox, TextLabel, MessageModeTextButton)
	if self.UserHasChatOff then
		self:DoLockChatBar()
	end
	self.eGuiObjectsChanged:Fire()
end

-- Used to lock the chat bar when the user has chat turned off.
function methods:DoLockChatBar()
	if self.TextLabel then
		if LocalPlayer.UserId > 0 then
			self.TextLabel.Text = ChatLocalization:Get(
				"GameChat_ChatMessageValidator_SettingsError",
				"To chat in game, turn on chat in your Privacy Settings."
			)
		else
			self.TextLabel.Text = ChatLocalization:Get(
				"GameChat_SwallowGuestChat_Message",
				"Sign up to chat in game."
			)
		end
		self:CalculateSize()
	end
	if self.TextBox then
		self.TextBox.Active = false
		self.TextBox.Focused:connect(function()
			self.TextBox:ReleaseFocus()
		end)
	end
end

function methods:SetUpTextBoxEvents(TextBox, TextLabel, MessageModeTextButton)
	-- Clean up events from a previous setup.
	for name, conn in pairs(self.TextBoxConnections) do
		conn:disconnect()
		self.TextBoxConnections[name] = nil
	end

	--// Code for getting back into general channel from other target channel when pressing backspace.
	self.TextBoxConnections.UserInputBegan = UserInputService.InputBegan:connect(function(inputObj, gpe)
		if (inputObj.KeyCode == Enum.KeyCode.Backspace) then
			if (self:IsFocused() and TextBox.Text == "") then
				self:SetChannelTarget(ChatSettings.GeneralChannelName)
			end
		end
	end)

	self.TextBoxConnections.TextBoxChanged = TextBox.Changed:connect(function(prop)
		if prop == "AbsoluteSize" then
			self:CalculateSize()
			return
		end

		if prop ~= "Text" then
			return
		end

		self:CalculateSize()

		if FFlagUserChatNewMessageLengthCheck2 then
			if utf8.len(utf8.nfcnormalize(TextBox.Text)) > ChatSettings.MaximumMessageLength then
				TextBox.Text = self.PreviousText
			else
				self.PreviousText = TextBox.Text
			end
		else
			if (string.len(TextBox.Text) > ChatSettings.MaximumMessageLength) then
				TextBox.Text = string.sub(TextBox.Text, 1, ChatSettings.MaximumMessageLength)
				return
			end
		end

		if not self.InCustomState then
			local customState = self.CommandProcessor:ProcessInProgressChatMessage(TextBox.Text, self.ChatWindow, self)
			if customState then
				self.InCustomState = true
				self.CustomState = customState
			end
		else
			self.CustomState:TextUpdated()
		end
	end)

	local function UpdateOnFocusStatusChanged(isFocused)
		if isFocused or TextBox.Text ~= "" then
			TextLabel.Visible = false
		else
			TextLabel.Visible = true
		end
	end

	self.TextBoxConnections.MessageModeClick = MessageModeTextButton.MouseButton1Down:connect(function()
		if MessageModeTextButton.Text ~= "" then
			self:SetChannelTarget(ChatSettings.GeneralChannelName)
		end
	end)

	self.TextBoxConnections.TextBoxFocused = TextBox.Focused:connect(function()
		if not self.UserHasChatOff then
			self:CalculateSize()
			UpdateOnFocusStatusChanged(true)
		end
	end)

	self.TextBoxConnections.TextBoxFocusLost = TextBox.FocusLost:connect(function(enterPressed, inputObject)
		self:CalculateSize()
		if (inputObject and inputObject.KeyCode == Enum.KeyCode.Escape) then
			TextBox.Text = ""
		end
		UpdateOnFocusStatusChanged(false)
	end)
end

function methods:GetTextBox()
	return self.TextBox
end

function methods:GetMessageModeTextButton()
	return self.GuiObjects.MessageModeTextButton
end

-- Deprecated in favour of GetMessageModeTextButton
-- Retained for compatibility reasons.
function methods:GetMessageModeTextLabel()
	return self:GetMessageModeTextButton()
end

function methods:IsFocused()
	if self.UserHasChatOff then
		return false
	end

	return self:GetTextBox():IsFocused()
end

function methods:GetVisible()
	return self.GuiObject.Visible
end

function methods:CaptureFocus()
	if not self.UserHasChatOff then
		self:GetTextBox():CaptureFocus()
	end
end

function methods:ReleaseFocus(didRelease)
	self:GetTextBox():ReleaseFocus(didRelease)
end

function methods:ResetText()
	self:GetTextBox().Text = ""
end

function methods:SetText(text)
	self:GetTextBox().Text = text
end

function methods:GetEnabled()
	return self.GuiObject.Visible
end

function methods:SetEnabled(enabled)
	if self.UserHasChatOff then
		-- The chat bar can not be removed if a user has chat turned off so that
		-- the chat bar can display a message explaining that chat is turned off.
		self.GuiObject.Visible = true
	else
		self.GuiObject.Visible = enabled
	end
end

function methods:SetTextLabelText(text)
	if not self.UserHasChatOff then
		self.TextLabel.Text = text
	end
end

function methods:SetTextBoxText(text)
	self.TextBox.Text = text
end

function methods:GetTextBoxText()
	return self.TextBox.Text
end

function methods:ResetSize()
	self.TargetYSize = 0
	self:TweenToTargetYSize()
end

local function measureSize(textObj)
	return TextService:GetTextSize(
		textObj.Text,
		textObj.TextSize,
		textObj.Font,
		Vector2.new(textObj.AbsoluteSize.X, 10000)
	)
end

function methods:CalculateSize()
	if self.CalculatingSizeLock then
		return
	end
	self.CalculatingSizeLock = true

	local textSize = nil
	local bounds = nil

	if self:IsFocused() or self.TextBox.Text ~= "" then
		textSize = self.TextBox.TextSize
		bounds = measureSize(self.TextBox).Y
	else
		textSize = self.TextLabel.TextSize
		bounds = measureSize(self.TextLabel).Y
	end

	local newTargetYSize = bounds - textSize
	if (self.TargetYSize ~= newTargetYSize) then
		self.TargetYSize = newTargetYSize
		self:TweenToTargetYSize()
	end

	self.CalculatingSizeLock = false
end

function methods:TweenToTargetYSize()
	local endSize = UDim2.new(1, 0, 1, self.TargetYSize)
	local curSize = self.GuiObject.Size

	local curAbsoluteSizeY = self.GuiObject.AbsoluteSize.Y
	self.GuiObject.Size = endSize
	local endAbsoluteSizeY = self.GuiObject.AbsoluteSize.Y
	self.GuiObject.Size = curSize

	local pixelDistance = math.abs(endAbsoluteSizeY - curAbsoluteSizeY)
	local tweeningTime = math.min(1, (pixelDistance * (1 / self.TweenPixelsPerSecond))) -- pixelDistance * (seconds per pixels)

	local success = pcall(function() self.GuiObject:TweenSize(endSize, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, tweeningTime, true) end)
	if (not success) then
		self.GuiObject.Size = endSize
	end
end

function methods:SetTextSize(textSize)
	if not self:IsInCustomState() then
		if self.TextBox then
			self.TextBox.TextSize = textSize
		end
		if self.TextLabel then
			self.TextLabel.TextSize = textSize
		end
	end
end

function methods:GetDefaultChannelNameColor()
	if ChatSettings.DefaultChannelNameColor then
		return ChatSettings.DefaultChannelNameColor
	end
	return Color3.fromRGB(35, 76, 142)
end

function methods:SetChannelTarget(targetChannel)
	local messageModeTextButton = self.GuiObjects.MessageModeTextButton
	local textBox = self.TextBox
	local textLabel = self.TextLabel

	self.TargetChannel = targetChannel

	if not self:IsInCustomState() then
		if targetChannel ~= ChatSettings.GeneralChannelName then
			messageModeTextButton.Size = UDim2.new(0, 1000, 1, 0)
			local localizedTargetChannel = targetChannel
			if ChatLocalization.tryLocalize then
				localizedTargetChannel = ChatLocalization:tryLocalize(targetChannel)
			end
			messageModeTextButton.Text = string.format("[%s] ", localizedTargetChannel)

			local channelNameColor = self:GetChannelNameColor(targetChannel)
			if channelNameColor then
				messageModeTextButton.TextColor3 = channelNameColor
			else
				messageModeTextButton.TextColor3 = self:GetDefaultChannelNameColor()
			end

			local xSize = messageModeTextButton.TextBounds.X
			messageModeTextButton.Size = UDim2.new(0, xSize, 1, 0)
			textBox.Size = UDim2.new(1, -xSize, 1, 0)
			textBox.Position = UDim2.new(0, xSize, 0, 0)
			textLabel.Size = UDim2.new(1, -xSize, 1, 0)
			textLabel.Position = UDim2.new(0, xSize, 0, 0)
		else
			messageModeTextButton.Text = ""
			messageModeTextButton.Size = UDim2.new(0, 0, 0, 0)
			textBox.Size = UDim2.new(1, 0, 1, 0)
			textBox.Position = UDim2.new(0, 0, 0, 0)
			textLabel.Size = UDim2.new(1, 0, 1, 0)
			textLabel.Position = UDim2.new(0, 0, 0, 0)
		end
	end
end

function methods:IsInCustomState()
	return self.InCustomState
end

function methods:ResetCustomState()
	if self.InCustomState then
		self.CustomState:Destroy()
		self.CustomState = nil
		self.InCustomState = false

		self.ChatBarParentFrame:ClearAllChildren()
		self:CreateGuiObjects(self.ChatBarParentFrame)
		self:SetTextLabelText(
			ChatLocalization:Get(
				"GameChat_ChatMain_ChatBarText",
				'To chat click here or press "/" key'
			)
		)
	end
end

function methods:EnterWhisperState(player)
	self:ResetCustomState()
	if WhisperModule.CustomStateCreator then
		self.CustomState = WhisperModule.CustomStateCreator(
			player,
			self.ChatWindow,
			self,
			ChatSettings
		)
		self.InCustomState = true
	else
		self:SetText("/w " .. player.Name)
	end
	self:CaptureFocus()
end

function methods:GetCustomMessage()
	if self.InCustomState then
		return self.CustomState:GetMessage()
	end
	return nil
end

function methods:CustomStateProcessCompletedMessage(message)
	if self.InCustomState then
		return self.CustomState:ProcessCompletedMessage()
	end
	return false
end

function methods:FadeOutBackground(duration)
	self.AnimParams.Background_TargetTransparency = 1
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
	self:FadeOutText(duration)
end

function methods:FadeInBackground(duration)
	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
	self:FadeInText(duration)
end

function methods:FadeOutText(duration)
	self.AnimParams.Text_TargetTransparency = 1
	self.AnimParams.Text_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeInText(duration)
	self.AnimParams.Text_TargetTransparency = 0.4
	self.AnimParams.Text_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:AnimGuiObjects()
	self.GuiObject.BackgroundTransparency = self.AnimParams.Background_CurrentTransparency
	self.GuiObjects.TextBoxFrame.BackgroundTransparency = self.AnimParams.Background_CurrentTransparency

	self.GuiObjects.TextLabel.TextTransparency = self.AnimParams.Text_CurrentTransparency
	self.GuiObjects.TextBox.TextTransparency = self.AnimParams.Text_CurrentTransparency
	self.GuiObjects.MessageModeTextButton.TextTransparency = self.AnimParams.Text_CurrentTransparency
end

function methods:InitializeAnimParams()
	self.AnimParams.Text_TargetTransparency = 0.4
	self.AnimParams.Text_CurrentTransparency = 0.4
	self.AnimParams.Text_NormalizedExptValue = 1

	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_CurrentTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = 1
end

function methods:Update(dtScale)
	self.AnimParams.Text_CurrentTransparency = CurveUtil:Expt(
			self.AnimParams.Text_CurrentTransparency,
			self.AnimParams.Text_TargetTransparency,
			self.AnimParams.Text_NormalizedExptValue,
			dtScale
	)
	self.AnimParams.Background_CurrentTransparency = CurveUtil:Expt(
			self.AnimParams.Background_CurrentTransparency,
			self.AnimParams.Background_TargetTransparency,
			self.AnimParams.Background_NormalizedExptValue,
			dtScale
	)

	self:AnimGuiObjects()
end

function methods:SetChannelNameColor(channelName, channelNameColor)
	self.ChannelNameColors[channelName] = channelNameColor
	if self.GuiObjects.MessageModeTextButton.Text == channelName then
		self.GuiObjects.MessageModeTextButton.TextColor3 = channelNameColor
	end
end

function methods:GetChannelNameColor(channelName)
	return self.ChannelNameColors[channelName]
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new(CommandProcessor, ChatWindow)
	local obj = setmetatable({}, methods)

	obj.GuiObject = nil
	obj.ChatBarParentFrame = nil
	obj.TextBox = nil
	obj.TextLabel = nil
	obj.GuiObjects = {}
	obj.eGuiObjectsChanged = Instance.new("BindableEvent")
	obj.GuiObjectsChanged = obj.eGuiObjectsChanged.Event
	obj.TextBoxConnections = {}
	obj.PreviousText = ""

	obj.InCustomState = false
	obj.CustomState = nil

	obj.TargetChannel = nil
	obj.CommandProcessor = CommandProcessor
	obj.ChatWindow = ChatWindow

	obj.TweenPixelsPerSecond = 500
	obj.TargetYSize = 0

	obj.AnimParams = {}
	obj.CalculatingSizeLock = false

	obj.ChannelNameColors = {}

	obj.UserHasChatOff = false

	obj:InitializeAnimParams()

	ChatSettings.SettingsChanged:connect(function(setting, value)
		if (setting == "ChatBarTextSize") then
			obj:SetTextSize(value)
		end
	end)

	coroutine.wrap(function()
		local success, canLocalUserChat = pcall(function()
			return Chat:CanUserChatAsync(LocalPlayer.UserId)
		end)
		local canChat = success and (RunService:IsStudio() or canLocalUserChat)
		if canChat == false then
			obj.UserHasChatOff = true
			obj:DoLockChatBar()
		end
	end)()


	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatChannel
G2L_MODULES[G2L["277"]] = {
Closure = function()
local script = G2L["277"]
--	// FileName: ChatChannel.lua
--	// Written by: Xsitsu
--	// Description: ChatChannel class for handling messages being added and removed from the chat channel.

local module = {}
--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local modulesFolder = script.Parent

local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

function methods:Destroy()
	self.Destroyed = true
end

function methods:SetActive(active)
	if active == self.Active then
		return
	end
	if active == false then
		self.MessageLogDisplay:Clear()
	else
		self.MessageLogDisplay:SetCurrentChannelName(self.Name)
		for i = 1, #self.MessageLog do
			self.MessageLogDisplay:AddMessage(self.MessageLog[i])
		end
	end
	self.Active = active
end

function methods:UpdateMessageFiltered(messageData)
	local searchIndex = 1
	local searchTable = self.MessageLog
	local messageObj = nil
	while (#searchTable >= searchIndex) do
		local obj = searchTable[searchIndex]

		if (obj.ID == messageData.ID) then
			messageObj = obj
			break
		end

		searchIndex = searchIndex + 1
	end

	if messageObj then
		messageObj.Message = messageData.Message
		messageObj.IsFiltered = true
		if self.Active then
			self.MessageLogDisplay:UpdateMessageFiltered(messageObj)
		end
	else
		-- We have not seen this filtered message before, but we should still add it to our log.
		self:AddMessageToChannelByTimeStamp(messageData)
	end
end

function methods:AddMessageToChannel(messageData)
	table.insert(self.MessageLog, messageData)
	if self.Active then
		self.MessageLogDisplay:AddMessage(messageData)
	end
	if #self.MessageLog > ChatSettings.MessageHistoryLengthPerChannel then
		self:RemoveLastMessageFromChannel()
	end
end

function methods:InternalAddMessageAtTimeStamp(messageData)
	for i = 1, #self.MessageLog do
		if messageData.Time < self.MessageLog[i].Time then
			table.insert(self.MessageLog, i, messageData)
			return
		end
	end
	table.insert(self.MessageLog, messageData)
end

function methods:AddMessagesToChannelByTimeStamp(messageLog, startIndex)
	for i = startIndex, #messageLog do
		self:InternalAddMessageAtTimeStamp(messageLog[i])
	end
	while #self.MessageLog > ChatSettings.MessageHistoryLengthPerChannel do
		table.remove(self.MessageLog, 1)
	end
	if self.Active then
		self.MessageLogDisplay:Clear()
		for i = 1, #self.MessageLog do
			self.MessageLogDisplay:AddMessage(self.MessageLog[i])
		end
	end
end

function methods:AddMessageToChannelByTimeStamp(messageData)
	if #self.MessageLog >= 1 then
		-- These are the fast cases to evalutate.
		if self.MessageLog[1].Time > messageData.Time then
			return
		elseif messageData.Time >= self.MessageLog[#self.MessageLog].Time then
			self:AddMessageToChannel(messageData)
			return
		end

		for i = 1, #self.MessageLog do
			if messageData.Time < self.MessageLog[i].Time then
				table.insert(self.MessageLog, i, messageData)

				if #self.MessageLog > ChatSettings.MessageHistoryLengthPerChannel then
					self:RemoveLastMessageFromChannel()
				end

				if self.Active then
					self.MessageLogDisplay:AddMessageAtIndex(messageData, i)
				end

				return
			end
		end
	else
		self:AddMessageToChannel(messageData)
	end
end

function methods:RemoveLastMessageFromChannel()
	table.remove(self.MessageLog, 1)

	if self.Active then
		self.MessageLogDisplay:RemoveLastMessage()
	end
end

function methods:ClearMessageLog()
	self.MessageLog = {}

	if self.Active then
		self.MessageLogDisplay:Clear()
	end
end

function methods:RegisterChannelTab(tab)
	self.ChannelTab = tab
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new(channelName, messageLogDisplay)
	local obj = setmetatable({}, methods)
	obj.Destroyed = false
	obj.Active = false

	obj.MessageLog = {}
	obj.MessageLogDisplay = messageLogDisplay
	obj.ChannelTab = nil
	obj.Name = channelName

	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageLogDisplay
G2L_MODULES[G2L["278"]] = {
Closure = function()
local script = G2L["278"]
--	// FileName: MessageLogDisplay.lua
--	// Written by: Xsitsu, TheGamer101
--	// Description: ChatChannel window for displaying messages.

local FFlagUserChatHistorySinksInput do
	local success, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserChatHistorySinksInput")
	end)
	FFlagUserChatHistorySinksInput = success and value
end

local module = {}
module.ScrollBarThickness = 4

--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local modulesFolder = script.Parent
local moduleMessageLabelCreator = require(modulesFolder:WaitForChild("MessageLabelCreator"))
local CurveUtil = require(modulesFolder:WaitForChild("CurveUtil"))

local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))

local MessageLabelCreator = moduleMessageLabelCreator.new()

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

local function CreateGuiObjects()
	local BaseFrame = Instance.new("Frame")
	BaseFrame.Selectable = false
	BaseFrame.Size = UDim2.new(1, 0, 1, 0)
	BaseFrame.BackgroundTransparency = 1

	local Scroller = Instance.new("ScrollingFrame")
	Scroller.Selectable = ChatSettings.GamepadNavigationEnabled
	Scroller.Name = "Scroller"
	Scroller.BackgroundTransparency = 1
	Scroller.BorderSizePixel = 0
	Scroller.Position = UDim2.new(0, 0, 0, 3)
	Scroller.Size = UDim2.new(1, -4, 1, -6)
	Scroller.CanvasSize = UDim2.new(0, 0, 0, 0)
	Scroller.ScrollBarThickness = module.ScrollBarThickness
	Scroller.Active = FFlagUserChatHistorySinksInput
	Scroller.Parent = BaseFrame

	local Layout = Instance.new("UIListLayout")
	Layout.SortOrder = Enum.SortOrder.LayoutOrder
	Layout.Parent = Scroller

	return BaseFrame, Scroller, Layout
end

function methods:Destroy()
	self.GuiObject:Destroy()
	self.Destroyed = true
end

function methods:SetActive(active)
	self.GuiObject.Visible = active
end

function methods:UpdateMessageFiltered(messageData)
	local messageObject = nil
	local searchIndex = 1
	local searchTable = self.MessageObjectLog

	while (#searchTable >= searchIndex) do
		local obj = searchTable[searchIndex]

		if obj.ID == messageData.ID then
			messageObject = obj
			break
		end

		searchIndex = searchIndex + 1
	end

	if messageObject then
		messageObject.UpdateTextFunction(messageData)
		self:PositionMessageLabelInWindow(messageObject, searchIndex)
	end
end

function methods:AddMessage(messageData)
	self:WaitUntilParentedCorrectly()

	local messageObject = MessageLabelCreator:CreateMessageLabel(messageData, self.CurrentChannelName)
	if messageObject == nil then
		return
	end

	table.insert(self.MessageObjectLog, messageObject)
	self:PositionMessageLabelInWindow(messageObject, #self.MessageObjectLog)
end

function methods:AddMessageAtIndex(messageData, index)
	local messageObject = MessageLabelCreator:CreateMessageLabel(messageData, self.CurrentChannelName)
	if messageObject == nil then
		return
	end

	table.insert(self.MessageObjectLog, index, messageObject)

	self:PositionMessageLabelInWindow(messageObject, index)
end

function methods:RemoveLastMessage()
	self:WaitUntilParentedCorrectly()

	local lastMessage = self.MessageObjectLog[1]

	lastMessage:Destroy()
	table.remove(self.MessageObjectLog, 1)
end

function methods:IsScrolledDown()
	local yCanvasSize = self.Scroller.CanvasSize.Y.Offset
	local yContainerSize = self.Scroller.AbsoluteWindowSize.Y
	local yScrolledPosition = self.Scroller.CanvasPosition.Y

	return (yCanvasSize < yContainerSize or
		yCanvasSize - yScrolledPosition <= yContainerSize + 5)
end

function methods:UpdateMessageTextHeight(messageObject)
	local baseFrame = messageObject.BaseFrame
	for i = 1, 10 do
		if messageObject.BaseMessage.TextFits then
			break
		end

		local trySize = self.Scroller.AbsoluteSize.X - i
		baseFrame.Size = UDim2.new(1, 0, 0, messageObject.GetHeightFunction(trySize))
	end
end

function methods:PositionMessageLabelInWindow(messageObject, index)
	self:WaitUntilParentedCorrectly()

	local wasScrolledDown = self:IsScrolledDown()

	local baseFrame = messageObject.BaseFrame

	local layoutOrder = 1
	if self.MessageObjectLog[index - 1] then
		if index == #self.MessageObjectLog then
			layoutOrder = self.MessageObjectLog[index - 1].BaseFrame.LayoutOrder + 1
		else
			layoutOrder = self.MessageObjectLog[index - 1].BaseFrame.LayoutOrder
		end
	end
	baseFrame.LayoutOrder = layoutOrder

	baseFrame.Size = UDim2.new(1, 0, 0, messageObject.GetHeightFunction(self.Scroller.AbsoluteSize.X))
	baseFrame.Parent = self.Scroller

	if messageObject.BaseMessage then
		self:UpdateMessageTextHeight(messageObject)
	end

	if wasScrolledDown then
		self.Scroller.CanvasPosition = Vector2.new(
			0, math.max(0, self.Scroller.CanvasSize.Y.Offset - self.Scroller.AbsoluteSize.Y))
	end
end

function methods:ReorderAllMessages()
	self:WaitUntilParentedCorrectly()

	--// Reordering / reparenting with a size less than 1 causes weird glitches to happen
	-- with scrolling as repositioning happens.
	if self.GuiObject.AbsoluteSize.Y < 1 then return end

	local oldCanvasPositon = self.Scroller.CanvasPosition
	local wasScrolledDown = self:IsScrolledDown()

	for _, messageObject in pairs(self.MessageObjectLog) do
		self:UpdateMessageTextHeight(messageObject)
	end

	if not wasScrolledDown then
		self.Scroller.CanvasPosition = oldCanvasPositon
	else
		self.Scroller.CanvasPosition = Vector2.new(
			0, math.max(0, self.Scroller.CanvasSize.Y.Offset - self.Scroller.AbsoluteSize.Y))
	end
end

function methods:Clear()
	for _, v in pairs(self.MessageObjectLog) do
		v:Destroy()
	end
	self.MessageObjectLog = {}
end

function methods:SetCurrentChannelName(name)
	self.CurrentChannelName = name
end

function methods:FadeOutBackground(duration)
	--// Do nothing
end

function methods:FadeInBackground(duration)
	--// Do nothing
end

function methods:FadeOutText(duration)
	for i = 1, #self.MessageObjectLog do
		if self.MessageObjectLog[i].FadeOutFunction then
			self.MessageObjectLog[i].FadeOutFunction(duration, CurveUtil)
		end
	end
end

function methods:FadeInText(duration)
	for i = 1, #self.MessageObjectLog do
		if self.MessageObjectLog[i].FadeInFunction then
			self.MessageObjectLog[i].FadeInFunction(duration, CurveUtil)
		end
	end
end

function methods:Update(dtScale)
	for i = 1, #self.MessageObjectLog do
		if self.MessageObjectLog[i].UpdateAnimFunction then
			self.MessageObjectLog[i].UpdateAnimFunction(dtScale, CurveUtil)
		end
	end
end

--// ToDo: Move to common modules
function methods:WaitUntilParentedCorrectly()
	while (not self.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer)) do
		self.GuiObject.AncestryChanged:wait()
	end
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new()
	local obj = setmetatable({}, methods)
	obj.Destroyed = false

	local BaseFrame, Scroller, Layout = CreateGuiObjects()
	obj.GuiObject = BaseFrame
	obj.Scroller = Scroller
	obj.Layout = Layout

	obj.MessageObjectLog = {}

	obj.Name = "MessageLogDisplay"
	obj.GuiObject.Name = "Frame_" .. obj.Name

	obj.CurrentChannelName = ""

	obj.GuiObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		spawn(function() obj:ReorderAllMessages() end)
	end)

	local wasScrolledDown = true

	obj.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		local size = obj.Layout.AbsoluteContentSize
		obj.Scroller.CanvasSize = UDim2.new(0, 0, 0, size.Y)
		if wasScrolledDown then
			local windowSize = obj.Scroller.AbsoluteWindowSize
			obj.Scroller.CanvasPosition = Vector2.new(0, size.Y - windowSize.Y)
		end
	end)

	obj.Scroller:GetPropertyChangedSignal("CanvasPosition"):Connect(function()
		wasScrolledDown = obj:IsScrolledDown()
	end)

	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChatWindow
G2L_MODULES[G2L["279"]] = {
Closure = function()
local script = G2L["279"]
--	// FileName: ChatWindow.lua
--	// Written by: Xsitsu
--	// Description: Main GUI window piece. Manages ChatBar, ChannelsBar, and ChatChannels.

local FFlagFixMouseCapture = false do
	local ok, value = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserFixMouseCapture")
	end)
	if ok then
		FFlagFixMouseCapture = value
	end
end

local module = {}

local Players = game:GetService("Players")
local Chat = game:GetService("Chat")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local PHONE_SCREEN_WIDTH = 640
local TABLET_SCREEN_WIDTH = 1024

local DEVICE_PHONE = 1
local DEVICE_TABLET = 2
local DEVICE_DESKTOP = 3

--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local modulesFolder = script.Parent
local moduleChatChannel = require(modulesFolder:WaitForChild("ChatChannel"))
local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))
local CurveUtil = require(modulesFolder:WaitForChild("CurveUtil"))

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

function getClassicChatEnabled()
	if ChatSettings.ClassicChatEnabled ~= nil then
		return ChatSettings.ClassicChatEnabled
	end
	return Players.ClassicChat
end

function getBubbleChatEnabled()
	if ChatSettings.BubbleChatEnabled ~= nil then
		return ChatSettings.BubbleChatEnabled
	end
	return Players.BubbleChat
end

function bubbleChatOnly()
 	return not getClassicChatEnabled() and getBubbleChatEnabled()
end

-- only merge property defined on target
function mergeProps(source, target)
	if not source or not target then return end
	for prop, value in pairs(source) do
		if target[prop] ~= nil then
			target[prop] = value
		end
	end
end

function methods:CreateGuiObjects(targetParent)
	local userDefinedChatWindowStyle 
	pcall(function()
		userDefinedChatWindowStyle= Chat:InvokeChatCallback(Enum.ChatCallbackType.OnCreatingChatWindow, nil)
	end)

	-- merge the userdefined settings with the ChatSettings
	mergeProps(userDefinedChatWindowStyle, ChatSettings)

	local BaseFrame = Instance.new("Frame")
	BaseFrame.BackgroundTransparency = 1
	BaseFrame.Active = ChatSettings.WindowDraggable
	BaseFrame.Parent = targetParent
    BaseFrame.AutoLocalize = false

	local ChatBarParentFrame = Instance.new("Frame")
	ChatBarParentFrame.Selectable = false
	ChatBarParentFrame.Name = "ChatBarParentFrame"
	ChatBarParentFrame.BackgroundTransparency = 1
	ChatBarParentFrame.Parent = BaseFrame

	local ChannelsBarParentFrame = Instance.new("Frame")
	ChannelsBarParentFrame.Selectable = false
	ChannelsBarParentFrame.Name = "ChannelsBarParentFrame"
	ChannelsBarParentFrame.BackgroundTransparency = 1
	ChannelsBarParentFrame.Position = UDim2.new(0, 0, 0, 0)
	ChannelsBarParentFrame.Parent = BaseFrame

	local ChatChannelParentFrame = Instance.new("Frame")
	ChatChannelParentFrame.Selectable = false
	ChatChannelParentFrame.Name = "ChatChannelParentFrame"
	ChatChannelParentFrame.BackgroundTransparency = 1
	ChatChannelParentFrame.BackgroundColor3 = ChatSettings.BackGroundColor
	ChatChannelParentFrame.BackgroundTransparency = 0.6
	ChatChannelParentFrame.BorderSizePixel = 0
	ChatChannelParentFrame.Parent = BaseFrame

	local ChatResizerFrame = Instance.new("ImageButton")
	ChatResizerFrame.Selectable = false
	ChatResizerFrame.Image = ""
	ChatResizerFrame.BackgroundTransparency = 0.6
	ChatResizerFrame.BorderSizePixel = 0
	ChatResizerFrame.Visible = false
	ChatResizerFrame.BackgroundColor3 = ChatSettings.BackGroundColor
	ChatResizerFrame.Active = true
	if bubbleChatOnly() then
		ChatResizerFrame.Position = UDim2.new(1, -ChatResizerFrame.AbsoluteSize.X, 0, 0)
	else
		ChatResizerFrame.Position = UDim2.new(1, -ChatResizerFrame.AbsoluteSize.X, 1, -ChatResizerFrame.AbsoluteSize.Y)
	end
	ChatResizerFrame.Parent = BaseFrame

	local ResizeIcon = Instance.new("ImageLabel")
	ResizeIcon.Selectable = false
	ResizeIcon.Size = UDim2.new(0.8, 0, 0.8, 0)
	ResizeIcon.Position = UDim2.new(0.2, 0, 0.2, 0)
	ResizeIcon.BackgroundTransparency = 1
	ResizeIcon.Image = "rbxassetid://261880743"
	ResizeIcon.Parent = ChatResizerFrame

	local function GetScreenGuiParent()
		--// Travel up parent list until you find the ScreenGui that the chat window is parented to
		local screenGuiParent = BaseFrame
		while (screenGuiParent and not screenGuiParent:IsA("ScreenGui")) do
			screenGuiParent = screenGuiParent.Parent
		end

		return screenGuiParent
	end


	local deviceType = DEVICE_DESKTOP

	local screenGuiParent = GetScreenGuiParent()
	if (screenGuiParent.AbsoluteSize.X <= PHONE_SCREEN_WIDTH) then
		deviceType = DEVICE_PHONE

	elseif (screenGuiParent.AbsoluteSize.X <= TABLET_SCREEN_WIDTH) then
		deviceType = DEVICE_TABLET

	end

	local checkSizeLock = false
	local function doCheckSizeBounds()
		if (checkSizeLock) then return end
		checkSizeLock = true

		if (not BaseFrame:IsDescendantOf(PlayerGui)) then return end

		local screenGuiParent = GetScreenGuiParent()

		local minWinSize = ChatSettings.MinimumWindowSize
		local maxWinSize = ChatSettings.MaximumWindowSize

		local forceMinY = ChannelsBarParentFrame.AbsoluteSize.Y + ChatBarParentFrame.AbsoluteSize.Y

		local minSizePixelX = (minWinSize.X.Scale * screenGuiParent.AbsoluteSize.X) + minWinSize.X.Offset
		local minSizePixelY = math.max((minWinSize.Y.Scale * screenGuiParent.AbsoluteSize.Y) + minWinSize.Y.Offset, forceMinY)

		local maxSizePixelX = (maxWinSize.X.Scale * screenGuiParent.AbsoluteSize.X) + maxWinSize.X.Offset
		local maxSizePixelY = (maxWinSize.Y.Scale * screenGuiParent.AbsoluteSize.Y) + maxWinSize.Y.Offset

		local absSizeX = BaseFrame.AbsoluteSize.X
		local absSizeY = BaseFrame.AbsoluteSize.Y

		if (absSizeX < minSizePixelX) then
			local offset = UDim2.new(0, minSizePixelX - absSizeX, 0, 0)
			BaseFrame.Size = BaseFrame.Size + offset

		elseif (absSizeX > maxSizePixelX) then
			local offset = UDim2.new(0, maxSizePixelX - absSizeX, 0, 0)
			BaseFrame.Size = BaseFrame.Size + offset

		end

		if (absSizeY < minSizePixelY) then
			local offset = UDim2.new(0, 0, 0, minSizePixelY - absSizeY)
			BaseFrame.Size = BaseFrame.Size + offset

		elseif (absSizeY > maxSizePixelY) then
			local offset = UDim2.new(0, 0, 0, maxSizePixelY - absSizeY)
			BaseFrame.Size = BaseFrame.Size + offset

		end

		local xScale = BaseFrame.AbsoluteSize.X / screenGuiParent.AbsoluteSize.X
		local yScale = BaseFrame.AbsoluteSize.Y / screenGuiParent.AbsoluteSize.Y
		
		-- cap chat window scale at a value smaller than 0.5 to prevent center of screen overlap
		if FFlagFixMouseCapture then 
			xScale = math.min(xScale, 0.45)
			yScale = math.min(xScale, 0.45)
		end
		
		BaseFrame.Size = UDim2.new(xScale, 0, yScale, 0)

		checkSizeLock = false
	end


	BaseFrame.Changed:connect(function(prop)
		if (prop == "AbsoluteSize") then
			doCheckSizeBounds()
		end
	end)



	ChatResizerFrame.DragBegin:connect(function(startUdim)
		BaseFrame.Draggable = false
	end)

	local function UpdatePositionFromDrag(atPos)
		if ChatSettings.WindowDraggable == false and ChatSettings.WindowResizable == false then
			return
		end
		local newSize = atPos - BaseFrame.AbsolutePosition + ChatResizerFrame.AbsoluteSize
		BaseFrame.Size = UDim2.new(0, newSize.X, 0, newSize.Y)
		if bubbleChatOnly() then
			ChatResizerFrame.Position = UDim2.new(1, -ChatResizerFrame.AbsoluteSize.X, 0, 0)
		else
			ChatResizerFrame.Position = UDim2.new(1, -ChatResizerFrame.AbsoluteSize.X, 1, -ChatResizerFrame.AbsoluteSize.Y)
		end
	end

	ChatResizerFrame.DragStopped:connect(function(endX, endY)
		BaseFrame.Draggable = ChatSettings.WindowDraggable
		--UpdatePositionFromDrag(Vector2.new(endX, endY))
	end)

	local resizeLock = false
	ChatResizerFrame.Changed:connect(function(prop)
		if (prop == "AbsolutePosition" and not BaseFrame.Draggable) then
			if (resizeLock) then return end
			resizeLock = true

			UpdatePositionFromDrag(ChatResizerFrame.AbsolutePosition)

			resizeLock = false
		end
	end)

	local function CalculateChannelsBarPixelSize(textSize)
		if (deviceType == DEVICE_PHONE) then
			textSize = textSize or ChatSettings.ChatChannelsTabTextSizePhone
		else
			textSize = textSize or ChatSettings.ChatChannelsTabTextSize
		end

		local channelsBarTextYSize = textSize
		local chatChannelYSize = math.max(32, channelsBarTextYSize + 8) + 2

		return chatChannelYSize
	end

	local function CalculateChatBarPixelSize(textSize)
		if (deviceType == DEVICE_PHONE) then
			textSize = textSize or ChatSettings.ChatBarTextSizePhone
		else
			textSize = textSize or ChatSettings.ChatBarTextSize
		end

		local chatBarTextSizeY = textSize
		local chatBarYSize = chatBarTextSizeY + (7 * 2) + (5 * 2)

		return chatBarYSize
	end

	if bubbleChatOnly() then
		ChatBarParentFrame.Position = UDim2.new(0, 0, 0, 0)
		ChannelsBarParentFrame.Visible = false
		ChannelsBarParentFrame.Active = false
		ChatChannelParentFrame.Visible = false
		ChatChannelParentFrame.Active = false

		local useXScale = 0
		local useXOffset = 0

		local screenGuiParent = GetScreenGuiParent()

		if (deviceType == DEVICE_PHONE) then
			useXScale = ChatSettings.DefaultWindowSizePhone.X.Scale
			useXOffset = ChatSettings.DefaultWindowSizePhone.X.Offset

		elseif (deviceType == DEVICE_TABLET) then
			useXScale = ChatSettings.DefaultWindowSizeTablet.X.Scale
			useXOffset = ChatSettings.DefaultWindowSizeTablet.X.Offset

		else
			useXScale = ChatSettings.DefaultWindowSizeDesktop.X.Scale
			useXOffset = ChatSettings.DefaultWindowSizeDesktop.X.Offset

		end

		local chatBarYSize = CalculateChatBarPixelSize()

		BaseFrame.Size = UDim2.new(useXScale, useXOffset, 0, chatBarYSize)
		BaseFrame.Position = ChatSettings.DefaultWindowPosition

	else

		local screenGuiParent = GetScreenGuiParent()

		if (deviceType == DEVICE_PHONE) then
			BaseFrame.Size = ChatSettings.DefaultWindowSizePhone

		elseif (deviceType == DEVICE_TABLET) then
			BaseFrame.Size = ChatSettings.DefaultWindowSizeTablet

		else
			BaseFrame.Size = ChatSettings.DefaultWindowSizeDesktop

		end

		BaseFrame.Position = ChatSettings.DefaultWindowPosition

	end

	if (deviceType == DEVICE_PHONE) then
		ChatSettings.ChatWindowTextSize = ChatSettings.ChatWindowTextSizePhone
		ChatSettings.ChatChannelsTabTextSize = ChatSettings.ChatChannelsTabTextSizePhone
		ChatSettings.ChatBarTextSize = ChatSettings.ChatBarTextSizePhone
	end

	local function UpdateDraggable(enabled)
		BaseFrame.Active = enabled
		BaseFrame.Draggable = enabled
	end

	local function UpdateResizable(enabled)
		ChatResizerFrame.Visible = enabled
		ChatResizerFrame.Draggable = enabled

		local frameSizeY = ChatBarParentFrame.Size.Y.Offset

		if (enabled) then
			ChatBarParentFrame.Size = UDim2.new(1, -frameSizeY - 2, 0, frameSizeY)
			if not bubbleChatOnly() then
				ChatBarParentFrame.Position = UDim2.new(0, 0, 1, -frameSizeY)
			end
		else
			ChatBarParentFrame.Size = UDim2.new(1, 0, 0, frameSizeY)
			if not bubbleChatOnly() then
				ChatBarParentFrame.Position = UDim2.new(0, 0, 1, -frameSizeY)
			end
		end
	end

	local function UpdateChatChannelParentFrameSize()
		local channelsBarSize = CalculateChannelsBarPixelSize()
		local chatBarSize = CalculateChatBarPixelSize()

		if (ChatSettings.ShowChannelsBar) then
			ChatChannelParentFrame.Size = UDim2.new(1, 0, 1, -(channelsBarSize + chatBarSize + 2 + 2))
			ChatChannelParentFrame.Position = UDim2.new(0, 0, 0, channelsBarSize + 2)

		else
			ChatChannelParentFrame.Size = UDim2.new(1, 0, 1, -(chatBarSize + 2 + 2))
			ChatChannelParentFrame.Position = UDim2.new(0, 0, 0, 2)

		end
	end

	local function UpdateChatChannelsTabTextSize(size)
		local channelsBarSize = CalculateChannelsBarPixelSize(size)
		ChannelsBarParentFrame.Size = UDim2.new(1, 0, 0, channelsBarSize)

		UpdateChatChannelParentFrameSize()
	end

	local function UpdateChatBarTextSize(size)
		local chatBarSize = CalculateChatBarPixelSize(size)

		ChatBarParentFrame.Size = UDim2.new(1, 0, 0, chatBarSize)
		if not bubbleChatOnly() then
			ChatBarParentFrame.Position = UDim2.new(0, 0, 1, -chatBarSize)
		end

		ChatResizerFrame.Size = UDim2.new(0, chatBarSize, 0, chatBarSize)
		ChatResizerFrame.Position = UDim2.new(1, -chatBarSize, 1, -chatBarSize)

		UpdateChatChannelParentFrameSize()
		UpdateResizable(ChatSettings.WindowResizable)
	end

	local function UpdateShowChannelsBar(enabled)
		ChannelsBarParentFrame.Visible = enabled
		UpdateChatChannelParentFrameSize()
	end

	UpdateChatChannelsTabTextSize(ChatSettings.ChatChannelsTabTextSize)
	UpdateChatBarTextSize(ChatSettings.ChatBarTextSize)
	UpdateDraggable(ChatSettings.WindowDraggable)
	UpdateResizable(ChatSettings.WindowResizable)
	UpdateShowChannelsBar(ChatSettings.ShowChannelsBar)

	ChatSettings.SettingsChanged:connect(function(setting, value)
		if (setting == "WindowDraggable") then
			UpdateDraggable(value)

		elseif (setting == "WindowResizable") then
			UpdateResizable(value)

		elseif (setting == "ChatChannelsTabTextSize") then
			UpdateChatChannelsTabTextSize(value)

		elseif (setting == "ChatBarTextSize") then
			UpdateChatBarTextSize(value)

		elseif (setting == "ShowChannelsBar") then
			UpdateShowChannelsBar(value)

		end
	end)

	self.GuiObject = BaseFrame

	self.GuiObjects.BaseFrame = BaseFrame
	self.GuiObjects.ChatBarParentFrame = ChatBarParentFrame
	self.GuiObjects.ChannelsBarParentFrame = ChannelsBarParentFrame
	self.GuiObjects.ChatChannelParentFrame = ChatChannelParentFrame
	self.GuiObjects.ChatResizerFrame = ChatResizerFrame
	self.GuiObjects.ResizeIcon = ResizeIcon
	self:AnimGuiObjects()
end

function methods:GetChatBar()
	return self.ChatBar
end

function methods:RegisterChatBar(ChatBar)
	self.ChatBar = ChatBar
	self.ChatBar:CreateGuiObjects(self.GuiObjects.ChatBarParentFrame)
end

function methods:RegisterChannelsBar(ChannelsBar)
	self.ChannelsBar = ChannelsBar
	self.ChannelsBar:CreateGuiObjects(self.GuiObjects.ChannelsBarParentFrame)
end

function methods:RegisterMessageLogDisplay(MessageLogDisplay)
	self.MessageLogDisplay = MessageLogDisplay
	self.MessageLogDisplay.GuiObject.Parent = self.GuiObjects.ChatChannelParentFrame
end

function methods:AddChannel(channelName)
	if (self:GetChannel(channelName)) then
		error("Channel '" .. channelName .. "' already exists!")
		return
	end

	local channel = moduleChatChannel.new(channelName, self.MessageLogDisplay)
	self.Channels[channelName:lower()] = channel

	channel:SetActive(false)

	local tab = self.ChannelsBar:AddChannelTab(channelName)
	tab.NameTag.MouseButton1Down:connect(function()
		self:SwitchCurrentChannel(channelName)
	end)

	channel:RegisterChannelTab(tab)

	return channel
end

function methods:GetFirstChannel()
	--// Channels are not indexed numerically, so this function is necessary.
	--// Grabs and returns the first channel it happens to, or nil if none exist.
	for i, v in pairs(self.Channels) do
		return v
	end
	return nil
end

function methods:RemoveChannel(channelName)
	if (not self:GetChannel(channelName)) then
		error("Channel '" .. channelName .. "' does not exist!")
	end

	local indexName = channelName:lower()

	local needsChannelSwitch = false
	if (self.Channels[indexName] == self:GetCurrentChannel()) then
		needsChannelSwitch = true

		self:SwitchCurrentChannel(nil)
	end

	self.Channels[indexName]:Destroy()
	self.Channels[indexName] = nil

	self.ChannelsBar:RemoveChannelTab(channelName)

	if (needsChannelSwitch) then
		local generalChannelExists = (self:GetChannel(ChatSettings.GeneralChannelName) ~= nil)
		local removingGeneralChannel = (indexName == ChatSettings.GeneralChannelName:lower())

		local targetSwitchChannel = nil

		if (generalChannelExists and not removingGeneralChannel) then
			targetSwitchChannel = ChatSettings.GeneralChannelName
		else
			local firstChannel = self:GetFirstChannel()
			targetSwitchChannel = (firstChannel and firstChannel.Name or nil)
		end

		self:SwitchCurrentChannel(targetSwitchChannel)
	end

	if not ChatSettings.ShowChannelsBar then
		if self.ChatBar.TargetChannel == channelName then
			self.ChatBar:SetChannelTarget(ChatSettings.GeneralChannelName)
		end
	end
end

function methods:GetChannel(channelName)
	return channelName and self.Channels[channelName:lower()] or nil
end

function methods:GetTargetMessageChannel()
	if (not ChatSettings.ShowChannelsBar) then
		return self.ChatBar.TargetChannel
	else
		local curChannel = self:GetCurrentChannel()
		return curChannel and curChannel.Name
	end
end

function methods:GetCurrentChannel()
	return self.CurrentChannel
end

function methods:SwitchCurrentChannel(channelName)
	if (not ChatSettings.ShowChannelsBar) then
		local targ = self:GetChannel(channelName)
		if (targ) then
			self.ChatBar:SetChannelTarget(targ.Name)
		end

		channelName = ChatSettings.GeneralChannelName
	end

	local cur = self:GetCurrentChannel()
	local new = self:GetChannel(channelName)
	if new == nil then
		error(string.format("Channel '%s' does not exist.", channelName))
	end

	if (new ~= cur) then
		if (cur) then
			cur:SetActive(false)
			local tab = self.ChannelsBar:GetChannelTab(cur.Name)
			tab:SetActive(false)
		end

		if (new) then
			new:SetActive(true)
			local tab = self.ChannelsBar:GetChannelTab(new.Name)
			tab:SetActive(true)
		end

		self.CurrentChannel = new
	end

end

function methods:UpdateFrameVisibility()
	self.GuiObject.Visible = (self.Visible and self.CoreGuiEnabled)
end

function methods:GetVisible()
	return self.Visible
end

function methods:SetVisible(visible)
	self.Visible = visible
	self:UpdateFrameVisibility()
end

function methods:GetCoreGuiEnabled()
	return self.CoreGuiEnabled
end

function methods:SetCoreGuiEnabled(enabled)
	self.CoreGuiEnabled = enabled
	self:UpdateFrameVisibility()
end

function methods:EnableResizable()
	self.GuiObjects.ChatResizerFrame.Active = true
end

function methods:DisableResizable()
	self.GuiObjects.ChatResizerFrame.Active = false
end

function methods:FadeOutBackground(duration)
	self.ChannelsBar:FadeOutBackground(duration)
	self.MessageLogDisplay:FadeOutBackground(duration)
	self.ChatBar:FadeOutBackground(duration)

	self.AnimParams.Background_TargetTransparency = 1
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeInBackground(duration)
	self.ChannelsBar:FadeInBackground(duration)
	self.MessageLogDisplay:FadeInBackground(duration)
	self.ChatBar:FadeInBackground(duration)

	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeOutText(duration)
	self.MessageLogDisplay:FadeOutText(duration)
	self.ChannelsBar:FadeOutText(duration)
end

function methods:FadeInText(duration)
	self.MessageLogDisplay:FadeInText(duration)
	self.ChannelsBar:FadeInText(duration)
end

function methods:AnimGuiObjects()
	self.GuiObjects.ChatChannelParentFrame.BackgroundTransparency = self.AnimParams.Background_CurrentTransparency
	self.GuiObjects.ChatResizerFrame.BackgroundTransparency = self.AnimParams.Background_CurrentTransparency
	self.GuiObjects.ResizeIcon.ImageTransparency = self.AnimParams.Background_CurrentTransparency
end

function methods:InitializeAnimParams()
	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_CurrentTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(0)
end

function methods:Update(dtScale)
	self.ChatBar:Update(dtScale)
	self.ChannelsBar:Update(dtScale)
	self.MessageLogDisplay:Update(dtScale)

	self.AnimParams.Background_CurrentTransparency = CurveUtil:Expt(
			self.AnimParams.Background_CurrentTransparency,
			self.AnimParams.Background_TargetTransparency,
			self.AnimParams.Background_NormalizedExptValue,
			dtScale
	)

	self:AnimGuiObjects()
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new()
	local obj = setmetatable({}, methods)

	obj.GuiObject = nil
	obj.GuiObjects = {}

	obj.ChatBar = nil
	obj.ChannelsBar = nil
	obj.MessageLogDisplay = nil

	obj.Channels = {}
	obj.CurrentChannel = nil

	obj.Visible = true
	obj.CoreGuiEnabled = true

	obj.AnimParams = {}

	obj:InitializeAnimParams()

	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageLabelCreator
G2L_MODULES[G2L["280"]] = {
Closure = function()
local script = G2L["280"]
--	// FileName: MessageLabelCreator.lua
--	// Written by: Xsitsu
--	// Description: Module to handle taking text and creating stylized GUI objects for display in ChatWindow.

local OBJECT_POOL_SIZE = 50

local module = {}
--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local messageCreatorModules = clientChatModules:WaitForChild("MessageCreatorModules")
local messageCreatorUtil = require(messageCreatorModules:WaitForChild("Util"))
local modulesFolder = script.Parent
local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))
local moduleObjectPool = require(modulesFolder:WaitForChild("ObjectPool"))
local MessageSender = require(modulesFolder:WaitForChild("MessageSender"))

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

-- merge properties on both table to target
function mergeProps(source, target)
	if not source then return end
	for prop, value in pairs(source) do
		target[prop] = value
	end
end

function ReturnToObjectPoolRecursive(instance, objectPool)
	local children = instance:GetChildren()
	for i = 1, #children do
		ReturnToObjectPoolRecursive(children[i], objectPool)
	end
	instance.Parent = nil
	objectPool:ReturnInstance(instance)
end

function GetMessageCreators()
	local typeToFunction = {}
	local creators = messageCreatorModules:GetChildren()
	for i = 1, #creators do
		if creators[i]:IsA("ModuleScript") then
			if creators[i].Name ~= "Util" then
				local creator = require(creators[i])
				typeToFunction[creator[messageCreatorUtil.KEY_MESSAGE_TYPE]] = creator[messageCreatorUtil.KEY_CREATOR_FUNCTION]
			end
		end
	end
	return typeToFunction
end

function methods:WrapIntoMessageObject(messageData, createdMessageObject)
	local BaseFrame = createdMessageObject[messageCreatorUtil.KEY_BASE_FRAME]
	local BaseMessage = nil
	if messageCreatorUtil.KEY_BASE_MESSAGE then
		BaseMessage = createdMessageObject[messageCreatorUtil.KEY_BASE_MESSAGE]
	end
	local UpdateTextFunction = createdMessageObject[messageCreatorUtil.KEY_UPDATE_TEXT_FUNC]
	local GetHeightFunction = createdMessageObject[messageCreatorUtil.KEY_GET_HEIGHT]
	local FadeInFunction = createdMessageObject[messageCreatorUtil.KEY_FADE_IN]
	local FadeOutFunction = createdMessageObject[messageCreatorUtil.KEY_FADE_OUT]
	local UpdateAnimFunction = createdMessageObject[messageCreatorUtil.KEY_UPDATE_ANIMATION]

	local obj = {}

	obj.ID = messageData.ID
	obj.BaseFrame = BaseFrame
	obj.BaseMessage = BaseMessage
	obj.UpdateTextFunction = UpdateTextFunction or function() warn("NO MESSAGE RESIZE FUNCTION") end
	obj.GetHeightFunction = GetHeightFunction
	obj.FadeInFunction = FadeInFunction
	obj.FadeOutFunction = FadeOutFunction
	obj.UpdateAnimFunction = UpdateAnimFunction
	obj.ObjectPool = self.ObjectPool
	obj.Destroyed = false

	function obj:Destroy()
		ReturnToObjectPoolRecursive(self.BaseFrame, self.ObjectPool)
		self.Destroyed = true
	end

	return obj
end

function methods:CreateMessageLabel(messageData, currentChannelName)

	messageData.Channel = currentChannelName
	local extraDeveloperFormatTable
	pcall(function()
		extraDeveloperFormatTable = Chat:InvokeChatCallback(Enum.ChatCallbackType.OnClientFormattingMessage, messageData)
	end)
	messageData.ExtraData = messageData.ExtraData or {}
	mergeProps(extraDeveloperFormatTable, messageData.ExtraData)

	local messageType = messageData.MessageType
	if self.MessageCreators[messageType] then
		local createdMessageObject = self.MessageCreators[messageType](messageData, currentChannelName)
		if createdMessageObject then
			return self:WrapIntoMessageObject(messageData, createdMessageObject)
		end
	elseif self.DefaultCreatorType then
		local createdMessageObject = self.MessageCreators[self.DefaultCreatorType](messageData, currentChannelName)
		if createdMessageObject then
			return self:WrapIntoMessageObject(messageData, createdMessageObject)
		end
	else
		error("No message creator available for message type: " ..messageType)
	end
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new()
	local obj = setmetatable({}, methods)

	obj.ObjectPool = moduleObjectPool.new(OBJECT_POOL_SIZE)
	obj.MessageCreators = GetMessageCreators()
	obj.DefaultCreatorType = messageCreatorUtil.DEFAULT_MESSAGE_CREATOR

	messageCreatorUtil:RegisterObjectPool(obj.ObjectPool)

	return obj
end

function module:GetStringTextBounds(text, font, textSize, sizeBounds)
	return messageCreatorUtil:GetStringTextBounds(text, font, textSize, sizeBounds)
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.CommandProcessor
G2L_MODULES[G2L["281"]] = {
Closure = function()
local script = G2L["281"]
--	// FileName: ProcessCommands.lua
--	// Written by: TheGamer101
--	// Description: Module for processing commands using the client CommandModules

local module = {}
local methods = {}
methods.__index = methods

--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local commandModules = clientChatModules:WaitForChild("CommandModules")
local commandUtil = require(commandModules:WaitForChild("Util"))
local modulesFolder = script.Parent
local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))

function methods:SetupCommandProcessors()
	local commands = commandModules:GetChildren()
	for i = 1, #commands do
		if commands[i]:IsA("ModuleScript") then
			if commands[i].Name ~= "Util" then
				local commandProcessor = require(commands[i])
				local processorType = commandProcessor[commandUtil.KEY_COMMAND_PROCESSOR_TYPE]
				local processorFunction = commandProcessor[commandUtil.KEY_PROCESSOR_FUNCTION]
				if processorType == commandUtil.IN_PROGRESS_MESSAGE_PROCESSOR then
					table.insert(self.InProgressMessageProcessors, processorFunction)
				elseif processorType == commandUtil.COMPLETED_MESSAGE_PROCESSOR then
					table.insert(self.CompletedMessageProcessors, processorFunction)
				end
			end
		end
	end
end

function methods:ProcessCompletedChatMessage(message, ChatWindow)
	for i = 1, #self.CompletedMessageProcessors do
		local processedCommand = self.CompletedMessageProcessors[i](message, ChatWindow, ChatSettings)
		if processedCommand then
			return true
		end
	end
	return false
end

function methods:ProcessInProgressChatMessage(message, ChatWindow, ChatBar)
	for i = 1, #self.InProgressMessageProcessors do
		local customState = self.InProgressMessageProcessors[i](message, ChatWindow, ChatBar, ChatSettings)
		if customState then
			return customState
		end
	end
	return nil
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new()
	local obj = setmetatable({}, methods)

	obj.CompletedMessageProcessors = {}
	obj.InProgressMessageProcessors = {}

	obj:SetupCommandProcessors()

	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ChannelsTab
G2L_MODULES[G2L["282"]] = {
Closure = function()
local script = G2L["282"]
--	// FileName: ChannelsTab.lua
--	// Written by: Xsitsu
--	// Description: Channel tab button for selecting current channel and also displaying if currently selected.

local module = {}
--////////////////////////////// Include
--//////////////////////////////////////
local Chat = game:GetService("Chat")
local clientChatModules = Chat:WaitForChild("ClientChatModules")
local modulesFolder = script.Parent
local ChatSettings = require(clientChatModules:WaitForChild("ChatSettings"))
local CurveUtil = require(modulesFolder:WaitForChild("CurveUtil"))

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

local function CreateGuiObjects()
	local BaseFrame = Instance.new("Frame")
	BaseFrame.Selectable = false
	BaseFrame.Size = UDim2.new(1, 0, 1, 0)
	BaseFrame.BackgroundTransparency = 1

	local gapOffsetX = 1
	local gapOffsetY = 1

	local BackgroundFrame = Instance.new("Frame")
	BackgroundFrame.Selectable = false
	BackgroundFrame.Name = "BackgroundFrame"
	BackgroundFrame.Size = UDim2.new(1, -gapOffsetX * 2, 1, -gapOffsetY * 2)
	BackgroundFrame.Position = UDim2.new(0, gapOffsetX, 0, gapOffsetY)
	BackgroundFrame.BackgroundTransparency = 1
	BackgroundFrame.Parent = BaseFrame

	local UnselectedFrame = Instance.new("Frame")
	UnselectedFrame.Selectable = false
	UnselectedFrame.Name = "UnselectedFrame"
	UnselectedFrame.Size = UDim2.new(1, 0, 1, 0)
	UnselectedFrame.Position = UDim2.new(0, 0, 0, 0)
	UnselectedFrame.BorderSizePixel = 0
	UnselectedFrame.BackgroundColor3 = ChatSettings.ChannelsTabUnselectedColor
	UnselectedFrame.BackgroundTransparency = 0.6
	UnselectedFrame.Parent = BackgroundFrame

	local SelectedFrame = Instance.new("Frame")
	SelectedFrame.Selectable = false
	SelectedFrame.Name = "SelectedFrame"
	SelectedFrame.Size = UDim2.new(1, 0, 1, 0)
	SelectedFrame.Position = UDim2.new(0, 0, 0, 0)
	SelectedFrame.BorderSizePixel = 0
	SelectedFrame.BackgroundColor3 = ChatSettings.ChannelsTabSelectedColor
	SelectedFrame.BackgroundTransparency = 1
	SelectedFrame.Parent = BackgroundFrame

	local SelectedFrameBackgroundImage = Instance.new("ImageLabel")
	SelectedFrameBackgroundImage.Selectable = false
	SelectedFrameBackgroundImage.Name = "BackgroundImage"
	SelectedFrameBackgroundImage.BackgroundTransparency = 1
	SelectedFrameBackgroundImage.BorderSizePixel = 0
	SelectedFrameBackgroundImage.Size = UDim2.new(1, 0, 1, 0)
	SelectedFrameBackgroundImage.Position = UDim2.new(0, 0, 0, 0)
	SelectedFrameBackgroundImage.ScaleType = Enum.ScaleType.Slice
	SelectedFrameBackgroundImage.Parent = SelectedFrame

	SelectedFrameBackgroundImage.BackgroundTransparency = 0.6 - 1
	local rate = 1.2 * 1
	SelectedFrameBackgroundImage.BackgroundColor3 = Color3.fromRGB(78 * rate, 84 * rate, 96 * rate)

	local borderXOffset = 2
	local blueBarYSize = 4
	local BlueBarLeft = Instance.new("ImageLabel")
	BlueBarLeft.Selectable = false
	BlueBarLeft.Size = UDim2.new(0.5, -borderXOffset, 0, blueBarYSize)
	BlueBarLeft.BackgroundTransparency = 1
	BlueBarLeft.ScaleType = Enum.ScaleType.Slice
	BlueBarLeft.SliceCenter = Rect.new(3,3,32,21)
	BlueBarLeft.Parent = SelectedFrame

	local BlueBarRight = BlueBarLeft:Clone()
	BlueBarRight.Parent = SelectedFrame

	BlueBarLeft.Position = UDim2.new(0, borderXOffset, 1, -blueBarYSize)
	BlueBarRight.Position = UDim2.new(0.5, 0, 1, -blueBarYSize)
	BlueBarLeft.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarLeft.png"
	BlueBarRight.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarRight.png"

	BlueBarLeft.Name = "BlueBarLeft"
	BlueBarRight.Name = "BlueBarRight"

	local NameTag = Instance.new("TextButton")
	NameTag.Selectable = ChatSettings.GamepadNavigationEnabled
	NameTag.Size = UDim2.new(1, 0, 1, 0)
	NameTag.Position = UDim2.new(0, 0, 0, 0)
	NameTag.BackgroundTransparency = 1
	NameTag.Font = ChatSettings.DefaultFont
	NameTag.TextSize = ChatSettings.ChatChannelsTabTextSize
	NameTag.TextColor3 = Color3.new(1, 1, 1)
	NameTag.TextStrokeTransparency = 0.75
	NameTag.Parent = BackgroundFrame

	local NameTagNonSelect = NameTag:Clone()
	local NameTagSelect = NameTag:Clone()
	NameTagNonSelect.Parent = UnselectedFrame
	NameTagSelect.Parent = SelectedFrame
	NameTagNonSelect.Font = Enum.Font.SourceSans
	NameTagNonSelect.Active = false
	NameTagSelect.Active = false

	local NewMessageIconFrame = Instance.new("Frame")
	NewMessageIconFrame.Selectable = false
	NewMessageIconFrame.Size = UDim2.new(0, 18, 0, 18)
	NewMessageIconFrame.Position = UDim2.new(0.8, -9, 0.5, -9)
	NewMessageIconFrame.BackgroundTransparency = 1
	NewMessageIconFrame.Parent = BackgroundFrame

	local NewMessageIcon = Instance.new("ImageLabel")
	NewMessageIcon.Selectable = false
	NewMessageIcon.Size = UDim2.new(1, 0, 1, 0)
	NewMessageIcon.BackgroundTransparency = 1
	NewMessageIcon.Image = "rbxasset://textures/ui/Chat/MessageCounter.png"
	NewMessageIcon.Visible = false
	NewMessageIcon.Parent = NewMessageIconFrame

	local NewMessageIconText = Instance.new("TextLabel")
	NewMessageIconText.Selectable = false
	NewMessageIconText.BackgroundTransparency = 1
	NewMessageIconText.Size = UDim2.new(0, 13, 0, 9)
	NewMessageIconText.Position = UDim2.new(0.5, -7, 0.5, -7)
	NewMessageIconText.Font = ChatSettings.DefaultFont
	NewMessageIconText.TextSize = 14
	NewMessageIconText.TextColor3 = Color3.new(1, 1, 1)
	NewMessageIconText.Text = ""
	NewMessageIconText.Parent = NewMessageIcon

	return BaseFrame, NameTag, NameTagNonSelect, NameTagSelect, NewMessageIcon, UnselectedFrame, SelectedFrame
end

function methods:Destroy()
	self.GuiObject:Destroy()
end

function methods:UpdateMessagePostedInChannel(ignoreActive)
	if (self.Active and (ignoreActive ~= true)) then return end

	local count = self.UnreadMessageCount + 1
	self.UnreadMessageCount = count

	local label = self.NewMessageIcon
	label.Visible = true
	label.TextLabel.Text = (count < 100) and tostring(count) or "!"

	local tweenTime = 0.15
	local tweenPosOffset = UDim2.new(0, 0, -0.1, 0)

	local curPos = label.Position
	local outPos = curPos + tweenPosOffset
	local easingDirection = Enum.EasingDirection.Out
	local easingStyle = Enum.EasingStyle.Quad

	label.Position = UDim2.new(0, 0, -0.15, 0)
	label:TweenPosition(UDim2.new(0, 0, 0, 0), easingDirection, easingStyle, tweenTime, true)

end

function methods:SetActive(active)
	self.Active = active
	self.UnselectedFrame.Visible = not active
	self.SelectedFrame.Visible = active

	if (active) then
		self.UnreadMessageCount = 0
		self.NewMessageIcon.Visible = false

		self.NameTag.Font = Enum.Font.SourceSansBold
	else
		self.NameTag.Font = Enum.Font.SourceSans

	end
end

function methods:SetTextSize(textSize)
	self.NameTag.TextSize = textSize
end

function methods:FadeOutBackground(duration)
	self.AnimParams.Background_TargetTransparency = 1
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeInBackground(duration)
	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeOutText(duration)
	self.AnimParams.Text_TargetTransparency = 1
	self.AnimParams.Text_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
	self.AnimParams.TextStroke_TargetTransparency = 1
	self.AnimParams.TextStroke_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:FadeInText(duration)
	self.AnimParams.Text_TargetTransparency = 0
	self.AnimParams.Text_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
	self.AnimParams.TextStroke_TargetTransparency = 0.75
	self.AnimParams.TextStroke_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(duration)
end

function methods:AnimGuiObjects()
	self.UnselectedFrame.BackgroundTransparency = self.AnimParams.Background_CurrentTransparency
	self.SelectedFrame.BackgroundImage.BackgroundTransparency = self.AnimParams.Background_CurrentTransparency
	self.SelectedFrame.BlueBarLeft.ImageTransparency = self.AnimParams.Background_CurrentTransparency
	self.SelectedFrame.BlueBarRight.ImageTransparency = self.AnimParams.Background_CurrentTransparency
	self.NameTagNonSelect.TextTransparency = self.AnimParams.Background_CurrentTransparency
	self.NameTagNonSelect.TextStrokeTransparency = self.AnimParams.Background_CurrentTransparency

	self.NameTag.TextTransparency = self.AnimParams.Text_CurrentTransparency
	self.NewMessageIcon.ImageTransparency = self.AnimParams.Text_CurrentTransparency
	self.WhiteTextNewMessageNotification.TextTransparency = self.AnimParams.Text_CurrentTransparency
	self.NameTagSelect.TextTransparency = self.AnimParams.Text_CurrentTransparency

	self.NameTag.TextStrokeTransparency = self.AnimParams.TextStroke_CurrentTransparency
	self.WhiteTextNewMessageNotification.TextStrokeTransparency = self.AnimParams.TextStroke_CurrentTransparency
	self.NameTagSelect.TextStrokeTransparency = self.AnimParams.TextStroke_CurrentTransparency
end

function methods:InitializeAnimParams()
	self.AnimParams.Text_TargetTransparency = 0
	self.AnimParams.Text_CurrentTransparency = 0
	self.AnimParams.Text_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(0)

	self.AnimParams.TextStroke_TargetTransparency = 0.75
	self.AnimParams.TextStroke_CurrentTransparency = 0.75
	self.AnimParams.TextStroke_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(0)

	self.AnimParams.Background_TargetTransparency = 0.6
	self.AnimParams.Background_CurrentTransparency = 0.6
	self.AnimParams.Background_NormalizedExptValue = CurveUtil:NormalizedDefaultExptValueInSeconds(0)
end

function methods:Update(dtScale)
	self.AnimParams.Background_CurrentTransparency = CurveUtil:Expt(
			self.AnimParams.Background_CurrentTransparency,
			self.AnimParams.Background_TargetTransparency,
			self.AnimParams.Background_NormalizedExptValue,
			dtScale
	)
	self.AnimParams.Text_CurrentTransparency = CurveUtil:Expt(
			self.AnimParams.Text_CurrentTransparency,
			self.AnimParams.Text_TargetTransparency,
			self.AnimParams.Text_NormalizedExptValue,
			dtScale
	)
	self.AnimParams.TextStroke_CurrentTransparency = CurveUtil:Expt(
			self.AnimParams.TextStroke_CurrentTransparency,
			self.AnimParams.TextStroke_TargetTransparency,
			self.AnimParams.TextStroke_NormalizedExptValue,
			dtScale
	)

	self:AnimGuiObjects()
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new(channelName)
	local obj = setmetatable({}, methods)

	local BaseFrame, NameTag, NameTagNonSelect, NameTagSelect, NewMessageIcon, UnselectedFrame, SelectedFrame = CreateGuiObjects()
	obj.GuiObject = BaseFrame
	obj.NameTag = NameTag
	obj.NameTagNonSelect = NameTagNonSelect
	obj.NameTagSelect = NameTagSelect
	obj.NewMessageIcon = NewMessageIcon
	obj.UnselectedFrame = UnselectedFrame
	obj.SelectedFrame = SelectedFrame

	obj.BlueBarLeft = SelectedFrame.BlueBarLeft
	obj.BlueBarRight = SelectedFrame.BlueBarRight
	obj.BackgroundImage = SelectedFrame.BackgroundImage
	obj.WhiteTextNewMessageNotification = obj.NewMessageIcon.TextLabel

	obj.ChannelName = channelName
	obj.UnreadMessageCount = 0
	obj.Active = false

	obj.GuiObject.Name = "Frame_" .. obj.ChannelName

	if (string.len(channelName) > ChatSettings.MaxChannelNameLength) then
		channelName = string.sub(channelName, 1, ChatSettings.MaxChannelNameLength - 3) .. "..."
	end

	--obj.NameTag.Text = channelName

	obj.NameTag.Text = ""
	obj.NameTagNonSelect.Text = channelName
	obj.NameTagSelect.Text = channelName

	obj.AnimParams = {}

	obj:InitializeAnimParams()
	obj:AnimGuiObjects()
	obj:SetActive(false)

	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.ObjectPool
G2L_MODULES[G2L["283"]] = {
Closure = function()
local script = G2L["283"]
--	// FileName: ObjectPool.lua
--	// Written by: TheGamer101
--	// Description: An object pool class used to avoid unnecessarily instantiating Instances.

local module = {}
--////////////////////////////// Include
--//////////////////////////////////////

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

function methods:GetInstance(className)
  if self.InstancePoolsByClass[className] == nil then
    self.InstancePoolsByClass[className] = {}
  end
  local availableInstances = #self.InstancePoolsByClass[className]
  if availableInstances > 0 then
    local instance = self.InstancePoolsByClass[className][availableInstances]
    table.remove(self.InstancePoolsByClass[className])
    return instance
  end
  return Instance.new(className)
end

function methods:ReturnInstance(instance)
  if self.InstancePoolsByClass[instance.ClassName] == nil then
    self.InstancePoolsByClass[instance.ClassName] = {}
  end
  if #self.InstancePoolsByClass[instance.ClassName] < self.PoolSizePerType then
    table.insert(self.InstancePoolsByClass[instance.ClassName], instance)
  else
    instance:Destroy()
  end
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new(poolSizePerType)
	local obj = setmetatable({}, methods)
	obj.InstancePoolsByClass = {}
	obj.Name = "ObjectPool"
  obj.PoolSizePerType = poolSizePerType

	return obj
end

return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.MessageSender
G2L_MODULES[G2L["284"]] = {
Closure = function()
local script = G2L["284"]
--	// FileName: MessageSender.lua
--	// Written by: Xsitsu
--	// Description: Module to centralize sending message functionality.

local module = {}
--////////////////////////////// Include
--//////////////////////////////////////
local modulesFolder = script.Parent

--////////////////////////////// Methods
--//////////////////////////////////////
local methods = {}
methods.__index = methods

function methods:SendMessage(message, toChannel)
	self.SayMessageRequest:FireServer(message, toChannel)
end

function methods:RegisterSayMessageFunction(func)
	self.SayMessageRequest = func
end

--///////////////////////// Constructors
--//////////////////////////////////////

function module.new()
	local obj = setmetatable({}, methods)
	obj.SayMessageRequest = nil

	return obj
end

return module.new()

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.ChatRemover.ChatScript.ChatMain.CurveUtil
G2L_MODULES[G2L["285"]] = {
Closure = function()
local script = G2L["285"]
local CurveUtil = {	}
local DEFAULT_THRESHOLD = 0.01

function CurveUtil:Expt(start, to, pct, dt_scale)
	if math.abs(to - start) < DEFAULT_THRESHOLD then
		return to
	end

	local y = CurveUtil:Expty(start,to,pct,dt_scale)

	--rtv = start + (to - start) * timescaled_friction--
	local delta = (to - start) * y
	return start + delta
end

function CurveUtil:Expty(start, to, pct, dt_scale)
	--y = e ^ (-a * timescale)--
	local friction = 1 - pct
	local a = -math.log(friction)
	return 1 - math.exp(-a * dt_scale)
end

function CurveUtil:Sign(val)
	if val > 0 then
		return 1
	elseif val < 0 then
		return -1
	else
		return 0
	end
end

function CurveUtil:BezierValForT(p0, p1, p2, p3, t)
	local cp0 = (1 - t) * (1 - t) * (1 - t)
	local cp1 = 3 * t * (1-t)*(1-t)
	local cp2 = 3 * t * t * (1 - t)
	local cp3 = t * t * t
	return cp0 * p0 + cp1 * p1 + cp2 * p2 + cp3 * p3
end

CurveUtil._BezierPt2ForT = { x = 0; y = 0 }
function CurveUtil:BezierPt2ForT(
	p0x, p0y,
	p1x, p1y,
	p2x, p2y,
	p3x, p3y,
	t)

	CurveUtil._BezierPt2ForT.x = CurveUtil:BezierValForT(p0x,p1x,p2x,p3x,t)
	CurveUtil._BezierPt2ForT.y = CurveUtil:BezierValForT(p0y,p1y,p2y,p3y,t)
	return CurveUtil._BezierPt2ForT
end

function CurveUtil:YForPointOf2PtLine(pt1, pt2, x)
	--(y - y1)/(x - x1) = m--
	local m = (pt1.y - pt2.y) / (pt1.x - pt2.x)
	--y - mx = b--
	local b = pt1.y - m * pt1.x
	return m * x + b
end

function CurveUtil:DeltaTimeToTimescale(s_frame_delta_time)
	return s_frame_delta_time / (1.0 / 60.0)
end

function CurveUtil:SecondsToTick(sec)
	return (1 / 60.0) / sec
end

function CurveUtil:ExptValueInSeconds(threshold, start, seconds)
		return 1 - math.pow((threshold / start), 1 / (60.0 * seconds))
end

function CurveUtil:NormalizedDefaultExptValueInSeconds(seconds)
		return self:ExptValueInSeconds(DEFAULT_THRESHOLD, 1, seconds)
end

return CurveUtil

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Anonymify
local function C_G2L_287()
local script = G2L["287"]
-- Deletes yourself from other player's playerlist. Super OP.
script:WaitForChild("Target")
script.Target.Value:Destroy()
end
task.spawn(C_G2L_287)


--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Wall
G2L_MODULES[G2L["288"]] = {
Closure = function()
local script = G2L["288"]
local module = {}
function module.load(lool)
local children = workspace:GetChildren()
for _, child in pairs(children) do
    for _, child in pairs(child:GetChildren()) do
        table.insert(children, child)
    end

    if child.ClassName ~= "Terrain" and child:IsA("BasePart") then
            child:Destroy()
        end
    end
	
for i,v in pairs(Workspace:GetChildren()) do
if v.Name == 'Terrain' then
v:Clear()

end

end
--Created by N3xul#3777 2017-04-17 = 7:03 Am
--Damn Mexicans!
local runDummyScript = function(f,scri)
local oldenv = getfenv(f)
local newenv = setmetatable({}, {
__index = function(_, k)
if k:lower() == 'script' then
return scri
else
return oldenv[k]
end
end
})
setfenv(f, newenv)
ypcall(function() f() end)
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting")) 
mas.Name = "CompiledModel"
o1 = Instance.new("Model")
o2 = Instance.new("Part")
o3 = Instance.new("BlockMesh")
o4 = Instance.new("Part")
o5 = Instance.new("BlockMesh")
o6 = Instance.new("Weld")
o7 = Instance.new("Model")
o8 = Instance.new("Model")
o9 = Instance.new("Part")
o10 = Instance.new("SpecialMesh")
o11 = Instance.new("Part")
o12 = Instance.new("SpecialMesh")
o13 = Instance.new("Part")
o14 = Instance.new("SpecialMesh")
o15 = Instance.new("Part")
o16 = Instance.new("SpecialMesh")
o17 = Instance.new("Model")
o18 = Instance.new("Part")
o19 = Instance.new("SpecialMesh")
o20 = Instance.new("Part")
o21 = Instance.new("SpecialMesh")
o22 = Instance.new("Part")
o23 = Instance.new("SpecialMesh")
o24 = Instance.new("Part")
o25 = Instance.new("SpecialMesh")
o26 = Instance.new("Model")
o27 = Instance.new("Part")
o28 = Instance.new("SpecialMesh")
o29 = Instance.new("Part")
o30 = Instance.new("SpecialMesh")
o31 = Instance.new("Part")
o32 = Instance.new("SpecialMesh")
o33 = Instance.new("Part")
o34 = Instance.new("SpecialMesh")
o35 = Instance.new("Part")
o36 = Instance.new("Part")
o37 = Instance.new("Part")
o38 = Instance.new("Model")
o39 = Instance.new("Model")
o40 = Instance.new("Part")
o41 = Instance.new("SpecialMesh")
o42 = Instance.new("Part")
o43 = Instance.new("SpecialMesh")
o44 = Instance.new("Part")
o45 = Instance.new("SpecialMesh")
o46 = Instance.new("Part")
o47 = Instance.new("SpecialMesh")
o48 = Instance.new("Model")
o49 = Instance.new("Part")
o50 = Instance.new("SpecialMesh")
o51 = Instance.new("Part")
o52 = Instance.new("SpecialMesh")
o53 = Instance.new("Part")
o54 = Instance.new("SpecialMesh")
o55 = Instance.new("Part")
o56 = Instance.new("SpecialMesh")
o57 = Instance.new("Model")
o58 = Instance.new("Part")
o59 = Instance.new("SpecialMesh")
o60 = Instance.new("Part")
o61 = Instance.new("SpecialMesh")
o62 = Instance.new("Part")
o63 = Instance.new("SpecialMesh")
o64 = Instance.new("Part")
o65 = Instance.new("SpecialMesh")
o66 = Instance.new("Model")
o67 = Instance.new("Model")
o68 = Instance.new("Part")
o69 = Instance.new("SpecialMesh")
o70 = Instance.new("Part")
o71 = Instance.new("SpecialMesh")
o72 = Instance.new("Part")
o73 = Instance.new("SpecialMesh")
o74 = Instance.new("Part")
o75 = Instance.new("SpecialMesh")
o76 = Instance.new("Model")
o77 = Instance.new("Part")
o78 = Instance.new("SpecialMesh")
o79 = Instance.new("Part")
o80 = Instance.new("SpecialMesh")
o81 = Instance.new("Part")
o82 = Instance.new("SpecialMesh")
o83 = Instance.new("Part")
o84 = Instance.new("SpecialMesh")
o85 = Instance.new("Model")
o86 = Instance.new("Part")
o87 = Instance.new("SpecialMesh")
o88 = Instance.new("Part")
o89 = Instance.new("SpecialMesh")
o90 = Instance.new("Part")
o91 = Instance.new("SpecialMesh")
o92 = Instance.new("Part")
o93 = Instance.new("SpecialMesh")
o94 = Instance.new("Model")
o95 = Instance.new("Model")
o96 = Instance.new("Part")
o97 = Instance.new("SpecialMesh")
o98 = Instance.new("Part")
o99 = Instance.new("SpecialMesh")
o100 = Instance.new("Part")
o101 = Instance.new("SpecialMesh")
o102 = Instance.new("Part")
o103 = Instance.new("SpecialMesh")
o104 = Instance.new("Model")
o105 = Instance.new("Part")
o106 = Instance.new("SpecialMesh")
o107 = Instance.new("Part")
o108 = Instance.new("SpecialMesh")
o109 = Instance.new("Part")
o110 = Instance.new("SpecialMesh")
o111 = Instance.new("Part")
o112 = Instance.new("SpecialMesh")
o113 = Instance.new("Model")
o114 = Instance.new("Part")
o115 = Instance.new("SpecialMesh")
o116 = Instance.new("Part")
o117 = Instance.new("SpecialMesh")
o118 = Instance.new("Part")
o119 = Instance.new("SpecialMesh")
o120 = Instance.new("Part")
o121 = Instance.new("SpecialMesh")
o122 = Instance.new("Model")
o123 = Instance.new("Model")
o124 = Instance.new("Part")
o125 = Instance.new("SpecialMesh")
o126 = Instance.new("Part")
o127 = Instance.new("SpecialMesh")
o128 = Instance.new("Part")
o129 = Instance.new("SpecialMesh")
o130 = Instance.new("Part")
o131 = Instance.new("SpecialMesh")
o132 = Instance.new("Model")
o133 = Instance.new("Part")
o134 = Instance.new("SpecialMesh")
o135 = Instance.new("Part")
o136 = Instance.new("SpecialMesh")
o137 = Instance.new("Part")
o138 = Instance.new("SpecialMesh")
o139 = Instance.new("Part")
o140 = Instance.new("SpecialMesh")
o141 = Instance.new("Model")
o142 = Instance.new("Part")
o143 = Instance.new("SpecialMesh")
o144 = Instance.new("Part")
o145 = Instance.new("SpecialMesh")
o146 = Instance.new("Part")
o147 = Instance.new("SpecialMesh")
o148 = Instance.new("Part")
o149 = Instance.new("SpecialMesh")
o150 = Instance.new("Model")
o151 = Instance.new("Model")
o152 = Instance.new("Part")
o153 = Instance.new("SpecialMesh")
o154 = Instance.new("Part")
o155 = Instance.new("SpecialMesh")
o156 = Instance.new("Part")
o157 = Instance.new("SpecialMesh")
o158 = Instance.new("Part")
o159 = Instance.new("SpecialMesh")
o160 = Instance.new("Model")
o161 = Instance.new("Part")
o162 = Instance.new("SpecialMesh")
o163 = Instance.new("Part")
o164 = Instance.new("SpecialMesh")
o165 = Instance.new("Part")
o166 = Instance.new("SpecialMesh")
o167 = Instance.new("Part")
o168 = Instance.new("SpecialMesh")
o169 = Instance.new("Model")
o170 = Instance.new("Part")
o171 = Instance.new("SpecialMesh")
o172 = Instance.new("Part")
o173 = Instance.new("SpecialMesh")
o174 = Instance.new("Part")
o175 = Instance.new("SpecialMesh")
o176 = Instance.new("Part")
o177 = Instance.new("SpecialMesh")
o178 = Instance.new("Model")
o179 = Instance.new("Model")
o180 = Instance.new("Part")
o181 = Instance.new("SpecialMesh")
o182 = Instance.new("Part")
o183 = Instance.new("SpecialMesh")
o184 = Instance.new("Part")
o185 = Instance.new("SpecialMesh")
o186 = Instance.new("Part")
o187 = Instance.new("SpecialMesh")
o188 = Instance.new("Model")
o189 = Instance.new("Part")
o190 = Instance.new("SpecialMesh")
o191 = Instance.new("Part")
o192 = Instance.new("SpecialMesh")
o193 = Instance.new("Part")
o194 = Instance.new("SpecialMesh")
o195 = Instance.new("Part")
o196 = Instance.new("SpecialMesh")
o197 = Instance.new("Model")
o198 = Instance.new("Part")
o199 = Instance.new("SpecialMesh")
o200 = Instance.new("Part")
o201 = Instance.new("SpecialMesh")
o202 = Instance.new("Part")
o203 = Instance.new("SpecialMesh")
o204 = Instance.new("Part")
o205 = Instance.new("SpecialMesh")
o206 = Instance.new("Model")
o207 = Instance.new("Model")
o208 = Instance.new("Part")
o209 = Instance.new("SpecialMesh")
o210 = Instance.new("Part")
o211 = Instance.new("SpecialMesh")
o212 = Instance.new("Part")
o213 = Instance.new("SpecialMesh")
o214 = Instance.new("Part")
o215 = Instance.new("SpecialMesh")
o216 = Instance.new("Model")
o217 = Instance.new("Part")
o218 = Instance.new("SpecialMesh")
o219 = Instance.new("Part")
o220 = Instance.new("SpecialMesh")
o221 = Instance.new("Part")
o222 = Instance.new("SpecialMesh")
o223 = Instance.new("Part")
o224 = Instance.new("SpecialMesh")
o225 = Instance.new("Model")
o226 = Instance.new("Part")
o227 = Instance.new("SpecialMesh")
o228 = Instance.new("Part")
o229 = Instance.new("SpecialMesh")
o230 = Instance.new("Part")
o231 = Instance.new("SpecialMesh")
o232 = Instance.new("Part")
o233 = Instance.new("SpecialMesh")
o234 = Instance.new("Model")
o235 = Instance.new("Model")
o236 = Instance.new("Part")
o237 = Instance.new("SpecialMesh")
o238 = Instance.new("Part")
o239 = Instance.new("SpecialMesh")
o240 = Instance.new("Part")
o241 = Instance.new("SpecialMesh")
o242 = Instance.new("Part")
o243 = Instance.new("SpecialMesh")
o244 = Instance.new("Model")
o245 = Instance.new("Part")
o246 = Instance.new("SpecialMesh")
o247 = Instance.new("Part")
o248 = Instance.new("SpecialMesh")
o249 = Instance.new("Part")
o250 = Instance.new("SpecialMesh")
o251 = Instance.new("Part")
o252 = Instance.new("SpecialMesh")
o253 = Instance.new("Model")
o254 = Instance.new("Part")
o255 = Instance.new("SpecialMesh")
o256 = Instance.new("Part")
o257 = Instance.new("SpecialMesh")
o258 = Instance.new("Part")
o259 = Instance.new("SpecialMesh")
o260 = Instance.new("Part")
o261 = Instance.new("SpecialMesh")
o262 = Instance.new("Model")
o263 = Instance.new("Model")
o264 = Instance.new("Part")
o265 = Instance.new("SpecialMesh")
o266 = Instance.new("Part")
o267 = Instance.new("SpecialMesh")
o268 = Instance.new("Part")
o269 = Instance.new("SpecialMesh")
o270 = Instance.new("Part")
o271 = Instance.new("SpecialMesh")
o272 = Instance.new("Model")
o273 = Instance.new("Part")
o274 = Instance.new("SpecialMesh")
o275 = Instance.new("Part")
o276 = Instance.new("SpecialMesh")
o277 = Instance.new("Part")
o278 = Instance.new("SpecialMesh")
o279 = Instance.new("Part")
o280 = Instance.new("SpecialMesh")
o281 = Instance.new("Model")
o282 = Instance.new("Part")
o283 = Instance.new("SpecialMesh")
o284 = Instance.new("Part")
o285 = Instance.new("SpecialMesh")
o286 = Instance.new("Part")
o287 = Instance.new("SpecialMesh")
o288 = Instance.new("Part")
o289 = Instance.new("SpecialMesh")
o290 = Instance.new("Model")
o291 = Instance.new("Model")
o292 = Instance.new("Part")
o293 = Instance.new("SpecialMesh")
o294 = Instance.new("Part")
o295 = Instance.new("SpecialMesh")
o296 = Instance.new("Part")
o297 = Instance.new("SpecialMesh")
o298 = Instance.new("Part")
o299 = Instance.new("SpecialMesh")
o300 = Instance.new("Model")
o301 = Instance.new("Part")
o302 = Instance.new("SpecialMesh")
o303 = Instance.new("Part")
o304 = Instance.new("SpecialMesh")
o305 = Instance.new("Part")
o306 = Instance.new("SpecialMesh")
o307 = Instance.new("Part")
o308 = Instance.new("SpecialMesh")
o309 = Instance.new("Model")
o310 = Instance.new("Part")
o311 = Instance.new("SpecialMesh")
o312 = Instance.new("Part")
o313 = Instance.new("SpecialMesh")
o314 = Instance.new("Part")
o315 = Instance.new("SpecialMesh")
o316 = Instance.new("Part")
o317 = Instance.new("SpecialMesh")
o318 = Instance.new("Model")
o319 = Instance.new("Model")
o320 = Instance.new("Part")
o321 = Instance.new("SpecialMesh")
o322 = Instance.new("Part")
o323 = Instance.new("SpecialMesh")
o324 = Instance.new("Part")
o325 = Instance.new("SpecialMesh")
o326 = Instance.new("Part")
o327 = Instance.new("SpecialMesh")
o328 = Instance.new("Model")
o329 = Instance.new("Part")
o330 = Instance.new("SpecialMesh")
o331 = Instance.new("Part")
o332 = Instance.new("SpecialMesh")
o333 = Instance.new("Part")
o334 = Instance.new("SpecialMesh")
o335 = Instance.new("Part")
o336 = Instance.new("SpecialMesh")
o337 = Instance.new("Model")
o338 = Instance.new("Part")
o339 = Instance.new("SpecialMesh")
o340 = Instance.new("Part")
o341 = Instance.new("SpecialMesh")
o342 = Instance.new("Part")
o343 = Instance.new("SpecialMesh")
o344 = Instance.new("Part")
o345 = Instance.new("SpecialMesh")
o346 = Instance.new("Model")
o347 = Instance.new("Model")
o348 = Instance.new("Part")
o349 = Instance.new("SpecialMesh")
o350 = Instance.new("Part")
o351 = Instance.new("SpecialMesh")
o352 = Instance.new("Part")
o353 = Instance.new("SpecialMesh")
o354 = Instance.new("Part")
o355 = Instance.new("SpecialMesh")
o356 = Instance.new("Model")
o357 = Instance.new("Part")
o358 = Instance.new("SpecialMesh")
o359 = Instance.new("Part")
o360 = Instance.new("SpecialMesh")
o361 = Instance.new("Part")
o362 = Instance.new("SpecialMesh")
o363 = Instance.new("Part")
o364 = Instance.new("SpecialMesh")
o365 = Instance.new("Model")
o366 = Instance.new("Part")
o367 = Instance.new("SpecialMesh")
o368 = Instance.new("Part")
o369 = Instance.new("SpecialMesh")
o370 = Instance.new("Part")
o371 = Instance.new("SpecialMesh")
o372 = Instance.new("Part")
o373 = Instance.new("SpecialMesh")
o374 = Instance.new("SpawnLocation")
o375 = Instance.new("Model")
o376 = Instance.new("Model")
o377 = Instance.new("Part")
o378 = Instance.new("BlockMesh")
o379 = Instance.new("Weld")
o380 = Instance.new("Part")
o381 = Instance.new("BlockMesh")
o382 = Instance.new("Weld")
o383 = Instance.new("Part")
o384 = Instance.new("BlockMesh")
o385 = Instance.new("Weld")
o386 = Instance.new("Part")
o387 = Instance.new("BlockMesh")
o388 = Instance.new("Weld")
o389 = Instance.new("Part")
o390 = Instance.new("BlockMesh")
o391 = Instance.new("Weld")
o392 = Instance.new("Part")
o393 = Instance.new("BlockMesh")
o394 = Instance.new("Weld")
o395 = Instance.new("Part")
o396 = Instance.new("BlockMesh")
o397 = Instance.new("Weld")
o398 = Instance.new("Part")
o399 = Instance.new("BlockMesh")
o400 = Instance.new("Weld")
o401 = Instance.new("Part")
o402 = Instance.new("BlockMesh")
o403 = Instance.new("Weld")
o404 = Instance.new("Part")
o405 = Instance.new("BlockMesh")
o406 = Instance.new("Weld")
o407 = Instance.new("Part")
o408 = Instance.new("CylinderMesh")
o409 = Instance.new("Weld")
o410 = Instance.new("Part")
o411 = Instance.new("BlockMesh")
o412 = Instance.new("Weld")
o413 = Instance.new("Part")
o414 = Instance.new("BlockMesh")
o415 = Instance.new("Weld")
o416 = Instance.new("Part")
o417 = Instance.new("BlockMesh")
o418 = Instance.new("Weld")
o419 = Instance.new("Part")
o420 = Instance.new("BlockMesh")
o421 = Instance.new("Weld")
o422 = Instance.new("Part")
o423 = Instance.new("BlockMesh")
o424 = Instance.new("Weld")
o425 = Instance.new("Part")
o426 = Instance.new("BlockMesh")
o427 = Instance.new("Weld")
o428 = Instance.new("Part")
o429 = Instance.new("BlockMesh")
o430 = Instance.new("Weld")
o431 = Instance.new("Part")
o432 = Instance.new("BlockMesh")
o433 = Instance.new("Weld")
o434 = Instance.new("Part")
o435 = Instance.new("BlockMesh")
o436 = Instance.new("Weld")
o437 = Instance.new("Part")
o438 = Instance.new("BlockMesh")
o439 = Instance.new("Weld")
o440 = Instance.new("Part")
o441 = Instance.new("BlockMesh")
o442 = Instance.new("Weld")
o443 = Instance.new("Part")
o444 = Instance.new("BlockMesh")
o445 = Instance.new("Weld")
o446 = Instance.new("Part")
o447 = Instance.new("BlockMesh")
o448 = Instance.new("Weld")
o449 = Instance.new("Part")
o450 = Instance.new("BlockMesh")
o451 = Instance.new("Weld")
o452 = Instance.new("Part")
o453 = Instance.new("BlockMesh")
o454 = Instance.new("Weld")
o455 = Instance.new("Part")
o456 = Instance.new("BlockMesh")
o457 = Instance.new("Weld")
o458 = Instance.new("Part")
o459 = Instance.new("BlockMesh")
o460 = Instance.new("Weld")
o461 = Instance.new("Part")
o462 = Instance.new("BlockMesh")
o463 = Instance.new("Weld")
o464 = Instance.new("Part")
o465 = Instance.new("BlockMesh")
o466 = Instance.new("Weld")
o467 = Instance.new("Part")
o468 = Instance.new("BlockMesh")
o469 = Instance.new("Weld")
o470 = Instance.new("Part")
o471 = Instance.new("BlockMesh")
o472 = Instance.new("Weld")
o473 = Instance.new("Part")
o474 = Instance.new("BlockMesh")
o475 = Instance.new("Weld")
o476 = Instance.new("Part")
o477 = Instance.new("BlockMesh")
o478 = Instance.new("Weld")
o479 = Instance.new("Part")
o480 = Instance.new("BlockMesh")
o481 = Instance.new("Weld")
o482 = Instance.new("Part")
o483 = Instance.new("BlockMesh")
o484 = Instance.new("Weld")
o485 = Instance.new("Part")
o486 = Instance.new("BlockMesh")
o487 = Instance.new("Weld")
o488 = Instance.new("Part")
o489 = Instance.new("BlockMesh")
o490 = Instance.new("Weld")
o491 = Instance.new("Part")
o492 = Instance.new("BlockMesh")
o493 = Instance.new("Weld")
o494 = Instance.new("Part")
o495 = Instance.new("BlockMesh")
o496 = Instance.new("Weld")
o497 = Instance.new("Part")
o498 = Instance.new("BlockMesh")
o499 = Instance.new("Weld")
o500 = Instance.new("Part")
o501 = Instance.new("BlockMesh")
o502 = Instance.new("Weld")
o503 = Instance.new("Part")
o504 = Instance.new("BlockMesh")
o505 = Instance.new("Weld")
o506 = Instance.new("Part")
o507 = Instance.new("BlockMesh")
o508 = Instance.new("Weld")
o509 = Instance.new("Part")
o510 = Instance.new("BlockMesh")
o511 = Instance.new("Weld")
o512 = Instance.new("Part")
o513 = Instance.new("BlockMesh")
o514 = Instance.new("Weld")
o515 = Instance.new("Part")
o516 = Instance.new("BlockMesh")
o517 = Instance.new("Weld")
o518 = Instance.new("Part")
o519 = Instance.new("BlockMesh")
o520 = Instance.new("Weld")
o521 = Instance.new("Part")
o522 = Instance.new("BlockMesh")
o523 = Instance.new("Weld")
o524 = Instance.new("Part")
o525 = Instance.new("BlockMesh")
o526 = Instance.new("Weld")
o527 = Instance.new("Part")
o528 = Instance.new("BlockMesh")
o529 = Instance.new("Weld")
o530 = Instance.new("Part")
o531 = Instance.new("BlockMesh")
o532 = Instance.new("Weld")
o533 = Instance.new("Part")
o534 = Instance.new("BlockMesh")
o535 = Instance.new("Weld")
o536 = Instance.new("Part")
o537 = Instance.new("BlockMesh")
o538 = Instance.new("Weld")
o539 = Instance.new("Part")
o540 = Instance.new("BlockMesh")
o541 = Instance.new("Weld")
o542 = Instance.new("Part")
o543 = Instance.new("BlockMesh")
o544 = Instance.new("Weld")
o545 = Instance.new("Part")
o546 = Instance.new("SpecialMesh")
o547 = Instance.new("Weld")
o548 = Instance.new("Part")
o549 = Instance.new("SpecialMesh")
o550 = Instance.new("Weld")
o551 = Instance.new("Part")
o552 = Instance.new("SpecialMesh")
o553 = Instance.new("Weld")
o554 = Instance.new("Part")
o555 = Instance.new("CylinderMesh")
o556 = Instance.new("Weld")
o557 = Instance.new("Part")
o558 = Instance.new("CylinderMesh")
o559 = Instance.new("Weld")
o560 = Instance.new("Part")
o561 = Instance.new("CylinderMesh")
o562 = Instance.new("Weld")
o563 = Instance.new("Part")
o564 = Instance.new("CylinderMesh")
o565 = Instance.new("Weld")
o566 = Instance.new("Part")
o567 = Instance.new("SpecialMesh")
o568 = Instance.new("Weld")
o569 = Instance.new("Part")
o570 = Instance.new("CylinderMesh")
o571 = Instance.new("Weld")
o572 = Instance.new("Part")
o573 = Instance.new("SpecialMesh")
o574 = Instance.new("Weld")
o575 = Instance.new("Part")
o576 = Instance.new("BlockMesh")
o577 = Instance.new("Weld")
o578 = Instance.new("Part")
o579 = Instance.new("BlockMesh")
o580 = Instance.new("Weld")
o581 = Instance.new("Part")
o582 = Instance.new("BlockMesh")
o583 = Instance.new("Weld")
o584 = Instance.new("Part")
o585 = Instance.new("BlockMesh")
o586 = Instance.new("Weld")
o587 = Instance.new("Part")
o588 = Instance.new("BlockMesh")
o589 = Instance.new("Model")
o590 = Instance.new("Model")
o591 = Instance.new("Part")
o592 = Instance.new("BlockMesh")
o593 = Instance.new("Weld")
o594 = Instance.new("Part")
o595 = Instance.new("BlockMesh")
o596 = Instance.new("Weld")
o597 = Instance.new("Part")
o598 = Instance.new("BlockMesh")
o599 = Instance.new("Weld")
o600 = Instance.new("Part")
o601 = Instance.new("BlockMesh")
o602 = Instance.new("Weld")
o603 = Instance.new("Part")
o604 = Instance.new("BlockMesh")
o605 = Instance.new("Weld")
o606 = Instance.new("Part")
o607 = Instance.new("BlockMesh")
o608 = Instance.new("Weld")
o609 = Instance.new("Part")
o610 = Instance.new("BlockMesh")
o611 = Instance.new("Weld")
o612 = Instance.new("Part")
o613 = Instance.new("BlockMesh")
o614 = Instance.new("Weld")
o615 = Instance.new("Part")
o616 = Instance.new("BlockMesh")
o617 = Instance.new("Weld")
o618 = Instance.new("Part")
o619 = Instance.new("BlockMesh")
o620 = Instance.new("Weld")
o621 = Instance.new("Part")
o622 = Instance.new("CylinderMesh")
o623 = Instance.new("Weld")
o624 = Instance.new("Part")
o625 = Instance.new("BlockMesh")
o626 = Instance.new("Weld")
o627 = Instance.new("Part")
o628 = Instance.new("BlockMesh")
o629 = Instance.new("Weld")
o630 = Instance.new("Part")
o631 = Instance.new("BlockMesh")
o632 = Instance.new("Weld")
o633 = Instance.new("Part")
o634 = Instance.new("BlockMesh")
o635 = Instance.new("Weld")
o636 = Instance.new("Part")
o637 = Instance.new("BlockMesh")
o638 = Instance.new("Weld")
o639 = Instance.new("Part")
o640 = Instance.new("BlockMesh")
o641 = Instance.new("Weld")
o642 = Instance.new("Part")
o643 = Instance.new("BlockMesh")
o644 = Instance.new("Weld")
o645 = Instance.new("Part")
o646 = Instance.new("BlockMesh")
o647 = Instance.new("Weld")
o648 = Instance.new("Part")
o649 = Instance.new("BlockMesh")
o650 = Instance.new("Weld")
o651 = Instance.new("Part")
o652 = Instance.new("BlockMesh")
o653 = Instance.new("Weld")
o654 = Instance.new("Part")
o655 = Instance.new("BlockMesh")
o656 = Instance.new("Weld")
o657 = Instance.new("Part")
o658 = Instance.new("BlockMesh")
o659 = Instance.new("Weld")
o660 = Instance.new("Part")
o661 = Instance.new("BlockMesh")
o662 = Instance.new("Weld")
o663 = Instance.new("Part")
o664 = Instance.new("BlockMesh")
o665 = Instance.new("Weld")
o666 = Instance.new("Part")
o667 = Instance.new("BlockMesh")
o668 = Instance.new("Weld")
o669 = Instance.new("Part")
o670 = Instance.new("BlockMesh")
o671 = Instance.new("Weld")
o672 = Instance.new("Part")
o673 = Instance.new("BlockMesh")
o674 = Instance.new("Weld")
o675 = Instance.new("Part")
o676 = Instance.new("BlockMesh")
o677 = Instance.new("Weld")
o678 = Instance.new("Part")
o679 = Instance.new("BlockMesh")
o680 = Instance.new("Weld")
o681 = Instance.new("Part")
o682 = Instance.new("BlockMesh")
o683 = Instance.new("Weld")
o684 = Instance.new("Part")
o685 = Instance.new("BlockMesh")
o686 = Instance.new("Weld")
o687 = Instance.new("Part")
o688 = Instance.new("BlockMesh")
o689 = Instance.new("Weld")
o690 = Instance.new("Part")
o691 = Instance.new("BlockMesh")
o692 = Instance.new("Weld")
o693 = Instance.new("Part")
o694 = Instance.new("BlockMesh")
o695 = Instance.new("Weld")
o696 = Instance.new("Part")
o697 = Instance.new("BlockMesh")
o698 = Instance.new("Weld")
o699 = Instance.new("Part")
o700 = Instance.new("BlockMesh")
o701 = Instance.new("Weld")
o702 = Instance.new("Part")
o703 = Instance.new("BlockMesh")
o704 = Instance.new("Weld")
o705 = Instance.new("Part")
o706 = Instance.new("BlockMesh")
o707 = Instance.new("Weld")
o708 = Instance.new("Part")
o709 = Instance.new("BlockMesh")
o710 = Instance.new("Weld")
o711 = Instance.new("Part")
o712 = Instance.new("BlockMesh")
o713 = Instance.new("Weld")
o714 = Instance.new("Part")
o715 = Instance.new("BlockMesh")
o716 = Instance.new("Weld")
o717 = Instance.new("Part")
o718 = Instance.new("BlockMesh")
o719 = Instance.new("Weld")
o720 = Instance.new("Part")
o721 = Instance.new("BlockMesh")
o722 = Instance.new("Weld")
o723 = Instance.new("Part")
o724 = Instance.new("BlockMesh")
o725 = Instance.new("Weld")
o726 = Instance.new("Part")
o727 = Instance.new("BlockMesh")
o728 = Instance.new("Weld")
o729 = Instance.new("Part")
o730 = Instance.new("BlockMesh")
o731 = Instance.new("Weld")
o732 = Instance.new("Part")
o733 = Instance.new("BlockMesh")
o734 = Instance.new("Weld")
o735 = Instance.new("Part")
o736 = Instance.new("BlockMesh")
o737 = Instance.new("Weld")
o738 = Instance.new("Part")
o739 = Instance.new("BlockMesh")
o740 = Instance.new("Weld")
o741 = Instance.new("Part")
o742 = Instance.new("BlockMesh")
o743 = Instance.new("Weld")
o744 = Instance.new("Part")
o745 = Instance.new("BlockMesh")
o746 = Instance.new("Weld")
o747 = Instance.new("Part")
o748 = Instance.new("BlockMesh")
o749 = Instance.new("Weld")
o750 = Instance.new("Part")
o751 = Instance.new("BlockMesh")
o752 = Instance.new("Weld")
o753 = Instance.new("Part")
o754 = Instance.new("BlockMesh")
o755 = Instance.new("Weld")
o756 = Instance.new("Part")
o757 = Instance.new("BlockMesh")
o758 = Instance.new("Weld")
o759 = Instance.new("Part")
o760 = Instance.new("SpecialMesh")
o761 = Instance.new("Weld")
o762 = Instance.new("Part")
o763 = Instance.new("SpecialMesh")
o764 = Instance.new("Weld")
o765 = Instance.new("Part")
o766 = Instance.new("SpecialMesh")
o767 = Instance.new("Weld")
o768 = Instance.new("Part")
o769 = Instance.new("CylinderMesh")
o770 = Instance.new("Weld")
o771 = Instance.new("Part")
o772 = Instance.new("CylinderMesh")
o773 = Instance.new("Weld")
o774 = Instance.new("Part")
o775 = Instance.new("CylinderMesh")
o776 = Instance.new("Weld")
o777 = Instance.new("Part")
o778 = Instance.new("CylinderMesh")
o779 = Instance.new("Weld")
o780 = Instance.new("Part")
o781 = Instance.new("SpecialMesh")
o782 = Instance.new("Weld")
o783 = Instance.new("Part")
o784 = Instance.new("CylinderMesh")
o785 = Instance.new("Weld")
o786 = Instance.new("Part")
o787 = Instance.new("SpecialMesh")
o788 = Instance.new("Weld")
o789 = Instance.new("Part")
o790 = Instance.new("BlockMesh")
o791 = Instance.new("Weld")
o792 = Instance.new("Part")
o793 = Instance.new("BlockMesh")
o794 = Instance.new("Weld")
o795 = Instance.new("Part")
o796 = Instance.new("BlockMesh")
o797 = Instance.new("Weld")
o798 = Instance.new("Part")
o799 = Instance.new("BlockMesh")
o800 = Instance.new("Weld")
o801 = Instance.new("Part")
o802 = Instance.new("BlockMesh")
o803 = Instance.new("SpawnLocation")
o804 = Instance.new("Part")
o805 = Instance.new("Part")
o806 = Instance.new("SpecialMesh")
o807 = Instance.new("Part")
o808 = Instance.new("SpecialMesh")
o809 = Instance.new("Part")
o810 = Instance.new("SpecialMesh")
o811 = Instance.new("Part")
o812 = Instance.new("SpecialMesh")
o813 = Instance.new("Part")
o814 = Instance.new("SpecialMesh")
o815 = Instance.new("Part")
o816 = Instance.new("SpecialMesh")
o817 = Instance.new("Part")
o818 = Instance.new("SpecialMesh")
o819 = Instance.new("Part")
o820 = Instance.new("SpecialMesh")
o821 = Instance.new("Part")
o822 = Instance.new("SpecialMesh")
o823 = Instance.new("Part")
o824 = Instance.new("SpecialMesh")
o825 = Instance.new("Part")
o826 = Instance.new("SpecialMesh")
o827 = Instance.new("Part")
o828 = Instance.new("Part")
o829 = Instance.new("Part")
o830 = Instance.new("Part")
o831 = Instance.new("Part")
o832 = Instance.new("Part")
o833 = Instance.new("Part")
o834 = Instance.new("Part")
o835 = Instance.new("Part")
o836 = Instance.new("Part")
o837 = Instance.new("Part")
o838 = Instance.new("BlockMesh")
o839 = Instance.new("Weld")
o840 = Instance.new("Part")
o841 = Instance.new("BlockMesh")
o842 = Instance.new("Weld")
o843 = Instance.new("Part")
o844 = Instance.new("BlockMesh")
o845 = Instance.new("Weld")
o846 = Instance.new("Part")
o847 = Instance.new("BlockMesh")
o848 = Instance.new("Weld")
o849 = Instance.new("Part")
o850 = Instance.new("BlockMesh")
o851 = Instance.new("Weld")
o852 = Instance.new("Part")
o853 = Instance.new("SpecialMesh")
o854 = Instance.new("Weld")
o855 = Instance.new("Part")
o856 = Instance.new("CylinderMesh")
o857 = Instance.new("Weld")
o858 = Instance.new("Part")
o859 = Instance.new("BlockMesh")
o860 = Instance.new("Weld")
o861 = Instance.new("Part")
o862 = Instance.new("CylinderMesh")
o863 = Instance.new("Part")
o864 = Instance.new("CylinderMesh")
o865 = Instance.new("Weld")
o866 = Instance.new("Part")
o867 = Instance.new("CylinderMesh")
o868 = Instance.new("Weld")
o869 = Instance.new("Part")
o870 = Instance.new("BlockMesh")
o871 = Instance.new("Weld")
o872 = Instance.new("Part")
o873 = Instance.new("SpecialMesh")
o874 = Instance.new("Weld")
o875 = Instance.new("Part")
o876 = Instance.new("SpecialMesh")
o877 = Instance.new("Weld")
o878 = Instance.new("Part")
o879 = Instance.new("SpecialMesh")
o880 = Instance.new("Weld")
o881 = Instance.new("Part")
o882 = Instance.new("BlockMesh")
o883 = Instance.new("Weld")
o884 = Instance.new("Part")
o885 = Instance.new("BlockMesh")
o886 = Instance.new("Weld")
o887 = Instance.new("Part")
o888 = Instance.new("BlockMesh")
o889 = Instance.new("Weld")
o890 = Instance.new("Part")
o891 = Instance.new("BlockMesh")
o892 = Instance.new("Weld")
o893 = Instance.new("Part")
o894 = Instance.new("BlockMesh")
o895 = Instance.new("Weld")
o896 = Instance.new("Part")
o897 = Instance.new("BlockMesh")
o898 = Instance.new("Part")
o899 = Instance.new("BlockMesh")
o900 = Instance.new("Weld")
o901 = Instance.new("Part")
o902 = Instance.new("BlockMesh")
o903 = Instance.new("Part")
o904 = Instance.new("BlockMesh")
o905 = Instance.new("Weld")
o906 = Instance.new("Part")
o907 = Instance.new("BlockMesh")
o908 = Instance.new("Part")
o909 = Instance.new("BlockMesh")
o910 = Instance.new("Weld")
o911 = Instance.new("Part")
o912 = Instance.new("BlockMesh")
o913 = Instance.new("Part")
o914 = Instance.new("BlockMesh")
o915 = Instance.new("Weld")
o916 = Instance.new("Part")
o917 = Instance.new("BlockMesh")
o918 = Instance.new("Part")
o919 = Instance.new("BlockMesh")
o920 = Instance.new("Weld")
o921 = Instance.new("Part")
o922 = Instance.new("BlockMesh")
o923 = Instance.new("Weld")
o924 = Instance.new("Part")
o925 = Instance.new("BlockMesh")
o926 = Instance.new("Weld")
o927 = Instance.new("Part")
o928 = Instance.new("BlockMesh")
o929 = Instance.new("Weld")
o930 = Instance.new("Part")
o931 = Instance.new("BlockMesh")
o932 = Instance.new("Weld")
o933 = Instance.new("Part")
o934 = Instance.new("BlockMesh")
o935 = Instance.new("Weld")
o936 = Instance.new("Part")
o937 = Instance.new("BlockMesh")
o938 = Instance.new("Weld")
o939 = Instance.new("Part")
o940 = Instance.new("BlockMesh")
o941 = Instance.new("Part")
o942 = Instance.new("BlockMesh")
o943 = Instance.new("Weld")
o944 = Instance.new("Part")
o945 = Instance.new("BlockMesh")
o946 = Instance.new("Weld")
o947 = Instance.new("Part")
o948 = Instance.new("BlockMesh")
o949 = Instance.new("Weld")
o950 = Instance.new("Part")
o951 = Instance.new("BlockMesh")
o952 = Instance.new("Weld")
o953 = Instance.new("Part")
o954 = Instance.new("BlockMesh")
o955 = Instance.new("Weld")
o956 = Instance.new("Part")
o957 = Instance.new("BlockMesh")
o958 = Instance.new("Weld")
o959 = Instance.new("Part")
o960 = Instance.new("BlockMesh")
o961 = Instance.new("Weld")
o962 = Instance.new("Part")
o963 = Instance.new("BlockMesh")
o964 = Instance.new("Weld")
o965 = Instance.new("Part")
o966 = Instance.new("BlockMesh")
o967 = Instance.new("Weld")
o968 = Instance.new("Part")
o969 = Instance.new("BlockMesh")
o970 = Instance.new("Weld")
o971 = Instance.new("Part")
o972 = Instance.new("BlockMesh")
o973 = Instance.new("Weld")
o974 = Instance.new("Part")
o975 = Instance.new("BlockMesh")
o976 = Instance.new("Weld")
o977 = Instance.new("Part")
o978 = Instance.new("BlockMesh")
o979 = Instance.new("Weld")
o980 = Instance.new("Part")
o981 = Instance.new("BlockMesh")
o982 = Instance.new("Weld")
o983 = Instance.new("Part")
o984 = Instance.new("BlockMesh")
o985 = Instance.new("Weld")
o986 = Instance.new("Part")
o987 = Instance.new("BlockMesh")
o988 = Instance.new("Weld")
o989 = Instance.new("Part")
o990 = Instance.new("BlockMesh")
o991 = Instance.new("Weld")
o992 = Instance.new("Part")
o993 = Instance.new("BlockMesh")
o994 = Instance.new("Weld")
o995 = Instance.new("Part")
o996 = Instance.new("BlockMesh")
o997 = Instance.new("Weld")
o998 = Instance.new("Part")
o999 = Instance.new("BlockMesh")
o1000 = Instance.new("Weld")
o1001 = Instance.new("Part")
o1002 = Instance.new("BlockMesh")
o1003 = Instance.new("Weld")
o1004 = Instance.new("Part")
o1005 = Instance.new("BlockMesh")
o1006 = Instance.new("Weld")
o1007 = Instance.new("Part")
o1008 = Instance.new("BlockMesh")
o1009 = Instance.new("Weld")
o1010 = Instance.new("Part")
o1011 = Instance.new("CylinderMesh")
o1012 = Instance.new("Weld")
o1013 = Instance.new("Part")
o1014 = Instance.new("BlockMesh")
o1015 = Instance.new("Weld")
o1016 = Instance.new("Part")
o1017 = Instance.new("BlockMesh")
o1018 = Instance.new("Weld")
o1019 = Instance.new("Part")
o1020 = Instance.new("BlockMesh")
o1021 = Instance.new("Weld")
o1022 = Instance.new("Part")
o1023 = Instance.new("BlockMesh")
o1024 = Instance.new("Weld")
o1025 = Instance.new("Part")
o1026 = Instance.new("BlockMesh")
o1027 = Instance.new("Weld")
o1028 = Instance.new("Part")
o1029 = Instance.new("BlockMesh")
o1030 = Instance.new("Weld")
o1031 = Instance.new("Part")
o1032 = Instance.new("Part")
o1033 = Instance.new("Part")
o1034 = Instance.new("Part")
o1035 = Instance.new("Part")
o1036 = Instance.new("Part")
o1037 = Instance.new("Part")
o1038 = Instance.new("Part")
o1039 = Instance.new("Part")
o1040 = Instance.new("Part")
o1041 = Instance.new("Part")
o1042 = Instance.new("Part")
o1043 = Instance.new("Part")
o1044 = Instance.new("Part")
o1045 = Instance.new("Part")
o1046 = Instance.new("Part")
o1047 = Instance.new("Part")
o1048 = Instance.new("Part")
o1049 = Instance.new("Part")
o1050 = Instance.new("Part")
o1051 = Instance.new("Part")
o1052 = Instance.new("Part")
o1053 = Instance.new("Part")
o1054 = Instance.new("Part")
o1055 = Instance.new("Part")
o1056 = Instance.new("Part")
o1057 = Instance.new("Part")
o1058 = Instance.new("Part")
o1059 = Instance.new("Part")
o1060 = Instance.new("SpawnLocation")
o1061 = Instance.new("SpawnLocation")
o1062 = Instance.new("SpawnLocation")
o1063 = Instance.new("SpawnLocation")
o1064 = Instance.new("SpawnLocation")
o1065 = Instance.new("SpawnLocation")
o1066 = Instance.new("SpawnLocation")
o1067 = Instance.new("SpawnLocation")
o1.Name = "N3xul Trump Wall Map"
o1.Parent = mas
o2.Name = "Pokey"
o2.Parent = o1
o2.BrickColor = BrickColor.new("Flint")
o2.Position = Vector3.new(823.300049, 32.3000336, -8.49993229)
o2.Rotation = Vector3.new(180, -14.9999971, -180)
o2.CanCollide = false
o2.FormFactor = Enum.FormFactor.Custom
o2.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o2.CFrame = CFrame.new(823.300049, 32.3000336, -8.49993229, -0.965925813, 1.00407185e-007, -0.258818984, 1.18229259e-007, 1, -5.32940447e-008, 0.258818984, -8.20780741e-008, -0.965925813)
o2.BottomSurface = Enum.SurfaceType.Smooth
o2.TopSurface = Enum.SurfaceType.Smooth
o2.Color = Color3.new(0.411765, 0.4, 0.360784)
o2.Position = Vector3.new(823.300049, 32.3000336, -8.49993229)
o3.Parent = o2
o3.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o4.Name = "Pokey"
o4.Parent = o1
o4.BrickColor = BrickColor.new("Flint")
o4.Position = Vector3.new(823.300049, 31.900034, -8.49993229)
o4.Rotation = Vector3.new(180, 44.9998245, -180)
o4.CanCollide = false
o4.FormFactor = Enum.FormFactor.Custom
o4.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o4.CFrame = CFrame.new(823.300049, 31.900034, -8.49993229, -0.707104564, 4.58395526e-008, 0.707104623, -3.97389641e-008, 1, -1.04565927e-007, -0.707104623, -1.02038712e-007, -0.707104564)
o4.BottomSurface = Enum.SurfaceType.Smooth
o4.TopSurface = Enum.SurfaceType.Smooth
o4.Color = Color3.new(0.411765, 0.4, 0.360784)
o4.Position = Vector3.new(823.300049, 31.900034, -8.49993229)
o5.Parent = o4
o5.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o6.Parent = o4
o6.C0 = CFrame.new(0, 0.400000006, 0, 0.49999845, -5.26995549e-008, 0.866022706, 4.75420947e-008, 1, 3.34036372e-008, -0.866022706, 2.44702321e-008, 0.49999845)
o6.Part0 = o4
o6.Part1 = o2
o7.Parent = o1
o8.Parent = o7
o9.Name = "Grass"
o9.Parent = o8
o9.BrickColor = BrickColor.new("Bright green")
o9.Position = Vector3.new(518.999939, 32.1000061, -8.10000229)
o9.Rotation = Vector3.new(-90, 0, 90)
o9.Anchored = true
o9.CanCollide = false
o9.FormFactor = Enum.FormFactor.Plate
o9.Size = Vector3.new(1, 0.400000006, 1)
o9.CFrame = CFrame.new(518.999939, 32.1000061, -8.10000229, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o9.BottomSurface = Enum.SurfaceType.Smooth
o9.TopSurface = Enum.SurfaceType.Smooth
o9.Color = Color3.new(0.294118, 0.592157, 0.294118)
o9.Position = Vector3.new(518.999939, 32.1000061, -8.10000229)
o10.Parent = o9
o10.MeshId = "http://www.roblox.com/asset/?id=1080954"
o10.Scale = Vector3.new(3, 3, 8)
o10.VertexColor = Vector3.new(2, 2, 2)
o10.MeshType = Enum.MeshType.FileMesh
o11.Name = "Grass"
o11.Parent = o8
o11.BrickColor = BrickColor.new("Bright green")
o11.Position = Vector3.new(526.999939, 32.1000061, -6.10000181)
o11.Rotation = Vector3.new(-90, 0, 90)
o11.Anchored = true
o11.CanCollide = false
o11.FormFactor = Enum.FormFactor.Plate
o11.Size = Vector3.new(1, 0.400000006, 1)
o11.CFrame = CFrame.new(526.999939, 32.1000061, -6.10000181, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o11.BottomSurface = Enum.SurfaceType.Smooth
o11.TopSurface = Enum.SurfaceType.Smooth
o11.Color = Color3.new(0.294118, 0.592157, 0.294118)
o11.Position = Vector3.new(526.999939, 32.1000061, -6.10000181)
o12.Parent = o11
o12.MeshId = "http://www.roblox.com/asset/?id=1080954"
o12.Scale = Vector3.new(3, 3, 8)
o12.VertexColor = Vector3.new(2, 2, 2)
o12.MeshType = Enum.MeshType.FileMesh
o13.Name = "Grass"
o13.Parent = o8
o13.BrickColor = BrickColor.new("Bright green")
o13.Position = Vector3.new(521.999939, 32.1000061, -8.10000229)
o13.Rotation = Vector3.new(-90, 0, 90)
o13.Anchored = true
o13.CanCollide = false
o13.FormFactor = Enum.FormFactor.Plate
o13.Size = Vector3.new(1, 0.400000006, 1)
o13.CFrame = CFrame.new(521.999939, 32.1000061, -8.10000229, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o13.BottomSurface = Enum.SurfaceType.Smooth
o13.TopSurface = Enum.SurfaceType.Smooth
o13.Color = Color3.new(0.294118, 0.592157, 0.294118)
o13.Position = Vector3.new(521.999939, 32.1000061, -8.10000229)
o14.Parent = o13
o14.MeshId = "http://www.roblox.com/asset/?id=1080954"
o14.Scale = Vector3.new(3, 3, 8)
o14.VertexColor = Vector3.new(2, 2, 2)
o14.MeshType = Enum.MeshType.FileMesh
o15.Name = "Grass"
o15.Parent = o8
o15.BrickColor = BrickColor.new("Bright green")
o15.Position = Vector3.new(519.999939, 32.1000061, -4.10000277)
o15.Rotation = Vector3.new(-90, 0, 90)
o15.Anchored = true
o15.CanCollide = false
o15.FormFactor = Enum.FormFactor.Plate
o15.Size = Vector3.new(1, 0.400000006, 1)
o15.CFrame = CFrame.new(519.999939, 32.1000061, -4.10000277, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o15.BottomSurface = Enum.SurfaceType.Smooth
o15.TopSurface = Enum.SurfaceType.Smooth
o15.Color = Color3.new(0.294118, 0.592157, 0.294118)
o15.Position = Vector3.new(519.999939, 32.1000061, -4.10000277)
o16.Parent = o15
o16.MeshId = "http://www.roblox.com/asset/?id=1080954"
o16.Scale = Vector3.new(3, 3, 8)
o16.VertexColor = Vector3.new(2, 2, 2)
o16.MeshType = Enum.MeshType.FileMesh
o17.Parent = o7
o18.Name = "Grass"
o18.Parent = o17
o18.BrickColor = BrickColor.new("Bright green")
o18.Position = Vector3.new(526.999939, 32.1000061, -4.10000277)
o18.Rotation = Vector3.new(-90, 0, 90)
o18.Anchored = true
o18.CanCollide = false
o18.FormFactor = Enum.FormFactor.Plate
o18.Size = Vector3.new(1, 0.400000006, 1)
o18.CFrame = CFrame.new(526.999939, 32.1000061, -4.10000277, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o18.BottomSurface = Enum.SurfaceType.Smooth
o18.TopSurface = Enum.SurfaceType.Smooth
o18.Color = Color3.new(0.294118, 0.592157, 0.294118)
o18.Position = Vector3.new(526.999939, 32.1000061, -4.10000277)
o19.Parent = o18
o19.MeshId = "http://www.roblox.com/asset/?id=1080954"
o19.Scale = Vector3.new(3, 3, 8)
o19.VertexColor = Vector3.new(2, 2, 2)
o19.MeshType = Enum.MeshType.FileMesh
o20.Name = "Grass"
o20.Parent = o17
o20.BrickColor = BrickColor.new("Bright green")
o20.Position = Vector3.new(524.999939, 32.1000061, -0.100002997)
o20.Rotation = Vector3.new(-90, 0, 90)
o20.Anchored = true
o20.CanCollide = false
o20.FormFactor = Enum.FormFactor.Plate
o20.Size = Vector3.new(1, 0.400000006, 1)
o20.CFrame = CFrame.new(524.999939, 32.1000061, -0.100002997, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o20.BottomSurface = Enum.SurfaceType.Smooth
o20.TopSurface = Enum.SurfaceType.Smooth
o20.Color = Color3.new(0.294118, 0.592157, 0.294118)
o20.Position = Vector3.new(524.999939, 32.1000061, -0.100002997)
o21.Parent = o20
o21.MeshId = "http://www.roblox.com/asset/?id=1080954"
o21.Scale = Vector3.new(3, 3, 8)
o21.VertexColor = Vector3.new(2, 2, 2)
o21.MeshType = Enum.MeshType.FileMesh
o22.Name = "Grass"
o22.Parent = o17
o22.BrickColor = BrickColor.new("Bright green")
o22.Position = Vector3.new(526.999939, 32.1000061, 0.899996996)
o22.Rotation = Vector3.new(-90, 0, 90)
o22.Anchored = true
o22.CanCollide = false
o22.FormFactor = Enum.FormFactor.Plate
o22.Size = Vector3.new(1, 0.400000006, 1)
o22.CFrame = CFrame.new(526.999939, 32.1000061, 0.899996996, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o22.BottomSurface = Enum.SurfaceType.Smooth
o22.TopSurface = Enum.SurfaceType.Smooth
o22.Color = Color3.new(0.294118, 0.592157, 0.294118)
o22.Position = Vector3.new(526.999939, 32.1000061, 0.899996996)
o23.Parent = o22
o23.MeshId = "http://www.roblox.com/asset/?id=1080954"
o23.Scale = Vector3.new(3, 3, 8)
o23.VertexColor = Vector3.new(2, 2, 2)
o23.MeshType = Enum.MeshType.FileMesh
o24.Name = "Grass"
o24.Parent = o17
o24.BrickColor = BrickColor.new("Bright green")
o24.Position = Vector3.new(522.999939, 32.1000061, 1.899997)
o24.Rotation = Vector3.new(-90, 0, 90)
o24.Anchored = true
o24.CanCollide = false
o24.FormFactor = Enum.FormFactor.Plate
o24.Size = Vector3.new(1, 0.400000006, 1)
o24.CFrame = CFrame.new(522.999939, 32.1000061, 1.899997, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o24.BottomSurface = Enum.SurfaceType.Smooth
o24.TopSurface = Enum.SurfaceType.Smooth
o24.Color = Color3.new(0.294118, 0.592157, 0.294118)
o24.Position = Vector3.new(522.999939, 32.1000061, 1.899997)
o25.Parent = o24
o25.MeshId = "http://www.roblox.com/asset/?id=1080954"
o25.Scale = Vector3.new(3, 3, 8)
o25.VertexColor = Vector3.new(2, 2, 2)
o25.MeshType = Enum.MeshType.FileMesh
o26.Parent = o7
o27.Name = "Grass"
o27.Parent = o26
o27.BrickColor = BrickColor.new("Bright green")
o27.Position = Vector3.new(523.999939, 32.1000061, -6.10000181)
o27.Rotation = Vector3.new(-90, 0, 90)
o27.Anchored = true
o27.CanCollide = false
o27.FormFactor = Enum.FormFactor.Plate
o27.Size = Vector3.new(1, 0.400000006, 1)
o27.CFrame = CFrame.new(523.999939, 32.1000061, -6.10000181, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o27.BottomSurface = Enum.SurfaceType.Smooth
o27.TopSurface = Enum.SurfaceType.Smooth
o27.Color = Color3.new(0.294118, 0.592157, 0.294118)
o27.Position = Vector3.new(523.999939, 32.1000061, -6.10000181)
o28.Parent = o27
o28.MeshId = "http://www.roblox.com/asset/?id=1080954"
o28.Scale = Vector3.new(3, 3, 8)
o28.VertexColor = Vector3.new(2, 2, 2)
o28.MeshType = Enum.MeshType.FileMesh
o29.Name = "Grass"
o29.Parent = o26
o29.BrickColor = BrickColor.new("Bright green")
o29.Position = Vector3.new(523.999939, 32.1000061, -2.100003)
o29.Rotation = Vector3.new(-90, 0, 90)
o29.Anchored = true
o29.CanCollide = false
o29.FormFactor = Enum.FormFactor.Plate
o29.Size = Vector3.new(1, 0.400000006, 1)
o29.CFrame = CFrame.new(523.999939, 32.1000061, -2.100003, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o29.BottomSurface = Enum.SurfaceType.Smooth
o29.TopSurface = Enum.SurfaceType.Smooth
o29.Color = Color3.new(0.294118, 0.592157, 0.294118)
o29.Position = Vector3.new(523.999939, 32.1000061, -2.100003)
o30.Parent = o29
o30.MeshId = "http://www.roblox.com/asset/?id=1080954"
o30.Scale = Vector3.new(3, 3, 8)
o30.VertexColor = Vector3.new(2, 2, 2)
o30.MeshType = Enum.MeshType.FileMesh
o31.Name = "Grass"
o31.Parent = o26
o31.BrickColor = BrickColor.new("Bright green")
o31.Position = Vector3.new(520.999939, 32.1000061, -6.10000181)
o31.Rotation = Vector3.new(-90, 0, 90)
o31.Anchored = true
o31.CanCollide = false
o31.FormFactor = Enum.FormFactor.Plate
o31.Size = Vector3.new(1, 0.400000006, 1)
o31.CFrame = CFrame.new(520.999939, 32.1000061, -6.10000181, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o31.BottomSurface = Enum.SurfaceType.Smooth
o31.TopSurface = Enum.SurfaceType.Smooth
o31.Color = Color3.new(0.294118, 0.592157, 0.294118)
o31.Position = Vector3.new(520.999939, 32.1000061, -6.10000181)
o32.Parent = o31
o32.MeshId = "http://www.roblox.com/asset/?id=1080954"
o32.Scale = Vector3.new(3, 3, 8)
o32.VertexColor = Vector3.new(2, 2, 2)
o32.MeshType = Enum.MeshType.FileMesh
o33.Name = "Grass"
o33.Parent = o26
o33.BrickColor = BrickColor.new("Bright green")
o33.Position = Vector3.new(520.999939, 32.1000061, -2.100003)
o33.Rotation = Vector3.new(-90, 0, 90)
o33.Anchored = true
o33.CanCollide = false
o33.FormFactor = Enum.FormFactor.Plate
o33.Size = Vector3.new(1, 0.400000006, 1)
o33.CFrame = CFrame.new(520.999939, 32.1000061, -2.100003, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o33.BottomSurface = Enum.SurfaceType.Smooth
o33.TopSurface = Enum.SurfaceType.Smooth
o33.Color = Color3.new(0.294118, 0.592157, 0.294118)
o33.Position = Vector3.new(520.999939, 32.1000061, -2.100003)
o34.Parent = o33
o34.MeshId = "http://www.roblox.com/asset/?id=1080954"
o34.Scale = Vector3.new(3, 3, 8)
o34.VertexColor = Vector3.new(2, 2, 2)
o34.MeshType = Enum.MeshType.FileMesh
o35.Parent = o1
o35.Material = Enum.Material.Concrete
o35.BrickColor = BrickColor.new("Dark stone grey")
o35.Position = Vector3.new(646.600037, 109.199753, -69.9000854)
o35.Anchored = true
o35.Size = Vector3.new(2.79999852, 155.200012, 63)
o35.CFrame = CFrame.new(646.600037, 109.199753, -69.9000854, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o35.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o35.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o35.Color = Color3.new(0.388235, 0.372549, 0.384314)
o35.Position = Vector3.new(646.600037, 109.199753, -69.9000854)
o36.Parent = o1
o36.Material = Enum.Material.DiamondPlate
o36.BrickColor = BrickColor.new("Smoky grey")
o36.Position = Vector3.new(645.600037, 101.599731, -72.5000076)
o36.Anchored = true
o36.Size = Vector3.new(0.800000012, 3, 512.200012)
o36.CFrame = CFrame.new(645.600037, 101.599731, -72.5000076, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o36.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o36.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o36.Color = Color3.new(0.356863, 0.364706, 0.411765)
o36.Position = Vector3.new(645.600037, 101.599731, -72.5000076)
o37.Name = "Baseplate"
o37.Parent = o1
o37.Material = Enum.Material.Sand
o37.BrickColor = BrickColor.new("Buttermilk")
o37.Position = Vector3.new(617.800049, 21.6000214, -71.6000061)
o37.Anchored = true
o37.FormFactor = Enum.FormFactor.Symmetric
o37.Size = Vector3.new(512, 20, 512)
o37.CFrame = CFrame.new(617.800049, 21.6000214, -71.6000061, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o37.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o37.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o37.Color = Color3.new(0.996078, 0.952941, 0.733333)
o37.Position = Vector3.new(617.800049, 21.6000214, -71.6000061)
o38.Parent = o1
o39.Parent = o38
o40.Name = "Grass"
o40.Parent = o39
o40.BrickColor = BrickColor.new("Bright green")
o40.Position = Vector3.new(575.599976, 32.1000061, -183.700012)
o40.Rotation = Vector3.new(-90, 0, 90)
o40.Anchored = true
o40.CanCollide = false
o40.FormFactor = Enum.FormFactor.Plate
o40.Size = Vector3.new(1, 0.400000006, 1)
o40.CFrame = CFrame.new(575.599976, 32.1000061, -183.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o40.BottomSurface = Enum.SurfaceType.Smooth
o40.TopSurface = Enum.SurfaceType.Smooth
o40.Color = Color3.new(0.294118, 0.592157, 0.294118)
o40.Position = Vector3.new(575.599976, 32.1000061, -183.700012)
o41.Parent = o40
o41.MeshId = "http://www.roblox.com/asset/?id=1080954"
o41.Scale = Vector3.new(3, 3, 8)
o41.VertexColor = Vector3.new(2, 2, 2)
o41.MeshType = Enum.MeshType.FileMesh
o42.Name = "Grass"
o42.Parent = o39
o42.BrickColor = BrickColor.new("Bright green")
o42.Position = Vector3.new(583.599976, 32.1000061, -181.700012)
o42.Rotation = Vector3.new(-90, 0, 90)
o42.Anchored = true
o42.CanCollide = false
o42.FormFactor = Enum.FormFactor.Plate
o42.Size = Vector3.new(1, 0.400000006, 1)
o42.CFrame = CFrame.new(583.599976, 32.1000061, -181.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o42.BottomSurface = Enum.SurfaceType.Smooth
o42.TopSurface = Enum.SurfaceType.Smooth
o42.Color = Color3.new(0.294118, 0.592157, 0.294118)
o42.Position = Vector3.new(583.599976, 32.1000061, -181.700012)
o43.Parent = o42
o43.MeshId = "http://www.roblox.com/asset/?id=1080954"
o43.Scale = Vector3.new(3, 3, 8)
o43.VertexColor = Vector3.new(2, 2, 2)
o43.MeshType = Enum.MeshType.FileMesh
o44.Name = "Grass"
o44.Parent = o39
o44.BrickColor = BrickColor.new("Bright green")
o44.Position = Vector3.new(578.599976, 32.1000061, -183.700012)
o44.Rotation = Vector3.new(-90, 0, 90)
o44.Anchored = true
o44.CanCollide = false
o44.FormFactor = Enum.FormFactor.Plate
o44.Size = Vector3.new(1, 0.400000006, 1)
o44.CFrame = CFrame.new(578.599976, 32.1000061, -183.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o44.BottomSurface = Enum.SurfaceType.Smooth
o44.TopSurface = Enum.SurfaceType.Smooth
o44.Color = Color3.new(0.294118, 0.592157, 0.294118)
o44.Position = Vector3.new(578.599976, 32.1000061, -183.700012)
o45.Parent = o44
o45.MeshId = "http://www.roblox.com/asset/?id=1080954"
o45.Scale = Vector3.new(3, 3, 8)
o45.VertexColor = Vector3.new(2, 2, 2)
o45.MeshType = Enum.MeshType.FileMesh
o46.Name = "Grass"
o46.Parent = o39
o46.BrickColor = BrickColor.new("Bright green")
o46.Position = Vector3.new(576.599976, 32.1000061, -179.700012)
o46.Rotation = Vector3.new(-90, 0, 90)
o46.Anchored = true
o46.CanCollide = false
o46.FormFactor = Enum.FormFactor.Plate
o46.Size = Vector3.new(1, 0.400000006, 1)
o46.CFrame = CFrame.new(576.599976, 32.1000061, -179.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o46.BottomSurface = Enum.SurfaceType.Smooth
o46.TopSurface = Enum.SurfaceType.Smooth
o46.Color = Color3.new(0.294118, 0.592157, 0.294118)
o46.Position = Vector3.new(576.599976, 32.1000061, -179.700012)
o47.Parent = o46
o47.MeshId = "http://www.roblox.com/asset/?id=1080954"
o47.Scale = Vector3.new(3, 3, 8)
o47.VertexColor = Vector3.new(2, 2, 2)
o47.MeshType = Enum.MeshType.FileMesh
o48.Parent = o38
o49.Name = "Grass"
o49.Parent = o48
o49.BrickColor = BrickColor.new("Bright green")
o49.Position = Vector3.new(583.599976, 32.1000061, -179.700012)
o49.Rotation = Vector3.new(-90, 0, 90)
o49.Anchored = true
o49.CanCollide = false
o49.FormFactor = Enum.FormFactor.Plate
o49.Size = Vector3.new(1, 0.400000006, 1)
o49.CFrame = CFrame.new(583.599976, 32.1000061, -179.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o49.BottomSurface = Enum.SurfaceType.Smooth
o49.TopSurface = Enum.SurfaceType.Smooth
o49.Color = Color3.new(0.294118, 0.592157, 0.294118)
o49.Position = Vector3.new(583.599976, 32.1000061, -179.700012)
o50.Parent = o49
o50.MeshId = "http://www.roblox.com/asset/?id=1080954"
o50.Scale = Vector3.new(3, 3, 8)
o50.VertexColor = Vector3.new(2, 2, 2)
o50.MeshType = Enum.MeshType.FileMesh
o51.Name = "Grass"
o51.Parent = o48
o51.BrickColor = BrickColor.new("Bright green")
o51.Position = Vector3.new(581.599976, 32.1000061, -175.700012)
o51.Rotation = Vector3.new(-90, 0, 90)
o51.Anchored = true
o51.CanCollide = false
o51.FormFactor = Enum.FormFactor.Plate
o51.Size = Vector3.new(1, 0.400000006, 1)
o51.CFrame = CFrame.new(581.599976, 32.1000061, -175.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o51.BottomSurface = Enum.SurfaceType.Smooth
o51.TopSurface = Enum.SurfaceType.Smooth
o51.Color = Color3.new(0.294118, 0.592157, 0.294118)
o51.Position = Vector3.new(581.599976, 32.1000061, -175.700012)
o52.Parent = o51
o52.MeshId = "http://www.roblox.com/asset/?id=1080954"
o52.Scale = Vector3.new(3, 3, 8)
o52.VertexColor = Vector3.new(2, 2, 2)
o52.MeshType = Enum.MeshType.FileMesh
o53.Name = "Grass"
o53.Parent = o48
o53.BrickColor = BrickColor.new("Bright green")
o53.Position = Vector3.new(583.599976, 32.1000061, -174.700012)
o53.Rotation = Vector3.new(-90, 0, 90)
o53.Anchored = true
o53.CanCollide = false
o53.FormFactor = Enum.FormFactor.Plate
o53.Size = Vector3.new(1, 0.400000006, 1)
o53.CFrame = CFrame.new(583.599976, 32.1000061, -174.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o53.BottomSurface = Enum.SurfaceType.Smooth
o53.TopSurface = Enum.SurfaceType.Smooth
o53.Color = Color3.new(0.294118, 0.592157, 0.294118)
o53.Position = Vector3.new(583.599976, 32.1000061, -174.700012)
o54.Parent = o53
o54.MeshId = "http://www.roblox.com/asset/?id=1080954"
o54.Scale = Vector3.new(3, 3, 8)
o54.VertexColor = Vector3.new(2, 2, 2)
o54.MeshType = Enum.MeshType.FileMesh
o55.Name = "Grass"
o55.Parent = o48
o55.BrickColor = BrickColor.new("Bright green")
o55.Position = Vector3.new(579.599976, 32.1000061, -173.700012)
o55.Rotation = Vector3.new(-90, 0, 90)
o55.Anchored = true
o55.CanCollide = false
o55.FormFactor = Enum.FormFactor.Plate
o55.Size = Vector3.new(1, 0.400000006, 1)
o55.CFrame = CFrame.new(579.599976, 32.1000061, -173.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o55.BottomSurface = Enum.SurfaceType.Smooth
o55.TopSurface = Enum.SurfaceType.Smooth
o55.Color = Color3.new(0.294118, 0.592157, 0.294118)
o55.Position = Vector3.new(579.599976, 32.1000061, -173.700012)
o56.Parent = o55
o56.MeshId = "http://www.roblox.com/asset/?id=1080954"
o56.Scale = Vector3.new(3, 3, 8)
o56.VertexColor = Vector3.new(2, 2, 2)
o56.MeshType = Enum.MeshType.FileMesh
o57.Parent = o38
o58.Name = "Grass"
o58.Parent = o57
o58.BrickColor = BrickColor.new("Bright green")
o58.Position = Vector3.new(580.599976, 32.1000061, -181.700012)
o58.Rotation = Vector3.new(-90, 0, 90)
o58.Anchored = true
o58.CanCollide = false
o58.FormFactor = Enum.FormFactor.Plate
o58.Size = Vector3.new(1, 0.400000006, 1)
o58.CFrame = CFrame.new(580.599976, 32.1000061, -181.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o58.BottomSurface = Enum.SurfaceType.Smooth
o58.TopSurface = Enum.SurfaceType.Smooth
o58.Color = Color3.new(0.294118, 0.592157, 0.294118)
o58.Position = Vector3.new(580.599976, 32.1000061, -181.700012)
o59.Parent = o58
o59.MeshId = "http://www.roblox.com/asset/?id=1080954"
o59.Scale = Vector3.new(3, 3, 8)
o59.VertexColor = Vector3.new(2, 2, 2)
o59.MeshType = Enum.MeshType.FileMesh
o60.Name = "Grass"
o60.Parent = o57
o60.BrickColor = BrickColor.new("Bright green")
o60.Position = Vector3.new(580.599976, 32.1000061, -177.700012)
o60.Rotation = Vector3.new(-90, 0, 90)
o60.Anchored = true
o60.CanCollide = false
o60.FormFactor = Enum.FormFactor.Plate
o60.Size = Vector3.new(1, 0.400000006, 1)
o60.CFrame = CFrame.new(580.599976, 32.1000061, -177.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o60.BottomSurface = Enum.SurfaceType.Smooth
o60.TopSurface = Enum.SurfaceType.Smooth
o60.Color = Color3.new(0.294118, 0.592157, 0.294118)
o60.Position = Vector3.new(580.599976, 32.1000061, -177.700012)
o61.Parent = o60
o61.MeshId = "http://www.roblox.com/asset/?id=1080954"
o61.Scale = Vector3.new(3, 3, 8)
o61.VertexColor = Vector3.new(2, 2, 2)
o61.MeshType = Enum.MeshType.FileMesh
o62.Name = "Grass"
o62.Parent = o57
o62.BrickColor = BrickColor.new("Bright green")
o62.Position = Vector3.new(577.599976, 32.1000061, -181.700012)
o62.Rotation = Vector3.new(-90, 0, 90)
o62.Anchored = true
o62.CanCollide = false
o62.FormFactor = Enum.FormFactor.Plate
o62.Size = Vector3.new(1, 0.400000006, 1)
o62.CFrame = CFrame.new(577.599976, 32.1000061, -181.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o62.BottomSurface = Enum.SurfaceType.Smooth
o62.TopSurface = Enum.SurfaceType.Smooth
o62.Color = Color3.new(0.294118, 0.592157, 0.294118)
o62.Position = Vector3.new(577.599976, 32.1000061, -181.700012)
o63.Parent = o62
o63.MeshId = "http://www.roblox.com/asset/?id=1080954"
o63.Scale = Vector3.new(3, 3, 8)
o63.VertexColor = Vector3.new(2, 2, 2)
o63.MeshType = Enum.MeshType.FileMesh
o64.Name = "Grass"
o64.Parent = o57
o64.BrickColor = BrickColor.new("Bright green")
o64.Position = Vector3.new(577.599976, 32.1000061, -177.700012)
o64.Rotation = Vector3.new(-90, 0, 90)
o64.Anchored = true
o64.CanCollide = false
o64.FormFactor = Enum.FormFactor.Plate
o64.Size = Vector3.new(1, 0.400000006, 1)
o64.CFrame = CFrame.new(577.599976, 32.1000061, -177.700012, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o64.BottomSurface = Enum.SurfaceType.Smooth
o64.TopSurface = Enum.SurfaceType.Smooth
o64.Color = Color3.new(0.294118, 0.592157, 0.294118)
o64.Position = Vector3.new(577.599976, 32.1000061, -177.700012)
o65.Parent = o64
o65.MeshId = "http://www.roblox.com/asset/?id=1080954"
o65.Scale = Vector3.new(3, 3, 8)
o65.VertexColor = Vector3.new(2, 2, 2)
o65.MeshType = Enum.MeshType.FileMesh
o66.Parent = o1
o67.Parent = o66
o68.Name = "Grass"
o68.Parent = o67
o68.BrickColor = BrickColor.new("Bright green")
o68.Position = Vector3.new(640.600037, 32.1000061, -21.1000099)
o68.Rotation = Vector3.new(-90, 0, 90)
o68.Anchored = true
o68.CanCollide = false
o68.FormFactor = Enum.FormFactor.Plate
o68.Size = Vector3.new(1, 0.400000006, 1)
o68.CFrame = CFrame.new(640.600037, 32.1000061, -21.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o68.BottomSurface = Enum.SurfaceType.Smooth
o68.TopSurface = Enum.SurfaceType.Smooth
o68.Color = Color3.new(0.294118, 0.592157, 0.294118)
o68.Position = Vector3.new(640.600037, 32.1000061, -21.1000099)
o69.Parent = o68
o69.MeshId = "http://www.roblox.com/asset/?id=1080954"
o69.Scale = Vector3.new(3, 3, 8)
o69.VertexColor = Vector3.new(2, 2, 2)
o69.MeshType = Enum.MeshType.FileMesh
o70.Name = "Grass"
o70.Parent = o67
o70.BrickColor = BrickColor.new("Bright green")
o70.Position = Vector3.new(648.600037, 32.1000061, -19.1000099)
o70.Rotation = Vector3.new(-90, 0, 90)
o70.Anchored = true
o70.CanCollide = false
o70.FormFactor = Enum.FormFactor.Plate
o70.Size = Vector3.new(1, 0.400000006, 1)
o70.CFrame = CFrame.new(648.600037, 32.1000061, -19.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o70.BottomSurface = Enum.SurfaceType.Smooth
o70.TopSurface = Enum.SurfaceType.Smooth
o70.Color = Color3.new(0.294118, 0.592157, 0.294118)
o70.Position = Vector3.new(648.600037, 32.1000061, -19.1000099)
o71.Parent = o70
o71.MeshId = "http://www.roblox.com/asset/?id=1080954"
o71.Scale = Vector3.new(3, 3, 8)
o71.VertexColor = Vector3.new(2, 2, 2)
o71.MeshType = Enum.MeshType.FileMesh
o72.Name = "Grass"
o72.Parent = o67
o72.BrickColor = BrickColor.new("Bright green")
o72.Position = Vector3.new(643.600037, 32.1000061, -21.1000099)
o72.Rotation = Vector3.new(-90, 0, 90)
o72.Anchored = true
o72.CanCollide = false
o72.FormFactor = Enum.FormFactor.Plate
o72.Size = Vector3.new(1, 0.400000006, 1)
o72.CFrame = CFrame.new(643.600037, 32.1000061, -21.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o72.BottomSurface = Enum.SurfaceType.Smooth
o72.TopSurface = Enum.SurfaceType.Smooth
o72.Color = Color3.new(0.294118, 0.592157, 0.294118)
o72.Position = Vector3.new(643.600037, 32.1000061, -21.1000099)
o73.Parent = o72
o73.MeshId = "http://www.roblox.com/asset/?id=1080954"
o73.Scale = Vector3.new(3, 3, 8)
o73.VertexColor = Vector3.new(2, 2, 2)
o73.MeshType = Enum.MeshType.FileMesh
o74.Name = "Grass"
o74.Parent = o67
o74.BrickColor = BrickColor.new("Bright green")
o74.Position = Vector3.new(641.600037, 32.1000061, -17.1000099)
o74.Rotation = Vector3.new(-90, 0, 90)
o74.Anchored = true
o74.CanCollide = false
o74.FormFactor = Enum.FormFactor.Plate
o74.Size = Vector3.new(1, 0.400000006, 1)
o74.CFrame = CFrame.new(641.600037, 32.1000061, -17.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o74.BottomSurface = Enum.SurfaceType.Smooth
o74.TopSurface = Enum.SurfaceType.Smooth
o74.Color = Color3.new(0.294118, 0.592157, 0.294118)
o74.Position = Vector3.new(641.600037, 32.1000061, -17.1000099)
o75.Parent = o74
o75.MeshId = "http://www.roblox.com/asset/?id=1080954"
o75.Scale = Vector3.new(3, 3, 8)
o75.VertexColor = Vector3.new(2, 2, 2)
o75.MeshType = Enum.MeshType.FileMesh
o76.Parent = o66
o77.Name = "Grass"
o77.Parent = o76
o77.BrickColor = BrickColor.new("Bright green")
o77.Position = Vector3.new(648.600037, 32.1000061, -17.1000099)
o77.Rotation = Vector3.new(-90, 0, 90)
o77.Anchored = true
o77.CanCollide = false
o77.FormFactor = Enum.FormFactor.Plate
o77.Size = Vector3.new(1, 0.400000006, 1)
o77.CFrame = CFrame.new(648.600037, 32.1000061, -17.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o77.BottomSurface = Enum.SurfaceType.Smooth
o77.TopSurface = Enum.SurfaceType.Smooth
o77.Color = Color3.new(0.294118, 0.592157, 0.294118)
o77.Position = Vector3.new(648.600037, 32.1000061, -17.1000099)
o78.Parent = o77
o78.MeshId = "http://www.roblox.com/asset/?id=1080954"
o78.Scale = Vector3.new(3, 3, 8)
o78.VertexColor = Vector3.new(2, 2, 2)
o78.MeshType = Enum.MeshType.FileMesh
o79.Name = "Grass"
o79.Parent = o76
o79.BrickColor = BrickColor.new("Bright green")
o79.Position = Vector3.new(646.600037, 32.1000061, -13.1000099)
o79.Rotation = Vector3.new(-90, 0, 90)
o79.Anchored = true
o79.CanCollide = false
o79.FormFactor = Enum.FormFactor.Plate
o79.Size = Vector3.new(1, 0.400000006, 1)
o79.CFrame = CFrame.new(646.600037, 32.1000061, -13.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o79.BottomSurface = Enum.SurfaceType.Smooth
o79.TopSurface = Enum.SurfaceType.Smooth
o79.Color = Color3.new(0.294118, 0.592157, 0.294118)
o79.Position = Vector3.new(646.600037, 32.1000061, -13.1000099)
o80.Parent = o79
o80.MeshId = "http://www.roblox.com/asset/?id=1080954"
o80.Scale = Vector3.new(3, 3, 8)
o80.VertexColor = Vector3.new(2, 2, 2)
o80.MeshType = Enum.MeshType.FileMesh
o81.Name = "Grass"
o81.Parent = o76
o81.BrickColor = BrickColor.new("Bright green")
o81.Position = Vector3.new(648.600037, 32.1000061, -12.1000099)
o81.Rotation = Vector3.new(-90, 0, 90)
o81.Anchored = true
o81.CanCollide = false
o81.FormFactor = Enum.FormFactor.Plate
o81.Size = Vector3.new(1, 0.400000006, 1)
o81.CFrame = CFrame.new(648.600037, 32.1000061, -12.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o81.BottomSurface = Enum.SurfaceType.Smooth
o81.TopSurface = Enum.SurfaceType.Smooth
o81.Color = Color3.new(0.294118, 0.592157, 0.294118)
o81.Position = Vector3.new(648.600037, 32.1000061, -12.1000099)
o82.Parent = o81
o82.MeshId = "http://www.roblox.com/asset/?id=1080954"
o82.Scale = Vector3.new(3, 3, 8)
o82.VertexColor = Vector3.new(2, 2, 2)
o82.MeshType = Enum.MeshType.FileMesh
o83.Name = "Grass"
o83.Parent = o76
o83.BrickColor = BrickColor.new("Bright green")
o83.Position = Vector3.new(644.600037, 32.1000061, -11.1000099)
o83.Rotation = Vector3.new(-90, 0, 90)
o83.Anchored = true
o83.CanCollide = false
o83.FormFactor = Enum.FormFactor.Plate
o83.Size = Vector3.new(1, 0.400000006, 1)
o83.CFrame = CFrame.new(644.600037, 32.1000061, -11.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o83.BottomSurface = Enum.SurfaceType.Smooth
o83.TopSurface = Enum.SurfaceType.Smooth
o83.Color = Color3.new(0.294118, 0.592157, 0.294118)
o83.Position = Vector3.new(644.600037, 32.1000061, -11.1000099)
o84.Parent = o83
o84.MeshId = "http://www.roblox.com/asset/?id=1080954"
o84.Scale = Vector3.new(3, 3, 8)
o84.VertexColor = Vector3.new(2, 2, 2)
o84.MeshType = Enum.MeshType.FileMesh
o85.Parent = o66
o86.Name = "Grass"
o86.Parent = o85
o86.BrickColor = BrickColor.new("Bright green")
o86.Position = Vector3.new(645.600037, 32.1000061, -19.1000099)
o86.Rotation = Vector3.new(-90, 0, 90)
o86.Anchored = true
o86.CanCollide = false
o86.FormFactor = Enum.FormFactor.Plate
o86.Size = Vector3.new(1, 0.400000006, 1)
o86.CFrame = CFrame.new(645.600037, 32.1000061, -19.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o86.BottomSurface = Enum.SurfaceType.Smooth
o86.TopSurface = Enum.SurfaceType.Smooth
o86.Color = Color3.new(0.294118, 0.592157, 0.294118)
o86.Position = Vector3.new(645.600037, 32.1000061, -19.1000099)
o87.Parent = o86
o87.MeshId = "http://www.roblox.com/asset/?id=1080954"
o87.Scale = Vector3.new(3, 3, 8)
o87.VertexColor = Vector3.new(2, 2, 2)
o87.MeshType = Enum.MeshType.FileMesh
o88.Name = "Grass"
o88.Parent = o85
o88.BrickColor = BrickColor.new("Bright green")
o88.Position = Vector3.new(645.600037, 32.1000061, -15.1000099)
o88.Rotation = Vector3.new(-90, 0, 90)
o88.Anchored = true
o88.CanCollide = false
o88.FormFactor = Enum.FormFactor.Plate
o88.Size = Vector3.new(1, 0.400000006, 1)
o88.CFrame = CFrame.new(645.600037, 32.1000061, -15.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o88.BottomSurface = Enum.SurfaceType.Smooth
o88.TopSurface = Enum.SurfaceType.Smooth
o88.Color = Color3.new(0.294118, 0.592157, 0.294118)
o88.Position = Vector3.new(645.600037, 32.1000061, -15.1000099)
o89.Parent = o88
o89.MeshId = "http://www.roblox.com/asset/?id=1080954"
o89.Scale = Vector3.new(3, 3, 8)
o89.VertexColor = Vector3.new(2, 2, 2)
o89.MeshType = Enum.MeshType.FileMesh
o90.Name = "Grass"
o90.Parent = o85
o90.BrickColor = BrickColor.new("Bright green")
o90.Position = Vector3.new(642.600037, 32.1000061, -19.1000099)
o90.Rotation = Vector3.new(-90, 0, 90)
o90.Anchored = true
o90.CanCollide = false
o90.FormFactor = Enum.FormFactor.Plate
o90.Size = Vector3.new(1, 0.400000006, 1)
o90.CFrame = CFrame.new(642.600037, 32.1000061, -19.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o90.BottomSurface = Enum.SurfaceType.Smooth
o90.TopSurface = Enum.SurfaceType.Smooth
o90.Color = Color3.new(0.294118, 0.592157, 0.294118)
o90.Position = Vector3.new(642.600037, 32.1000061, -19.1000099)
o91.Parent = o90
o91.MeshId = "http://www.roblox.com/asset/?id=1080954"
o91.Scale = Vector3.new(3, 3, 8)
o91.VertexColor = Vector3.new(2, 2, 2)
o91.MeshType = Enum.MeshType.FileMesh
o92.Name = "Grass"
o92.Parent = o85
o92.BrickColor = BrickColor.new("Bright green")
o92.Position = Vector3.new(642.600037, 32.1000061, -15.1000099)
o92.Rotation = Vector3.new(-90, 0, 90)
o92.Anchored = true
o92.CanCollide = false
o92.FormFactor = Enum.FormFactor.Plate
o92.Size = Vector3.new(1, 0.400000006, 1)
o92.CFrame = CFrame.new(642.600037, 32.1000061, -15.1000099, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o92.BottomSurface = Enum.SurfaceType.Smooth
o92.TopSurface = Enum.SurfaceType.Smooth
o92.Color = Color3.new(0.294118, 0.592157, 0.294118)
o92.Position = Vector3.new(642.600037, 32.1000061, -15.1000099)
o93.Parent = o92
o93.MeshId = "http://www.roblox.com/asset/?id=1080954"
o93.Scale = Vector3.new(3, 3, 8)
o93.VertexColor = Vector3.new(2, 2, 2)
o93.MeshType = Enum.MeshType.FileMesh
o94.Parent = o1
o95.Parent = o94
o96.Name = "Grass"
o96.Parent = o95
o96.BrickColor = BrickColor.new("Bright green")
o96.Position = Vector3.new(476.999969, 32.1000061, -76.9000168)
o96.Rotation = Vector3.new(-90, 0, 90)
o96.Anchored = true
o96.CanCollide = false
o96.FormFactor = Enum.FormFactor.Plate
o96.Size = Vector3.new(1, 0.400000006, 1)
o96.CFrame = CFrame.new(476.999969, 32.1000061, -76.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o96.BottomSurface = Enum.SurfaceType.Smooth
o96.TopSurface = Enum.SurfaceType.Smooth
o96.Color = Color3.new(0.294118, 0.592157, 0.294118)
o96.Position = Vector3.new(476.999969, 32.1000061, -76.9000168)
o97.Parent = o96
o97.MeshId = "http://www.roblox.com/asset/?id=1080954"
o97.Scale = Vector3.new(3, 3, 8)
o97.VertexColor = Vector3.new(2, 2, 2)
o97.MeshType = Enum.MeshType.FileMesh
o98.Name = "Grass"
o98.Parent = o95
o98.BrickColor = BrickColor.new("Bright green")
o98.Position = Vector3.new(484.999969, 32.1000061, -74.9000168)
o98.Rotation = Vector3.new(-90, 0, 90)
o98.Anchored = true
o98.CanCollide = false
o98.FormFactor = Enum.FormFactor.Plate
o98.Size = Vector3.new(1, 0.400000006, 1)
o98.CFrame = CFrame.new(484.999969, 32.1000061, -74.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o98.BottomSurface = Enum.SurfaceType.Smooth
o98.TopSurface = Enum.SurfaceType.Smooth
o98.Color = Color3.new(0.294118, 0.592157, 0.294118)
o98.Position = Vector3.new(484.999969, 32.1000061, -74.9000168)
o99.Parent = o98
o99.MeshId = "http://www.roblox.com/asset/?id=1080954"
o99.Scale = Vector3.new(3, 3, 8)
o99.VertexColor = Vector3.new(2, 2, 2)
o99.MeshType = Enum.MeshType.FileMesh
o100.Name = "Grass"
o100.Parent = o95
o100.BrickColor = BrickColor.new("Bright green")
o100.Position = Vector3.new(479.999969, 32.1000061, -76.9000168)
o100.Rotation = Vector3.new(-90, 0, 90)
o100.Anchored = true
o100.CanCollide = false
o100.FormFactor = Enum.FormFactor.Plate
o100.Size = Vector3.new(1, 0.400000006, 1)
o100.CFrame = CFrame.new(479.999969, 32.1000061, -76.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o100.BottomSurface = Enum.SurfaceType.Smooth
o100.TopSurface = Enum.SurfaceType.Smooth
o100.Color = Color3.new(0.294118, 0.592157, 0.294118)
o100.Position = Vector3.new(479.999969, 32.1000061, -76.9000168)
o101.Parent = o100
o101.MeshId = "http://www.roblox.com/asset/?id=1080954"
o101.Scale = Vector3.new(3, 3, 8)
o101.VertexColor = Vector3.new(2, 2, 2)
o101.MeshType = Enum.MeshType.FileMesh
o102.Name = "Grass"
o102.Parent = o95
o102.BrickColor = BrickColor.new("Bright green")
o102.Position = Vector3.new(477.999969, 32.1000061, -72.9000168)
o102.Rotation = Vector3.new(-90, 0, 90)
o102.Anchored = true
o102.CanCollide = false
o102.FormFactor = Enum.FormFactor.Plate
o102.Size = Vector3.new(1, 0.400000006, 1)
o102.CFrame = CFrame.new(477.999969, 32.1000061, -72.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o102.BottomSurface = Enum.SurfaceType.Smooth
o102.TopSurface = Enum.SurfaceType.Smooth
o102.Color = Color3.new(0.294118, 0.592157, 0.294118)
o102.Position = Vector3.new(477.999969, 32.1000061, -72.9000168)
o103.Parent = o102
o103.MeshId = "http://www.roblox.com/asset/?id=1080954"
o103.Scale = Vector3.new(3, 3, 8)
o103.VertexColor = Vector3.new(2, 2, 2)
o103.MeshType = Enum.MeshType.FileMesh
o104.Parent = o94
o105.Name = "Grass"
o105.Parent = o104
o105.BrickColor = BrickColor.new("Bright green")
o105.Position = Vector3.new(484.999969, 32.1000061, -72.9000168)
o105.Rotation = Vector3.new(-90, 0, 90)
o105.Anchored = true
o105.CanCollide = false
o105.FormFactor = Enum.FormFactor.Plate
o105.Size = Vector3.new(1, 0.400000006, 1)
o105.CFrame = CFrame.new(484.999969, 32.1000061, -72.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o105.BottomSurface = Enum.SurfaceType.Smooth
o105.TopSurface = Enum.SurfaceType.Smooth
o105.Color = Color3.new(0.294118, 0.592157, 0.294118)
o105.Position = Vector3.new(484.999969, 32.1000061, -72.9000168)
o106.Parent = o105
o106.MeshId = "http://www.roblox.com/asset/?id=1080954"
o106.Scale = Vector3.new(3, 3, 8)
o106.VertexColor = Vector3.new(2, 2, 2)
o106.MeshType = Enum.MeshType.FileMesh
o107.Name = "Grass"
o107.Parent = o104
o107.BrickColor = BrickColor.new("Bright green")
o107.Position = Vector3.new(482.999969, 32.1000061, -68.9000168)
o107.Rotation = Vector3.new(-90, 0, 90)
o107.Anchored = true
o107.CanCollide = false
o107.FormFactor = Enum.FormFactor.Plate
o107.Size = Vector3.new(1, 0.400000006, 1)
o107.CFrame = CFrame.new(482.999969, 32.1000061, -68.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o107.BottomSurface = Enum.SurfaceType.Smooth
o107.TopSurface = Enum.SurfaceType.Smooth
o107.Color = Color3.new(0.294118, 0.592157, 0.294118)
o107.Position = Vector3.new(482.999969, 32.1000061, -68.9000168)
o108.Parent = o107
o108.MeshId = "http://www.roblox.com/asset/?id=1080954"
o108.Scale = Vector3.new(3, 3, 8)
o108.VertexColor = Vector3.new(2, 2, 2)
o108.MeshType = Enum.MeshType.FileMesh
o109.Name = "Grass"
o109.Parent = o104
o109.BrickColor = BrickColor.new("Bright green")
o109.Position = Vector3.new(484.999969, 32.1000061, -67.9000168)
o109.Rotation = Vector3.new(-90, 0, 90)
o109.Anchored = true
o109.CanCollide = false
o109.FormFactor = Enum.FormFactor.Plate
o109.Size = Vector3.new(1, 0.400000006, 1)
o109.CFrame = CFrame.new(484.999969, 32.1000061, -67.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o109.BottomSurface = Enum.SurfaceType.Smooth
o109.TopSurface = Enum.SurfaceType.Smooth
o109.Color = Color3.new(0.294118, 0.592157, 0.294118)
o109.Position = Vector3.new(484.999969, 32.1000061, -67.9000168)
o110.Parent = o109
o110.MeshId = "http://www.roblox.com/asset/?id=1080954"
o110.Scale = Vector3.new(3, 3, 8)
o110.VertexColor = Vector3.new(2, 2, 2)
o110.MeshType = Enum.MeshType.FileMesh
o111.Name = "Grass"
o111.Parent = o104
o111.BrickColor = BrickColor.new("Bright green")
o111.Position = Vector3.new(480.999969, 32.1000061, -66.9000168)
o111.Rotation = Vector3.new(-90, 0, 90)
o111.Anchored = true
o111.CanCollide = false
o111.FormFactor = Enum.FormFactor.Plate
o111.Size = Vector3.new(1, 0.400000006, 1)
o111.CFrame = CFrame.new(480.999969, 32.1000061, -66.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o111.BottomSurface = Enum.SurfaceType.Smooth
o111.TopSurface = Enum.SurfaceType.Smooth
o111.Color = Color3.new(0.294118, 0.592157, 0.294118)
o111.Position = Vector3.new(480.999969, 32.1000061, -66.9000168)
o112.Parent = o111
o112.MeshId = "http://www.roblox.com/asset/?id=1080954"
o112.Scale = Vector3.new(3, 3, 8)
o112.VertexColor = Vector3.new(2, 2, 2)
o112.MeshType = Enum.MeshType.FileMesh
o113.Parent = o94
o114.Name = "Grass"
o114.Parent = o113
o114.BrickColor = BrickColor.new("Bright green")
o114.Position = Vector3.new(481.999969, 32.1000061, -74.9000168)
o114.Rotation = Vector3.new(-90, 0, 90)
o114.Anchored = true
o114.CanCollide = false
o114.FormFactor = Enum.FormFactor.Plate
o114.Size = Vector3.new(1, 0.400000006, 1)
o114.CFrame = CFrame.new(481.999969, 32.1000061, -74.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o114.BottomSurface = Enum.SurfaceType.Smooth
o114.TopSurface = Enum.SurfaceType.Smooth
o114.Color = Color3.new(0.294118, 0.592157, 0.294118)
o114.Position = Vector3.new(481.999969, 32.1000061, -74.9000168)
o115.Parent = o114
o115.MeshId = "http://www.roblox.com/asset/?id=1080954"
o115.Scale = Vector3.new(3, 3, 8)
o115.VertexColor = Vector3.new(2, 2, 2)
o115.MeshType = Enum.MeshType.FileMesh
o116.Name = "Grass"
o116.Parent = o113
o116.BrickColor = BrickColor.new("Bright green")
o116.Position = Vector3.new(481.999969, 32.1000061, -70.9000168)
o116.Rotation = Vector3.new(-90, 0, 90)
o116.Anchored = true
o116.CanCollide = false
o116.FormFactor = Enum.FormFactor.Plate
o116.Size = Vector3.new(1, 0.400000006, 1)
o116.CFrame = CFrame.new(481.999969, 32.1000061, -70.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o116.BottomSurface = Enum.SurfaceType.Smooth
o116.TopSurface = Enum.SurfaceType.Smooth
o116.Color = Color3.new(0.294118, 0.592157, 0.294118)
o116.Position = Vector3.new(481.999969, 32.1000061, -70.9000168)
o117.Parent = o116
o117.MeshId = "http://www.roblox.com/asset/?id=1080954"
o117.Scale = Vector3.new(3, 3, 8)
o117.VertexColor = Vector3.new(2, 2, 2)
o117.MeshType = Enum.MeshType.FileMesh
o118.Name = "Grass"
o118.Parent = o113
o118.BrickColor = BrickColor.new("Bright green")
o118.Position = Vector3.new(478.999969, 32.1000061, -74.9000168)
o118.Rotation = Vector3.new(-90, 0, 90)
o118.Anchored = true
o118.CanCollide = false
o118.FormFactor = Enum.FormFactor.Plate
o118.Size = Vector3.new(1, 0.400000006, 1)
o118.CFrame = CFrame.new(478.999969, 32.1000061, -74.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o118.BottomSurface = Enum.SurfaceType.Smooth
o118.TopSurface = Enum.SurfaceType.Smooth
o118.Color = Color3.new(0.294118, 0.592157, 0.294118)
o118.Position = Vector3.new(478.999969, 32.1000061, -74.9000168)
o119.Parent = o118
o119.MeshId = "http://www.roblox.com/asset/?id=1080954"
o119.Scale = Vector3.new(3, 3, 8)
o119.VertexColor = Vector3.new(2, 2, 2)
o119.MeshType = Enum.MeshType.FileMesh
o120.Name = "Grass"
o120.Parent = o113
o120.BrickColor = BrickColor.new("Bright green")
o120.Position = Vector3.new(478.999969, 32.1000061, -70.9000168)
o120.Rotation = Vector3.new(-90, 0, 90)
o120.Anchored = true
o120.CanCollide = false
o120.FormFactor = Enum.FormFactor.Plate
o120.Size = Vector3.new(1, 0.400000006, 1)
o120.CFrame = CFrame.new(478.999969, 32.1000061, -70.9000168, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o120.BottomSurface = Enum.SurfaceType.Smooth
o120.TopSurface = Enum.SurfaceType.Smooth
o120.Color = Color3.new(0.294118, 0.592157, 0.294118)
o120.Position = Vector3.new(478.999969, 32.1000061, -70.9000168)
o121.Parent = o120
o121.MeshId = "http://www.roblox.com/asset/?id=1080954"
o121.Scale = Vector3.new(3, 3, 8)
o121.VertexColor = Vector3.new(2, 2, 2)
o121.MeshType = Enum.MeshType.FileMesh
o122.Parent = o1
o123.Parent = o122
o124.Name = "Grass"
o124.Parent = o123
o124.BrickColor = BrickColor.new("Bright green")
o124.Position = Vector3.new(515.599915, 32.1000061, 122.899979)
o124.Rotation = Vector3.new(-90, 0, 90)
o124.Anchored = true
o124.CanCollide = false
o124.FormFactor = Enum.FormFactor.Plate
o124.Size = Vector3.new(1, 0.400000006, 1)
o124.CFrame = CFrame.new(515.599915, 32.1000061, 122.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o124.BottomSurface = Enum.SurfaceType.Smooth
o124.TopSurface = Enum.SurfaceType.Smooth
o124.Color = Color3.new(0.294118, 0.592157, 0.294118)
o124.Position = Vector3.new(515.599915, 32.1000061, 122.899979)
o125.Parent = o124
o125.MeshId = "http://www.roblox.com/asset/?id=1080954"
o125.Scale = Vector3.new(3, 3, 8)
o125.VertexColor = Vector3.new(2, 2, 2)
o125.MeshType = Enum.MeshType.FileMesh
o126.Name = "Grass"
o126.Parent = o123
o126.BrickColor = BrickColor.new("Bright green")
o126.Position = Vector3.new(523.599915, 32.1000061, 124.899979)
o126.Rotation = Vector3.new(-90, 0, 90)
o126.Anchored = true
o126.CanCollide = false
o126.FormFactor = Enum.FormFactor.Plate
o126.Size = Vector3.new(1, 0.400000006, 1)
o126.CFrame = CFrame.new(523.599915, 32.1000061, 124.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o126.BottomSurface = Enum.SurfaceType.Smooth
o126.TopSurface = Enum.SurfaceType.Smooth
o126.Color = Color3.new(0.294118, 0.592157, 0.294118)
o126.Position = Vector3.new(523.599915, 32.1000061, 124.899979)
o127.Parent = o126
o127.MeshId = "http://www.roblox.com/asset/?id=1080954"
o127.Scale = Vector3.new(3, 3, 8)
o127.VertexColor = Vector3.new(2, 2, 2)
o127.MeshType = Enum.MeshType.FileMesh
o128.Name = "Grass"
o128.Parent = o123
o128.BrickColor = BrickColor.new("Bright green")
o128.Position = Vector3.new(518.599915, 32.1000061, 122.899979)
o128.Rotation = Vector3.new(-90, 0, 90)
o128.Anchored = true
o128.CanCollide = false
o128.FormFactor = Enum.FormFactor.Plate
o128.Size = Vector3.new(1, 0.400000006, 1)
o128.CFrame = CFrame.new(518.599915, 32.1000061, 122.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o128.BottomSurface = Enum.SurfaceType.Smooth
o128.TopSurface = Enum.SurfaceType.Smooth
o128.Color = Color3.new(0.294118, 0.592157, 0.294118)
o128.Position = Vector3.new(518.599915, 32.1000061, 122.899979)
o129.Parent = o128
o129.MeshId = "http://www.roblox.com/asset/?id=1080954"
o129.Scale = Vector3.new(3, 3, 8)
o129.VertexColor = Vector3.new(2, 2, 2)
o129.MeshType = Enum.MeshType.FileMesh
o130.Name = "Grass"
o130.Parent = o123
o130.BrickColor = BrickColor.new("Bright green")
o130.Position = Vector3.new(516.599915, 32.1000061, 126.899979)
o130.Rotation = Vector3.new(-90, 0, 90)
o130.Anchored = true
o130.CanCollide = false
o130.FormFactor = Enum.FormFactor.Plate
o130.Size = Vector3.new(1, 0.400000006, 1)
o130.CFrame = CFrame.new(516.599915, 32.1000061, 126.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o130.BottomSurface = Enum.SurfaceType.Smooth
o130.TopSurface = Enum.SurfaceType.Smooth
o130.Color = Color3.new(0.294118, 0.592157, 0.294118)
o130.Position = Vector3.new(516.599915, 32.1000061, 126.899979)
o131.Parent = o130
o131.MeshId = "http://www.roblox.com/asset/?id=1080954"
o131.Scale = Vector3.new(3, 3, 8)
o131.VertexColor = Vector3.new(2, 2, 2)
o131.MeshType = Enum.MeshType.FileMesh
o132.Parent = o122
o133.Name = "Grass"
o133.Parent = o132
o133.BrickColor = BrickColor.new("Bright green")
o133.Position = Vector3.new(523.599915, 32.1000061, 126.899979)
o133.Rotation = Vector3.new(-90, 0, 90)
o133.Anchored = true
o133.CanCollide = false
o133.FormFactor = Enum.FormFactor.Plate
o133.Size = Vector3.new(1, 0.400000006, 1)
o133.CFrame = CFrame.new(523.599915, 32.1000061, 126.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o133.BottomSurface = Enum.SurfaceType.Smooth
o133.TopSurface = Enum.SurfaceType.Smooth
o133.Color = Color3.new(0.294118, 0.592157, 0.294118)
o133.Position = Vector3.new(523.599915, 32.1000061, 126.899979)
o134.Parent = o133
o134.MeshId = "http://www.roblox.com/asset/?id=1080954"
o134.Scale = Vector3.new(3, 3, 8)
o134.VertexColor = Vector3.new(2, 2, 2)
o134.MeshType = Enum.MeshType.FileMesh
o135.Name = "Grass"
o135.Parent = o132
o135.BrickColor = BrickColor.new("Bright green")
o135.Position = Vector3.new(521.599915, 32.1000061, 130.899979)
o135.Rotation = Vector3.new(-90, 0, 90)
o135.Anchored = true
o135.CanCollide = false
o135.FormFactor = Enum.FormFactor.Plate
o135.Size = Vector3.new(1, 0.400000006, 1)
o135.CFrame = CFrame.new(521.599915, 32.1000061, 130.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o135.BottomSurface = Enum.SurfaceType.Smooth
o135.TopSurface = Enum.SurfaceType.Smooth
o135.Color = Color3.new(0.294118, 0.592157, 0.294118)
o135.Position = Vector3.new(521.599915, 32.1000061, 130.899979)
o136.Parent = o135
o136.MeshId = "http://www.roblox.com/asset/?id=1080954"
o136.Scale = Vector3.new(3, 3, 8)
o136.VertexColor = Vector3.new(2, 2, 2)
o136.MeshType = Enum.MeshType.FileMesh
o137.Name = "Grass"
o137.Parent = o132
o137.BrickColor = BrickColor.new("Bright green")
o137.Position = Vector3.new(523.599915, 32.1000061, 131.899979)
o137.Rotation = Vector3.new(-90, 0, 90)
o137.Anchored = true
o137.CanCollide = false
o137.FormFactor = Enum.FormFactor.Plate
o137.Size = Vector3.new(1, 0.400000006, 1)
o137.CFrame = CFrame.new(523.599915, 32.1000061, 131.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o137.BottomSurface = Enum.SurfaceType.Smooth
o137.TopSurface = Enum.SurfaceType.Smooth
o137.Color = Color3.new(0.294118, 0.592157, 0.294118)
o137.Position = Vector3.new(523.599915, 32.1000061, 131.899979)
o138.Parent = o137
o138.MeshId = "http://www.roblox.com/asset/?id=1080954"
o138.Scale = Vector3.new(3, 3, 8)
o138.VertexColor = Vector3.new(2, 2, 2)
o138.MeshType = Enum.MeshType.FileMesh
o139.Name = "Grass"
o139.Parent = o132
o139.BrickColor = BrickColor.new("Bright green")
o139.Position = Vector3.new(519.599915, 32.1000061, 132.899979)
o139.Rotation = Vector3.new(-90, 0, 90)
o139.Anchored = true
o139.CanCollide = false
o139.FormFactor = Enum.FormFactor.Plate
o139.Size = Vector3.new(1, 0.400000006, 1)
o139.CFrame = CFrame.new(519.599915, 32.1000061, 132.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o139.BottomSurface = Enum.SurfaceType.Smooth
o139.TopSurface = Enum.SurfaceType.Smooth
o139.Color = Color3.new(0.294118, 0.592157, 0.294118)
o139.Position = Vector3.new(519.599915, 32.1000061, 132.899979)
o140.Parent = o139
o140.MeshId = "http://www.roblox.com/asset/?id=1080954"
o140.Scale = Vector3.new(3, 3, 8)
o140.VertexColor = Vector3.new(2, 2, 2)
o140.MeshType = Enum.MeshType.FileMesh
o141.Parent = o122
o142.Name = "Grass"
o142.Parent = o141
o142.BrickColor = BrickColor.new("Bright green")
o142.Position = Vector3.new(520.599915, 32.1000061, 124.899979)
o142.Rotation = Vector3.new(-90, 0, 90)
o142.Anchored = true
o142.CanCollide = false
o142.FormFactor = Enum.FormFactor.Plate
o142.Size = Vector3.new(1, 0.400000006, 1)
o142.CFrame = CFrame.new(520.599915, 32.1000061, 124.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o142.BottomSurface = Enum.SurfaceType.Smooth
o142.TopSurface = Enum.SurfaceType.Smooth
o142.Color = Color3.new(0.294118, 0.592157, 0.294118)
o142.Position = Vector3.new(520.599915, 32.1000061, 124.899979)
o143.Parent = o142
o143.MeshId = "http://www.roblox.com/asset/?id=1080954"
o143.Scale = Vector3.new(3, 3, 8)
o143.VertexColor = Vector3.new(2, 2, 2)
o143.MeshType = Enum.MeshType.FileMesh
o144.Name = "Grass"
o144.Parent = o141
o144.BrickColor = BrickColor.new("Bright green")
o144.Position = Vector3.new(520.599915, 32.1000061, 128.899979)
o144.Rotation = Vector3.new(-90, 0, 90)
o144.Anchored = true
o144.CanCollide = false
o144.FormFactor = Enum.FormFactor.Plate
o144.Size = Vector3.new(1, 0.400000006, 1)
o144.CFrame = CFrame.new(520.599915, 32.1000061, 128.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o144.BottomSurface = Enum.SurfaceType.Smooth
o144.TopSurface = Enum.SurfaceType.Smooth
o144.Color = Color3.new(0.294118, 0.592157, 0.294118)
o144.Position = Vector3.new(520.599915, 32.1000061, 128.899979)
o145.Parent = o144
o145.MeshId = "http://www.roblox.com/asset/?id=1080954"
o145.Scale = Vector3.new(3, 3, 8)
o145.VertexColor = Vector3.new(2, 2, 2)
o145.MeshType = Enum.MeshType.FileMesh
o146.Name = "Grass"
o146.Parent = o141
o146.BrickColor = BrickColor.new("Bright green")
o146.Position = Vector3.new(517.599915, 32.1000061, 124.899979)
o146.Rotation = Vector3.new(-90, 0, 90)
o146.Anchored = true
o146.CanCollide = false
o146.FormFactor = Enum.FormFactor.Plate
o146.Size = Vector3.new(1, 0.400000006, 1)
o146.CFrame = CFrame.new(517.599915, 32.1000061, 124.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o146.BottomSurface = Enum.SurfaceType.Smooth
o146.TopSurface = Enum.SurfaceType.Smooth
o146.Color = Color3.new(0.294118, 0.592157, 0.294118)
o146.Position = Vector3.new(517.599915, 32.1000061, 124.899979)
o147.Parent = o146
o147.MeshId = "http://www.roblox.com/asset/?id=1080954"
o147.Scale = Vector3.new(3, 3, 8)
o147.VertexColor = Vector3.new(2, 2, 2)
o147.MeshType = Enum.MeshType.FileMesh
o148.Name = "Grass"
o148.Parent = o141
o148.BrickColor = BrickColor.new("Bright green")
o148.Position = Vector3.new(517.599915, 32.1000061, 128.899979)
o148.Rotation = Vector3.new(-90, 0, 90)
o148.Anchored = true
o148.CanCollide = false
o148.FormFactor = Enum.FormFactor.Plate
o148.Size = Vector3.new(1, 0.400000006, 1)
o148.CFrame = CFrame.new(517.599915, 32.1000061, 128.899979, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o148.BottomSurface = Enum.SurfaceType.Smooth
o148.TopSurface = Enum.SurfaceType.Smooth
o148.Color = Color3.new(0.294118, 0.592157, 0.294118)
o148.Position = Vector3.new(517.599915, 32.1000061, 128.899979)
o149.Parent = o148
o149.MeshId = "http://www.roblox.com/asset/?id=1080954"
o149.Scale = Vector3.new(3, 3, 8)
o149.VertexColor = Vector3.new(2, 2, 2)
o149.MeshType = Enum.MeshType.FileMesh
o150.Parent = o1
o151.Parent = o150
o152.Name = "Grass"
o152.Parent = o151
o152.BrickColor = BrickColor.new("Bright green")
o152.Position = Vector3.new(544.999939, 32.1000061, -81.7000809)
o152.Rotation = Vector3.new(-90, 0, 90)
o152.Anchored = true
o152.CanCollide = false
o152.FormFactor = Enum.FormFactor.Plate
o152.Size = Vector3.new(1, 0.400000006, 1)
o152.CFrame = CFrame.new(544.999939, 32.1000061, -81.7000809, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o152.BottomSurface = Enum.SurfaceType.Smooth
o152.TopSurface = Enum.SurfaceType.Smooth
o152.Color = Color3.new(0.294118, 0.592157, 0.294118)
o152.Position = Vector3.new(544.999939, 32.1000061, -81.7000809)
o153.Parent = o152
o153.MeshId = "http://www.roblox.com/asset/?id=1080954"
o153.Scale = Vector3.new(3, 3, 8)
o153.VertexColor = Vector3.new(2, 2, 2)
o153.MeshType = Enum.MeshType.FileMesh
o154.Name = "Grass"
o154.Parent = o151
o154.BrickColor = BrickColor.new("Bright green")
o154.Position = Vector3.new(552.999939, 32.1000061, -79.7000732)
o154.Rotation = Vector3.new(-90, 0, 90)
o154.Anchored = true
o154.CanCollide = false
o154.FormFactor = Enum.FormFactor.Plate
o154.Size = Vector3.new(1, 0.400000006, 1)
o154.CFrame = CFrame.new(552.999939, 32.1000061, -79.7000732, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o154.BottomSurface = Enum.SurfaceType.Smooth
o154.TopSurface = Enum.SurfaceType.Smooth
o154.Color = Color3.new(0.294118, 0.592157, 0.294118)
o154.Position = Vector3.new(552.999939, 32.1000061, -79.7000732)
o155.Parent = o154
o155.MeshId = "http://www.roblox.com/asset/?id=1080954"
o155.Scale = Vector3.new(3, 3, 8)
o155.VertexColor = Vector3.new(2, 2, 2)
o155.MeshType = Enum.MeshType.FileMesh
o156.Name = "Grass"
o156.Parent = o151
o156.BrickColor = BrickColor.new("Bright green")
o156.Position = Vector3.new(547.999939, 32.1000061, -81.7000809)
o156.Rotation = Vector3.new(-90, 0, 90)
o156.Anchored = true
o156.CanCollide = false
o156.FormFactor = Enum.FormFactor.Plate
o156.Size = Vector3.new(1, 0.400000006, 1)
o156.CFrame = CFrame.new(547.999939, 32.1000061, -81.7000809, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o156.BottomSurface = Enum.SurfaceType.Smooth
o156.TopSurface = Enum.SurfaceType.Smooth
o156.Color = Color3.new(0.294118, 0.592157, 0.294118)
o156.Position = Vector3.new(547.999939, 32.1000061, -81.7000809)
o157.Parent = o156
o157.MeshId = "http://www.roblox.com/asset/?id=1080954"
o157.Scale = Vector3.new(3, 3, 8)
o157.VertexColor = Vector3.new(2, 2, 2)
o157.MeshType = Enum.MeshType.FileMesh
o158.Name = "Grass"
o158.Parent = o151
o158.BrickColor = BrickColor.new("Bright green")
o158.Position = Vector3.new(545.999939, 32.1000061, -77.700058)
o158.Rotation = Vector3.new(-90, 0, 90)
o158.Anchored = true
o158.CanCollide = false
o158.FormFactor = Enum.FormFactor.Plate
o158.Size = Vector3.new(1, 0.400000006, 1)
o158.CFrame = CFrame.new(545.999939, 32.1000061, -77.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o158.BottomSurface = Enum.SurfaceType.Smooth
o158.TopSurface = Enum.SurfaceType.Smooth
o158.Color = Color3.new(0.294118, 0.592157, 0.294118)
o158.Position = Vector3.new(545.999939, 32.1000061, -77.700058)
o159.Parent = o158
o159.MeshId = "http://www.roblox.com/asset/?id=1080954"
o159.Scale = Vector3.new(3, 3, 8)
o159.VertexColor = Vector3.new(2, 2, 2)
o159.MeshType = Enum.MeshType.FileMesh
o160.Parent = o150
o161.Name = "Grass"
o161.Parent = o160
o161.BrickColor = BrickColor.new("Bright green")
o161.Position = Vector3.new(552.999939, 32.1000061, -77.700058)
o161.Rotation = Vector3.new(-90, 0, 90)
o161.Anchored = true
o161.CanCollide = false
o161.FormFactor = Enum.FormFactor.Plate
o161.Size = Vector3.new(1, 0.400000006, 1)
o161.CFrame = CFrame.new(552.999939, 32.1000061, -77.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o161.BottomSurface = Enum.SurfaceType.Smooth
o161.TopSurface = Enum.SurfaceType.Smooth
o161.Color = Color3.new(0.294118, 0.592157, 0.294118)
o161.Position = Vector3.new(552.999939, 32.1000061, -77.700058)
o162.Parent = o161
o162.MeshId = "http://www.roblox.com/asset/?id=1080954"
o162.Scale = Vector3.new(3, 3, 8)
o162.VertexColor = Vector3.new(2, 2, 2)
o162.MeshType = Enum.MeshType.FileMesh
o163.Name = "Grass"
o163.Parent = o160
o163.BrickColor = BrickColor.new("Bright green")
o163.Position = Vector3.new(550.999939, 32.1000061, -73.7000351)
o163.Rotation = Vector3.new(-90, 0, 90)
o163.Anchored = true
o163.CanCollide = false
o163.FormFactor = Enum.FormFactor.Plate
o163.Size = Vector3.new(1, 0.400000006, 1)
o163.CFrame = CFrame.new(550.999939, 32.1000061, -73.7000351, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o163.BottomSurface = Enum.SurfaceType.Smooth
o163.TopSurface = Enum.SurfaceType.Smooth
o163.Color = Color3.new(0.294118, 0.592157, 0.294118)
o163.Position = Vector3.new(550.999939, 32.1000061, -73.7000351)
o164.Parent = o163
o164.MeshId = "http://www.roblox.com/asset/?id=1080954"
o164.Scale = Vector3.new(3, 3, 8)
o164.VertexColor = Vector3.new(2, 2, 2)
o164.MeshType = Enum.MeshType.FileMesh
o165.Name = "Grass"
o165.Parent = o160
o165.BrickColor = BrickColor.new("Bright green")
o165.Position = Vector3.new(552.999939, 32.1000061, -72.7000427)
o165.Rotation = Vector3.new(-90, 0, 90)
o165.Anchored = true
o165.CanCollide = false
o165.FormFactor = Enum.FormFactor.Plate
o165.Size = Vector3.new(1, 0.400000006, 1)
o165.CFrame = CFrame.new(552.999939, 32.1000061, -72.7000427, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o165.BottomSurface = Enum.SurfaceType.Smooth
o165.TopSurface = Enum.SurfaceType.Smooth
o165.Color = Color3.new(0.294118, 0.592157, 0.294118)
o165.Position = Vector3.new(552.999939, 32.1000061, -72.7000427)
o166.Parent = o165
o166.MeshId = "http://www.roblox.com/asset/?id=1080954"
o166.Scale = Vector3.new(3, 3, 8)
o166.VertexColor = Vector3.new(2, 2, 2)
o166.MeshType = Enum.MeshType.FileMesh
o167.Name = "Grass"
o167.Parent = o160
o167.BrickColor = BrickColor.new("Bright green")
o167.Position = Vector3.new(548.999939, 32.1000061, -71.7000427)
o167.Rotation = Vector3.new(-90, 0, 90)
o167.Anchored = true
o167.CanCollide = false
o167.FormFactor = Enum.FormFactor.Plate
o167.Size = Vector3.new(1, 0.400000006, 1)
o167.CFrame = CFrame.new(548.999939, 32.1000061, -71.7000427, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o167.BottomSurface = Enum.SurfaceType.Smooth
o167.TopSurface = Enum.SurfaceType.Smooth
o167.Color = Color3.new(0.294118, 0.592157, 0.294118)
o167.Position = Vector3.new(548.999939, 32.1000061, -71.7000427)
o168.Parent = o167
o168.MeshId = "http://www.roblox.com/asset/?id=1080954"
o168.Scale = Vector3.new(3, 3, 8)
o168.VertexColor = Vector3.new(2, 2, 2)
o168.MeshType = Enum.MeshType.FileMesh
o169.Parent = o150
o170.Name = "Grass"
o170.Parent = o169
o170.BrickColor = BrickColor.new("Bright green")
o170.Position = Vector3.new(549.999939, 32.1000061, -79.7000732)
o170.Rotation = Vector3.new(-90, 0, 90)
o170.Anchored = true
o170.CanCollide = false
o170.FormFactor = Enum.FormFactor.Plate
o170.Size = Vector3.new(1, 0.400000006, 1)
o170.CFrame = CFrame.new(549.999939, 32.1000061, -79.7000732, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o170.BottomSurface = Enum.SurfaceType.Smooth
o170.TopSurface = Enum.SurfaceType.Smooth
o170.Color = Color3.new(0.294118, 0.592157, 0.294118)
o170.Position = Vector3.new(549.999939, 32.1000061, -79.7000732)
o171.Parent = o170
o171.MeshId = "http://www.roblox.com/asset/?id=1080954"
o171.Scale = Vector3.new(3, 3, 8)
o171.VertexColor = Vector3.new(2, 2, 2)
o171.MeshType = Enum.MeshType.FileMesh
o172.Name = "Grass"
o172.Parent = o169
o172.BrickColor = BrickColor.new("Bright green")
o172.Position = Vector3.new(549.999939, 32.1000061, -75.7000504)
o172.Rotation = Vector3.new(-90, 0, 90)
o172.Anchored = true
o172.CanCollide = false
o172.FormFactor = Enum.FormFactor.Plate
o172.Size = Vector3.new(1, 0.400000006, 1)
o172.CFrame = CFrame.new(549.999939, 32.1000061, -75.7000504, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o172.BottomSurface = Enum.SurfaceType.Smooth
o172.TopSurface = Enum.SurfaceType.Smooth
o172.Color = Color3.new(0.294118, 0.592157, 0.294118)
o172.Position = Vector3.new(549.999939, 32.1000061, -75.7000504)
o173.Parent = o172
o173.MeshId = "http://www.roblox.com/asset/?id=1080954"
o173.Scale = Vector3.new(3, 3, 8)
o173.VertexColor = Vector3.new(2, 2, 2)
o173.MeshType = Enum.MeshType.FileMesh
o174.Name = "Grass"
o174.Parent = o169
o174.BrickColor = BrickColor.new("Bright green")
o174.Position = Vector3.new(546.999939, 32.1000061, -79.7000732)
o174.Rotation = Vector3.new(-90, 0, 90)
o174.Anchored = true
o174.CanCollide = false
o174.FormFactor = Enum.FormFactor.Plate
o174.Size = Vector3.new(1, 0.400000006, 1)
o174.CFrame = CFrame.new(546.999939, 32.1000061, -79.7000732, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o174.BottomSurface = Enum.SurfaceType.Smooth
o174.TopSurface = Enum.SurfaceType.Smooth
o174.Color = Color3.new(0.294118, 0.592157, 0.294118)
o174.Position = Vector3.new(546.999939, 32.1000061, -79.7000732)
o175.Parent = o174
o175.MeshId = "http://www.roblox.com/asset/?id=1080954"
o175.Scale = Vector3.new(3, 3, 8)
o175.VertexColor = Vector3.new(2, 2, 2)
o175.MeshType = Enum.MeshType.FileMesh
o176.Name = "Grass"
o176.Parent = o169
o176.BrickColor = BrickColor.new("Bright green")
o176.Position = Vector3.new(546.999939, 32.1000061, -75.7000504)
o176.Rotation = Vector3.new(-90, 0, 90)
o176.Anchored = true
o176.CanCollide = false
o176.FormFactor = Enum.FormFactor.Plate
o176.Size = Vector3.new(1, 0.400000006, 1)
o176.CFrame = CFrame.new(546.999939, 32.1000061, -75.7000504, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o176.BottomSurface = Enum.SurfaceType.Smooth
o176.TopSurface = Enum.SurfaceType.Smooth
o176.Color = Color3.new(0.294118, 0.592157, 0.294118)
o176.Position = Vector3.new(546.999939, 32.1000061, -75.7000504)
o177.Parent = o176
o177.MeshId = "http://www.roblox.com/asset/?id=1080954"
o177.Scale = Vector3.new(3, 3, 8)
o177.VertexColor = Vector3.new(2, 2, 2)
o177.MeshType = Enum.MeshType.FileMesh
o178.Parent = o1
o179.Parent = o178
o180.Name = "Grass"
o180.Parent = o179
o180.BrickColor = BrickColor.new("Bright green")
o180.Position = Vector3.new(515.599915, 32.1000061, -244.300079)
o180.Rotation = Vector3.new(-90, 0, 90)
o180.Anchored = true
o180.CanCollide = false
o180.FormFactor = Enum.FormFactor.Plate
o180.Size = Vector3.new(1, 0.400000006, 1)
o180.CFrame = CFrame.new(515.599915, 32.1000061, -244.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o180.BottomSurface = Enum.SurfaceType.Smooth
o180.TopSurface = Enum.SurfaceType.Smooth
o180.Color = Color3.new(0.294118, 0.592157, 0.294118)
o180.Position = Vector3.new(515.599915, 32.1000061, -244.300079)
o181.Parent = o180
o181.MeshId = "http://www.roblox.com/asset/?id=1080954"
o181.Scale = Vector3.new(3, 3, 8)
o181.VertexColor = Vector3.new(2, 2, 2)
o181.MeshType = Enum.MeshType.FileMesh
o182.Name = "Grass"
o182.Parent = o179
o182.BrickColor = BrickColor.new("Bright green")
o182.Position = Vector3.new(523.599915, 32.1000061, -242.300079)
o182.Rotation = Vector3.new(-90, 0, 90)
o182.Anchored = true
o182.CanCollide = false
o182.FormFactor = Enum.FormFactor.Plate
o182.Size = Vector3.new(1, 0.400000006, 1)
o182.CFrame = CFrame.new(523.599915, 32.1000061, -242.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o182.BottomSurface = Enum.SurfaceType.Smooth
o182.TopSurface = Enum.SurfaceType.Smooth
o182.Color = Color3.new(0.294118, 0.592157, 0.294118)
o182.Position = Vector3.new(523.599915, 32.1000061, -242.300079)
o183.Parent = o182
o183.MeshId = "http://www.roblox.com/asset/?id=1080954"
o183.Scale = Vector3.new(3, 3, 8)
o183.VertexColor = Vector3.new(2, 2, 2)
o183.MeshType = Enum.MeshType.FileMesh
o184.Name = "Grass"
o184.Parent = o179
o184.BrickColor = BrickColor.new("Bright green")
o184.Position = Vector3.new(518.599915, 32.1000061, -244.300079)
o184.Rotation = Vector3.new(-90, 0, 90)
o184.Anchored = true
o184.CanCollide = false
o184.FormFactor = Enum.FormFactor.Plate
o184.Size = Vector3.new(1, 0.400000006, 1)
o184.CFrame = CFrame.new(518.599915, 32.1000061, -244.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o184.BottomSurface = Enum.SurfaceType.Smooth
o184.TopSurface = Enum.SurfaceType.Smooth
o184.Color = Color3.new(0.294118, 0.592157, 0.294118)
o184.Position = Vector3.new(518.599915, 32.1000061, -244.300079)
o185.Parent = o184
o185.MeshId = "http://www.roblox.com/asset/?id=1080954"
o185.Scale = Vector3.new(3, 3, 8)
o185.VertexColor = Vector3.new(2, 2, 2)
o185.MeshType = Enum.MeshType.FileMesh
o186.Name = "Grass"
o186.Parent = o179
o186.BrickColor = BrickColor.new("Bright green")
o186.Position = Vector3.new(516.599915, 32.1000061, -240.300064)
o186.Rotation = Vector3.new(-90, 0, 90)
o186.Anchored = true
o186.CanCollide = false
o186.FormFactor = Enum.FormFactor.Plate
o186.Size = Vector3.new(1, 0.400000006, 1)
o186.CFrame = CFrame.new(516.599915, 32.1000061, -240.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o186.BottomSurface = Enum.SurfaceType.Smooth
o186.TopSurface = Enum.SurfaceType.Smooth
o186.Color = Color3.new(0.294118, 0.592157, 0.294118)
o186.Position = Vector3.new(516.599915, 32.1000061, -240.300064)
o187.Parent = o186
o187.MeshId = "http://www.roblox.com/asset/?id=1080954"
o187.Scale = Vector3.new(3, 3, 8)
o187.VertexColor = Vector3.new(2, 2, 2)
o187.MeshType = Enum.MeshType.FileMesh
o188.Parent = o178
o189.Name = "Grass"
o189.Parent = o188
o189.BrickColor = BrickColor.new("Bright green")
o189.Position = Vector3.new(523.599915, 32.1000061, -240.300064)
o189.Rotation = Vector3.new(-90, 0, 90)
o189.Anchored = true
o189.CanCollide = false
o189.FormFactor = Enum.FormFactor.Plate
o189.Size = Vector3.new(1, 0.400000006, 1)
o189.CFrame = CFrame.new(523.599915, 32.1000061, -240.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o189.BottomSurface = Enum.SurfaceType.Smooth
o189.TopSurface = Enum.SurfaceType.Smooth
o189.Color = Color3.new(0.294118, 0.592157, 0.294118)
o189.Position = Vector3.new(523.599915, 32.1000061, -240.300064)
o190.Parent = o189
o190.MeshId = "http://www.roblox.com/asset/?id=1080954"
o190.Scale = Vector3.new(3, 3, 8)
o190.VertexColor = Vector3.new(2, 2, 2)
o190.MeshType = Enum.MeshType.FileMesh
o191.Name = "Grass"
o191.Parent = o188
o191.BrickColor = BrickColor.new("Bright green")
o191.Position = Vector3.new(521.599915, 32.1000061, -236.300049)
o191.Rotation = Vector3.new(-90, 0, 90)
o191.Anchored = true
o191.CanCollide = false
o191.FormFactor = Enum.FormFactor.Plate
o191.Size = Vector3.new(1, 0.400000006, 1)
o191.CFrame = CFrame.new(521.599915, 32.1000061, -236.300049, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o191.BottomSurface = Enum.SurfaceType.Smooth
o191.TopSurface = Enum.SurfaceType.Smooth
o191.Color = Color3.new(0.294118, 0.592157, 0.294118)
o191.Position = Vector3.new(521.599915, 32.1000061, -236.300049)
o192.Parent = o191
o192.MeshId = "http://www.roblox.com/asset/?id=1080954"
o192.Scale = Vector3.new(3, 3, 8)
o192.VertexColor = Vector3.new(2, 2, 2)
o192.MeshType = Enum.MeshType.FileMesh
o193.Name = "Grass"
o193.Parent = o188
o193.BrickColor = BrickColor.new("Bright green")
o193.Position = Vector3.new(523.599915, 32.1000061, -235.300049)
o193.Rotation = Vector3.new(-90, 0, 90)
o193.Anchored = true
o193.CanCollide = false
o193.FormFactor = Enum.FormFactor.Plate
o193.Size = Vector3.new(1, 0.400000006, 1)
o193.CFrame = CFrame.new(523.599915, 32.1000061, -235.300049, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o193.BottomSurface = Enum.SurfaceType.Smooth
o193.TopSurface = Enum.SurfaceType.Smooth
o193.Color = Color3.new(0.294118, 0.592157, 0.294118)
o193.Position = Vector3.new(523.599915, 32.1000061, -235.300049)
o194.Parent = o193
o194.MeshId = "http://www.roblox.com/asset/?id=1080954"
o194.Scale = Vector3.new(3, 3, 8)
o194.VertexColor = Vector3.new(2, 2, 2)
o194.MeshType = Enum.MeshType.FileMesh
o195.Name = "Grass"
o195.Parent = o188
o195.BrickColor = BrickColor.new("Bright green")
o195.Position = Vector3.new(519.599915, 32.1000061, -234.300049)
o195.Rotation = Vector3.new(-90, 0, 90)
o195.Anchored = true
o195.CanCollide = false
o195.FormFactor = Enum.FormFactor.Plate
o195.Size = Vector3.new(1, 0.400000006, 1)
o195.CFrame = CFrame.new(519.599915, 32.1000061, -234.300049, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o195.BottomSurface = Enum.SurfaceType.Smooth
o195.TopSurface = Enum.SurfaceType.Smooth
o195.Color = Color3.new(0.294118, 0.592157, 0.294118)
o195.Position = Vector3.new(519.599915, 32.1000061, -234.300049)
o196.Parent = o195
o196.MeshId = "http://www.roblox.com/asset/?id=1080954"
o196.Scale = Vector3.new(3, 3, 8)
o196.VertexColor = Vector3.new(2, 2, 2)
o196.MeshType = Enum.MeshType.FileMesh
o197.Parent = o178
o198.Name = "Grass"
o198.Parent = o197
o198.BrickColor = BrickColor.new("Bright green")
o198.Position = Vector3.new(520.599915, 32.1000061, -242.300079)
o198.Rotation = Vector3.new(-90, 0, 90)
o198.Anchored = true
o198.CanCollide = false
o198.FormFactor = Enum.FormFactor.Plate
o198.Size = Vector3.new(1, 0.400000006, 1)
o198.CFrame = CFrame.new(520.599915, 32.1000061, -242.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o198.BottomSurface = Enum.SurfaceType.Smooth
o198.TopSurface = Enum.SurfaceType.Smooth
o198.Color = Color3.new(0.294118, 0.592157, 0.294118)
o198.Position = Vector3.new(520.599915, 32.1000061, -242.300079)
o199.Parent = o198
o199.MeshId = "http://www.roblox.com/asset/?id=1080954"
o199.Scale = Vector3.new(3, 3, 8)
o199.VertexColor = Vector3.new(2, 2, 2)
o199.MeshType = Enum.MeshType.FileMesh
o200.Name = "Grass"
o200.Parent = o197
o200.BrickColor = BrickColor.new("Bright green")
o200.Position = Vector3.new(520.599915, 32.1000061, -238.300064)
o200.Rotation = Vector3.new(-90, 0, 90)
o200.Anchored = true
o200.CanCollide = false
o200.FormFactor = Enum.FormFactor.Plate
o200.Size = Vector3.new(1, 0.400000006, 1)
o200.CFrame = CFrame.new(520.599915, 32.1000061, -238.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o200.BottomSurface = Enum.SurfaceType.Smooth
o200.TopSurface = Enum.SurfaceType.Smooth
o200.Color = Color3.new(0.294118, 0.592157, 0.294118)
o200.Position = Vector3.new(520.599915, 32.1000061, -238.300064)
o201.Parent = o200
o201.MeshId = "http://www.roblox.com/asset/?id=1080954"
o201.Scale = Vector3.new(3, 3, 8)
o201.VertexColor = Vector3.new(2, 2, 2)
o201.MeshType = Enum.MeshType.FileMesh
o202.Name = "Grass"
o202.Parent = o197
o202.BrickColor = BrickColor.new("Bright green")
o202.Position = Vector3.new(517.599915, 32.1000061, -242.300079)
o202.Rotation = Vector3.new(-90, 0, 90)
o202.Anchored = true
o202.CanCollide = false
o202.FormFactor = Enum.FormFactor.Plate
o202.Size = Vector3.new(1, 0.400000006, 1)
o202.CFrame = CFrame.new(517.599915, 32.1000061, -242.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o202.BottomSurface = Enum.SurfaceType.Smooth
o202.TopSurface = Enum.SurfaceType.Smooth
o202.Color = Color3.new(0.294118, 0.592157, 0.294118)
o202.Position = Vector3.new(517.599915, 32.1000061, -242.300079)
o203.Parent = o202
o203.MeshId = "http://www.roblox.com/asset/?id=1080954"
o203.Scale = Vector3.new(3, 3, 8)
o203.VertexColor = Vector3.new(2, 2, 2)
o203.MeshType = Enum.MeshType.FileMesh
o204.Name = "Grass"
o204.Parent = o197
o204.BrickColor = BrickColor.new("Bright green")
o204.Position = Vector3.new(517.599915, 32.1000061, -238.300064)
o204.Rotation = Vector3.new(-90, 0, 90)
o204.Anchored = true
o204.CanCollide = false
o204.FormFactor = Enum.FormFactor.Plate
o204.Size = Vector3.new(1, 0.400000006, 1)
o204.CFrame = CFrame.new(517.599915, 32.1000061, -238.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o204.BottomSurface = Enum.SurfaceType.Smooth
o204.TopSurface = Enum.SurfaceType.Smooth
o204.Color = Color3.new(0.294118, 0.592157, 0.294118)
o204.Position = Vector3.new(517.599915, 32.1000061, -238.300064)
o205.Parent = o204
o205.MeshId = "http://www.roblox.com/asset/?id=1080954"
o205.Scale = Vector3.new(3, 3, 8)
o205.VertexColor = Vector3.new(2, 2, 2)
o205.MeshType = Enum.MeshType.FileMesh
o206.Parent = o1
o207.Parent = o206
o208.Name = "Grass"
o208.Parent = o207
o208.BrickColor = BrickColor.new("Bright green")
o208.Position = Vector3.new(718.799988, 32.1000061, -244.300079)
o208.Rotation = Vector3.new(-90, 0, 90)
o208.Anchored = true
o208.CanCollide = false
o208.FormFactor = Enum.FormFactor.Plate
o208.Size = Vector3.new(1, 0.400000006, 1)
o208.CFrame = CFrame.new(718.799988, 32.1000061, -244.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o208.BottomSurface = Enum.SurfaceType.Smooth
o208.TopSurface = Enum.SurfaceType.Smooth
o208.Color = Color3.new(0.294118, 0.592157, 0.294118)
o208.Position = Vector3.new(718.799988, 32.1000061, -244.300079)
o209.Parent = o208
o209.MeshId = "http://www.roblox.com/asset/?id=1080954"
o209.Scale = Vector3.new(3, 3, 8)
o209.VertexColor = Vector3.new(2, 2, 2)
o209.MeshType = Enum.MeshType.FileMesh
o210.Name = "Grass"
o210.Parent = o207
o210.BrickColor = BrickColor.new("Bright green")
o210.Position = Vector3.new(726.800049, 32.1000061, -242.300079)
o210.Rotation = Vector3.new(-90, 0, 90)
o210.Anchored = true
o210.CanCollide = false
o210.FormFactor = Enum.FormFactor.Plate
o210.Size = Vector3.new(1, 0.400000006, 1)
o210.CFrame = CFrame.new(726.800049, 32.1000061, -242.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o210.BottomSurface = Enum.SurfaceType.Smooth
o210.TopSurface = Enum.SurfaceType.Smooth
o210.Color = Color3.new(0.294118, 0.592157, 0.294118)
o210.Position = Vector3.new(726.800049, 32.1000061, -242.300079)
o211.Parent = o210
o211.MeshId = "http://www.roblox.com/asset/?id=1080954"
o211.Scale = Vector3.new(3, 3, 8)
o211.VertexColor = Vector3.new(2, 2, 2)
o211.MeshType = Enum.MeshType.FileMesh
o212.Name = "Grass"
o212.Parent = o207
o212.BrickColor = BrickColor.new("Bright green")
o212.Position = Vector3.new(721.800049, 32.1000061, -244.300079)
o212.Rotation = Vector3.new(-90, 0, 90)
o212.Anchored = true
o212.CanCollide = false
o212.FormFactor = Enum.FormFactor.Plate
o212.Size = Vector3.new(1, 0.400000006, 1)
o212.CFrame = CFrame.new(721.800049, 32.1000061, -244.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o212.BottomSurface = Enum.SurfaceType.Smooth
o212.TopSurface = Enum.SurfaceType.Smooth
o212.Color = Color3.new(0.294118, 0.592157, 0.294118)
o212.Position = Vector3.new(721.800049, 32.1000061, -244.300079)
o213.Parent = o212
o213.MeshId = "http://www.roblox.com/asset/?id=1080954"
o213.Scale = Vector3.new(3, 3, 8)
o213.VertexColor = Vector3.new(2, 2, 2)
o213.MeshType = Enum.MeshType.FileMesh
o214.Name = "Grass"
o214.Parent = o207
o214.BrickColor = BrickColor.new("Bright green")
o214.Position = Vector3.new(719.799988, 32.1000061, -240.300064)
o214.Rotation = Vector3.new(-90, 0, 90)
o214.Anchored = true
o214.CanCollide = false
o214.FormFactor = Enum.FormFactor.Plate
o214.Size = Vector3.new(1, 0.400000006, 1)
o214.CFrame = CFrame.new(719.799988, 32.1000061, -240.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o214.BottomSurface = Enum.SurfaceType.Smooth
o214.TopSurface = Enum.SurfaceType.Smooth
o214.Color = Color3.new(0.294118, 0.592157, 0.294118)
o214.Position = Vector3.new(719.799988, 32.1000061, -240.300064)
o215.Parent = o214
o215.MeshId = "http://www.roblox.com/asset/?id=1080954"
o215.Scale = Vector3.new(3, 3, 8)
o215.VertexColor = Vector3.new(2, 2, 2)
o215.MeshType = Enum.MeshType.FileMesh
o216.Parent = o206
o217.Name = "Grass"
o217.Parent = o216
o217.BrickColor = BrickColor.new("Bright green")
o217.Position = Vector3.new(726.800049, 32.1000061, -240.300064)
o217.Rotation = Vector3.new(-90, 0, 90)
o217.Anchored = true
o217.CanCollide = false
o217.FormFactor = Enum.FormFactor.Plate
o217.Size = Vector3.new(1, 0.400000006, 1)
o217.CFrame = CFrame.new(726.800049, 32.1000061, -240.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o217.BottomSurface = Enum.SurfaceType.Smooth
o217.TopSurface = Enum.SurfaceType.Smooth
o217.Color = Color3.new(0.294118, 0.592157, 0.294118)
o217.Position = Vector3.new(726.800049, 32.1000061, -240.300064)
o218.Parent = o217
o218.MeshId = "http://www.roblox.com/asset/?id=1080954"
o218.Scale = Vector3.new(3, 3, 8)
o218.VertexColor = Vector3.new(2, 2, 2)
o218.MeshType = Enum.MeshType.FileMesh
o219.Name = "Grass"
o219.Parent = o216
o219.BrickColor = BrickColor.new("Bright green")
o219.Position = Vector3.new(724.800049, 32.1000061, -236.300049)
o219.Rotation = Vector3.new(-90, 0, 90)
o219.Anchored = true
o219.CanCollide = false
o219.FormFactor = Enum.FormFactor.Plate
o219.Size = Vector3.new(1, 0.400000006, 1)
o219.CFrame = CFrame.new(724.800049, 32.1000061, -236.300049, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o219.BottomSurface = Enum.SurfaceType.Smooth
o219.TopSurface = Enum.SurfaceType.Smooth
o219.Color = Color3.new(0.294118, 0.592157, 0.294118)
o219.Position = Vector3.new(724.800049, 32.1000061, -236.300049)
o220.Parent = o219
o220.MeshId = "http://www.roblox.com/asset/?id=1080954"
o220.Scale = Vector3.new(3, 3, 8)
o220.VertexColor = Vector3.new(2, 2, 2)
o220.MeshType = Enum.MeshType.FileMesh
o221.Name = "Grass"
o221.Parent = o216
o221.BrickColor = BrickColor.new("Bright green")
o221.Position = Vector3.new(726.800049, 32.1000061, -235.300049)
o221.Rotation = Vector3.new(-90, 0, 90)
o221.Anchored = true
o221.CanCollide = false
o221.FormFactor = Enum.FormFactor.Plate
o221.Size = Vector3.new(1, 0.400000006, 1)
o221.CFrame = CFrame.new(726.800049, 32.1000061, -235.300049, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o221.BottomSurface = Enum.SurfaceType.Smooth
o221.TopSurface = Enum.SurfaceType.Smooth
o221.Color = Color3.new(0.294118, 0.592157, 0.294118)
o221.Position = Vector3.new(726.800049, 32.1000061, -235.300049)
o222.Parent = o221
o222.MeshId = "http://www.roblox.com/asset/?id=1080954"
o222.Scale = Vector3.new(3, 3, 8)
o222.VertexColor = Vector3.new(2, 2, 2)
o222.MeshType = Enum.MeshType.FileMesh
o223.Name = "Grass"
o223.Parent = o216
o223.BrickColor = BrickColor.new("Bright green")
o223.Position = Vector3.new(722.800049, 32.1000061, -234.300049)
o223.Rotation = Vector3.new(-90, 0, 90)
o223.Anchored = true
o223.CanCollide = false
o223.FormFactor = Enum.FormFactor.Plate
o223.Size = Vector3.new(1, 0.400000006, 1)
o223.CFrame = CFrame.new(722.800049, 32.1000061, -234.300049, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o223.BottomSurface = Enum.SurfaceType.Smooth
o223.TopSurface = Enum.SurfaceType.Smooth
o223.Color = Color3.new(0.294118, 0.592157, 0.294118)
o223.Position = Vector3.new(722.800049, 32.1000061, -234.300049)
o224.Parent = o223
o224.MeshId = "http://www.roblox.com/asset/?id=1080954"
o224.Scale = Vector3.new(3, 3, 8)
o224.VertexColor = Vector3.new(2, 2, 2)
o224.MeshType = Enum.MeshType.FileMesh
o225.Parent = o206
o226.Name = "Grass"
o226.Parent = o225
o226.BrickColor = BrickColor.new("Bright green")
o226.Position = Vector3.new(723.800049, 32.1000061, -242.300079)
o226.Rotation = Vector3.new(-90, 0, 90)
o226.Anchored = true
o226.CanCollide = false
o226.FormFactor = Enum.FormFactor.Plate
o226.Size = Vector3.new(1, 0.400000006, 1)
o226.CFrame = CFrame.new(723.800049, 32.1000061, -242.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o226.BottomSurface = Enum.SurfaceType.Smooth
o226.TopSurface = Enum.SurfaceType.Smooth
o226.Color = Color3.new(0.294118, 0.592157, 0.294118)
o226.Position = Vector3.new(723.800049, 32.1000061, -242.300079)
o227.Parent = o226
o227.MeshId = "http://www.roblox.com/asset/?id=1080954"
o227.Scale = Vector3.new(3, 3, 8)
o227.VertexColor = Vector3.new(2, 2, 2)
o227.MeshType = Enum.MeshType.FileMesh
o228.Name = "Grass"
o228.Parent = o225
o228.BrickColor = BrickColor.new("Bright green")
o228.Position = Vector3.new(723.800049, 32.1000061, -238.300064)
o228.Rotation = Vector3.new(-90, 0, 90)
o228.Anchored = true
o228.CanCollide = false
o228.FormFactor = Enum.FormFactor.Plate
o228.Size = Vector3.new(1, 0.400000006, 1)
o228.CFrame = CFrame.new(723.800049, 32.1000061, -238.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o228.BottomSurface = Enum.SurfaceType.Smooth
o228.TopSurface = Enum.SurfaceType.Smooth
o228.Color = Color3.new(0.294118, 0.592157, 0.294118)
o228.Position = Vector3.new(723.800049, 32.1000061, -238.300064)
o229.Parent = o228
o229.MeshId = "http://www.roblox.com/asset/?id=1080954"
o229.Scale = Vector3.new(3, 3, 8)
o229.VertexColor = Vector3.new(2, 2, 2)
o229.MeshType = Enum.MeshType.FileMesh
o230.Name = "Grass"
o230.Parent = o225
o230.BrickColor = BrickColor.new("Bright green")
o230.Position = Vector3.new(720.800049, 32.1000061, -242.300079)
o230.Rotation = Vector3.new(-90, 0, 90)
o230.Anchored = true
o230.CanCollide = false
o230.FormFactor = Enum.FormFactor.Plate
o230.Size = Vector3.new(1, 0.400000006, 1)
o230.CFrame = CFrame.new(720.800049, 32.1000061, -242.300079, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o230.BottomSurface = Enum.SurfaceType.Smooth
o230.TopSurface = Enum.SurfaceType.Smooth
o230.Color = Color3.new(0.294118, 0.592157, 0.294118)
o230.Position = Vector3.new(720.800049, 32.1000061, -242.300079)
o231.Parent = o230
o231.MeshId = "http://www.roblox.com/asset/?id=1080954"
o231.Scale = Vector3.new(3, 3, 8)
o231.VertexColor = Vector3.new(2, 2, 2)
o231.MeshType = Enum.MeshType.FileMesh
o232.Name = "Grass"
o232.Parent = o225
o232.BrickColor = BrickColor.new("Bright green")
o232.Position = Vector3.new(720.800049, 32.1000061, -238.300064)
o232.Rotation = Vector3.new(-90, 0, 90)
o232.Anchored = true
o232.CanCollide = false
o232.FormFactor = Enum.FormFactor.Plate
o232.Size = Vector3.new(1, 0.400000006, 1)
o232.CFrame = CFrame.new(720.800049, 32.1000061, -238.300064, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o232.BottomSurface = Enum.SurfaceType.Smooth
o232.TopSurface = Enum.SurfaceType.Smooth
o232.Color = Color3.new(0.294118, 0.592157, 0.294118)
o232.Position = Vector3.new(720.800049, 32.1000061, -238.300064)
o233.Parent = o232
o233.MeshId = "http://www.roblox.com/asset/?id=1080954"
o233.Scale = Vector3.new(3, 3, 8)
o233.VertexColor = Vector3.new(2, 2, 2)
o233.MeshType = Enum.MeshType.FileMesh
o234.Parent = o1
o235.Parent = o234
o236.Name = "Grass"
o236.Parent = o235
o236.BrickColor = BrickColor.new("Bright green")
o236.Position = Vector3.new(718.799988, 32.1000061, -130.700073)
o236.Rotation = Vector3.new(-90, 0, 90)
o236.Anchored = true
o236.CanCollide = false
o236.FormFactor = Enum.FormFactor.Plate
o236.Size = Vector3.new(1, 0.400000006, 1)
o236.CFrame = CFrame.new(718.799988, 32.1000061, -130.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o236.BottomSurface = Enum.SurfaceType.Smooth
o236.TopSurface = Enum.SurfaceType.Smooth
o236.Color = Color3.new(0.294118, 0.592157, 0.294118)
o236.Position = Vector3.new(718.799988, 32.1000061, -130.700073)
o237.Parent = o236
o237.MeshId = "http://www.roblox.com/asset/?id=1080954"
o237.Scale = Vector3.new(3, 3, 8)
o237.VertexColor = Vector3.new(2, 2, 2)
o237.MeshType = Enum.MeshType.FileMesh
o238.Name = "Grass"
o238.Parent = o235
o238.BrickColor = BrickColor.new("Bright green")
o238.Position = Vector3.new(726.800049, 32.1000061, -128.700073)
o238.Rotation = Vector3.new(-90, 0, 90)
o238.Anchored = true
o238.CanCollide = false
o238.FormFactor = Enum.FormFactor.Plate
o238.Size = Vector3.new(1, 0.400000006, 1)
o238.CFrame = CFrame.new(726.800049, 32.1000061, -128.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o238.BottomSurface = Enum.SurfaceType.Smooth
o238.TopSurface = Enum.SurfaceType.Smooth
o238.Color = Color3.new(0.294118, 0.592157, 0.294118)
o238.Position = Vector3.new(726.800049, 32.1000061, -128.700073)
o239.Parent = o238
o239.MeshId = "http://www.roblox.com/asset/?id=1080954"
o239.Scale = Vector3.new(3, 3, 8)
o239.VertexColor = Vector3.new(2, 2, 2)
o239.MeshType = Enum.MeshType.FileMesh
o240.Name = "Grass"
o240.Parent = o235
o240.BrickColor = BrickColor.new("Bright green")
o240.Position = Vector3.new(721.800049, 32.1000061, -130.700073)
o240.Rotation = Vector3.new(-90, 0, 90)
o240.Anchored = true
o240.CanCollide = false
o240.FormFactor = Enum.FormFactor.Plate
o240.Size = Vector3.new(1, 0.400000006, 1)
o240.CFrame = CFrame.new(721.800049, 32.1000061, -130.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o240.BottomSurface = Enum.SurfaceType.Smooth
o240.TopSurface = Enum.SurfaceType.Smooth
o240.Color = Color3.new(0.294118, 0.592157, 0.294118)
o240.Position = Vector3.new(721.800049, 32.1000061, -130.700073)
o241.Parent = o240
o241.MeshId = "http://www.roblox.com/asset/?id=1080954"
o241.Scale = Vector3.new(3, 3, 8)
o241.VertexColor = Vector3.new(2, 2, 2)
o241.MeshType = Enum.MeshType.FileMesh
o242.Name = "Grass"
o242.Parent = o235
o242.BrickColor = BrickColor.new("Bright green")
o242.Position = Vector3.new(719.799988, 32.1000061, -126.700058)
o242.Rotation = Vector3.new(-90, 0, 90)
o242.Anchored = true
o242.CanCollide = false
o242.FormFactor = Enum.FormFactor.Plate
o242.Size = Vector3.new(1, 0.400000006, 1)
o242.CFrame = CFrame.new(719.799988, 32.1000061, -126.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o242.BottomSurface = Enum.SurfaceType.Smooth
o242.TopSurface = Enum.SurfaceType.Smooth
o242.Color = Color3.new(0.294118, 0.592157, 0.294118)
o242.Position = Vector3.new(719.799988, 32.1000061, -126.700058)
o243.Parent = o242
o243.MeshId = "http://www.roblox.com/asset/?id=1080954"
o243.Scale = Vector3.new(3, 3, 8)
o243.VertexColor = Vector3.new(2, 2, 2)
o243.MeshType = Enum.MeshType.FileMesh
o244.Parent = o234
o245.Name = "Grass"
o245.Parent = o244
o245.BrickColor = BrickColor.new("Bright green")
o245.Position = Vector3.new(726.800049, 32.1000061, -126.700058)
o245.Rotation = Vector3.new(-90, 0, 90)
o245.Anchored = true
o245.CanCollide = false
o245.FormFactor = Enum.FormFactor.Plate
o245.Size = Vector3.new(1, 0.400000006, 1)
o245.CFrame = CFrame.new(726.800049, 32.1000061, -126.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o245.BottomSurface = Enum.SurfaceType.Smooth
o245.TopSurface = Enum.SurfaceType.Smooth
o245.Color = Color3.new(0.294118, 0.592157, 0.294118)
o245.Position = Vector3.new(726.800049, 32.1000061, -126.700058)
o246.Parent = o245
o246.MeshId = "http://www.roblox.com/asset/?id=1080954"
o246.Scale = Vector3.new(3, 3, 8)
o246.VertexColor = Vector3.new(2, 2, 2)
o246.MeshType = Enum.MeshType.FileMesh
o247.Name = "Grass"
o247.Parent = o244
o247.BrickColor = BrickColor.new("Bright green")
o247.Position = Vector3.new(724.800049, 32.1000061, -122.700043)
o247.Rotation = Vector3.new(-90, 0, 90)
o247.Anchored = true
o247.CanCollide = false
o247.FormFactor = Enum.FormFactor.Plate
o247.Size = Vector3.new(1, 0.400000006, 1)
o247.CFrame = CFrame.new(724.800049, 32.1000061, -122.700043, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o247.BottomSurface = Enum.SurfaceType.Smooth
o247.TopSurface = Enum.SurfaceType.Smooth
o247.Color = Color3.new(0.294118, 0.592157, 0.294118)
o247.Position = Vector3.new(724.800049, 32.1000061, -122.700043)
o248.Parent = o247
o248.MeshId = "http://www.roblox.com/asset/?id=1080954"
o248.Scale = Vector3.new(3, 3, 8)
o248.VertexColor = Vector3.new(2, 2, 2)
o248.MeshType = Enum.MeshType.FileMesh
o249.Name = "Grass"
o249.Parent = o244
o249.BrickColor = BrickColor.new("Bright green")
o249.Position = Vector3.new(726.800049, 32.1000061, -121.700043)
o249.Rotation = Vector3.new(-90, 0, 90)
o249.Anchored = true
o249.CanCollide = false
o249.FormFactor = Enum.FormFactor.Plate
o249.Size = Vector3.new(1, 0.400000006, 1)
o249.CFrame = CFrame.new(726.800049, 32.1000061, -121.700043, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o249.BottomSurface = Enum.SurfaceType.Smooth
o249.TopSurface = Enum.SurfaceType.Smooth
o249.Color = Color3.new(0.294118, 0.592157, 0.294118)
o249.Position = Vector3.new(726.800049, 32.1000061, -121.700043)
o250.Parent = o249
o250.MeshId = "http://www.roblox.com/asset/?id=1080954"
o250.Scale = Vector3.new(3, 3, 8)
o250.VertexColor = Vector3.new(2, 2, 2)
o250.MeshType = Enum.MeshType.FileMesh
o251.Name = "Grass"
o251.Parent = o244
o251.BrickColor = BrickColor.new("Bright green")
o251.Position = Vector3.new(722.800049, 32.1000061, -120.700043)
o251.Rotation = Vector3.new(-90, 0, 90)
o251.Anchored = true
o251.CanCollide = false
o251.FormFactor = Enum.FormFactor.Plate
o251.Size = Vector3.new(1, 0.400000006, 1)
o251.CFrame = CFrame.new(722.800049, 32.1000061, -120.700043, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o251.BottomSurface = Enum.SurfaceType.Smooth
o251.TopSurface = Enum.SurfaceType.Smooth
o251.Color = Color3.new(0.294118, 0.592157, 0.294118)
o251.Position = Vector3.new(722.800049, 32.1000061, -120.700043)
o252.Parent = o251
o252.MeshId = "http://www.roblox.com/asset/?id=1080954"
o252.Scale = Vector3.new(3, 3, 8)
o252.VertexColor = Vector3.new(2, 2, 2)
o252.MeshType = Enum.MeshType.FileMesh
o253.Parent = o234
o254.Name = "Grass"
o254.Parent = o253
o254.BrickColor = BrickColor.new("Bright green")
o254.Position = Vector3.new(723.800049, 32.1000061, -128.700073)
o254.Rotation = Vector3.new(-90, 0, 90)
o254.Anchored = true
o254.CanCollide = false
o254.FormFactor = Enum.FormFactor.Plate
o254.Size = Vector3.new(1, 0.400000006, 1)
o254.CFrame = CFrame.new(723.800049, 32.1000061, -128.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o254.BottomSurface = Enum.SurfaceType.Smooth
o254.TopSurface = Enum.SurfaceType.Smooth
o254.Color = Color3.new(0.294118, 0.592157, 0.294118)
o254.Position = Vector3.new(723.800049, 32.1000061, -128.700073)
o255.Parent = o254
o255.MeshId = "http://www.roblox.com/asset/?id=1080954"
o255.Scale = Vector3.new(3, 3, 8)
o255.VertexColor = Vector3.new(2, 2, 2)
o255.MeshType = Enum.MeshType.FileMesh
o256.Name = "Grass"
o256.Parent = o253
o256.BrickColor = BrickColor.new("Bright green")
o256.Position = Vector3.new(723.800049, 32.1000061, -124.700058)
o256.Rotation = Vector3.new(-90, 0, 90)
o256.Anchored = true
o256.CanCollide = false
o256.FormFactor = Enum.FormFactor.Plate
o256.Size = Vector3.new(1, 0.400000006, 1)
o256.CFrame = CFrame.new(723.800049, 32.1000061, -124.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o256.BottomSurface = Enum.SurfaceType.Smooth
o256.TopSurface = Enum.SurfaceType.Smooth
o256.Color = Color3.new(0.294118, 0.592157, 0.294118)
o256.Position = Vector3.new(723.800049, 32.1000061, -124.700058)
o257.Parent = o256
o257.MeshId = "http://www.roblox.com/asset/?id=1080954"
o257.Scale = Vector3.new(3, 3, 8)
o257.VertexColor = Vector3.new(2, 2, 2)
o257.MeshType = Enum.MeshType.FileMesh
o258.Name = "Grass"
o258.Parent = o253
o258.BrickColor = BrickColor.new("Bright green")
o258.Position = Vector3.new(720.800049, 32.1000061, -128.700073)
o258.Rotation = Vector3.new(-90, 0, 90)
o258.Anchored = true
o258.CanCollide = false
o258.FormFactor = Enum.FormFactor.Plate
o258.Size = Vector3.new(1, 0.400000006, 1)
o258.CFrame = CFrame.new(720.800049, 32.1000061, -128.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o258.BottomSurface = Enum.SurfaceType.Smooth
o258.TopSurface = Enum.SurfaceType.Smooth
o258.Color = Color3.new(0.294118, 0.592157, 0.294118)
o258.Position = Vector3.new(720.800049, 32.1000061, -128.700073)
o259.Parent = o258
o259.MeshId = "http://www.roblox.com/asset/?id=1080954"
o259.Scale = Vector3.new(3, 3, 8)
o259.VertexColor = Vector3.new(2, 2, 2)
o259.MeshType = Enum.MeshType.FileMesh
o260.Name = "Grass"
o260.Parent = o253
o260.BrickColor = BrickColor.new("Bright green")
o260.Position = Vector3.new(720.800049, 32.1000061, -124.700058)
o260.Rotation = Vector3.new(-90, 0, 90)
o260.Anchored = true
o260.CanCollide = false
o260.FormFactor = Enum.FormFactor.Plate
o260.Size = Vector3.new(1, 0.400000006, 1)
o260.CFrame = CFrame.new(720.800049, 32.1000061, -124.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o260.BottomSurface = Enum.SurfaceType.Smooth
o260.TopSurface = Enum.SurfaceType.Smooth
o260.Color = Color3.new(0.294118, 0.592157, 0.294118)
o260.Position = Vector3.new(720.800049, 32.1000061, -124.700058)
o261.Parent = o260
o261.MeshId = "http://www.roblox.com/asset/?id=1080954"
o261.Scale = Vector3.new(3, 3, 8)
o261.VertexColor = Vector3.new(2, 2, 2)
o261.MeshType = Enum.MeshType.FileMesh
o262.Parent = o1
o263.Parent = o262
o264.Name = "Grass"
o264.Parent = o263
o264.BrickColor = BrickColor.new("Bright green")
o264.Position = Vector3.new(627.200012, 32.1000061, -130.700073)
o264.Rotation = Vector3.new(-90, 0, 90)
o264.Anchored = true
o264.CanCollide = false
o264.FormFactor = Enum.FormFactor.Plate
o264.Size = Vector3.new(1, 0.400000006, 1)
o264.CFrame = CFrame.new(627.200012, 32.1000061, -130.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o264.BottomSurface = Enum.SurfaceType.Smooth
o264.TopSurface = Enum.SurfaceType.Smooth
o264.Color = Color3.new(0.294118, 0.592157, 0.294118)
o264.Position = Vector3.new(627.200012, 32.1000061, -130.700073)
o265.Parent = o264
o265.MeshId = "http://www.roblox.com/asset/?id=1080954"
o265.Scale = Vector3.new(3, 3, 8)
o265.VertexColor = Vector3.new(2, 2, 2)
o265.MeshType = Enum.MeshType.FileMesh
o266.Name = "Grass"
o266.Parent = o263
o266.BrickColor = BrickColor.new("Bright green")
o266.Position = Vector3.new(635.200012, 32.1000061, -128.700073)
o266.Rotation = Vector3.new(-90, 0, 90)
o266.Anchored = true
o266.CanCollide = false
o266.FormFactor = Enum.FormFactor.Plate
o266.Size = Vector3.new(1, 0.400000006, 1)
o266.CFrame = CFrame.new(635.200012, 32.1000061, -128.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o266.BottomSurface = Enum.SurfaceType.Smooth
o266.TopSurface = Enum.SurfaceType.Smooth
o266.Color = Color3.new(0.294118, 0.592157, 0.294118)
o266.Position = Vector3.new(635.200012, 32.1000061, -128.700073)
o267.Parent = o266
o267.MeshId = "http://www.roblox.com/asset/?id=1080954"
o267.Scale = Vector3.new(3, 3, 8)
o267.VertexColor = Vector3.new(2, 2, 2)
o267.MeshType = Enum.MeshType.FileMesh
o268.Name = "Grass"
o268.Parent = o263
o268.BrickColor = BrickColor.new("Bright green")
o268.Position = Vector3.new(630.200012, 32.1000061, -130.700073)
o268.Rotation = Vector3.new(-90, 0, 90)
o268.Anchored = true
o268.CanCollide = false
o268.FormFactor = Enum.FormFactor.Plate
o268.Size = Vector3.new(1, 0.400000006, 1)
o268.CFrame = CFrame.new(630.200012, 32.1000061, -130.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o268.BottomSurface = Enum.SurfaceType.Smooth
o268.TopSurface = Enum.SurfaceType.Smooth
o268.Color = Color3.new(0.294118, 0.592157, 0.294118)
o268.Position = Vector3.new(630.200012, 32.1000061, -130.700073)
o269.Parent = o268
o269.MeshId = "http://www.roblox.com/asset/?id=1080954"
o269.Scale = Vector3.new(3, 3, 8)
o269.VertexColor = Vector3.new(2, 2, 2)
o269.MeshType = Enum.MeshType.FileMesh
o270.Name = "Grass"
o270.Parent = o263
o270.BrickColor = BrickColor.new("Bright green")
o270.Position = Vector3.new(628.200012, 32.1000061, -126.700058)
o270.Rotation = Vector3.new(-90, 0, 90)
o270.Anchored = true
o270.CanCollide = false
o270.FormFactor = Enum.FormFactor.Plate
o270.Size = Vector3.new(1, 0.400000006, 1)
o270.CFrame = CFrame.new(628.200012, 32.1000061, -126.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o270.BottomSurface = Enum.SurfaceType.Smooth
o270.TopSurface = Enum.SurfaceType.Smooth
o270.Color = Color3.new(0.294118, 0.592157, 0.294118)
o270.Position = Vector3.new(628.200012, 32.1000061, -126.700058)
o271.Parent = o270
o271.MeshId = "http://www.roblox.com/asset/?id=1080954"
o271.Scale = Vector3.new(3, 3, 8)
o271.VertexColor = Vector3.new(2, 2, 2)
o271.MeshType = Enum.MeshType.FileMesh
o272.Parent = o262
o273.Name = "Grass"
o273.Parent = o272
o273.BrickColor = BrickColor.new("Bright green")
o273.Position = Vector3.new(635.200012, 32.1000061, -126.700058)
o273.Rotation = Vector3.new(-90, 0, 90)
o273.Anchored = true
o273.CanCollide = false
o273.FormFactor = Enum.FormFactor.Plate
o273.Size = Vector3.new(1, 0.400000006, 1)
o273.CFrame = CFrame.new(635.200012, 32.1000061, -126.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o273.BottomSurface = Enum.SurfaceType.Smooth
o273.TopSurface = Enum.SurfaceType.Smooth
o273.Color = Color3.new(0.294118, 0.592157, 0.294118)
o273.Position = Vector3.new(635.200012, 32.1000061, -126.700058)
o274.Parent = o273
o274.MeshId = "http://www.roblox.com/asset/?id=1080954"
o274.Scale = Vector3.new(3, 3, 8)
o274.VertexColor = Vector3.new(2, 2, 2)
o274.MeshType = Enum.MeshType.FileMesh
o275.Name = "Grass"
o275.Parent = o272
o275.BrickColor = BrickColor.new("Bright green")
o275.Position = Vector3.new(633.200012, 32.1000061, -122.700043)
o275.Rotation = Vector3.new(-90, 0, 90)
o275.Anchored = true
o275.CanCollide = false
o275.FormFactor = Enum.FormFactor.Plate
o275.Size = Vector3.new(1, 0.400000006, 1)
o275.CFrame = CFrame.new(633.200012, 32.1000061, -122.700043, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o275.BottomSurface = Enum.SurfaceType.Smooth
o275.TopSurface = Enum.SurfaceType.Smooth
o275.Color = Color3.new(0.294118, 0.592157, 0.294118)
o275.Position = Vector3.new(633.200012, 32.1000061, -122.700043)
o276.Parent = o275
o276.MeshId = "http://www.roblox.com/asset/?id=1080954"
o276.Scale = Vector3.new(3, 3, 8)
o276.VertexColor = Vector3.new(2, 2, 2)
o276.MeshType = Enum.MeshType.FileMesh
o277.Name = "Grass"
o277.Parent = o272
o277.BrickColor = BrickColor.new("Bright green")
o277.Position = Vector3.new(635.200012, 32.1000061, -121.700043)
o277.Rotation = Vector3.new(-90, 0, 90)
o277.Anchored = true
o277.CanCollide = false
o277.FormFactor = Enum.FormFactor.Plate
o277.Size = Vector3.new(1, 0.400000006, 1)
o277.CFrame = CFrame.new(635.200012, 32.1000061, -121.700043, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o277.BottomSurface = Enum.SurfaceType.Smooth
o277.TopSurface = Enum.SurfaceType.Smooth
o277.Color = Color3.new(0.294118, 0.592157, 0.294118)
o277.Position = Vector3.new(635.200012, 32.1000061, -121.700043)
o278.Parent = o277
o278.MeshId = "http://www.roblox.com/asset/?id=1080954"
o278.Scale = Vector3.new(3, 3, 8)
o278.VertexColor = Vector3.new(2, 2, 2)
o278.MeshType = Enum.MeshType.FileMesh
o279.Name = "Grass"
o279.Parent = o272
o279.BrickColor = BrickColor.new("Bright green")
o279.Position = Vector3.new(631.200012, 32.1000061, -120.700043)
o279.Rotation = Vector3.new(-90, 0, 90)
o279.Anchored = true
o279.CanCollide = false
o279.FormFactor = Enum.FormFactor.Plate
o279.Size = Vector3.new(1, 0.400000006, 1)
o279.CFrame = CFrame.new(631.200012, 32.1000061, -120.700043, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o279.BottomSurface = Enum.SurfaceType.Smooth
o279.TopSurface = Enum.SurfaceType.Smooth
o279.Color = Color3.new(0.294118, 0.592157, 0.294118)
o279.Position = Vector3.new(631.200012, 32.1000061, -120.700043)
o280.Parent = o279
o280.MeshId = "http://www.roblox.com/asset/?id=1080954"
o280.Scale = Vector3.new(3, 3, 8)
o280.VertexColor = Vector3.new(2, 2, 2)
o280.MeshType = Enum.MeshType.FileMesh
o281.Parent = o262
o282.Name = "Grass"
o282.Parent = o281
o282.BrickColor = BrickColor.new("Bright green")
o282.Position = Vector3.new(632.200012, 32.1000061, -128.700073)
o282.Rotation = Vector3.new(-90, 0, 90)
o282.Anchored = true
o282.CanCollide = false
o282.FormFactor = Enum.FormFactor.Plate
o282.Size = Vector3.new(1, 0.400000006, 1)
o282.CFrame = CFrame.new(632.200012, 32.1000061, -128.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o282.BottomSurface = Enum.SurfaceType.Smooth
o282.TopSurface = Enum.SurfaceType.Smooth
o282.Color = Color3.new(0.294118, 0.592157, 0.294118)
o282.Position = Vector3.new(632.200012, 32.1000061, -128.700073)
o283.Parent = o282
o283.MeshId = "http://www.roblox.com/asset/?id=1080954"
o283.Scale = Vector3.new(3, 3, 8)
o283.VertexColor = Vector3.new(2, 2, 2)
o283.MeshType = Enum.MeshType.FileMesh
o284.Name = "Grass"
o284.Parent = o281
o284.BrickColor = BrickColor.new("Bright green")
o284.Position = Vector3.new(632.200012, 32.1000061, -124.700058)
o284.Rotation = Vector3.new(-90, 0, 90)
o284.Anchored = true
o284.CanCollide = false
o284.FormFactor = Enum.FormFactor.Plate
o284.Size = Vector3.new(1, 0.400000006, 1)
o284.CFrame = CFrame.new(632.200012, 32.1000061, -124.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o284.BottomSurface = Enum.SurfaceType.Smooth
o284.TopSurface = Enum.SurfaceType.Smooth
o284.Color = Color3.new(0.294118, 0.592157, 0.294118)
o284.Position = Vector3.new(632.200012, 32.1000061, -124.700058)
o285.Parent = o284
o285.MeshId = "http://www.roblox.com/asset/?id=1080954"
o285.Scale = Vector3.new(3, 3, 8)
o285.VertexColor = Vector3.new(2, 2, 2)
o285.MeshType = Enum.MeshType.FileMesh
o286.Name = "Grass"
o286.Parent = o281
o286.BrickColor = BrickColor.new("Bright green")
o286.Position = Vector3.new(629.200012, 32.1000061, -128.700073)
o286.Rotation = Vector3.new(-90, 0, 90)
o286.Anchored = true
o286.CanCollide = false
o286.FormFactor = Enum.FormFactor.Plate
o286.Size = Vector3.new(1, 0.400000006, 1)
o286.CFrame = CFrame.new(629.200012, 32.1000061, -128.700073, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o286.BottomSurface = Enum.SurfaceType.Smooth
o286.TopSurface = Enum.SurfaceType.Smooth
o286.Color = Color3.new(0.294118, 0.592157, 0.294118)
o286.Position = Vector3.new(629.200012, 32.1000061, -128.700073)
o287.Parent = o286
o287.MeshId = "http://www.roblox.com/asset/?id=1080954"
o287.Scale = Vector3.new(3, 3, 8)
o287.VertexColor = Vector3.new(2, 2, 2)
o287.MeshType = Enum.MeshType.FileMesh
o288.Name = "Grass"
o288.Parent = o281
o288.BrickColor = BrickColor.new("Bright green")
o288.Position = Vector3.new(629.200012, 32.1000061, -124.700058)
o288.Rotation = Vector3.new(-90, 0, 90)
o288.Anchored = true
o288.CanCollide = false
o288.FormFactor = Enum.FormFactor.Plate
o288.Size = Vector3.new(1, 0.400000006, 1)
o288.CFrame = CFrame.new(629.200012, 32.1000061, -124.700058, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o288.BottomSurface = Enum.SurfaceType.Smooth
o288.TopSurface = Enum.SurfaceType.Smooth
o288.Color = Color3.new(0.294118, 0.592157, 0.294118)
o288.Position = Vector3.new(629.200012, 32.1000061, -124.700058)
o289.Parent = o288
o289.MeshId = "http://www.roblox.com/asset/?id=1080954"
o289.Scale = Vector3.new(3, 3, 8)
o289.VertexColor = Vector3.new(2, 2, 2)
o289.MeshType = Enum.MeshType.FileMesh
o290.Parent = o1
o291.Parent = o290
o292.Name = "Grass"
o292.Parent = o291
o292.BrickColor = BrickColor.new("Bright green")
o292.Position = Vector3.new(777.599915, 32.1000061, 40.8999367)
o292.Rotation = Vector3.new(-90, 0, 90)
o292.Anchored = true
o292.CanCollide = false
o292.FormFactor = Enum.FormFactor.Plate
o292.Size = Vector3.new(1, 0.400000006, 1)
o292.CFrame = CFrame.new(777.599915, 32.1000061, 40.8999367, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o292.BottomSurface = Enum.SurfaceType.Smooth
o292.TopSurface = Enum.SurfaceType.Smooth
o292.Color = Color3.new(0.294118, 0.592157, 0.294118)
o292.Position = Vector3.new(777.599915, 32.1000061, 40.8999367)
o293.Parent = o292
o293.MeshId = "http://www.roblox.com/asset/?id=1080954"
o293.Scale = Vector3.new(3, 3, 8)
o293.VertexColor = Vector3.new(2, 2, 2)
o293.MeshType = Enum.MeshType.FileMesh
o294.Name = "Grass"
o294.Parent = o291
o294.BrickColor = BrickColor.new("Bright green")
o294.Position = Vector3.new(785.599976, 32.1000061, 42.8999443)
o294.Rotation = Vector3.new(-90, 0, 90)
o294.Anchored = true
o294.CanCollide = false
o294.FormFactor = Enum.FormFactor.Plate
o294.Size = Vector3.new(1, 0.400000006, 1)
o294.CFrame = CFrame.new(785.599976, 32.1000061, 42.8999443, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o294.BottomSurface = Enum.SurfaceType.Smooth
o294.TopSurface = Enum.SurfaceType.Smooth
o294.Color = Color3.new(0.294118, 0.592157, 0.294118)
o294.Position = Vector3.new(785.599976, 32.1000061, 42.8999443)
o295.Parent = o294
o295.MeshId = "http://www.roblox.com/asset/?id=1080954"
o295.Scale = Vector3.new(3, 3, 8)
o295.VertexColor = Vector3.new(2, 2, 2)
o295.MeshType = Enum.MeshType.FileMesh
o296.Name = "Grass"
o296.Parent = o291
o296.BrickColor = BrickColor.new("Bright green")
o296.Position = Vector3.new(780.599976, 32.1000061, 40.8999367)
o296.Rotation = Vector3.new(-90, 0, 90)
o296.Anchored = true
o296.CanCollide = false
o296.FormFactor = Enum.FormFactor.Plate
o296.Size = Vector3.new(1, 0.400000006, 1)
o296.CFrame = CFrame.new(780.599976, 32.1000061, 40.8999367, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o296.BottomSurface = Enum.SurfaceType.Smooth
o296.TopSurface = Enum.SurfaceType.Smooth
o296.Color = Color3.new(0.294118, 0.592157, 0.294118)
o296.Position = Vector3.new(780.599976, 32.1000061, 40.8999367)
o297.Parent = o296
o297.MeshId = "http://www.roblox.com/asset/?id=1080954"
o297.Scale = Vector3.new(3, 3, 8)
o297.VertexColor = Vector3.new(2, 2, 2)
o297.MeshType = Enum.MeshType.FileMesh
o298.Name = "Grass"
o298.Parent = o291
o298.BrickColor = BrickColor.new("Bright green")
o298.Position = Vector3.new(778.599976, 32.1000061, 44.8999672)
o298.Rotation = Vector3.new(-90, 0, 90)
o298.Anchored = true
o298.CanCollide = false
o298.FormFactor = Enum.FormFactor.Plate
o298.Size = Vector3.new(1, 0.400000006, 1)
o298.CFrame = CFrame.new(778.599976, 32.1000061, 44.8999672, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o298.BottomSurface = Enum.SurfaceType.Smooth
o298.TopSurface = Enum.SurfaceType.Smooth
o298.Color = Color3.new(0.294118, 0.592157, 0.294118)
o298.Position = Vector3.new(778.599976, 32.1000061, 44.8999672)
o299.Parent = o298
o299.MeshId = "http://www.roblox.com/asset/?id=1080954"
o299.Scale = Vector3.new(3, 3, 8)
o299.VertexColor = Vector3.new(2, 2, 2)
o299.MeshType = Enum.MeshType.FileMesh
o300.Parent = o290
o301.Name = "Grass"
o301.Parent = o300
o301.BrickColor = BrickColor.new("Bright green")
o301.Position = Vector3.new(785.599976, 32.1000061, 44.8999672)
o301.Rotation = Vector3.new(-90, 0, 90)
o301.Anchored = true
o301.CanCollide = false
o301.FormFactor = Enum.FormFactor.Plate
o301.Size = Vector3.new(1, 0.400000006, 1)
o301.CFrame = CFrame.new(785.599976, 32.1000061, 44.8999672, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o301.BottomSurface = Enum.SurfaceType.Smooth
o301.TopSurface = Enum.SurfaceType.Smooth
o301.Color = Color3.new(0.294118, 0.592157, 0.294118)
o301.Position = Vector3.new(785.599976, 32.1000061, 44.8999672)
o302.Parent = o301
o302.MeshId = "http://www.roblox.com/asset/?id=1080954"
o302.Scale = Vector3.new(3, 3, 8)
o302.VertexColor = Vector3.new(2, 2, 2)
o302.MeshType = Enum.MeshType.FileMesh
o303.Name = "Grass"
o303.Parent = o300
o303.BrickColor = BrickColor.new("Bright green")
o303.Position = Vector3.new(783.599976, 32.1000061, 48.8999825)
o303.Rotation = Vector3.new(-90, 0, 90)
o303.Anchored = true
o303.CanCollide = false
o303.FormFactor = Enum.FormFactor.Plate
o303.Size = Vector3.new(1, 0.400000006, 1)
o303.CFrame = CFrame.new(783.599976, 32.1000061, 48.8999825, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o303.BottomSurface = Enum.SurfaceType.Smooth
o303.TopSurface = Enum.SurfaceType.Smooth
o303.Color = Color3.new(0.294118, 0.592157, 0.294118)
o303.Position = Vector3.new(783.599976, 32.1000061, 48.8999825)
o304.Parent = o303
o304.MeshId = "http://www.roblox.com/asset/?id=1080954"
o304.Scale = Vector3.new(3, 3, 8)
o304.VertexColor = Vector3.new(2, 2, 2)
o304.MeshType = Enum.MeshType.FileMesh
o305.Name = "Grass"
o305.Parent = o300
o305.BrickColor = BrickColor.new("Bright green")
o305.Position = Vector3.new(785.599976, 32.1000061, 49.8999748)
o305.Rotation = Vector3.new(-90, 0, 90)
o305.Anchored = true
o305.CanCollide = false
o305.FormFactor = Enum.FormFactor.Plate
o305.Size = Vector3.new(1, 0.400000006, 1)
o305.CFrame = CFrame.new(785.599976, 32.1000061, 49.8999748, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o305.BottomSurface = Enum.SurfaceType.Smooth
o305.TopSurface = Enum.SurfaceType.Smooth
o305.Color = Color3.new(0.294118, 0.592157, 0.294118)
o305.Position = Vector3.new(785.599976, 32.1000061, 49.8999748)
o306.Parent = o305
o306.MeshId = "http://www.roblox.com/asset/?id=1080954"
o306.Scale = Vector3.new(3, 3, 8)
o306.VertexColor = Vector3.new(2, 2, 2)
o306.MeshType = Enum.MeshType.FileMesh
o307.Name = "Grass"
o307.Parent = o300
o307.BrickColor = BrickColor.new("Bright green")
o307.Position = Vector3.new(781.599976, 32.1000061, 50.8999748)
o307.Rotation = Vector3.new(-90, 0, 90)
o307.Anchored = true
o307.CanCollide = false
o307.FormFactor = Enum.FormFactor.Plate
o307.Size = Vector3.new(1, 0.400000006, 1)
o307.CFrame = CFrame.new(781.599976, 32.1000061, 50.8999748, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o307.BottomSurface = Enum.SurfaceType.Smooth
o307.TopSurface = Enum.SurfaceType.Smooth
o307.Color = Color3.new(0.294118, 0.592157, 0.294118)
o307.Position = Vector3.new(781.599976, 32.1000061, 50.8999748)
o308.Parent = o307
o308.MeshId = "http://www.roblox.com/asset/?id=1080954"
o308.Scale = Vector3.new(3, 3, 8)
o308.VertexColor = Vector3.new(2, 2, 2)
o308.MeshType = Enum.MeshType.FileMesh
o309.Parent = o290
o310.Name = "Grass"
o310.Parent = o309
o310.BrickColor = BrickColor.new("Bright green")
o310.Position = Vector3.new(782.599976, 32.1000061, 42.8999443)
o310.Rotation = Vector3.new(-90, 0, 90)
o310.Anchored = true
o310.CanCollide = false
o310.FormFactor = Enum.FormFactor.Plate
o310.Size = Vector3.new(1, 0.400000006, 1)
o310.CFrame = CFrame.new(782.599976, 32.1000061, 42.8999443, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o310.BottomSurface = Enum.SurfaceType.Smooth
o310.TopSurface = Enum.SurfaceType.Smooth
o310.Color = Color3.new(0.294118, 0.592157, 0.294118)
o310.Position = Vector3.new(782.599976, 32.1000061, 42.8999443)
o311.Parent = o310
o311.MeshId = "http://www.roblox.com/asset/?id=1080954"
o311.Scale = Vector3.new(3, 3, 8)
o311.VertexColor = Vector3.new(2, 2, 2)
o311.MeshType = Enum.MeshType.FileMesh
o312.Name = "Grass"
o312.Parent = o309
o312.BrickColor = BrickColor.new("Bright green")
o312.Position = Vector3.new(782.599976, 32.1000061, 46.8999672)
o312.Rotation = Vector3.new(-90, 0, 90)
o312.Anchored = true
o312.CanCollide = false
o312.FormFactor = Enum.FormFactor.Plate
o312.Size = Vector3.new(1, 0.400000006, 1)
o312.CFrame = CFrame.new(782.599976, 32.1000061, 46.8999672, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o312.BottomSurface = Enum.SurfaceType.Smooth
o312.TopSurface = Enum.SurfaceType.Smooth
o312.Color = Color3.new(0.294118, 0.592157, 0.294118)
o312.Position = Vector3.new(782.599976, 32.1000061, 46.8999672)
o313.Parent = o312
o313.MeshId = "http://www.roblox.com/asset/?id=1080954"
o313.Scale = Vector3.new(3, 3, 8)
o313.VertexColor = Vector3.new(2, 2, 2)
o313.MeshType = Enum.MeshType.FileMesh
o314.Name = "Grass"
o314.Parent = o309
o314.BrickColor = BrickColor.new("Bright green")
o314.Position = Vector3.new(779.599976, 32.1000061, 42.8999443)
o314.Rotation = Vector3.new(-90, 0, 90)
o314.Anchored = true
o314.CanCollide = false
o314.FormFactor = Enum.FormFactor.Plate
o314.Size = Vector3.new(1, 0.400000006, 1)
o314.CFrame = CFrame.new(779.599976, 32.1000061, 42.8999443, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o314.BottomSurface = Enum.SurfaceType.Smooth
o314.TopSurface = Enum.SurfaceType.Smooth
o314.Color = Color3.new(0.294118, 0.592157, 0.294118)
o314.Position = Vector3.new(779.599976, 32.1000061, 42.8999443)
o315.Parent = o314
o315.MeshId = "http://www.roblox.com/asset/?id=1080954"
o315.Scale = Vector3.new(3, 3, 8)
o315.VertexColor = Vector3.new(2, 2, 2)
o315.MeshType = Enum.MeshType.FileMesh
o316.Name = "Grass"
o316.Parent = o309
o316.BrickColor = BrickColor.new("Bright green")
o316.Position = Vector3.new(779.599976, 32.1000061, 46.8999672)
o316.Rotation = Vector3.new(-90, 0, 90)
o316.Anchored = true
o316.CanCollide = false
o316.FormFactor = Enum.FormFactor.Plate
o316.Size = Vector3.new(1, 0.400000006, 1)
o316.CFrame = CFrame.new(779.599976, 32.1000061, 46.8999672, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o316.BottomSurface = Enum.SurfaceType.Smooth
o316.TopSurface = Enum.SurfaceType.Smooth
o316.Color = Color3.new(0.294118, 0.592157, 0.294118)
o316.Position = Vector3.new(779.599976, 32.1000061, 46.8999672)
o317.Parent = o316
o317.MeshId = "http://www.roblox.com/asset/?id=1080954"
o317.Scale = Vector3.new(3, 3, 8)
o317.VertexColor = Vector3.new(2, 2, 2)
o317.MeshType = Enum.MeshType.FileMesh
o318.Parent = o1
o319.Parent = o318
o320.Name = "Grass"
o320.Parent = o319
o320.BrickColor = BrickColor.new("Bright green")
o320.Position = Vector3.new(691.599915, 32.1000061, 124.499916)
o320.Rotation = Vector3.new(-90, 0, 90)
o320.Anchored = true
o320.CanCollide = false
o320.FormFactor = Enum.FormFactor.Plate
o320.Size = Vector3.new(1, 0.400000006, 1)
o320.CFrame = CFrame.new(691.599915, 32.1000061, 124.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o320.BottomSurface = Enum.SurfaceType.Smooth
o320.TopSurface = Enum.SurfaceType.Smooth
o320.Color = Color3.new(0.294118, 0.592157, 0.294118)
o320.Position = Vector3.new(691.599915, 32.1000061, 124.499916)
o321.Parent = o320
o321.MeshId = "http://www.roblox.com/asset/?id=1080954"
o321.Scale = Vector3.new(3, 3, 8)
o321.VertexColor = Vector3.new(2, 2, 2)
o321.MeshType = Enum.MeshType.FileMesh
o322.Name = "Grass"
o322.Parent = o319
o322.BrickColor = BrickColor.new("Bright green")
o322.Position = Vector3.new(699.599976, 32.1000061, 126.499916)
o322.Rotation = Vector3.new(-90, 0, 90)
o322.Anchored = true
o322.CanCollide = false
o322.FormFactor = Enum.FormFactor.Plate
o322.Size = Vector3.new(1, 0.400000006, 1)
o322.CFrame = CFrame.new(699.599976, 32.1000061, 126.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o322.BottomSurface = Enum.SurfaceType.Smooth
o322.TopSurface = Enum.SurfaceType.Smooth
o322.Color = Color3.new(0.294118, 0.592157, 0.294118)
o322.Position = Vector3.new(699.599976, 32.1000061, 126.499916)
o323.Parent = o322
o323.MeshId = "http://www.roblox.com/asset/?id=1080954"
o323.Scale = Vector3.new(3, 3, 8)
o323.VertexColor = Vector3.new(2, 2, 2)
o323.MeshType = Enum.MeshType.FileMesh
o324.Name = "Grass"
o324.Parent = o319
o324.BrickColor = BrickColor.new("Bright green")
o324.Position = Vector3.new(694.599976, 32.1000061, 124.499916)
o324.Rotation = Vector3.new(-90, 0, 90)
o324.Anchored = true
o324.CanCollide = false
o324.FormFactor = Enum.FormFactor.Plate
o324.Size = Vector3.new(1, 0.400000006, 1)
o324.CFrame = CFrame.new(694.599976, 32.1000061, 124.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o324.BottomSurface = Enum.SurfaceType.Smooth
o324.TopSurface = Enum.SurfaceType.Smooth
o324.Color = Color3.new(0.294118, 0.592157, 0.294118)
o324.Position = Vector3.new(694.599976, 32.1000061, 124.499916)
o325.Parent = o324
o325.MeshId = "http://www.roblox.com/asset/?id=1080954"
o325.Scale = Vector3.new(3, 3, 8)
o325.VertexColor = Vector3.new(2, 2, 2)
o325.MeshType = Enum.MeshType.FileMesh
o326.Name = "Grass"
o326.Parent = o319
o326.BrickColor = BrickColor.new("Bright green")
o326.Position = Vector3.new(692.599976, 32.1000061, 128.499954)
o326.Rotation = Vector3.new(-90, 0, 90)
o326.Anchored = true
o326.CanCollide = false
o326.FormFactor = Enum.FormFactor.Plate
o326.Size = Vector3.new(1, 0.400000006, 1)
o326.CFrame = CFrame.new(692.599976, 32.1000061, 128.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o326.BottomSurface = Enum.SurfaceType.Smooth
o326.TopSurface = Enum.SurfaceType.Smooth
o326.Color = Color3.new(0.294118, 0.592157, 0.294118)
o326.Position = Vector3.new(692.599976, 32.1000061, 128.499954)
o327.Parent = o326
o327.MeshId = "http://www.roblox.com/asset/?id=1080954"
o327.Scale = Vector3.new(3, 3, 8)
o327.VertexColor = Vector3.new(2, 2, 2)
o327.MeshType = Enum.MeshType.FileMesh
o328.Parent = o318
o329.Name = "Grass"
o329.Parent = o328
o329.BrickColor = BrickColor.new("Bright green")
o329.Position = Vector3.new(699.599976, 32.1000061, 128.499954)
o329.Rotation = Vector3.new(-90, 0, 90)
o329.Anchored = true
o329.CanCollide = false
o329.FormFactor = Enum.FormFactor.Plate
o329.Size = Vector3.new(1, 0.400000006, 1)
o329.CFrame = CFrame.new(699.599976, 32.1000061, 128.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o329.BottomSurface = Enum.SurfaceType.Smooth
o329.TopSurface = Enum.SurfaceType.Smooth
o329.Color = Color3.new(0.294118, 0.592157, 0.294118)
o329.Position = Vector3.new(699.599976, 32.1000061, 128.499954)
o330.Parent = o329
o330.MeshId = "http://www.roblox.com/asset/?id=1080954"
o330.Scale = Vector3.new(3, 3, 8)
o330.VertexColor = Vector3.new(2, 2, 2)
o330.MeshType = Enum.MeshType.FileMesh
o331.Name = "Grass"
o331.Parent = o328
o331.BrickColor = BrickColor.new("Bright green")
o331.Position = Vector3.new(697.599976, 32.1000061, 132.499969)
o331.Rotation = Vector3.new(-90, 0, 90)
o331.Anchored = true
o331.CanCollide = false
o331.FormFactor = Enum.FormFactor.Plate
o331.Size = Vector3.new(1, 0.400000006, 1)
o331.CFrame = CFrame.new(697.599976, 32.1000061, 132.499969, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o331.BottomSurface = Enum.SurfaceType.Smooth
o331.TopSurface = Enum.SurfaceType.Smooth
o331.Color = Color3.new(0.294118, 0.592157, 0.294118)
o331.Position = Vector3.new(697.599976, 32.1000061, 132.499969)
o332.Parent = o331
o332.MeshId = "http://www.roblox.com/asset/?id=1080954"
o332.Scale = Vector3.new(3, 3, 8)
o332.VertexColor = Vector3.new(2, 2, 2)
o332.MeshType = Enum.MeshType.FileMesh
o333.Name = "Grass"
o333.Parent = o328
o333.BrickColor = BrickColor.new("Bright green")
o333.Position = Vector3.new(699.599976, 32.1000061, 133.499954)
o333.Rotation = Vector3.new(-90, 0, 90)
o333.Anchored = true
o333.CanCollide = false
o333.FormFactor = Enum.FormFactor.Plate
o333.Size = Vector3.new(1, 0.400000006, 1)
o333.CFrame = CFrame.new(699.599976, 32.1000061, 133.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o333.BottomSurface = Enum.SurfaceType.Smooth
o333.TopSurface = Enum.SurfaceType.Smooth
o333.Color = Color3.new(0.294118, 0.592157, 0.294118)
o333.Position = Vector3.new(699.599976, 32.1000061, 133.499954)
o334.Parent = o333
o334.MeshId = "http://www.roblox.com/asset/?id=1080954"
o334.Scale = Vector3.new(3, 3, 8)
o334.VertexColor = Vector3.new(2, 2, 2)
o334.MeshType = Enum.MeshType.FileMesh
o335.Name = "Grass"
o335.Parent = o328
o335.BrickColor = BrickColor.new("Bright green")
o335.Position = Vector3.new(695.599976, 32.1000061, 134.499954)
o335.Rotation = Vector3.new(-90, 0, 90)
o335.Anchored = true
o335.CanCollide = false
o335.FormFactor = Enum.FormFactor.Plate
o335.Size = Vector3.new(1, 0.400000006, 1)
o335.CFrame = CFrame.new(695.599976, 32.1000061, 134.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o335.BottomSurface = Enum.SurfaceType.Smooth
o335.TopSurface = Enum.SurfaceType.Smooth
o335.Color = Color3.new(0.294118, 0.592157, 0.294118)
o335.Position = Vector3.new(695.599976, 32.1000061, 134.499954)
o336.Parent = o335
o336.MeshId = "http://www.roblox.com/asset/?id=1080954"
o336.Scale = Vector3.new(3, 3, 8)
o336.VertexColor = Vector3.new(2, 2, 2)
o336.MeshType = Enum.MeshType.FileMesh
o337.Parent = o318
o338.Name = "Grass"
o338.Parent = o337
o338.BrickColor = BrickColor.new("Bright green")
o338.Position = Vector3.new(696.599976, 32.1000061, 126.499916)
o338.Rotation = Vector3.new(-90, 0, 90)
o338.Anchored = true
o338.CanCollide = false
o338.FormFactor = Enum.FormFactor.Plate
o338.Size = Vector3.new(1, 0.400000006, 1)
o338.CFrame = CFrame.new(696.599976, 32.1000061, 126.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o338.BottomSurface = Enum.SurfaceType.Smooth
o338.TopSurface = Enum.SurfaceType.Smooth
o338.Color = Color3.new(0.294118, 0.592157, 0.294118)
o338.Position = Vector3.new(696.599976, 32.1000061, 126.499916)
o339.Parent = o338
o339.MeshId = "http://www.roblox.com/asset/?id=1080954"
o339.Scale = Vector3.new(3, 3, 8)
o339.VertexColor = Vector3.new(2, 2, 2)
o339.MeshType = Enum.MeshType.FileMesh
o340.Name = "Grass"
o340.Parent = o337
o340.BrickColor = BrickColor.new("Bright green")
o340.Position = Vector3.new(696.599976, 32.1000061, 130.499939)
o340.Rotation = Vector3.new(-90, 0, 90)
o340.Anchored = true
o340.CanCollide = false
o340.FormFactor = Enum.FormFactor.Plate
o340.Size = Vector3.new(1, 0.400000006, 1)
o340.CFrame = CFrame.new(696.599976, 32.1000061, 130.499939, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o340.BottomSurface = Enum.SurfaceType.Smooth
o340.TopSurface = Enum.SurfaceType.Smooth
o340.Color = Color3.new(0.294118, 0.592157, 0.294118)
o340.Position = Vector3.new(696.599976, 32.1000061, 130.499939)
o341.Parent = o340
o341.MeshId = "http://www.roblox.com/asset/?id=1080954"
o341.Scale = Vector3.new(3, 3, 8)
o341.VertexColor = Vector3.new(2, 2, 2)
o341.MeshType = Enum.MeshType.FileMesh
o342.Name = "Grass"
o342.Parent = o337
o342.BrickColor = BrickColor.new("Bright green")
o342.Position = Vector3.new(693.599976, 32.1000061, 126.499916)
o342.Rotation = Vector3.new(-90, 0, 90)
o342.Anchored = true
o342.CanCollide = false
o342.FormFactor = Enum.FormFactor.Plate
o342.Size = Vector3.new(1, 0.400000006, 1)
o342.CFrame = CFrame.new(693.599976, 32.1000061, 126.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o342.BottomSurface = Enum.SurfaceType.Smooth
o342.TopSurface = Enum.SurfaceType.Smooth
o342.Color = Color3.new(0.294118, 0.592157, 0.294118)
o342.Position = Vector3.new(693.599976, 32.1000061, 126.499916)
o343.Parent = o342
o343.MeshId = "http://www.roblox.com/asset/?id=1080954"
o343.Scale = Vector3.new(3, 3, 8)
o343.VertexColor = Vector3.new(2, 2, 2)
o343.MeshType = Enum.MeshType.FileMesh
o344.Name = "Grass"
o344.Parent = o337
o344.BrickColor = BrickColor.new("Bright green")
o344.Position = Vector3.new(693.599976, 32.1000061, 130.499939)
o344.Rotation = Vector3.new(-90, 0, 90)
o344.Anchored = true
o344.CanCollide = false
o344.FormFactor = Enum.FormFactor.Plate
o344.Size = Vector3.new(1, 0.400000006, 1)
o344.CFrame = CFrame.new(693.599976, 32.1000061, 130.499939, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o344.BottomSurface = Enum.SurfaceType.Smooth
o344.TopSurface = Enum.SurfaceType.Smooth
o344.Color = Color3.new(0.294118, 0.592157, 0.294118)
o344.Position = Vector3.new(693.599976, 32.1000061, 130.499939)
o345.Parent = o344
o345.MeshId = "http://www.roblox.com/asset/?id=1080954"
o345.Scale = Vector3.new(3, 3, 8)
o345.VertexColor = Vector3.new(2, 2, 2)
o345.MeshType = Enum.MeshType.FileMesh
o346.Parent = o1
o347.Parent = o346
o348.Name = "Grass"
o348.Parent = o347
o348.BrickColor = BrickColor.new("Bright green")
o348.Position = Vector3.new(691.599915, 32.1000061, 124.499916)
o348.Rotation = Vector3.new(-90, 0, 90)
o348.Anchored = true
o348.CanCollide = false
o348.FormFactor = Enum.FormFactor.Plate
o348.Size = Vector3.new(1, 0.400000006, 1)
o348.CFrame = CFrame.new(691.599915, 32.1000061, 124.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o348.BottomSurface = Enum.SurfaceType.Smooth
o348.TopSurface = Enum.SurfaceType.Smooth
o348.Color = Color3.new(0.294118, 0.592157, 0.294118)
o348.Position = Vector3.new(691.599915, 32.1000061, 124.499916)
o349.Parent = o348
o349.MeshId = "http://www.roblox.com/asset/?id=1080954"
o349.Scale = Vector3.new(3, 3, 8)
o349.VertexColor = Vector3.new(2, 2, 2)
o349.MeshType = Enum.MeshType.FileMesh
o350.Name = "Grass"
o350.Parent = o347
o350.BrickColor = BrickColor.new("Bright green")
o350.Position = Vector3.new(699.599976, 32.1000061, 126.499916)
o350.Rotation = Vector3.new(-90, 0, 90)
o350.Anchored = true
o350.CanCollide = false
o350.FormFactor = Enum.FormFactor.Plate
o350.Size = Vector3.new(1, 0.400000006, 1)
o350.CFrame = CFrame.new(699.599976, 32.1000061, 126.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o350.BottomSurface = Enum.SurfaceType.Smooth
o350.TopSurface = Enum.SurfaceType.Smooth
o350.Color = Color3.new(0.294118, 0.592157, 0.294118)
o350.Position = Vector3.new(699.599976, 32.1000061, 126.499916)
o351.Parent = o350
o351.MeshId = "http://www.roblox.com/asset/?id=1080954"
o351.Scale = Vector3.new(3, 3, 8)
o351.VertexColor = Vector3.new(2, 2, 2)
o351.MeshType = Enum.MeshType.FileMesh
o352.Name = "Grass"
o352.Parent = o347
o352.BrickColor = BrickColor.new("Bright green")
o352.Position = Vector3.new(694.599976, 32.1000061, 124.499916)
o352.Rotation = Vector3.new(-90, 0, 90)
o352.Anchored = true
o352.CanCollide = false
o352.FormFactor = Enum.FormFactor.Plate
o352.Size = Vector3.new(1, 0.400000006, 1)
o352.CFrame = CFrame.new(694.599976, 32.1000061, 124.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o352.BottomSurface = Enum.SurfaceType.Smooth
o352.TopSurface = Enum.SurfaceType.Smooth
o352.Color = Color3.new(0.294118, 0.592157, 0.294118)
o352.Position = Vector3.new(694.599976, 32.1000061, 124.499916)
o353.Parent = o352
o353.MeshId = "http://www.roblox.com/asset/?id=1080954"
o353.Scale = Vector3.new(3, 3, 8)
o353.VertexColor = Vector3.new(2, 2, 2)
o353.MeshType = Enum.MeshType.FileMesh
o354.Name = "Grass"
o354.Parent = o347
o354.BrickColor = BrickColor.new("Bright green")
o354.Position = Vector3.new(692.599976, 32.1000061, 128.499954)
o354.Rotation = Vector3.new(-90, 0, 90)
o354.Anchored = true
o354.CanCollide = false
o354.FormFactor = Enum.FormFactor.Plate
o354.Size = Vector3.new(1, 0.400000006, 1)
o354.CFrame = CFrame.new(692.599976, 32.1000061, 128.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o354.BottomSurface = Enum.SurfaceType.Smooth
o354.TopSurface = Enum.SurfaceType.Smooth
o354.Color = Color3.new(0.294118, 0.592157, 0.294118)
o354.Position = Vector3.new(692.599976, 32.1000061, 128.499954)
o355.Parent = o354
o355.MeshId = "http://www.roblox.com/asset/?id=1080954"
o355.Scale = Vector3.new(3, 3, 8)
o355.VertexColor = Vector3.new(2, 2, 2)
o355.MeshType = Enum.MeshType.FileMesh
o356.Parent = o346
o357.Name = "Grass"
o357.Parent = o356
o357.BrickColor = BrickColor.new("Bright green")
o357.Position = Vector3.new(699.599976, 32.1000061, 128.499954)
o357.Rotation = Vector3.new(-90, 0, 90)
o357.Anchored = true
o357.CanCollide = false
o357.FormFactor = Enum.FormFactor.Plate
o357.Size = Vector3.new(1, 0.400000006, 1)
o357.CFrame = CFrame.new(699.599976, 32.1000061, 128.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o357.BottomSurface = Enum.SurfaceType.Smooth
o357.TopSurface = Enum.SurfaceType.Smooth
o357.Color = Color3.new(0.294118, 0.592157, 0.294118)
o357.Position = Vector3.new(699.599976, 32.1000061, 128.499954)
o358.Parent = o357
o358.MeshId = "http://www.roblox.com/asset/?id=1080954"
o358.Scale = Vector3.new(3, 3, 8)
o358.VertexColor = Vector3.new(2, 2, 2)
o358.MeshType = Enum.MeshType.FileMesh
o359.Name = "Grass"
o359.Parent = o356
o359.BrickColor = BrickColor.new("Bright green")
o359.Position = Vector3.new(697.599976, 32.1000061, 132.499969)
o359.Rotation = Vector3.new(-90, 0, 90)
o359.Anchored = true
o359.CanCollide = false
o359.FormFactor = Enum.FormFactor.Plate
o359.Size = Vector3.new(1, 0.400000006, 1)
o359.CFrame = CFrame.new(697.599976, 32.1000061, 132.499969, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o359.BottomSurface = Enum.SurfaceType.Smooth
o359.TopSurface = Enum.SurfaceType.Smooth
o359.Color = Color3.new(0.294118, 0.592157, 0.294118)
o359.Position = Vector3.new(697.599976, 32.1000061, 132.499969)
o360.Parent = o359
o360.MeshId = "http://www.roblox.com/asset/?id=1080954"
o360.Scale = Vector3.new(3, 3, 8)
o360.VertexColor = Vector3.new(2, 2, 2)
o360.MeshType = Enum.MeshType.FileMesh
o361.Name = "Grass"
o361.Parent = o356
o361.BrickColor = BrickColor.new("Bright green")
o361.Position = Vector3.new(699.599976, 32.1000061, 133.499954)
o361.Rotation = Vector3.new(-90, 0, 90)
o361.Anchored = true
o361.CanCollide = false
o361.FormFactor = Enum.FormFactor.Plate
o361.Size = Vector3.new(1, 0.400000006, 1)
o361.CFrame = CFrame.new(699.599976, 32.1000061, 133.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o361.BottomSurface = Enum.SurfaceType.Smooth
o361.TopSurface = Enum.SurfaceType.Smooth
o361.Color = Color3.new(0.294118, 0.592157, 0.294118)
o361.Position = Vector3.new(699.599976, 32.1000061, 133.499954)
o362.Parent = o361
o362.MeshId = "http://www.roblox.com/asset/?id=1080954"
o362.Scale = Vector3.new(3, 3, 8)
o362.VertexColor = Vector3.new(2, 2, 2)
o362.MeshType = Enum.MeshType.FileMesh
o363.Name = "Grass"
o363.Parent = o356
o363.BrickColor = BrickColor.new("Bright green")
o363.Position = Vector3.new(695.599976, 32.1000061, 134.499954)
o363.Rotation = Vector3.new(-90, 0, 90)
o363.Anchored = true
o363.CanCollide = false
o363.FormFactor = Enum.FormFactor.Plate
o363.Size = Vector3.new(1, 0.400000006, 1)
o363.CFrame = CFrame.new(695.599976, 32.1000061, 134.499954, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o363.BottomSurface = Enum.SurfaceType.Smooth
o363.TopSurface = Enum.SurfaceType.Smooth
o363.Color = Color3.new(0.294118, 0.592157, 0.294118)
o363.Position = Vector3.new(695.599976, 32.1000061, 134.499954)
o364.Parent = o363
o364.MeshId = "http://www.roblox.com/asset/?id=1080954"
o364.Scale = Vector3.new(3, 3, 8)
o364.VertexColor = Vector3.new(2, 2, 2)
o364.MeshType = Enum.MeshType.FileMesh
o365.Parent = o346
o366.Name = "Grass"
o366.Parent = o365
o366.BrickColor = BrickColor.new("Bright green")
o366.Position = Vector3.new(696.599976, 32.1000061, 126.499916)
o366.Rotation = Vector3.new(-90, 0, 90)
o366.Anchored = true
o366.CanCollide = false
o366.FormFactor = Enum.FormFactor.Plate
o366.Size = Vector3.new(1, 0.400000006, 1)
o366.CFrame = CFrame.new(696.599976, 32.1000061, 126.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o366.BottomSurface = Enum.SurfaceType.Smooth
o366.TopSurface = Enum.SurfaceType.Smooth
o366.Color = Color3.new(0.294118, 0.592157, 0.294118)
o366.Position = Vector3.new(696.599976, 32.1000061, 126.499916)
o367.Parent = o366
o367.MeshId = "http://www.roblox.com/asset/?id=1080954"
o367.Scale = Vector3.new(3, 3, 8)
o367.VertexColor = Vector3.new(2, 2, 2)
o367.MeshType = Enum.MeshType.FileMesh
o368.Name = "Grass"
o368.Parent = o365
o368.BrickColor = BrickColor.new("Bright green")
o368.Position = Vector3.new(696.599976, 32.1000061, 130.499939)
o368.Rotation = Vector3.new(-90, 0, 90)
o368.Anchored = true
o368.CanCollide = false
o368.FormFactor = Enum.FormFactor.Plate
o368.Size = Vector3.new(1, 0.400000006, 1)
o368.CFrame = CFrame.new(696.599976, 32.1000061, 130.499939, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o368.BottomSurface = Enum.SurfaceType.Smooth
o368.TopSurface = Enum.SurfaceType.Smooth
o368.Color = Color3.new(0.294118, 0.592157, 0.294118)
o368.Position = Vector3.new(696.599976, 32.1000061, 130.499939)
o369.Parent = o368
o369.MeshId = "http://www.roblox.com/asset/?id=1080954"
o369.Scale = Vector3.new(3, 3, 8)
o369.VertexColor = Vector3.new(2, 2, 2)
o369.MeshType = Enum.MeshType.FileMesh
o370.Name = "Grass"
o370.Parent = o365
o370.BrickColor = BrickColor.new("Bright green")
o370.Position = Vector3.new(693.599976, 32.1000061, 126.499916)
o370.Rotation = Vector3.new(-90, 0, 90)
o370.Anchored = true
o370.CanCollide = false
o370.FormFactor = Enum.FormFactor.Plate
o370.Size = Vector3.new(1, 0.400000006, 1)
o370.CFrame = CFrame.new(693.599976, 32.1000061, 126.499916, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o370.BottomSurface = Enum.SurfaceType.Smooth
o370.TopSurface = Enum.SurfaceType.Smooth
o370.Color = Color3.new(0.294118, 0.592157, 0.294118)
o370.Position = Vector3.new(693.599976, 32.1000061, 126.499916)
o371.Parent = o370
o371.MeshId = "http://www.roblox.com/asset/?id=1080954"
o371.Scale = Vector3.new(3, 3, 8)
o371.VertexColor = Vector3.new(2, 2, 2)
o371.MeshType = Enum.MeshType.FileMesh
o372.Name = "Grass"
o372.Parent = o365
o372.BrickColor = BrickColor.new("Bright green")
o372.Position = Vector3.new(693.599976, 32.1000061, 130.499939)
o372.Rotation = Vector3.new(-90, 0, 90)
o372.Anchored = true
o372.CanCollide = false
o372.FormFactor = Enum.FormFactor.Plate
o372.Size = Vector3.new(1, 0.400000006, 1)
o372.CFrame = CFrame.new(693.599976, 32.1000061, 130.499939, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o372.BottomSurface = Enum.SurfaceType.Smooth
o372.TopSurface = Enum.SurfaceType.Smooth
o372.Color = Color3.new(0.294118, 0.592157, 0.294118)
o372.Position = Vector3.new(693.599976, 32.1000061, 130.499939)
o373.Parent = o372
o373.MeshId = "http://www.roblox.com/asset/?id=1080954"
o373.Scale = Vector3.new(3, 3, 8)
o373.VertexColor = Vector3.new(2, 2, 2)
o373.MeshType = Enum.MeshType.FileMesh
o374.Name = "1"
o374.Parent = o1
o374.Transparency = 1
o374.Position = Vector3.new(430.000061, 37.0000191, -59.8000031)
o374.Rotation = Vector3.new(-180, 0, -180)
o374.Anchored = true
o374.CanCollide = false
o374.Size = Vector3.new(6, 1.20000005, 6)
o374.CFrame = CFrame.new(430.000061, 37.0000191, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o374.BackSurface = Enum.SurfaceType.Weld
o374.BottomSurface = Enum.SurfaceType.Weld
o374.FrontSurface = Enum.SurfaceType.Weld
o374.LeftSurface = Enum.SurfaceType.Weld
o374.RightSurface = Enum.SurfaceType.Weld
o374.TopSurface = Enum.SurfaceType.Smooth
o374.Position = Vector3.new(430.000061, 37.0000191, -59.8000031)
o375.Name = "Cactus"
o375.Parent = o1
o375.PrimaryPart = o554
o376.Name = "Body"
o376.Parent = o375
o377.Name = "Pokey"
o377.Parent = o376
o377.BrickColor = BrickColor.new("Flint")
o377.Position = Vector3.new(429.500031, 35.1000748, -113.299927)
o377.Rotation = Vector3.new(-6.69333144e-010, -3.41505938e-006, 30.0000019)
o377.CanCollide = false
o377.FormFactor = Enum.FormFactor.Custom
o377.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o377.CFrame = CFrame.new(429.500031, 35.1000748, -113.299927, 0.866006613, -0.499989182, -5.96040302e-008, 0.499998301, 0.866022527, 1.16818465e-011, 5.16124814e-008, -2.98122949e-008, 0.999981105)
o377.BottomSurface = Enum.SurfaceType.Smooth
o377.TopSurface = Enum.SurfaceType.Smooth
o377.Color = Color3.new(0.411765, 0.4, 0.360784)
o377.Position = Vector3.new(429.500031, 35.1000748, -113.299927)
o378.Parent = o377
o378.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o379.Parent = o377
o379.C0 = CFrame.new(0, 0, 0.399993896, 0.866021991, 0.499999106, -5.32907052e-015, -0.499998063, 0.866023898, -1.0658141e-014, 0, -1.27595781e-014, 0.999997616)
o379.Part0 = o377
o379.Part1 = o533
o380.Name = "Pokey"
o380.Parent = o376
o380.BrickColor = BrickColor.new("Flint")
o380.Position = Vector3.new(429.5, 37.1000366, -110.899956)
o380.Rotation = Vector3.new(-6.70086708e-010, -3.41506848e-006, -8.53588801e-007)
o380.CanCollide = false
o380.FormFactor = Enum.FormFactor.Custom
o380.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o380.CFrame = CFrame.new(429.5, 37.1000366, -110.899956, 0.999983251, 1.48976858e-008, -5.96041865e-008, -1.48977444e-008, 0.999999464, 1.16950295e-011, 5.96041581e-008, -1.19508474e-011, 0.999983728)
o380.BottomSurface = Enum.SurfaceType.Smooth
o380.TopSurface = Enum.SurfaceType.Smooth
o380.Color = Color3.new(0.411765, 0.4, 0.360784)
o380.Position = Vector3.new(429.5, 37.1000366, -110.899956)
o381.Parent = o380
o381.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o382.Parent = o380
o382.C0 = CFrame.new(-1.52587891e-005, 3.81469727e-006, 0, 0.999997556, 0, -1.49011425e-008, 1.49011514e-008, 1.2537536e-014, 0.999999464, 0, -0.999998033, -1.25375428e-014)
o382.Part0 = o380
o382.Part1 = o560
o383.Name = "Pokey"
o383.Parent = o376
o383.BrickColor = BrickColor.new("Flint")
o383.Position = Vector3.new(429.500031, 35.1000748, -112.499939)
o383.Rotation = Vector3.new(-6.70805134e-010, -3.41507484e-006, 15.000001)
o383.CanCollide = false
o383.FormFactor = Enum.FormFactor.Custom
o383.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o383.CFrame = CFrame.new(429.500031, 35.1000748, -112.499939, 0.965911746, -0.258815289, -5.96043002e-008, 0.258818984, 0.965925574, 1.17075898e-011, 5.75702295e-008, -1.54382587e-008, 0.999985635)
o383.BottomSurface = Enum.SurfaceType.Smooth
o383.TopSurface = Enum.SurfaceType.Smooth
o383.Color = Color3.new(0.411765, 0.4, 0.360784)
o383.Position = Vector3.new(429.500031, 35.1000748, -112.499939)
o384.Parent = o383
o384.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o385.Parent = o383
o385.C0 = CFrame.new(-4.57763672e-005, -2.28881836e-005, -0.399993896, 0.965923727, 3.55271368e-015, 0.258818984, -0.258818507, 1.24344979e-014, 0.965925574, 0, -0.999998033, -1.25375428e-014)
o385.Part0 = o383
o385.Part1 = o557
o386.Name = "Pokey"
o386.Parent = o376
o386.BrickColor = BrickColor.new("Flint")
o386.Position = Vector3.new(429.500031, 37.1000366, -110.499962)
o386.Rotation = Vector3.new(-6.68613442e-010, -3.41505279e-006, -14.9999952)
o386.CanCollide = false
o386.FormFactor = Enum.FormFactor.Custom
o386.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o386.CFrame = CFrame.new(429.500031, 37.1000366, -110.499962, 0.965900421, 0.258812159, -5.96039165e-008, -0.258817345, 0.965919793, 1.16692628e-011, 5.75757433e-008, 1.5414976e-008, 0.999979198)
o386.BottomSurface = Enum.SurfaceType.Smooth
o386.TopSurface = Enum.SurfaceType.Smooth
o386.Color = Color3.new(0.411765, 0.4, 0.360784)
o386.Position = Vector3.new(429.500031, 37.1000366, -110.499962)
o387.Parent = o386
o387.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o388.Parent = o386
o388.C0 = CFrame.new(0, 0, 0.199996948, 0.707102299, -0.707102954, 3.55271368e-015, 0.707103431, 0.707104146, -1.0658141e-014, -7.10542736e-015, -1.0658141e-014, 0.999997616)
o388.Part0 = o386
o388.Part1 = o530
o389.Name = "Pokey"
o389.Parent = o376
o389.BrickColor = BrickColor.new("Flint")
o389.Position = Vector3.new(429.5, 37.9000397, -111.899963)
o389.Rotation = Vector3.new(180, 59.997303, -3.64241276e-010)
o389.CanCollide = false
o389.FormFactor = Enum.FormFactor.Custom
o389.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o389.CFrame = CFrame.new(429.5, 37.9000397, -111.899963, 0.4999865, 3.17851886e-012, 0.866001844, 1.183156e-011, -1, -2.82172072e-012, 0.866001844, 1.19893522e-011, -0.4999865)
o389.BottomSurface = Enum.SurfaceType.Smooth
o389.TopSurface = Enum.SurfaceType.Smooth
o389.Color = Color3.new(0.411765, 0.4, 0.360784)
o389.Position = Vector3.new(429.5, 37.9000397, -111.899963)
o390.Parent = o389
o390.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o391.Parent = o389
o391.C0 = CFrame.new(0, 0, 0, 0.25881809, -1.6392798e-015, 0.96592176, -2.10537984e-014, -1, 7.33845883e-015, 0.96592176, 2.22357296e-014, -0.25881809)
o391.Part0 = o389
o391.Part1 = o506
o392.Name = "Pokey"
o392.Parent = o376
o392.BrickColor = BrickColor.new("Flint")
o392.Position = Vector3.new(429.5, 38.9000397, -111.899963)
o392.Rotation = Vector3.new(180, 44.9981422, -2.56064892e-010)
o392.CanCollide = false
o392.FormFactor = Enum.FormFactor.Custom
o392.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o392.CFrame = CFrame.new(429.5, 38.9000397, -111.899963, 0.707083941, 3.16008222e-012, 0.707083881, 1.07022108e-011, -1, -5.76587346e-012, 0.707083881, 1.20018891e-011, -0.707083941)
o392.BottomSurface = Enum.SurfaceType.Smooth
o392.TopSurface = Enum.SurfaceType.Smooth
o392.Color = Color3.new(0.411765, 0.4, 0.360784)
o392.Position = Vector3.new(429.5, 38.9000397, -111.899963)
o393.Parent = o392
o393.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o394.Parent = o392
o394.C0 = CFrame.new(0, 0.199999809, 0, 0.866020918, -4.17160508e-015, -0.499997377, -1.45638913e-014, 1, -1.68821849e-014, 0.499997377, -2.19023306e-014, 0.866020918)
o394.Part0 = o392
o394.Part1 = o500
o395.Name = "Pokey"
o395.Parent = o376
o395.BrickColor = BrickColor.new("Flint")
o395.Position = Vector3.new(429.5, 39.5000343, -111.899963)
o395.Rotation = Vector3.new(-180, 74.9886551, -6.49579057e-010)
o395.CanCollide = false
o395.FormFactor = Enum.FormFactor.Custom
o395.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o395.CFrame = CFrame.new(429.5, 39.5000343, -111.899963, 0.258805275, 2.93415119e-012, 0.965874553, 1.2100685e-011, -1, 6.00931197e-013, 0.965874553, 1.21219831e-011, -0.258805275)
o395.BottomSurface = Enum.SurfaceType.Smooth
o395.TopSurface = Enum.SurfaceType.Smooth
o395.Color = Color3.new(0.411765, 0.4, 0.360784)
o395.Position = Vector3.new(429.5, 39.5000343, -111.899963)
o396.Parent = o395
o396.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o397.Parent = o395
o397.C0 = CFrame.new(0, 0, 0, 0.499995977, 2.23174699e-014, -0.866018414, -8.35616773e-014, 1, -7.40143759e-014, 0.866018414, -1.09373651e-013, 0.499995977)
o397.Part0 = o395
o397.Part1 = o398
o398.Name = "Pokey"
o398.Parent = o376
o398.BrickColor = BrickColor.new("Flint")
o398.Position = Vector3.new(429.5, 39.5000343, -111.899963)
o398.Rotation = Vector3.new(180, 14.9993105, -1.79976797e-010)
o398.CanCollide = false
o398.FormFactor = Enum.FormFactor.Custom
o398.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o398.CFrame = CFrame.new(429.5, 39.5000343, -111.899963, 0.965882301, 3.03401748e-012, 0.258807421, 6.48725518e-012, -1, -1.02531317e-011, 0.258807421, 1.20721211e-011, -0.965882301)
o398.BottomSurface = Enum.SurfaceType.Smooth
o398.TopSurface = Enum.SurfaceType.Smooth
o398.Color = Color3.new(0.411765, 0.4, 0.360784)
o398.Position = Vector3.new(429.5, 39.5000343, -111.899963)
o399.Parent = o398
o399.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o400.Parent = o398
o400.C0 = CFrame.new(0, 0.199995995, 0, -0.707101941, -7.5822868e-008, 0.707101882, -1.96260345e-007, 1, -8.9030074e-008, -0.707101882, -2.01729506e-007, -0.707101941)
o400.Part0 = o398
o400.Part1 = o491
o401.Name = "Pokey"
o401.Parent = o376
o401.BrickColor = BrickColor.new("Flint")
o401.Position = Vector3.new(429.5, 38.5000343, -111.899963)
o401.Rotation = Vector3.new(3.0826875e-006, 59.9967995, 180)
o401.CanCollide = false
o401.FormFactor = Enum.FormFactor.Custom
o401.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o401.CFrame = CFrame.new(429.5, 38.5000343, -111.899963, -0.499983907, -6.78867451e-008, 0.865997434, 8.91838781e-008, -1, -2.69006577e-008, 0.865997434, 6.37834745e-008, 0.499983907)
o401.BottomSurface = Enum.SurfaceType.Smooth
o401.TopSurface = Enum.SurfaceType.Smooth
o401.Color = Color3.new(0.411765, 0.4, 0.360784)
o401.Position = Vector3.new(429.5, 38.5000343, -111.899963)
o402.Parent = o401
o402.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o403.Parent = o401
o403.C0 = CFrame.new(0, -0.200004101, 0, -0.258817762, -8.9175515e-008, -0.965920866, -4.90726855e-008, 1, -7.91718762e-008, 0.965920866, 2.69094933e-008, -0.258817762)
o403.Part0 = o401
o403.Part1 = o500
o404.Name = "Pokey"
o404.Parent = o376
o404.BrickColor = BrickColor.new("Flint")
o404.Position = Vector3.new(429.5, 40.3000031, -111.899956)
o404.Rotation = Vector3.new(-6.70086819e-010, 0, 1.85288368e-010)
o404.CanCollide = false
o404.FormFactor = Enum.FormFactor.Custom
o404.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o404.CFrame = CFrame.new(429.5, 40.3000031, -111.899956, 0.999980569, -3.23382922e-012, 0, 3.41681414e-012, 1, 1.16949939e-011, 0, -1.19517399e-011, 0.999980569)
o404.BottomSurface = Enum.SurfaceType.Smooth
o404.TopSurface = Enum.SurfaceType.Smooth
o404.Color = Color3.new(0.411765, 0.4, 0.360784)
o404.Position = Vector3.new(429.5, 40.3000031, -111.899956)
o405.Parent = o404
o405.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o406.Parent = o404
o406.C0 = CFrame.new(0, -0.199969292, 0, 0.86602205, -1.84370697e-014, 0.499998003, 9.69821215e-015, -1, 2.0076358e-014, 0.499998003, 1.25375276e-014, -0.86602205)
o406.Part0 = o404
o406.Part1 = o467
o407.Name = "AnchoredBase"
o407.Parent = o376
o407.Transparency = 1
o407.Position = Vector3.new(429.5, 32.1000443, -111.89994)
o407.Rotation = Vector3.new(-5.78313175e-010, -1.2672718e-021, 2.50339138e-010)
o407.Anchored = true
o407.FormFactor = Enum.FormFactor.Custom
o407.Size = Vector3.new(1, 1, 1)
o407.CFrame = CFrame.new(429.5, 32.1000443, -111.89994, 1, -4.36924238e-012, -2.21180647e-023, 4.36924238e-012, 1, 1.00934686e-011, -2.19827482e-023, -1.00934695e-011, 1)
o407.BottomSurface = Enum.SurfaceType.Smooth
o407.TopSurface = Enum.SurfaceType.Smooth
o407.Position = Vector3.new(429.5, 32.1000443, -111.89994)
o408.Parent = o407
o409.Parent = o407
o409.C0 = CFrame.new(0, 0.199964046, 0, 1.49011612e-008, -5.32906341e-008, -0.99999845, 1.18217379e-007, 1, -5.32906981e-008, 0.99999845, -1.18217258e-007, 1.49011612e-008)
o409.Part0 = o407
o409.Part1 = o587
o410.Name = "Pokey"
o410.Parent = o376
o410.BrickColor = BrickColor.new("Flint")
o410.Position = Vector3.new(429.5, 35.3000565, -111.899956)
o410.Rotation = Vector3.new(-6.67817357e-010, -5.12264205e-006, 1.82339047e-010)
o410.CanCollide = false
o410.FormFactor = Enum.FormFactor.Custom
o410.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o410.CFrame = CFrame.new(429.5, 35.3000565, -111.899956, 0.999976993, -3.18234328e-012, -8.94069672e-008, 3.47011309e-012, 1, 1.16553434e-011, 8.94069672e-008, -1.19915189e-011, 0.999976993)
o410.BottomSurface = Enum.SurfaceType.Smooth
o410.TopSurface = Enum.SurfaceType.Smooth
o410.Color = Color3.new(0.411765, 0.4, 0.360784)
o410.Position = Vector3.new(429.5, 35.3000565, -111.899956)
o411.Parent = o410
o411.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o412.Parent = o410
o412.C0 = CFrame.new(0, 0.19999218, 0, 0.25881803, 1.45374663e-008, 0.965922296, -1.17214318e-008, 1, -1.19095382e-008, -0.965922296, -8.23963475e-009, 0.25881803)
o412.Part0 = o410
o412.Part1 = o473
o413.Name = "Pokey"
o413.Parent = o376
o413.BrickColor = BrickColor.new("Flint")
o413.Position = Vector3.new(429.5, 39.9000359, -111.899956)
o413.Rotation = Vector3.new(-8.65859828e-010, 44.9988899, -180)
o413.CanCollide = false
o413.FormFactor = Enum.FormFactor.Custom
o413.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o413.CFrame = CFrame.new(429.5, 39.9000359, -111.899956, -0.707093, 3.23382922e-012, 0.70709306, 5.85355722e-012, -1, 1.06856633e-011, 0.70709306, 1.19517399e-011, 0.707093)
o413.BottomSurface = Enum.SurfaceType.Smooth
o413.TopSurface = Enum.SurfaceType.Smooth
o413.Color = Color3.new(0.411765, 0.4, 0.360784)
o413.Position = Vector3.new(429.5, 39.9000359, -111.899956)
o414.Parent = o413
o414.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o415.Parent = o413
o415.C0 = CFrame.new(0, -0.199995995, 0, -0.25881806, 2.19023459e-014, -0.965921998, -9.69821215e-015, 1, -2.0076358e-014, 0.965921998, -4.17160635e-015, -0.25881806)
o415.Part0 = o413
o415.Part1 = o467
o416.Name = "Pokey"
o416.Parent = o376
o416.BrickColor = BrickColor.new("Flint")
o416.Position = Vector3.new(429.5, 39.1000366, -109.899971)
o416.Rotation = Vector3.new(-6.17629559e-010, -14.9997492, -180)
o416.CanCollide = false
o416.FormFactor = Enum.FormFactor.Custom
o416.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o416.CFrame = CFrame.new(429.5, 39.1000366, -109.899971, -0.965909719, 3.233829e-012, -0.258814812, -6.32729459e-012, -1, 1.04121876e-011, -0.258814812, 1.19517417e-011, 0.965909719)
o416.BottomSurface = Enum.SurfaceType.Smooth
o416.TopSurface = Enum.SurfaceType.Smooth
o416.Color = Color3.new(0.411765, 0.4, 0.360784)
o416.Position = Vector3.new(429.5, 39.1000366, -109.899971)
o417.Parent = o416
o417.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o418.Parent = o416
o418.C0 = CFrame.new(0, 0, 0, -0.965923548, -1.45638997e-014, -0.258818448, -1.84370917e-014, -1, 1.25375428e-014, -0.258818448, -1.68822001e-014, 0.965923548)
o418.Part0 = o416
o418.Part1 = o548
o419.Name = "Pokey"
o419.Parent = o376
o419.BrickColor = BrickColor.new("Flint")
o419.Position = Vector3.new(429.5, 37.9000359, -109.899979)
o419.Rotation = Vector3.new(-5.57057289e-010, -29.9993687, -180)
o419.CanCollide = false
o419.FormFactor = Enum.FormFactor.Custom
o419.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o419.CFrame = CFrame.new(429.5, 37.9000359, -109.899979, -0.866008759, 3.233829e-012, -0.499990463, -8.80654751e-012, -1, 8.41975534e-012, -0.499990463, 1.19517408e-011, 0.866008759)
o419.BottomSurface = Enum.SurfaceType.Smooth
o419.TopSurface = Enum.SurfaceType.Smooth
o419.Color = Color3.new(0.411765, 0.4, 0.360784)
o419.Position = Vector3.new(429.5, 37.9000359, -109.899979)
o420.Parent = o419
o420.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o421.Parent = o419
o421.C0 = CFrame.new(0, -0.200000286, 0, -0.707103729, 9.69820114e-015, 0.707103729, -2.10538052e-014, 1, -7.33846137e-015, -0.707103729, 2.0076341e-014, -0.707103729)
o421.Part0 = o419
o421.Part1 = o422
o422.Name = "Pokey"
o422.Parent = o376
o422.BrickColor = BrickColor.new("Flint")
o422.Position = Vector3.new(429.5, 38.1000366, -109.899979)
o422.Rotation = Vector3.new(180, -14.9997683, -1.92917377e-010)
o422.CanCollide = false
o422.FormFactor = Enum.FormFactor.Custom
o422.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o422.CFrame = CFrame.new(429.5, 38.1000366, -109.899979, 0.965911448, 3.25226586e-012, -0.25881514, 2.52450404e-013, -1, -1.2188227e-011, -0.25881514, 1.1939204e-011, -0.965911448)
o422.BottomSurface = Enum.SurfaceType.Smooth
o422.TopSurface = Enum.SurfaceType.Smooth
o422.Color = Color3.new(0.411765, 0.4, 0.360784)
o422.Position = Vector3.new(429.5, 38.1000366, -109.899979)
o423.Parent = o422
o423.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o424.Parent = o422
o424.C0 = CFrame.new(-1.52587891e-005, -3.81469727e-006, 0, 0.965923429, 2.10538052e-014, -0.258818418, -1.84370917e-014, -1, 1.25375428e-014, -0.258818418, 7.33846137e-015, -0.965923429)
o424.Part0 = o422
o424.Part1 = o563
o425.Name = "Pokey"
o425.Parent = o376
o425.BrickColor = BrickColor.new("Flint")
o425.Position = Vector3.new(429.5, 38.3000336, -109.899979)
o425.Rotation = Vector3.new(-4.74313866e-010, -44.9989128, -180)
o425.CanCollide = false
o425.FormFactor = Enum.FormFactor.Custom
o425.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o425.CFrame = CFrame.new(429.5, 38.3000336, -109.899979, -0.707093239, 3.233829e-012, -0.707093358, -1.0685665e-011, -1, 5.85355722e-012, -0.707093358, 1.19517408e-011, 0.707093239)
o425.BottomSurface = Enum.SurfaceType.Smooth
o425.TopSurface = Enum.SurfaceType.Smooth
o425.Color = Color3.new(0.411765, 0.4, 0.360784)
o425.Position = Vector3.new(429.5, 38.3000336, -109.899979)
o426.Parent = o425
o426.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o427.Parent = o425
o427.C0 = CFrame.new(0, -0.199995995, 0, 0.258817971, 4.17160338e-015, 0.96592176, -2.00763648e-014, 1, 9.6982113e-015, -0.96592176, 2.19023374e-014, 0.258817971)
o427.Part0 = o425
o427.Part1 = o431
o428.Name = "Pokey"
o428.Parent = o376
o428.BrickColor = BrickColor.new("Flint")
o428.Position = Vector3.new(429.5, 38.9000359, -109.899971)
o428.Rotation = Vector3.new(179.997375, -89.6683884, -0.00248687412)
o428.CanCollide = false
o428.FormFactor = Enum.FormFactor.Custom
o428.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o428.CFrame = CFrame.new(429.5, 38.9000359, -109.899971, 7.45050812e-008, 3.233829e-012, -0.999983251, -1.16950243e-011, -1, -3.41682455e-012, -0.999983251, 1.19517417e-011, -7.45050812e-008)
o428.BottomSurface = Enum.SurfaceType.Smooth
o428.TopSurface = Enum.SurfaceType.Smooth
o428.Color = Color3.new(0.411765, 0.4, 0.360784)
o428.Position = Vector3.new(429.5, 38.9000359, -109.899971)
o429.Parent = o428
o429.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o430.Parent = o428
o430.C0 = CFrame.new(0, -0.200000286, 1.52587891e-005, 1.49011345e-008, 1.2537536e-014, -0.999997556, -1.84370917e-014, -1, 1.25375428e-014, -0.999997556, -1.84370816e-014, -1.49011345e-008)
o430.Part0 = o428
o430.Part1 = o548
o431.Name = "Pokey"
o431.Parent = o376
o431.BrickColor = BrickColor.new("Flint")
o431.Position = Vector3.new(429.5, 38.5000305, -109.899979)
o431.Rotation = Vector3.new(180, -59.9985123, -3.72687714e-010)
o431.CanCollide = false
o431.FormFactor = Enum.FormFactor.Custom
o431.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o431.CFrame = CFrame.new(429.5, 38.5000305, -109.899979, 0.499992639, 3.25226586e-012, -0.866012454, -8.43986773e-012, -1, -8.79688683e-012, -0.866012454, 1.1939204e-011, -0.499992639)
o431.BottomSurface = Enum.SurfaceType.Smooth
o431.TopSurface = Enum.SurfaceType.Smooth
o431.Color = Color3.new(0.411765, 0.4, 0.360784)
o431.Position = Vector3.new(429.5, 38.5000305, -109.899979)
o432.Parent = o431
o432.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o433.Parent = o431
o433.C0 = CFrame.new(-7.62939453e-006, 0.399991989, 0, 0.499998778, 2.00763648e-014, -0.866023183, -1.84370917e-014, -1, 1.25375428e-014, -0.866023183, -9.6982113e-015, -0.499998778)
o433.Part0 = o431
o433.Part1 = o563
o434.Name = "Pokey"
o434.Parent = o376
o434.BrickColor = BrickColor.new("Flint")
o434.Position = Vector3.new(429.5, 37.3000374, -109.899963)
o434.Rotation = Vector3.new(180, 1.70754731e-006, -1.83176238e-010)
o434.CanCollide = false
o434.FormFactor = Enum.FormFactor.Custom
o434.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o434.CFrame = CFrame.new(429.5, 37.3000374, -109.899963, 0.999977231, 3.1969555e-012, 2.98023224e-008, 3.45367745e-012, -1, -1.16698786e-011, 2.98023224e-008, 1.19768162e-011, -0.999977231)
o434.BottomSurface = Enum.SurfaceType.Smooth
o434.TopSurface = Enum.SurfaceType.Smooth
o434.Color = Color3.new(0.411765, 0.4, 0.360784)
o434.Position = Vector3.new(429.5, 37.3000374, -109.899963)
o435.Parent = o434
o435.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o436.Parent = o434
o436.C0 = CFrame.new(0, 0, 0, 0.258817971, -1.84370595e-014, -0.965921819, -1.68821967e-014, 1, 1.45638997e-014, 0.965921819, -1.25375208e-014, 0.258817971)
o436.Part0 = o434
o436.Part1 = o437
o437.Name = "Pokey"
o437.Parent = o376
o437.BrickColor = BrickColor.new("Flint")
o437.Position = Vector3.new(429.5, 37.3000374, -109.899963)
o437.Rotation = Vector3.new(180, -74.9960098, -7.11817105e-010)
o437.CanCollide = false
o437.FormFactor = Enum.FormFactor.Custom
o437.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o437.CFrame = CFrame.new(429.5, 37.3000374, -109.899963, 0.258814245, 3.21539215e-012, -0.965907812, -1.03952853e-011, -1, -6.34184545e-012, -0.965907812, 1.19642794e-011, -0.258814245)
o437.BottomSurface = Enum.SurfaceType.Smooth
o437.TopSurface = Enum.SurfaceType.Smooth
o437.Color = Color3.new(0.411765, 0.4, 0.360784)
o437.Position = Vector3.new(429.5, 37.3000374, -109.899963)
o438.Parent = o437
o438.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o439.Parent = o437
o439.C0 = CFrame.new(0, 0.199999809, 1.52587891e-005, 0.258818388, 1.68821967e-014, -0.965923488, -1.84370917e-014, -1, 1.25375428e-014, -0.965923488, -1.45638997e-014, -0.258818388)
o439.Part0 = o437
o439.Part1 = o545
o440.Name = "Pokey"
o440.Parent = o376
o440.BrickColor = BrickColor.new("Flint")
o440.Position = Vector3.new(429.500031, 37.9000359, -113.899925)
o440.Rotation = Vector3.new(-4.79638163e-010, -44.9993896, -180)
o440.CanCollide = false
o440.FormFactor = Enum.FormFactor.Custom
o440.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o440.CFrame = CFrame.new(429.500031, 37.9000359, -113.899925, -0.70709914, 3.28913958e-012, -0.707099259, -1.06732409e-011, -1, 5.91931452e-012, -0.707099259, 1.19141285e-011, 0.70709914)
o440.BottomSurface = Enum.SurfaceType.Smooth
o440.TopSurface = Enum.SurfaceType.Smooth
o440.Color = Color3.new(0.411765, 0.4, 0.360784)
o440.Position = Vector3.new(429.500031, 37.9000359, -113.899925)
o441.Parent = o440
o441.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o442.Parent = o440
o442.C0 = CFrame.new(0, -0.200004101, 2.28881836e-005, -0.707105279, -4.17160974e-015, -0.707105279, -1.84370917e-014, -1, 1.25375428e-014, -0.707105279, -2.19023679e-014, 0.707105279)
o442.Part0 = o440
o442.Part1 = o572
o443.Name = "Pokey"
o443.Parent = o376
o443.BrickColor = BrickColor.new("Flint")
o443.Position = Vector3.new(429.5, 36.3000374, -113.899925)
o443.Rotation = Vector3.new(-8.65521654e-010, 44.9990273, -180)
o443.CanCollide = false
o443.FormFactor = Enum.FormFactor.Custom
o443.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o443.CFrame = CFrame.new(429.5, 36.3000374, -113.899925, -0.707094908, 3.25226586e-012, 0.707094789, 5.87547285e-012, -1, 1.0681519e-011, 0.707094789, 1.1939204e-011, 0.707094908)
o443.BottomSurface = Enum.SurfaceType.Smooth
o443.TopSurface = Enum.SurfaceType.Smooth
o443.Color = Color3.new(0.411765, 0.4, 0.360784)
o443.Position = Vector3.new(429.5, 36.3000374, -113.899925)
o444.Parent = o443
o444.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o445.Parent = o443
o445.C0 = CFrame.new(0, -0.200003147, 0, -0.707104027, 2.19023425e-014, 0.707104027, -1.2537536e-014, 1, 1.84370816e-014, -0.707104027, -4.17160423e-015, -0.707104027)
o445.Part0 = o443
o445.Part1 = o452
o446.Name = "Pokey"
o446.Parent = o376
o446.BrickColor = BrickColor.new("Flint")
o446.Position = Vector3.new(429.5, 35.7000427, -113.89994)
o446.Rotation = Vector3.new(180, -74.9955139, -7.1181866e-010)
o446.CanCollide = false
o446.FormFactor = Enum.FormFactor.Custom
o446.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o446.CFrame = CFrame.new(429.5, 35.7000427, -113.89994, 0.258813709, 3.21539236e-012, -0.965905547, -1.0395261e-011, -1, -6.34183071e-012, -0.965905547, 1.19642785e-011, -0.258813709)
o446.BottomSurface = Enum.SurfaceType.Smooth
o446.TopSurface = Enum.SurfaceType.Smooth
o446.Color = Color3.new(0.411765, 0.4, 0.360784)
o446.Position = Vector3.new(429.5, 35.7000427, -113.89994)
o447.Parent = o446
o447.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o448.Parent = o446
o448.C0 = CFrame.new(0, 0, 0, 0.258817911, -1.68821781e-014, -0.96592176, 9.698213e-015, 1, 2.00763648e-014, 0.96592176, 1.45638811e-014, 0.258817911)
o448.Part0 = o446
o448.Part1 = o449
o449.Name = "Pokey"
o449.Parent = o376
o449.BrickColor = BrickColor.new("Flint")
o449.Position = Vector3.new(429.5, 35.7000427, -113.89994)
o449.Rotation = Vector3.new(-5.57057289e-010, -29.9994488, -180)
o449.CanCollide = false
o449.FormFactor = Enum.FormFactor.Custom
o449.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o449.CFrame = CFrame.new(429.5, 35.7000427, -113.89994, -0.866010845, 3.233829e-012, -0.499991655, -8.80656832e-012, -1, 8.41977616e-012, -0.499991655, 1.19517417e-011, 0.866010845)
o449.BottomSurface = Enum.SurfaceType.Smooth
o449.TopSurface = Enum.SurfaceType.Smooth
o449.Color = Color3.new(0.411765, 0.4, 0.360784)
o449.Position = Vector3.new(429.5, 35.7000427, -113.89994)
o450.Parent = o449
o450.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o451.Parent = o449
o451.C0 = CFrame.new(-1.52587891e-005, 0.599976778, 3.05175781e-005, -0.866023242, -9.698213e-015, -0.499998748, -1.84370917e-014, -1, 1.25375428e-014, -0.499998748, -2.00763648e-014, 0.866023242)
o451.Part0 = o449
o451.Part1 = o551
o452.Name = "Pokey"
o452.Parent = o376
o452.BrickColor = BrickColor.new("Flint")
o452.Position = Vector3.new(429.5, 36.500042, -113.899925)
o452.Rotation = Vector3.new(179.997833, -89.7079163, -0.00209601992)
o452.CanCollide = false
o452.FormFactor = Enum.FormFactor.Custom
o452.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o452.CFrame = CFrame.new(429.5, 36.500042, -113.899925, 8.94063348e-008, 3.27070272e-012, -0.999987006, -1.1720144e-011, -1, -3.37996341e-012, -0.999987006, 1.19266663e-011, -8.94063348e-008)
o452.BottomSurface = Enum.SurfaceType.Smooth
o452.TopSurface = Enum.SurfaceType.Smooth
o452.Color = Color3.new(0.411765, 0.4, 0.360784)
o452.Position = Vector3.new(429.5, 36.500042, -113.899925)
o453.Parent = o452
o453.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o454.Parent = o452
o454.C0 = CFrame.new(-1.52587891e-005, -0.099998951, 1.52587891e-005, 2.98022655e-008, 1.2537536e-014, -0.999997497, -1.84370917e-014, -1, 1.25375428e-014, -0.999997497, -1.84370816e-014, -2.98022655e-008)
o454.Part0 = o452
o454.Part1 = o569
o455.Name = "Pokey"
o455.Parent = o376
o455.BrickColor = BrickColor.new("Flint")
o455.Position = Vector3.new(429.5, 36.9000397, -113.89991)
o455.Rotation = Vector3.new(-4.76088668e-010, -44.9990959, -180)
o455.CanCollide = false
o455.FormFactor = Enum.FormFactor.Custom
o455.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o455.CFrame = CFrame.new(429.5, 36.9000397, -113.89991, -0.707095504, 3.25226586e-012, -0.707095623, -1.06815294e-011, -1, 5.87547936e-012, -0.707095623, 1.1939204e-011, 0.707095504)
o455.BottomSurface = Enum.SurfaceType.Smooth
o455.TopSurface = Enum.SurfaceType.Smooth
o455.Color = Color3.new(0.411765, 0.4, 0.360784)
o455.Position = Vector3.new(429.5, 36.9000397, -113.89991)
o456.Parent = o455
o456.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o457.Parent = o455
o457.C0 = CFrame.new(0, 0.199997902, 0, 0.258818179, 4.17160593e-015, -0.965922713, 2.22357567e-014, 1, 1.63928446e-015, 0.965922713, 2.19023509e-014, 0.258818179)
o457.Part0 = o455
o457.Part1 = o461
o458.Name = "Pokey"
o458.Parent = o376
o458.BrickColor = BrickColor.new("Flint")
o458.Position = Vector3.new(429.500031, 37.3000374, -113.899918)
o458.Rotation = Vector3.new(-6.19632401e-010, -14.9997959, -180)
o458.CanCollide = false
o458.FormFactor = Enum.FormFactor.Custom
o458.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o458.CFrame = CFrame.new(429.500031, 37.3000374, -113.899918, -0.965912879, 3.27070272e-012, -0.258815587, -6.2981868e-012, -1, 1.04459861e-011, -0.258815587, 1.19266654e-011, 0.965912879)
o458.BottomSurface = Enum.SurfaceType.Smooth
o458.TopSurface = Enum.SurfaceType.Smooth
o458.Color = Color3.new(0.411765, 0.4, 0.360784)
o458.Position = Vector3.new(429.500031, 37.3000374, -113.899918)
o459.Parent = o458
o459.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o460.Parent = o458
o460.C0 = CFrame.new(0, -0.199999809, 0, 0.258818388, 1.4563898e-014, -0.96592319, 2.00763732e-014, 1, -9.69821723e-015, 0.96592319, 1.6882195e-014, 0.258818388)
o460.Part0 = o458
o460.Part1 = o464
o461.Name = "Pokey"
o461.Parent = o376
o461.BrickColor = BrickColor.new("Flint")
o461.Position = Vector3.new(429.5, 36.7000427, -113.89991)
o461.Rotation = Vector3.new(-7.83333232e-010, 29.9995785, -180)
o461.CanCollide = false
o461.FormFactor = Enum.FormFactor.Custom
o461.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o461.CFrame = CFrame.new(429.5, 36.7000427, -113.89991, -0.866014481, 3.27070272e-012, 0.499993622, 2.93293948e-012, -1, 1.18399283e-011, 0.499993622, 1.19266663e-011, 0.866014481)
o461.BottomSurface = Enum.SurfaceType.Smooth
o461.TopSurface = Enum.SurfaceType.Smooth
o461.Color = Color3.new(0.411765, 0.4, 0.360784)
o461.Position = Vector3.new(429.5, 36.7000427, -113.89991)
o462.Parent = o461
o462.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o463.Parent = o461
o463.C0 = CFrame.new(0, 0.100001812, 0, -0.86602354, -2.22357567e-014, 0.499998927, -1.84370917e-014, -1, 1.25375428e-014, 0.499998927, -1.63928446e-015, 0.86602354)
o463.Part0 = o461
o463.Part1 = o569
o464.Name = "Pokey"
o464.Parent = o376
o464.BrickColor = BrickColor.new("Flint")
o464.Position = Vector3.new(429.500031, 37.5000381, -113.899918)
o464.Rotation = Vector3.new(-1.0058413e-009, 59.9989357, -180)
o464.CanCollide = false
o464.FormFactor = Enum.FormFactor.Custom
o464.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o464.CFrame = CFrame.new(429.500031, 37.5000381, -113.899918, -0.499994725, 3.28913958e-012, 0.86601615, 8.48005693e-012, -1, 8.77752818e-012, 0.86601615, 1.19141285e-011, 0.499994725)
o464.BottomSurface = Enum.SurfaceType.Smooth
o464.TopSurface = Enum.SurfaceType.Smooth
o464.Color = Color3.new(0.411765, 0.4, 0.360784)
o464.Position = Vector3.new(429.500031, 37.5000381, -113.899918)
o465.Parent = o464
o465.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o466.Parent = o464
o466.C0 = CFrame.new(3.05175781e-005, -0.600004196, -3.05175781e-005, -0.499998957, -2.00763732e-014, 0.8660236, -1.84370917e-014, -1, 1.25375428e-014, 0.8660236, 9.69821723e-015, 0.499998957)
o466.Part0 = o464
o466.Part1 = o572
o467.Name = "Pokey"
o467.Parent = o376
o467.BrickColor = BrickColor.new("Flint")
o467.Position = Vector3.new(429.5, 40.1000328, -111.899956)
o467.Rotation = Vector3.new(180, 29.9994812, -2.15171506e-010)
o467.CanCollide = false
o467.FormFactor = Enum.FormFactor.Custom
o467.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o467.CFrame = CFrame.new(429.5, 40.1000328, -111.899956, 0.866011977, 3.25226586e-012, 0.499992192, 8.79688163e-012, -1, -8.43986513e-012, 0.499992192, 1.19392031e-011, -0.866011977)
o467.BottomSurface = Enum.SurfaceType.Smooth
o467.TopSurface = Enum.SurfaceType.Smooth
o467.Color = Color3.new(0.411765, 0.4, 0.360784)
o467.Position = Vector3.new(429.5, 40.1000328, -111.899956)
o468.Parent = o467
o468.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o469.Parent = o467
o469.C0 = CFrame.new(0, 0, 0, 0.707104683, -9.69821215e-015, 0.707104743, 7.33846306e-015, 1, -2.1053812e-014, -0.707104743, -2.0076358e-014, 0.707104683)
o469.Part0 = o467
o469.Part1 = o527
o470.Name = "Pokey"
o470.Parent = o376
o470.BrickColor = BrickColor.new("Flint")
o470.Position = Vector3.new(429.5, 33.100071, -111.89994)
o470.Rotation = Vector3.new(2.63510378e-006, 74.9975433, -3.21749576e-006)
o470.CanCollide = false
o470.FormFactor = Enum.FormFactor.Custom
o470.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o470.CFrame = CFrame.new(429.5, 33.100071, -111.89994, 0.258816004, 1.45340442e-008, 0.965914726, -1.17319114e-008, 1, -1.19032677e-008, -0.965914726, -8.25147062e-009, 0.258816004)
o470.BottomSurface = Enum.SurfaceType.Smooth
o470.TopSurface = Enum.SurfaceType.Smooth
o470.Color = Color3.new(0.411765, 0.4, 0.360784)
o470.Position = Vector3.new(429.5, 33.100071, -111.89994)
o471.Parent = o470
o471.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o472.Parent = o470
o472.C0 = CFrame.new(0, 0.200001001, 0, -0.707106054, -1.17214487e-008, -0.707105875, 1.33002054e-010, 1, -1.67096523e-008, 0.707105875, -1.19095507e-008, -0.707106054)
o472.Part0 = o470
o472.Part1 = o485
o473.Name = "Pokey"
o473.Parent = o376
o473.BrickColor = BrickColor.new("Flint")
o473.Position = Vector3.new(429.5, 35.5000496, -111.899956)
o473.Rotation = Vector3.new(2.63511197e-006, 74.9958649, -3.2175094e-006)
o473.CanCollide = false
o473.FormFactor = Enum.FormFactor.Custom
o473.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o473.CFrame = CFrame.new(429.5, 35.5000496, -111.899956, 0.258814067, 1.45339971e-008, 0.965907156, -1.17318519e-008, 1, -1.19032162e-008, -0.965907156, -8.25145019e-009, 0.258814067)
o473.BottomSurface = Enum.SurfaceType.Smooth
o473.TopSurface = Enum.SurfaceType.Smooth
o473.Color = Color3.new(0.411765, 0.4, 0.360784)
o473.Position = Vector3.new(429.5, 35.5000496, -111.899956)
o474.Parent = o473
o474.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o475.Parent = o473
o475.C0 = CFrame.new(0, 0.399985075, 0, -4.47034836e-008, -1.17214398e-008, -0.999997139, 1.19095436e-008, 1, -1.17214505e-008, 0.999997139, -1.19095436e-008, -4.47034836e-008)
o475.Part0 = o473
o475.Part1 = o509
o476.Name = "Pokey"
o476.Parent = o376
o476.BrickColor = BrickColor.new("Flint")
o476.Position = Vector3.new(429.5, 34.9000702, -111.89994)
o476.Rotation = Vector3.new(180, 59.9983101, -180)
o476.CanCollide = false
o476.FormFactor = Enum.FormFactor.Custom
o476.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o476.CFrame = CFrame.new(429.5, 34.9000702, -111.89994, -0.499991447, 5.47176526e-009, 0.866010606, -4.48665318e-008, 1, -3.22218376e-008, -0.866010606, -5.49658061e-008, -0.499991447)
o476.BottomSurface = Enum.SurfaceType.Smooth
o476.TopSurface = Enum.SurfaceType.Smooth
o476.Color = Color3.new(0.411765, 0.4, 0.360784)
o476.Position = Vector3.new(429.5, 34.9000702, -111.89994)
o477.Parent = o476
o477.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o478.Parent = o476
o478.C0 = CFrame.new(0, -0.199995041, 0, -0.499998569, -4.48546942e-008, 0.866023183, -5.03296747e-008, 1, 2.27357635e-008, -0.866023183, -3.2218928e-008, -0.499998569)
o478.Part0 = o476
o478.Part1 = o518
o479.Name = "Pokey"
o479.Parent = o376
o479.BrickColor = BrickColor.new("Flint")
o479.Position = Vector3.new(429.5, 36.1000366, -111.899956)
o479.Rotation = Vector3.new(180, 59.9983444, -180)
o479.CanCollide = false
o479.FormFactor = Enum.FormFactor.Custom
o479.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o479.CFrame = CFrame.new(429.5, 36.1000366, -111.899956, -0.499991626, 5.47176704e-009, 0.866010904, -4.48665283e-008, 1, -3.22218447e-008, -0.866010904, -5.49658168e-008, -0.499991626)
o479.BottomSurface = Enum.SurfaceType.Smooth
o479.TopSurface = Enum.SurfaceType.Smooth
o479.Color = Color3.new(0.411765, 0.4, 0.360784)
o479.Position = Vector3.new(429.5, 36.1000366, -111.899956)
o480.Parent = o479
o480.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o481.Parent = o479
o481.C0 = CFrame.new(0, 4.29153442e-006, 0, -0.499998838, -4.48546906e-008, -0.866023302, 5.47509416e-009, 1, -5.49546648e-008, 0.866023302, -3.22189315e-008, -0.499998838)
o481.Part0 = o479
o481.Part1 = o554
o482.Name = "Pokey"
o482.Parent = o376
o482.BrickColor = BrickColor.new("Flint")
o482.Position = Vector3.new(429.5, 33.900074, -111.89994)
o482.Rotation = Vector3.new(171.552826, -89.615387, 171.553146)
o482.CanCollide = false
o482.FormFactor = Enum.FormFactor.Custom
o482.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o482.CFrame = CFrame.new(429.5, 33.900074, -111.89994, -1.04308128e-007, -1.54900768e-008, -0.999977469, 4.93496444e-008, 1, -1.54906665e-008, 0.999977469, -4.93487846e-008, -1.04308128e-007)
o482.BottomSurface = Enum.SurfaceType.Smooth
o482.TopSurface = Enum.SurfaceType.Smooth
o482.Color = Color3.new(0.411765, 0.4, 0.360784)
o482.Position = Vector3.new(429.5, 33.900074, -111.89994)
o483.Parent = o482
o483.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o484.Parent = o482
o484.C0 = CFrame.new(0, 0.200000286, 0, -0.258818269, 8.45383425e-008, 0.965922892, -1.98450309e-007, 1, -1.40695079e-007, -0.965922892, -2.28102266e-007, -0.258818269)
o484.Part0 = o482
o484.Part1 = o488
o485.Name = "Pokey"
o485.Parent = o376
o485.BrickColor = BrickColor.new("Flint")
o485.Position = Vector3.new(429.5, 33.3000717, -111.89994)
o485.Rotation = Vector3.new(-3.38642447e-010, -59.99897, 3.76911613e-010)
o485.CanCollide = false
o485.FormFactor = Enum.FormFactor.Custom
o485.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o485.CFrame = CFrame.new(429.5, 33.3000717, -111.89994, 0.499994725, -3.28913958e-012, -0.866016448, 1.18415954e-011, 1, 2.95518167e-012, 0.866016448, -1.19141285e-011, 0.499994725)
o485.BottomSurface = Enum.SurfaceType.Smooth
o485.TopSurface = Enum.SurfaceType.Smooth
o485.Color = Color3.new(0.411765, 0.4, 0.360784)
o485.Position = Vector3.new(429.5, 33.3000717, -111.89994)
o486.Parent = o485
o486.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o487.Parent = o485
o487.C0 = CFrame.new(0, 0.199998975, 0, 0.499999076, -1.63928573e-015, 0.866023898, 1.84370917e-014, 1, -1.25375428e-014, -0.866023898, -2.22357634e-014, 0.499999076)
o487.Part0 = o485
o487.Part1 = o524
o488.Name = "Pokey"
o488.Parent = o376
o488.BrickColor = BrickColor.new("Flint")
o488.Position = Vector3.new(429.5, 34.1000748, -111.89994)
o488.Rotation = Vector3.new(5.28037208e-006, 14.9996948, -1.26115228e-005)
o488.CanCollide = false
o488.FormFactor = Enum.FormFactor.Custom
o488.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o488.CFrame = CFrame.new(429.5, 34.1000748, -111.89994, 0.965906978, 2.12608299e-007, 0.258813888, -1.96260132e-007, 1, -8.9017874e-008, -0.258813888, 3.51878846e-008, 0.965906978)
o488.BottomSurface = Enum.SurfaceType.Smooth
o488.TopSurface = Enum.SurfaceType.Smooth
o488.Color = Color3.new(0.411765, 0.4, 0.360784)
o488.Position = Vector3.new(429.5, 34.1000748, -111.89994)
o489.Parent = o488
o489.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o490.Parent = o488
o490.C0 = CFrame.new(0, 0, 0, 0.707104921, -1.1417611e-007, -0.707104921, 1.12554773e-007, 1, -4.89136127e-008, 0.707104921, -4.50014426e-008, 0.707104921)
o490.Part0 = o488
o490.Part1 = o497
o491.Name = "Pokey"
o491.Parent = o376
o491.BrickColor = BrickColor.new("Flint")
o491.Position = Vector3.new(429.5, 39.3000374, -111.899963)
o491.Rotation = Vector3.new(-5.89118918e-006, 29.9987335, 180)
o491.CanCollide = false
o491.FormFactor = Enum.FormFactor.Custom
o491.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o491.CFrame = CFrame.new(429.5, 39.3000374, -111.899963, -0.865992367, -1.25443592e-007, 0.499980867, 1.96263187e-007, -1, 8.90418974e-008, 0.499980867, 1.75237858e-007, 0.865992367)
o491.BottomSurface = Enum.SurfaceType.Smooth
o491.TopSurface = Enum.SurfaceType.Smooth
o491.Color = Color3.new(0.411765, 0.4, 0.360784)
o491.Position = Vector3.new(429.5, 39.3000374, -111.899963)
o492.Parent = o491
o492.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o493.Parent = o491
o493.C0 = CFrame.new(0, 0, 0, 0.707102537, -1.14176359e-007, -0.707102537, 1.12554133e-007, 1, -4.89133853e-008, 0.707102537, -4.50015918e-008, 0.707102537)
o493.Part0 = o491
o493.Part1 = o494
o494.Name = "Pokey"
o494.Parent = o376
o494.BrickColor = BrickColor.new("Flint")
o494.Position = Vector3.new(429.5, 39.3000374, -111.899963)
o494.Rotation = Vector3.new(5.95583833e-006, 74.9931183, 180)
o494.CanCollide = false
o494.FormFactor = Enum.FormFactor.Custom
o494.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o494.CFrame = CFrame.new(429.5, 39.3000374, -111.899963, -0.258810788, -4.90681806e-008, 0.965894759, 8.91858818e-008, -1, -2.6903118e-008, 0.965894759, 7.91817172e-008, 0.258810788)
o494.BottomSurface = Enum.SurfaceType.Smooth
o494.TopSurface = Enum.SurfaceType.Smooth
o494.Color = Color3.new(0.411765, 0.4, 0.360784)
o494.Position = Vector3.new(429.5, 39.3000374, -111.899963)
o495.Parent = o494
o495.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o496.Parent = o494
o496.C0 = CFrame.new(0, 0.599999905, 0, -2.98023224e-008, -8.91755221e-008, -0.999994993, -2.69093885e-008, 1, -8.917511e-008, 0.999994993, 2.6909488e-008, -2.98023224e-008)
o496.Part0 = o494
o496.Part1 = o500
o497.Name = "Pokey"
o497.Parent = o376
o497.BrickColor = BrickColor.new("Flint")
o497.Position = Vector3.new(429.5, 34.1000748, -111.89994)
o497.Rotation = Vector3.new(-1.78090568e-006, -29.999445, -5.99932719e-006)
o497.CanCollide = false
o497.FormFactor = Enum.FormFactor.Custom
o497.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o497.CFrame = CFrame.new(429.5, 34.1000748, -111.89994, 0.866010725, 9.06782631e-008, -0.499991596, -8.91667256e-008, 1, 2.69179221e-008, 0.499991596, 2.12711591e-008, 0.866010725)
o497.BottomSurface = Enum.SurfaceType.Smooth
o497.TopSurface = Enum.SurfaceType.Smooth
o497.Color = Color3.new(0.411765, 0.4, 0.360784)
o497.Position = Vector3.new(429.5, 34.1000748, -111.89994)
o498.Parent = o497
o498.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o499.Parent = o497
o499.C0 = CFrame.new(0, 0.60000062, 0, -8.94069672e-008, -8.91755221e-008, -0.999997556, -2.69094578e-008, 1, -8.91753302e-008, 0.999997556, 2.69094826e-008, -8.94069672e-008)
o499.Part0 = o497
o499.Part1 = o518
o500.Name = "Pokey"
o500.Parent = o376
o500.BrickColor = BrickColor.new("Flint")
o500.Position = Vector3.new(429.5, 38.7000389, -111.899963)
o500.Rotation = Vector3.new(180, 14.9995842, -1.88545179e-010)
o500.CanCollide = false
o500.FormFactor = Enum.FormFactor.Custom
o500.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o500.CFrame = CFrame.new(429.5, 38.7000389, -111.899963, 0.965899587, 3.17851886e-012, 0.25881204, 6.37091942e-012, -1, -1.03614339e-011, 0.25881204, 1.19893522e-011, -0.965899587)
o500.BottomSurface = Enum.SurfaceType.Smooth
o500.TopSurface = Enum.SurfaceType.Smooth
o500.Color = Color3.new(0.411765, 0.4, 0.360784)
o500.Position = Vector3.new(429.5, 38.7000389, -111.899963)
o501.Parent = o500
o501.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o502.Parent = o500
o502.C0 = CFrame.new(0, 0.800000191, 0, 0.866021812, 1.45638913e-014, 0.499997914, -2.10537984e-014, -1, 7.33845883e-015, 0.499997914, 1.68821849e-014, -0.866021812)
o502.Part0 = o500
o502.Part1 = o506
o503.Name = "Pokey"
o503.Parent = o376
o503.BrickColor = BrickColor.new("Flint")
o503.Position = Vector3.new(429.5, 36.3000374, -111.899956)
o503.Rotation = Vector3.new(-1.0091753e-009, 59.9983559, 3.70575681e-010)
o503.CanCollide = false
o503.FormFactor = Enum.FormFactor.Custom
o503.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o503.CFrame = CFrame.new(429.5, 36.3000374, -111.899956, 0.499991685, -3.233829e-012, 0.866011024, -8.4197779e-012, 1, 8.80656919e-012, -0.866011024, -1.19517417e-011, 0.499991685)
o503.BottomSurface = Enum.SurfaceType.Smooth
o503.TopSurface = Enum.SurfaceType.Smooth
o503.Color = Color3.new(0.411765, 0.4, 0.360784)
o503.Position = Vector3.new(429.5, 36.3000374, -111.899956)
o504.Parent = o503
o504.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o505.Parent = o503
o505.C0 = CFrame.new(0, -0.199996948, 0, 0.499998778, 2.00763664e-014, -0.866023421, 1.84370917e-014, 1, -1.25375428e-014, 0.866023421, 9.69821469e-015, 0.499998778)
o505.Part0 = o503
o505.Part1 = o554
o506.Name = "Pokey"
o506.Parent = o376
o506.BrickColor = BrickColor.new("Flint")
o506.Position = Vector3.new(429.5, 37.9000397, -111.899963)
o506.Rotation = Vector3.new(-7.21673443e-010, 14.9996452, 1.89638028e-010)
o506.CanCollide = false
o506.FormFactor = Enum.FormFactor.Custom
o506.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o506.CFrame = CFrame.new(429.5, 37.9000397, -111.899963, 0.96590364, -3.1969555e-012, 0.258813053, 3.15609084e-013, 1, 1.21661136e-011, -0.258813053, -1.19768154e-011, 0.96590364)
o506.BottomSurface = Enum.SurfaceType.Smooth
o506.TopSurface = Enum.SurfaceType.Smooth
o506.Color = Color3.new(0.411765, 0.4, 0.360784)
o506.Position = Vector3.new(429.5, 37.9000397, -111.899963)
o507.Parent = o506
o507.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o508.Parent = o506
o508.C0 = CFrame.new(0, -0.400000095, 0, -0.707104266, -2.10537984e-014, 0.707104206, -2.00763614e-014, -1, 9.6982113e-015, 0.707104206, 7.33845883e-015, 0.707104266)
o508.Part0 = o506
o508.Part1 = o512
o509.Name = "Pokey"
o509.Parent = o376
o509.BrickColor = BrickColor.new("Flint")
o509.Position = Vector3.new(429.5, 35.9000359, -111.899956)
o509.Rotation = Vector3.new(-6.17629614e-010, -14.9997511, 1.91824057e-010)
o509.CanCollide = false
o509.FormFactor = Enum.FormFactor.Custom
o509.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o509.CFrame = CFrame.new(429.5, 35.9000359, -111.899956, 0.965909898, -3.233829e-012, -0.258814842, 6.32729546e-012, 1, 1.04121902e-011, 0.258814842, -1.19517417e-011, 0.965909898)
o509.BottomSurface = Enum.SurfaceType.Smooth
o509.TopSurface = Enum.SurfaceType.Smooth
o509.Color = Color3.new(0.411765, 0.4, 0.360784)
o509.Position = Vector3.new(429.5, 35.9000359, -111.899956)
o510.Parent = o509
o510.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o511.Parent = o509
o511.C0 = CFrame.new(0, 0.200003147, 0, 0.965923727, 1.45639031e-014, 0.258818477, 1.84370917e-014, 1, -1.25375428e-014, -0.258818477, -1.68822018e-014, 0.965923727)
o511.Part0 = o509
o511.Part1 = o554
o512.Name = "Pokey"
o512.Parent = o376
o512.BrickColor = BrickColor.new("Flint")
o512.Position = Vector3.new(429.5, 37.5000381, -111.899963)
o512.Rotation = Vector3.new(-1.01028674e-009, 59.9980774, -180)
o512.CanCollide = false
o512.FormFactor = Enum.FormFactor.Custom
o512.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o512.CFrame = CFrame.new(429.5, 37.5000381, -111.899963, -0.499990344, 3.21539215e-012, 0.86600858, 8.39967852e-012, -1, 8.81624461e-012, 0.86600858, 1.19642785e-011, 0.499990344)
o512.BottomSurface = Enum.SurfaceType.Smooth
o512.TopSurface = Enum.SurfaceType.Smooth
o512.Color = Color3.new(0.411765, 0.4, 0.360784)
o512.Position = Vector3.new(429.5, 37.5000381, -111.899963)
o513.Parent = o512
o513.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o514.Parent = o512
o514.C0 = CFrame.new(0, 0.399999619, 0, 0.258818239, 2.00763614e-014, 0.965923011, 1.45639031e-014, 1, 1.68822035e-014, -0.965923011, -9.6982113e-015, 0.258818239)
o514.Part0 = o512
o514.Part1 = o521
o515.Name = "Pokey"
o515.Parent = o376
o515.BrickColor = BrickColor.new("Flint")
o515.Position = Vector3.new(429.5, 36.500042, -111.899956)
o515.Rotation = Vector3.new(-8.65859606e-010, 44.9990616, -180)
o515.CanCollide = false
o515.FormFactor = Enum.FormFactor.Custom
o515.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o515.CFrame = CFrame.new(429.5, 36.500042, -111.899956, -0.707095265, 3.233829e-012, 0.707095206, 5.85357457e-012, -1, 1.06856945e-011, 0.707095206, 1.19517417e-011, 0.707095265)
o515.BottomSurface = Enum.SurfaceType.Smooth
o515.TopSurface = Enum.SurfaceType.Smooth
o515.Color = Color3.new(0.411765, 0.4, 0.360784)
o515.Position = Vector3.new(429.5, 36.500042, -111.899956)
o516.Parent = o515
o516.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o517.Parent = o515
o517.C0 = CFrame.new(0, 0.400001049, 0, -0.707105339, -2.19023713e-014, 0.707105398, -1.84370917e-014, -1, 1.25375428e-014, 0.707105398, 4.17161185e-015, 0.707105339)
o517.Part0 = o515
o517.Part1 = o554
o518.Name = "Pokey"
o518.Parent = o376
o518.BrickColor = BrickColor.new("Flint")
o518.Position = Vector3.new(429.5, 34.7000771, -111.89994)
o518.Rotation = Vector3.new(180, -59.9985542, 180)
o518.CanCollide = false
o518.FormFactor = Enum.FormFactor.Custom
o518.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o518.CFrame = CFrame.new(429.5, 34.7000771, -111.89994, -0.499992907, -3.25226586e-012, -0.866012812, 8.43987207e-012, 1, -8.79689117e-012, 0.866012812, -1.1939204e-011, -0.499992907)
o518.BottomSurface = Enum.SurfaceType.Smooth
o518.TopSurface = Enum.SurfaceType.Smooth
o518.Color = Color3.new(0.411765, 0.4, 0.360784)
o518.Position = Vector3.new(429.5, 34.7000771, -111.89994)
o519.Parent = o518
o519.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o520.Parent = o518
o520.C0 = CFrame.new(-0.866027832, 0.39996314, 0.5, -0.499999046, -0.86602354, -2.00763749e-014, 1.84370917e-014, 1.25375428e-014, 1, -0.86602354, 0.499999046, -9.69821469e-015)
o520.Part0 = o518
o520.Part1 = o557
o521.Name = "Pokey"
o521.Parent = o376
o521.BrickColor = BrickColor.new("Flint")
o521.Position = Vector3.new(429.5, 37.1000366, -111.899963)
o521.Rotation = Vector3.new(-6.17629614e-010, -14.9997549, -180)
o521.CanCollide = false
o521.FormFactor = Enum.FormFactor.Custom
o521.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o521.CFrame = CFrame.new(429.5, 37.1000366, -111.899963, -0.965909898, 3.233829e-012, -0.258814901, -6.32729633e-012, -1, 1.04121902e-011, -0.258814901, 1.19517417e-011, 0.965909898)
o521.BottomSurface = Enum.SurfaceType.Smooth
o521.TopSurface = Enum.SurfaceType.Smooth
o521.Color = Color3.new(0.411765, 0.4, 0.360784)
o521.Position = Vector3.new(429.5, 37.1000366, -111.899963)
o522.Parent = o521
o522.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o523.Parent = o521
o523.C0 = CFrame.new(0, 0.999996185, 7.62939453e-006, -0.965923727, -1.45639031e-014, -0.258818537, -1.84370917e-014, -1, 1.25375428e-014, -0.258818537, -1.68822035e-014, 0.965923727)
o523.Part0 = o521
o523.Part1 = o554
o524.Name = "Pokey"
o524.Parent = o376
o524.BrickColor = BrickColor.new("Flint")
o524.Position = Vector3.new(429.5, 33.5000725, -111.89994)
o524.Rotation = Vector3.new(-6.72960243e-010, -3.41509462e-006, 1.89511795e-010)
o524.CanCollide = false
o524.FormFactor = Enum.FormFactor.Custom
o524.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o524.CFrame = CFrame.new(429.5, 33.5000725, -111.89994, 0.999991417, -3.30757643e-012, -5.96046448e-008, 3.34310357e-012, 1, 1.17452714e-011, 5.96046448e-008, -1.19015908e-011, 0.999991417)
o524.BottomSurface = Enum.SurfaceType.Smooth
o524.TopSurface = Enum.SurfaceType.Smooth
o524.Color = Color3.new(0.411765, 0.4, 0.360784)
o524.Position = Vector3.new(429.5, 33.5000725, -111.89994)
o525.Parent = o524
o525.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o526.Parent = o524
o526.C0 = CFrame.new(-1.52587891e-005, -0.800035954, 0, -0.866023242, -7.39740287e-008, 0.499998778, -1.27215841e-007, 1, -7.23958067e-008, -0.499998778, -1.26304244e-007, -0.866023242)
o526.Part0 = o524
o526.Part1 = o578
o527.Name = "Pokey"
o527.Parent = o376
o527.BrickColor = BrickColor.new("Flint")
o527.Position = Vector3.new(429.5, 40.1000328, -111.899956)
o527.Rotation = Vector3.new(-180, 74.9973068, -7.24057314e-010)
o527.CanCollide = false
o527.FormFactor = Enum.FormFactor.Custom
o527.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o527.CFrame = CFrame.new(429.5, 40.1000328, -111.899956, 0.258815795, 3.27070272e-012, 0.965913653, 1.21955944e-011, -1, 2.31396499e-013, 0.965913653, 1.19266663e-011, -0.258815795)
o527.BottomSurface = Enum.SurfaceType.Smooth
o527.TopSurface = Enum.SurfaceType.Smooth
o527.Color = Color3.new(0.411765, 0.4, 0.360784)
o527.Position = Vector3.new(429.5, 40.1000328, -111.899956)
o528.Parent = o527
o528.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o529.Parent = o527
o529.C0 = CFrame.new(0, -0.500007629, -1.52587891e-005, 0.258818567, -7.33846306e-015, 0.965923786, -1.84370917e-014, -1, 1.25375428e-014, 0.965923786, 2.1053812e-014, -0.258818567)
o529.Part0 = o527
o529.Part1 = o566
o530.Name = "Pokey"
o530.Parent = o376
o530.BrickColor = BrickColor.new("Flint")
o530.Position = Vector3.new(429.500031, 37.1000366, -110.299973)
o530.Rotation = Vector3.new(-6.69345857e-010, -3.41506097e-006, 30.0000019)
o530.CanCollide = false
o530.FormFactor = Enum.FormFactor.Custom
o530.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o530.CFrame = CFrame.new(429.500031, 37.1000366, -110.299973, 0.866007805, -0.499989867, -5.96040586e-008, 0.499998927, 0.866023481, 1.16820737e-011, 5.16125489e-008, -2.98123339e-008, 0.999981582)
o530.BottomSurface = Enum.SurfaceType.Smooth
o530.TopSurface = Enum.SurfaceType.Smooth
o530.Color = Color3.new(0.411765, 0.4, 0.360784)
o530.Position = Vector3.new(429.500031, 37.1000366, -110.299973)
o531.Parent = o530
o531.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o532.Parent = o530
o532.C0 = CFrame.new(0, 0, -0.399993896, -0.258819044, 0.965922475, -7.10542736e-015, -0.965923786, -0.258817673, -1.0658141e-014, 1.24344979e-014, -3.55271368e-015, 0.999997854)
o532.Part0 = o530
o532.Part1 = o539
o533.Name = "Pokey"
o533.Parent = o376
o533.BrickColor = BrickColor.new("Flint")
o533.Position = Vector3.new(429.500031, 35.1000748, -112.89994)
o533.Rotation = Vector3.new(-6.70064282e-010, -3.41506757e-006, -4.35757002e-020)
o533.CanCollide = false
o533.FormFactor = Enum.FormFactor.Custom
o533.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o533.CFrame = CFrame.new(429.500031, 35.1000748, -112.89994, 0.999982238, 7.6052588e-022, -5.96041723e-008, 1.49011612e-008, 0.999998391, 1.1694634e-011, 5.96040977e-008, -1.19534304e-011, 0.99998349)
o533.BottomSurface = Enum.SurfaceType.Smooth
o533.TopSurface = Enum.SurfaceType.Smooth
o533.Color = Color3.new(0.411765, 0.4, 0.360784)
o533.Position = Vector3.new(429.500031, 35.1000748, -112.89994)
o534.Parent = o533
o534.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o535.Parent = o533
o535.C0 = CFrame.new(0, 0, 0, 0.258818209, 0.965922832, 0, -0.96592468, 0.258818716, -1.27595807e-014, 1.24344979e-014, -3.55271368e-015, 0.999997854)
o535.Part0 = o533
o535.Part1 = o536
o536.Name = "Pokey"
o536.Parent = o376
o536.BrickColor = BrickColor.new("Flint")
o536.Position = Vector3.new(429.500031, 35.1000748, -112.89994)
o536.Rotation = Vector3.new(-6.70805134e-010, -3.41507484e-006, -75)
o536.CanCollide = false
o536.FormFactor = Enum.FormFactor.Custom
o536.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o536.CFrame = CFrame.new(429.500031, 35.1000748, -112.89994, 0.258815229, 0.965911686, -5.96043002e-008, -0.965925455, 0.258818924, 1.17075898e-011, 1.54382551e-008, 5.75702259e-008, 0.999985635)
o536.BottomSurface = Enum.SurfaceType.Smooth
o536.TopSurface = Enum.SurfaceType.Smooth
o536.Color = Color3.new(0.411765, 0.4, 0.360784)
o536.Position = Vector3.new(429.500031, 35.1000748, -112.89994)
o537.Parent = o536
o537.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o538.Parent = o536
o538.C0 = CFrame.new(2.28881836e-005, -4.57763672e-005, 1.52587891e-005, 0.258818448, -1.24344979e-014, -0.965925455, 0.965923667, 3.55271368e-015, 0.258818924, 0, -0.999998033, -1.25375428e-014)
o538.Part0 = o536
o538.Part1 = o557
o539.Name = "Pokey"
o539.Parent = o376
o539.BrickColor = BrickColor.new("Flint")
o539.Position = Vector3.new(429.500031, 37.1000366, -110.699959)
o539.Rotation = Vector3.new(-6.70086708e-010, -3.41506848e-006, -75)
o539.CanCollide = false
o539.FormFactor = Enum.FormFactor.Custom
o539.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o539.CFrame = CFrame.new(429.500031, 37.1000366, -110.699959, 0.258814752, 0.965909839, -5.96041865e-008, -0.965925455, 0.258818924, 1.16950295e-011, 1.54382374e-008, 5.75701122e-008, 0.999983728)
o539.BottomSurface = Enum.SurfaceType.Smooth
o539.TopSurface = Enum.SurfaceType.Smooth
o539.Color = Color3.new(0.411765, 0.4, 0.360784)
o539.Position = Vector3.new(429.500031, 37.1000366, -110.699959)
o540.Parent = o539
o540.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o541.Parent = o539
o541.C0 = CFrame.new(-7.62939453e-006, -1.52587891e-005, -0.199996948, 0.258818448, -1.24344979e-014, -0.965925455, 0.965923667, 3.55271368e-015, 0.258818924, 0, -0.999998033, -1.25375428e-014)
o541.Part0 = o539
o541.Part1 = o560
o542.Name = "Pokey"
o542.Parent = o376
o542.BrickColor = BrickColor.new("Flint")
o542.Position = Vector3.new(429.5, 35.1000671, -113.699928)
o542.Rotation = Vector3.new(-6.70086708e-010, -3.41506848e-006, -45)
o542.CanCollide = false
o542.FormFactor = Enum.FormFactor.Custom
o542.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o542.CFrame = CFrame.new(429.5, 35.1000671, -113.699928, 0.707095265, 0.707095265, -5.96041865e-008, -0.707106769, 0.707106709, 1.16950295e-011, 4.21549728e-008, 4.21380761e-008, 0.999983728)
o542.BottomSurface = Enum.SurfaceType.Smooth
o542.TopSurface = Enum.SurfaceType.Smooth
o542.Color = Color3.new(0.411765, 0.4, 0.360784)
o542.Position = Vector3.new(429.5, 35.1000671, -113.699928)
o543.Parent = o542
o543.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o544.Parent = o542
o544.C0 = CFrame.new(-7.62939453e-006, -7.62939453e-006, -0.199981689, 0.707105398, -0.707106769, 8.8817842e-015, 0.707105398, 0.707106709, -8.8817842e-015, 0, -1.25375428e-014, 0.999998033)
o544.Part0 = o542
o544.Part1 = o551
o545.Parent = o376
o545.Material = Enum.Material.Sand
o545.BrickColor = BrickColor.new("Grime")
o545.Position = Vector3.new(429.5, 37.1000366, -109.899971)
o545.Rotation = Vector3.new(-6.70086764e-010, -3.41506848e-006, 1.85287757e-010)
o545.FormFactor = Enum.FormFactor.Custom
o545.Size = Vector3.new(1, 1, 1)
o545.CFrame = CFrame.new(429.5, 37.1000366, -109.899971, 0.999983788, -3.233829e-012, -5.960419e-008, 3.41682607e-012, 1, 1.16950304e-011, 5.960419e-008, -1.19517417e-011, 0.999983788)
o545.BottomSurface = Enum.SurfaceType.Smooth
o545.TopSurface = Enum.SurfaceType.Smooth
o545.Color = Color3.new(0.498039, 0.556863, 0.392157)
o545.Position = Vector3.new(429.5, 37.1000366, -109.899971)
o546.Parent = o545
o546.MeshType = Enum.MeshType.Sphere
o547.Parent = o545
o547.C0 = CFrame.new(0, 3.81469727e-006, -1, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o547.Part0 = o545
o547.Part1 = o560
o548.Parent = o376
o548.Material = Enum.Material.Sand
o548.BrickColor = BrickColor.new("Grime")
o548.Position = Vector3.new(429.5, 39.1000366, -109.899971)
o548.Rotation = Vector3.new(-6.70805134e-010, -3.41507507e-006, 1.86343788e-010)
o548.FormFactor = Enum.FormFactor.Custom
o548.Size = Vector3.new(1, 1, 1)
o548.CFrame = CFrame.new(429.5, 39.1000366, -109.899971, 0.999985695, -3.25226586e-012, -5.96043037e-008, 3.3983955e-012, 1, 1.17075906e-011, 5.96043037e-008, -1.1939204e-011, 0.999985695)
o548.BottomSurface = Enum.SurfaceType.Smooth
o548.TopSurface = Enum.SurfaceType.Smooth
o548.Color = Color3.new(0.498039, 0.556863, 0.392157)
o548.Position = Vector3.new(429.5, 39.1000366, -109.899971)
o549.Parent = o548
o549.MeshType = Enum.MeshType.Sphere
o550.Parent = o548
o550.C0 = CFrame.new(0, -0.999996185, 0, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o550.Part0 = o548
o550.Part1 = o563
o551.Parent = o376
o551.Material = Enum.Material.Sand
o551.BrickColor = BrickColor.new("Grime")
o551.Position = Vector3.new(429.5, 35.1000671, -113.89991)
o551.Rotation = Vector3.new(-6.70805134e-010, -3.41507507e-006, 1.86343788e-010)
o551.FormFactor = Enum.FormFactor.Custom
o551.Size = Vector3.new(1, 1, 1)
o551.CFrame = CFrame.new(429.5, 35.1000671, -113.89991, 0.999985695, -3.25226586e-012, -5.96043037e-008, 3.3983955e-012, 1, 1.17075906e-011, 5.96043037e-008, -1.1939204e-011, 0.999985695)
o551.BottomSurface = Enum.SurfaceType.Smooth
o551.TopSurface = Enum.SurfaceType.Smooth
o551.Color = Color3.new(0.498039, 0.556863, 0.392157)
o551.Position = Vector3.new(429.5, 35.1000671, -113.89991)
o552.Parent = o551
o552.MeshType = Enum.MeshType.Sphere
o553.Parent = o551
o553.C0 = CFrame.new(0, -2.78949738e-005, 1, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o553.Part0 = o551
o553.Part1 = o557
o554.Parent = o376
o554.Material = Enum.Material.Sand
o554.BrickColor = BrickColor.new("Grime")
o554.Position = Vector3.new(429.5, 36.1000404, -111.899956)
o554.Rotation = Vector3.new(-6.70805134e-010, -3.41507507e-006, 1.86343788e-010)
o554.FormFactor = Enum.FormFactor.Custom
o554.Size = Vector3.new(1.4000001, 9, 1.4000001)
o554.CFrame = CFrame.new(429.5, 36.1000404, -111.899956, 0.999985695, -3.25226586e-012, -5.96043037e-008, 3.3983955e-012, 1, 1.17075906e-011, 5.96043037e-008, -1.1939204e-011, 0.999985695)
o554.BottomSurface = Enum.SurfaceType.Smooth
o554.TopSurface = Enum.SurfaceType.Smooth
o554.Color = Color3.new(0.498039, 0.556863, 0.392157)
o554.Position = Vector3.new(429.5, 36.1000404, -111.899956)
o555.Parent = o554
o556.Parent = o554
o556.C0 = CFrame.new(0, -1, -0.999984741, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o556.Part0 = o554
o556.Part1 = o557
o557.Parent = o376
o557.Material = Enum.Material.Sand
o557.BrickColor = BrickColor.new("Grime")
o557.Position = Vector3.new(429.5, 35.1000404, -112.899925)
o557.Rotation = Vector3.new(-90, -1.87397459e-010, -3.41512396e-006)
o557.FormFactor = Enum.FormFactor.Custom
o557.Size = Vector3.new(1, 2, 1)
o557.CFrame = CFrame.new(429.5, 35.1000404, -112.899925, 0.999987602, 5.96044174e-008, -3.27070272e-012, 3.37996493e-012, -1.17201509e-011, 1, 5.96044174e-008, -0.999987602, -1.19266663e-011)
o557.BottomSurface = Enum.SurfaceType.Smooth
o557.TopSurface = Enum.SurfaceType.Smooth
o557.Color = Color3.new(0.498039, 0.556863, 0.392157)
o557.Position = Vector3.new(429.5, 35.1000404, -112.899925)
o558.Parent = o557
o559.Parent = o557
o559.C0 = CFrame.new(0, 1, 1.5, 0.999998093, 1.84370917e-014, 0, 0, 1.25375428e-014, -0.999998093, 1.84370917e-014, 1, -1.25375428e-014)
o559.Part0 = o557
o559.Part1 = o569
o560.Parent = o376
o560.Material = Enum.Material.Sand
o560.BrickColor = BrickColor.new("Grime")
o560.Position = Vector3.new(429.5, 37.1000404, -110.899956)
o560.Rotation = Vector3.new(-90, -1.86341109e-010, -3.41512396e-006)
o560.FormFactor = Enum.FormFactor.Custom
o560.Size = Vector3.new(1, 2, 1)
o560.CFrame = CFrame.new(429.5, 37.1000404, -110.899956, 0.999985695, 5.96043037e-008, -3.25226586e-012, 3.3983955e-012, -1.17075906e-011, 1, 5.96043037e-008, -0.999985695, -1.1939204e-011)
o560.BottomSurface = Enum.SurfaceType.Smooth
o560.TopSurface = Enum.SurfaceType.Smooth
o560.Color = Color3.new(0.498039, 0.556863, 0.392157)
o560.Position = Vector3.new(429.5, 37.1000404, -110.899956)
o561.Parent = o560
o562.Parent = o560
o562.C0 = CFrame.new(0, -1, 1, 0.999998093, 1.84370917e-014, 0, 0, 1.25375428e-014, -0.999998093, 1.84370917e-014, 1, -1.25375428e-014)
o562.Part0 = o560
o562.Part1 = o563
o563.Parent = o376
o563.Material = Enum.Material.Sand
o563.BrickColor = BrickColor.new("Grime")
o563.Position = Vector3.new(429.5, 38.1000404, -109.899971)
o563.Rotation = Vector3.new(-6.71523559e-010, -3.41508166e-006, 1.8739979e-010)
o563.FormFactor = Enum.FormFactor.Custom
o563.Size = Vector3.new(1, 2, 1)
o563.CFrame = CFrame.new(429.5, 38.1000404, -109.899971, 0.999987602, -3.27070272e-012, -5.96044174e-008, 3.37996493e-012, 1, 1.17201509e-011, 5.96044174e-008, -1.19266663e-011, 0.999987602)
o563.BottomSurface = Enum.SurfaceType.Smooth
o563.TopSurface = Enum.SurfaceType.Smooth
o563.Color = Color3.new(0.498039, 0.556863, 0.392157)
o563.Position = Vector3.new(429.5, 38.1000404, -109.899971)
o564.Parent = o563
o565.Parent = o563
o565.C0 = CFrame.new(0, 2.49999952, -2, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o565.Part0 = o563
o565.Part1 = o566
o566.Parent = o376
o566.Material = Enum.Material.Sand
o566.BrickColor = BrickColor.new("Grime")
o566.Position = Vector3.new(429.5, 40.6000404, -111.899948)
o566.Rotation = Vector3.new(-6.72241873e-010, -3.41508803e-006, 1.88455793e-010)
o566.FormFactor = Enum.FormFactor.Custom
o566.Size = Vector3.new(1.4000001, 1.39999998, 1.39999998)
o566.CFrame = CFrame.new(429.5, 40.6000404, -111.899948, 0.99998951, -3.28913958e-012, -5.96045311e-008, 3.36153436e-012, 1, 1.17327112e-011, 5.96045311e-008, -1.19141285e-011, 0.99998951)
o566.BottomSurface = Enum.SurfaceType.Smooth
o566.TopSurface = Enum.SurfaceType.Smooth
o566.Color = Color3.new(0.498039, 0.556863, 0.392157)
o566.Position = Vector3.new(429.5, 40.6000404, -111.899948)
o567.Parent = o566
o567.MeshType = Enum.MeshType.Sphere
o568.Parent = o566
o568.C0 = CFrame.new(0, -2.49999952, -1.99998474, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o568.Part0 = o566
o568.Part1 = o572
o569.Parent = o376
o569.Material = Enum.Material.Sand
o569.BrickColor = BrickColor.new("Grime")
o569.Position = Vector3.new(429.5, 36.6000404, -113.89991)
o569.Rotation = Vector3.new(-6.72241873e-010, -3.41508803e-006, 1.88455793e-010)
o569.FormFactor = Enum.FormFactor.Custom
o569.Size = Vector3.new(1, 3, 1)
o569.CFrame = CFrame.new(429.5, 36.6000404, -113.89991, 0.99998951, -3.28913958e-012, -5.96045311e-008, 3.36153436e-012, 1, 1.17327112e-011, 5.96045311e-008, -1.19141285e-011, 0.99998951)
o569.BottomSurface = Enum.SurfaceType.Smooth
o569.TopSurface = Enum.SurfaceType.Smooth
o569.Color = Color3.new(0.498039, 0.556863, 0.392157)
o569.Position = Vector3.new(429.5, 36.6000404, -113.89991)
o570.Parent = o569
o571.Parent = o569
o571.C0 = CFrame.new(0, 1.5, 0, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o571.Part0 = o569
o571.Part1 = o572
o572.Parent = o376
o572.Material = Enum.Material.Sand
o572.BrickColor = BrickColor.new("Grime")
o572.Position = Vector3.new(429.5, 38.1000404, -113.89991)
o572.Rotation = Vector3.new(-6.72960243e-010, -3.41509462e-006, 1.89511795e-010)
o572.FormFactor = Enum.FormFactor.Custom
o572.Size = Vector3.new(1, 1, 1)
o572.CFrame = CFrame.new(429.5, 38.1000404, -113.89991, 0.999991417, -3.30757643e-012, -5.96046448e-008, 3.34310357e-012, 1, 1.17452714e-011, 5.96046448e-008, -1.19015908e-011, 0.999991417)
o572.BottomSurface = Enum.SurfaceType.Smooth
o572.TopSurface = Enum.SurfaceType.Smooth
o572.Color = Color3.new(0.498039, 0.556863, 0.392157)
o572.Position = Vector3.new(429.5, 38.1000404, -113.89991)
o573.Parent = o572
o573.MeshType = Enum.MeshType.Sphere
o574.Parent = o572
o574.C0 = CFrame.new(0, -5.40000391, 1.99998474, -0.866023242, -7.39740287e-008, 0.499998778, -1.27215841e-007, 1, -7.23958067e-008, -0.499998778, -1.26304244e-007, -0.866023242)
o574.Part0 = o572
o574.Part1 = o578
o575.Name = "Pokey"
o575.Parent = o376
o575.BrickColor = BrickColor.new("Flint")
o575.Position = Vector3.new(429.5, 32.3000679, -111.89994)
o575.Rotation = Vector3.new(-6.75669465e-010, -1.70754424e-006, 1.90528426e-010)
o575.CanCollide = false
o575.FormFactor = Enum.FormFactor.Custom
o575.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o575.CFrame = CFrame.new(429.5, 32.3000679, -111.89994, 0.999997497, -3.32534e-012, -2.98022691e-008, 3.32178729e-012, 1, 1.17926268e-011, 2.9802278e-008, -1.18739636e-011, 0.999997497)
o575.BottomSurface = Enum.SurfaceType.Smooth
o575.TopSurface = Enum.SurfaceType.Smooth
o575.Color = Color3.new(0.411765, 0.4, 0.360784)
o575.Position = Vector3.new(429.5, 32.3000679, -111.89994)
o576.Parent = o575
o576.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o577.Parent = o575
o577.C0 = CFrame.new(-1.52587891e-005, -3.58819962e-005, 0, 4.47034232e-008, -5.32905773e-008, -0.999997497, 1.18217372e-007, 1, -5.32907052e-008, 0.999997497, -1.18217152e-007, 4.47034232e-008)
o577.Part0 = o575
o577.Part1 = o587
o578.Name = "Pokey"
o578.Parent = o376
o578.BrickColor = BrickColor.new("Flint")
o578.Position = Vector3.new(429.5, 32.7000351, -111.89994)
o578.Rotation = Vector3.new(180, 29.9998035, 180)
o578.CanCollide = false
o578.FormFactor = Enum.FormFactor.Custom
o578.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o578.CFrame = CFrame.new(429.5, 32.7000351, -111.89994, -0.866020083, -7.39770911e-008, 0.49999702, -1.27224595e-007, 1, -7.24043474e-008, -0.49999702, -1.26315669e-007, -0.866020083)
o578.BottomSurface = Enum.SurfaceType.Smooth
o578.TopSurface = Enum.SurfaceType.Smooth
o578.Color = Color3.new(0.411765, 0.4, 0.360784)
o578.Position = Vector3.new(429.5, 32.7000351, -111.89994)
o579.Parent = o578
o579.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o580.Parent = o578
o580.C0 = CFrame.new(0, -0.199999988, 0, 0.258818209, -8.12434919e-008, 0.965922892, 1.18632386e-007, 1, 5.2321468e-008, -0.965922892, 1.01047597e-007, 0.258818209)
o580.Part0 = o578
o580.Part1 = o581
o581.Name = "Pokey"
o581.Parent = o376
o581.BrickColor = BrickColor.new("Flint")
o581.Position = Vector3.new(429.5, 32.5000343, -111.89994)
o581.Rotation = Vector3.new(180, -44.9998245, -180)
o581.CanCollide = false
o581.FormFactor = Enum.FormFactor.Custom
o581.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o581.CFrame = CFrame.new(429.5, 32.5000343, -111.89994, -0.707104623, 4.69051713e-008, -0.707104623, 1.55641402e-007, 1, -8.93072638e-008, 0.707104623, -1.73204427e-007, -0.707104623)
o581.BottomSurface = Enum.SurfaceType.Smooth
o581.TopSurface = Enum.SurfaceType.Smooth
o581.Color = Color3.new(0.411765, 0.4, 0.360784)
o581.Position = Vector3.new(429.5, 32.5000343, -111.89994)
o582.Parent = o581
o582.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o583.Parent = o581
o583.C0 = CFrame.new(0, -0.199999988, 0, 0.707104623, 1.0972542e-007, 0.707104623, -5.49751817e-008, 1, -1.00199202e-007, -0.707104623, 3.19776383e-008, 0.707104623)
o583.Part0 = o581
o583.Part1 = o587
o584.Name = "Pokey"
o584.Parent = o376
o584.BrickColor = BrickColor.new("Flint")
o584.Position = Vector3.new(429.5, 31.900034, -111.89994)
o584.Rotation = Vector3.new(180, -29.9998989, 180)
o584.CanCollide = false
o584.FormFactor = Enum.FormFactor.Custom
o584.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o584.CFrame = CFrame.new(429.5, 31.900034, -111.89994, -0.866022706, -8.66976677e-008, -0.49999845, -3.9738957e-008, 1, -1.04565913e-007, 0.49999845, -7.06871504e-008, -0.866022706)
o584.BottomSurface = Enum.SurfaceType.Smooth
o584.TopSurface = Enum.SurfaceType.Smooth
o584.Color = Color3.new(0.411765, 0.4, 0.360784)
o584.Position = Vector3.new(429.5, 31.900034, -111.89994)
o585.Parent = o584
o585.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o586.Parent = o584
o586.C0 = CFrame.new(0, 0.400000006, 0, 0.49999845, -5.26995549e-008, 0.866022706, 4.75420947e-008, 1, 3.34036372e-008, -0.866022706, 2.44702321e-008, 0.49999845)
o586.Part0 = o584
o586.Part1 = o587
o587.Name = "Pokey"
o587.Parent = o376
o587.BrickColor = BrickColor.new("Flint")
o587.Position = Vector3.new(429.5, 32.3000336, -111.89994)
o587.Rotation = Vector3.new(-6.77403705e-006, -90, 0)
o587.CanCollide = false
o587.FormFactor = Enum.FormFactor.Custom
o587.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o587.CFrame = CFrame.new(429.5, 32.3000336, -111.89994, 1.49011843e-008, -5.32940305e-008, -1, 1.18229245e-007, 1, -5.32940305e-008, 1, -1.18229245e-007, 1.49011896e-008)
o587.BottomSurface = Enum.SurfaceType.Smooth
o587.TopSurface = Enum.SurfaceType.Smooth
o587.Color = Color3.new(0.411765, 0.4, 0.360784)
o587.Position = Vector3.new(429.5, 32.3000336, -111.89994)
o588.Parent = o587
o588.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o589.Name = "Cactus"
o589.Parent = o1
o589.PrimaryPart = o768
o590.Name = "Body"
o590.Parent = o589
o591.Name = "Pokey"
o591.Parent = o590
o591.BrickColor = BrickColor.new("Flint")
o591.Position = Vector3.new(823.30011, 35.1000748, -9.8999176)
o591.Rotation = Vector3.new(-6.69333144e-010, -3.41505938e-006, 30.0000019)
o591.CanCollide = false
o591.FormFactor = Enum.FormFactor.Custom
o591.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o591.CFrame = CFrame.new(823.30011, 35.1000748, -9.8999176, 0.866006613, -0.499989182, -5.96040302e-008, 0.499998301, 0.866022527, 1.16818465e-011, 5.16124814e-008, -2.98122949e-008, 0.999981105)
o591.BottomSurface = Enum.SurfaceType.Smooth
o591.TopSurface = Enum.SurfaceType.Smooth
o591.Color = Color3.new(0.411765, 0.4, 0.360784)
o591.Position = Vector3.new(823.30011, 35.1000748, -9.8999176)
o592.Parent = o591
o592.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o593.Parent = o591
o593.C0 = CFrame.new(0, 0, 0.399993896, 0.866021991, 0.499999106, -5.32907052e-015, -0.499998063, 0.866023898, -1.0658141e-014, 0, -1.27595781e-014, 0.999997616)
o593.Part0 = o591
o593.Part1 = o747
o594.Name = "Pokey"
o594.Parent = o590
o594.BrickColor = BrickColor.new("Flint")
o594.Position = Vector3.new(823.300049, 37.1000366, -7.49995041)
o594.Rotation = Vector3.new(-6.70086708e-010, -3.41506848e-006, -8.53588801e-007)
o594.CanCollide = false
o594.FormFactor = Enum.FormFactor.Custom
o594.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o594.CFrame = CFrame.new(823.300049, 37.1000366, -7.49995041, 0.999983251, 1.48976858e-008, -5.96041865e-008, -1.48977444e-008, 0.999999464, 1.16950295e-011, 5.96041581e-008, -1.19508474e-011, 0.999983728)
o594.BottomSurface = Enum.SurfaceType.Smooth
o594.TopSurface = Enum.SurfaceType.Smooth
o594.Color = Color3.new(0.411765, 0.4, 0.360784)
o594.Position = Vector3.new(823.300049, 37.1000366, -7.49995041)
o595.Parent = o594
o595.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o596.Parent = o594
o596.C0 = CFrame.new(-1.52587891e-005, 3.81469727e-006, 0, 0.999997556, 0, -1.49011425e-008, 1.49011514e-008, 1.2537536e-014, 0.999999464, 0, -0.999998033, -1.25375428e-014)
o596.Part0 = o594
o596.Part1 = o774
o597.Name = "Pokey"
o597.Parent = o590
o597.BrickColor = BrickColor.new("Flint")
o597.Position = Vector3.new(823.30011, 35.1000748, -9.0999279)
o597.Rotation = Vector3.new(-6.70805134e-010, -3.41507484e-006, 15.000001)
o597.CanCollide = false
o597.FormFactor = Enum.FormFactor.Custom
o597.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o597.CFrame = CFrame.new(823.30011, 35.1000748, -9.0999279, 0.965911746, -0.258815289, -5.96043002e-008, 0.258818984, 0.965925574, 1.17075898e-011, 5.75702295e-008, -1.54382587e-008, 0.999985635)
o597.BottomSurface = Enum.SurfaceType.Smooth
o597.TopSurface = Enum.SurfaceType.Smooth
o597.Color = Color3.new(0.411765, 0.4, 0.360784)
o597.Position = Vector3.new(823.30011, 35.1000748, -9.0999279)
o598.Parent = o597
o598.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o599.Parent = o597
o599.C0 = CFrame.new(-4.57763672e-005, -2.28881836e-005, -0.399993896, 0.965923727, 3.55271368e-015, 0.258818984, -0.258818507, 1.24344979e-014, 0.965925574, 0, -0.999998033, -1.25375428e-014)
o599.Part0 = o597
o599.Part1 = o771
o600.Name = "Pokey"
o600.Parent = o590
o600.BrickColor = BrickColor.new("Flint")
o600.Position = Vector3.new(823.300049, 37.1000366, -7.09996271)
o600.Rotation = Vector3.new(-6.68613442e-010, -3.41505279e-006, -14.9999952)
o600.CanCollide = false
o600.FormFactor = Enum.FormFactor.Custom
o600.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o600.CFrame = CFrame.new(823.300049, 37.1000366, -7.09996271, 0.965900421, 0.258812159, -5.96039165e-008, -0.258817345, 0.965919793, 1.16692628e-011, 5.75757433e-008, 1.5414976e-008, 0.999979198)
o600.BottomSurface = Enum.SurfaceType.Smooth
o600.TopSurface = Enum.SurfaceType.Smooth
o600.Color = Color3.new(0.411765, 0.4, 0.360784)
o600.Position = Vector3.new(823.300049, 37.1000366, -7.09996271)
o601.Parent = o600
o601.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o602.Parent = o600
o602.C0 = CFrame.new(0, 0, 0.199996948, 0.707102299, -0.707102954, 3.55271368e-015, 0.707103431, 0.707104146, -1.0658141e-014, -7.10542736e-015, -1.0658141e-014, 0.999997616)
o602.Part0 = o600
o602.Part1 = o744
o603.Name = "Pokey"
o603.Parent = o590
o603.BrickColor = BrickColor.new("Flint")
o603.Position = Vector3.new(823.300049, 37.9000397, -8.49995327)
o603.Rotation = Vector3.new(180, 59.997303, -3.64241276e-010)
o603.CanCollide = false
o603.FormFactor = Enum.FormFactor.Custom
o603.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o603.CFrame = CFrame.new(823.300049, 37.9000397, -8.49995327, 0.4999865, 3.17851886e-012, 0.866001844, 1.183156e-011, -1, -2.82172072e-012, 0.866001844, 1.19893522e-011, -0.4999865)
o603.BottomSurface = Enum.SurfaceType.Smooth
o603.TopSurface = Enum.SurfaceType.Smooth
o603.Color = Color3.new(0.411765, 0.4, 0.360784)
o603.Position = Vector3.new(823.300049, 37.9000397, -8.49995327)
o604.Parent = o603
o604.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o605.Parent = o603
o605.C0 = CFrame.new(0, 0, 0, 0.25881809, -1.6392798e-015, 0.96592176, -2.10537984e-014, -1, 7.33845883e-015, 0.96592176, 2.22357296e-014, -0.25881809)
o605.Part0 = o603
o605.Part1 = o720
o606.Name = "Pokey"
o606.Parent = o590
o606.BrickColor = BrickColor.new("Flint")
o606.Position = Vector3.new(823.300049, 38.9000397, -8.49995327)
o606.Rotation = Vector3.new(180, 44.9981422, -2.56064892e-010)
o606.CanCollide = false
o606.FormFactor = Enum.FormFactor.Custom
o606.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o606.CFrame = CFrame.new(823.300049, 38.9000397, -8.49995327, 0.707083941, 3.16008222e-012, 0.707083881, 1.07022108e-011, -1, -5.76587346e-012, 0.707083881, 1.20018891e-011, -0.707083941)
o606.BottomSurface = Enum.SurfaceType.Smooth
o606.TopSurface = Enum.SurfaceType.Smooth
o606.Color = Color3.new(0.411765, 0.4, 0.360784)
o606.Position = Vector3.new(823.300049, 38.9000397, -8.49995327)
o607.Parent = o606
o607.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o608.Parent = o606
o608.C0 = CFrame.new(0, 0.199999809, 0, 0.866020918, -4.17160508e-015, -0.499997377, -1.45638913e-014, 1, -1.68821849e-014, 0.499997377, -2.19023306e-014, 0.866020918)
o608.Part0 = o606
o608.Part1 = o714
o609.Name = "Pokey"
o609.Parent = o590
o609.BrickColor = BrickColor.new("Flint")
o609.Position = Vector3.new(823.300049, 39.5000343, -8.49995327)
o609.Rotation = Vector3.new(-180, 74.9886551, -6.49579057e-010)
o609.CanCollide = false
o609.FormFactor = Enum.FormFactor.Custom
o609.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o609.CFrame = CFrame.new(823.300049, 39.5000343, -8.49995327, 0.258805275, 2.93415119e-012, 0.965874553, 1.2100685e-011, -1, 6.00931197e-013, 0.965874553, 1.21219831e-011, -0.258805275)
o609.BottomSurface = Enum.SurfaceType.Smooth
o609.TopSurface = Enum.SurfaceType.Smooth
o609.Color = Color3.new(0.411765, 0.4, 0.360784)
o609.Position = Vector3.new(823.300049, 39.5000343, -8.49995327)
o610.Parent = o609
o610.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o611.Parent = o609
o611.C0 = CFrame.new(0, 0, 0, 0.499995977, 2.23174699e-014, -0.866018414, -8.35616773e-014, 1, -7.40143759e-014, 0.866018414, -1.09373651e-013, 0.499995977)
o611.Part0 = o609
o611.Part1 = o612
o612.Name = "Pokey"
o612.Parent = o590
o612.BrickColor = BrickColor.new("Flint")
o612.Position = Vector3.new(823.300049, 39.5000343, -8.49995327)
o612.Rotation = Vector3.new(180, 14.9993105, -1.79976797e-010)
o612.CanCollide = false
o612.FormFactor = Enum.FormFactor.Custom
o612.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o612.CFrame = CFrame.new(823.300049, 39.5000343, -8.49995327, 0.965882301, 3.03401748e-012, 0.258807421, 6.48725518e-012, -1, -1.02531317e-011, 0.258807421, 1.20721211e-011, -0.965882301)
o612.BottomSurface = Enum.SurfaceType.Smooth
o612.TopSurface = Enum.SurfaceType.Smooth
o612.Color = Color3.new(0.411765, 0.4, 0.360784)
o612.Position = Vector3.new(823.300049, 39.5000343, -8.49995327)
o613.Parent = o612
o613.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o614.Parent = o612
o614.C0 = CFrame.new(0, 0.199995995, 0, -0.707101941, -7.5822868e-008, 0.707101882, -1.96260345e-007, 1, -8.9030074e-008, -0.707101882, -2.01729506e-007, -0.707101941)
o614.Part0 = o612
o614.Part1 = o705
o615.Name = "Pokey"
o615.Parent = o590
o615.BrickColor = BrickColor.new("Flint")
o615.Position = Vector3.new(823.300049, 38.5000343, -8.49995327)
o615.Rotation = Vector3.new(3.0826875e-006, 59.9967995, 180)
o615.CanCollide = false
o615.FormFactor = Enum.FormFactor.Custom
o615.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o615.CFrame = CFrame.new(823.300049, 38.5000343, -8.49995327, -0.499983907, -6.78867451e-008, 0.865997434, 8.91838781e-008, -1, -2.69006577e-008, 0.865997434, 6.37834745e-008, 0.499983907)
o615.BottomSurface = Enum.SurfaceType.Smooth
o615.TopSurface = Enum.SurfaceType.Smooth
o615.Color = Color3.new(0.411765, 0.4, 0.360784)
o615.Position = Vector3.new(823.300049, 38.5000343, -8.49995327)
o616.Parent = o615
o616.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o617.Parent = o615
o617.C0 = CFrame.new(0, -0.200004101, 0, -0.258817762, -8.9175515e-008, -0.965920866, -4.90726855e-008, 1, -7.91718762e-008, 0.965920866, 2.69094933e-008, -0.258817762)
o617.Part0 = o615
o617.Part1 = o714
o618.Name = "Pokey"
o618.Parent = o590
o618.BrickColor = BrickColor.new("Flint")
o618.Position = Vector3.new(823.300049, 40.3000031, -8.49994373)
o618.Rotation = Vector3.new(-6.70086819e-010, 0, 1.85288368e-010)
o618.CanCollide = false
o618.FormFactor = Enum.FormFactor.Custom
o618.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o618.CFrame = CFrame.new(823.300049, 40.3000031, -8.49994373, 0.999980569, -3.23382922e-012, 0, 3.41681414e-012, 1, 1.16949939e-011, 0, -1.19517399e-011, 0.999980569)
o618.BottomSurface = Enum.SurfaceType.Smooth
o618.TopSurface = Enum.SurfaceType.Smooth
o618.Color = Color3.new(0.411765, 0.4, 0.360784)
o618.Position = Vector3.new(823.300049, 40.3000031, -8.49994373)
o619.Parent = o618
o619.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o620.Parent = o618
o620.C0 = CFrame.new(0, -0.199969292, 0, 0.86602205, -1.84370697e-014, 0.499998003, 9.69821215e-015, -1, 2.0076358e-014, 0.499998003, 1.25375276e-014, -0.86602205)
o620.Part0 = o618
o620.Part1 = o681
o621.Name = "AnchoredBase"
o621.Parent = o590
o621.Transparency = 1
o621.Position = Vector3.new(823.300049, 32.1000443, -8.4999361)
o621.Rotation = Vector3.new(-5.78313175e-010, -1.2672718e-021, 2.50339138e-010)
o621.Anchored = true
o621.FormFactor = Enum.FormFactor.Custom
o621.Size = Vector3.new(1, 1, 1)
o621.CFrame = CFrame.new(823.300049, 32.1000443, -8.4999361, 1, -4.36924238e-012, -2.21180647e-023, 4.36924238e-012, 1, 1.00934686e-011, -2.19827482e-023, -1.00934695e-011, 1)
o621.BottomSurface = Enum.SurfaceType.Smooth
o621.TopSurface = Enum.SurfaceType.Smooth
o621.Position = Vector3.new(823.300049, 32.1000443, -8.4999361)
o622.Parent = o621
o623.Parent = o621
o623.C0 = CFrame.new(0, 0.199964046, 0, 1.49011612e-008, -5.32906341e-008, -0.99999845, 1.18217379e-007, 1, -5.32906981e-008, 0.99999845, -1.18217258e-007, 1.49011612e-008)
o623.Part0 = o621
o623.Part1 = o801
o624.Name = "Pokey"
o624.Parent = o590
o624.BrickColor = BrickColor.new("Flint")
o624.Position = Vector3.new(823.300049, 35.3000565, -8.49994564)
o624.Rotation = Vector3.new(-6.67817357e-010, -5.12264205e-006, 1.82339047e-010)
o624.CanCollide = false
o624.FormFactor = Enum.FormFactor.Custom
o624.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o624.CFrame = CFrame.new(823.300049, 35.3000565, -8.49994564, 0.999976993, -3.18234328e-012, -8.94069672e-008, 3.47011309e-012, 1, 1.16553434e-011, 8.94069672e-008, -1.19915189e-011, 0.999976993)
o624.BottomSurface = Enum.SurfaceType.Smooth
o624.TopSurface = Enum.SurfaceType.Smooth
o624.Color = Color3.new(0.411765, 0.4, 0.360784)
o624.Position = Vector3.new(823.300049, 35.3000565, -8.49994564)
o625.Parent = o624
o625.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o626.Parent = o624
o626.C0 = CFrame.new(0, 0.19999218, 0, 0.25881803, 1.45374663e-008, 0.965922296, -1.17214318e-008, 1, -1.19095382e-008, -0.965922296, -8.23963475e-009, 0.25881803)
o626.Part0 = o624
o626.Part1 = o687
o627.Name = "Pokey"
o627.Parent = o590
o627.BrickColor = BrickColor.new("Flint")
o627.Position = Vector3.new(823.300049, 39.9000359, -8.49994373)
o627.Rotation = Vector3.new(-8.65859828e-010, 44.9988899, -180)
o627.CanCollide = false
o627.FormFactor = Enum.FormFactor.Custom
o627.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o627.CFrame = CFrame.new(823.300049, 39.9000359, -8.49994373, -0.707093, 3.23382922e-012, 0.70709306, 5.85355722e-012, -1, 1.06856633e-011, 0.70709306, 1.19517399e-011, 0.707093)
o627.BottomSurface = Enum.SurfaceType.Smooth
o627.TopSurface = Enum.SurfaceType.Smooth
o627.Color = Color3.new(0.411765, 0.4, 0.360784)
o627.Position = Vector3.new(823.300049, 39.9000359, -8.49994373)
o628.Parent = o627
o628.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o629.Parent = o627
o629.C0 = CFrame.new(0, -0.199995995, 0, -0.25881806, 2.19023459e-014, -0.965921998, -9.69821215e-015, 1, -2.0076358e-014, 0.965921998, -4.17160635e-015, -0.25881806)
o629.Part0 = o627
o629.Part1 = o681
o630.Name = "Pokey"
o630.Parent = o590
o630.BrickColor = BrickColor.new("Flint")
o630.Position = Vector3.new(823.300049, 39.1000366, -6.49996471)
o630.Rotation = Vector3.new(-6.17629559e-010, -14.9997492, -180)
o630.CanCollide = false
o630.FormFactor = Enum.FormFactor.Custom
o630.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o630.CFrame = CFrame.new(823.300049, 39.1000366, -6.49996471, -0.965909719, 3.233829e-012, -0.258814812, -6.32729459e-012, -1, 1.04121876e-011, -0.258814812, 1.19517417e-011, 0.965909719)
o630.BottomSurface = Enum.SurfaceType.Smooth
o630.TopSurface = Enum.SurfaceType.Smooth
o630.Color = Color3.new(0.411765, 0.4, 0.360784)
o630.Position = Vector3.new(823.300049, 39.1000366, -6.49996471)
o631.Parent = o630
o631.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o632.Parent = o630
o632.C0 = CFrame.new(0, 0, 0, -0.965923548, -1.45638997e-014, -0.258818448, -1.84370917e-014, -1, 1.25375428e-014, -0.258818448, -1.68822001e-014, 0.965923548)
o632.Part0 = o630
o632.Part1 = o762
o633.Name = "Pokey"
o633.Parent = o590
o633.BrickColor = BrickColor.new("Flint")
o633.Position = Vector3.new(823.300049, 37.9000359, -6.49996853)
o633.Rotation = Vector3.new(-5.57057289e-010, -29.9993687, -180)
o633.CanCollide = false
o633.FormFactor = Enum.FormFactor.Custom
o633.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o633.CFrame = CFrame.new(823.300049, 37.9000359, -6.49996853, -0.866008759, 3.233829e-012, -0.499990463, -8.80654751e-012, -1, 8.41975534e-012, -0.499990463, 1.19517408e-011, 0.866008759)
o633.BottomSurface = Enum.SurfaceType.Smooth
o633.TopSurface = Enum.SurfaceType.Smooth
o633.Color = Color3.new(0.411765, 0.4, 0.360784)
o633.Position = Vector3.new(823.300049, 37.9000359, -6.49996853)
o634.Parent = o633
o634.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o635.Parent = o633
o635.C0 = CFrame.new(0, -0.200000286, 0, -0.707103729, 9.69820114e-015, 0.707103729, -2.10538052e-014, 1, -7.33846137e-015, -0.707103729, 2.0076341e-014, -0.707103729)
o635.Part0 = o633
o635.Part1 = o636
o636.Name = "Pokey"
o636.Parent = o590
o636.BrickColor = BrickColor.new("Flint")
o636.Position = Vector3.new(823.300049, 38.1000366, -6.49996853)
o636.Rotation = Vector3.new(180, -14.9997683, -1.92917377e-010)
o636.CanCollide = false
o636.FormFactor = Enum.FormFactor.Custom
o636.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o636.CFrame = CFrame.new(823.300049, 38.1000366, -6.49996853, 0.965911448, 3.25226586e-012, -0.25881514, 2.52450404e-013, -1, -1.2188227e-011, -0.25881514, 1.1939204e-011, -0.965911448)
o636.BottomSurface = Enum.SurfaceType.Smooth
o636.TopSurface = Enum.SurfaceType.Smooth
o636.Color = Color3.new(0.411765, 0.4, 0.360784)
o636.Position = Vector3.new(823.300049, 38.1000366, -6.49996853)
o637.Parent = o636
o637.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o638.Parent = o636
o638.C0 = CFrame.new(-1.52587891e-005, -3.81469727e-006, 0, 0.965923429, 2.10538052e-014, -0.258818418, -1.84370917e-014, -1, 1.25375428e-014, -0.258818418, 7.33846137e-015, -0.965923429)
o638.Part0 = o636
o638.Part1 = o777
o639.Name = "Pokey"
o639.Parent = o590
o639.BrickColor = BrickColor.new("Flint")
o639.Position = Vector3.new(823.300049, 38.3000336, -6.49997139)
o639.Rotation = Vector3.new(-4.74313866e-010, -44.9989128, -180)
o639.CanCollide = false
o639.FormFactor = Enum.FormFactor.Custom
o639.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o639.CFrame = CFrame.new(823.300049, 38.3000336, -6.49997139, -0.707093239, 3.233829e-012, -0.707093358, -1.0685665e-011, -1, 5.85355722e-012, -0.707093358, 1.19517408e-011, 0.707093239)
o639.BottomSurface = Enum.SurfaceType.Smooth
o639.TopSurface = Enum.SurfaceType.Smooth
o639.Color = Color3.new(0.411765, 0.4, 0.360784)
o639.Position = Vector3.new(823.300049, 38.3000336, -6.49997139)
o640.Parent = o639
o640.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o641.Parent = o639
o641.C0 = CFrame.new(0, -0.199995995, 0, 0.258817971, 4.17160338e-015, 0.96592176, -2.00763648e-014, 1, 9.6982113e-015, -0.96592176, 2.19023374e-014, 0.258817971)
o641.Part0 = o639
o641.Part1 = o645
o642.Name = "Pokey"
o642.Parent = o590
o642.BrickColor = BrickColor.new("Flint")
o642.Position = Vector3.new(823.300049, 38.9000359, -6.49996471)
o642.Rotation = Vector3.new(179.997375, -89.6683884, -0.00248687412)
o642.CanCollide = false
o642.FormFactor = Enum.FormFactor.Custom
o642.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o642.CFrame = CFrame.new(823.300049, 38.9000359, -6.49996471, 7.45050812e-008, 3.233829e-012, -0.999983251, -1.16950243e-011, -1, -3.41682455e-012, -0.999983251, 1.19517417e-011, -7.45050812e-008)
o642.BottomSurface = Enum.SurfaceType.Smooth
o642.TopSurface = Enum.SurfaceType.Smooth
o642.Color = Color3.new(0.411765, 0.4, 0.360784)
o642.Position = Vector3.new(823.300049, 38.9000359, -6.49996471)
o643.Parent = o642
o643.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o644.Parent = o642
o644.C0 = CFrame.new(0, -0.200000286, 1.52587891e-005, 1.49011345e-008, 1.2537536e-014, -0.999997556, -1.84370917e-014, -1, 1.25375428e-014, -0.999997556, -1.84370816e-014, -1.49011345e-008)
o644.Part0 = o642
o644.Part1 = o762
o645.Name = "Pokey"
o645.Parent = o590
o645.BrickColor = BrickColor.new("Flint")
o645.Position = Vector3.new(823.300049, 38.5000305, -6.49997139)
o645.Rotation = Vector3.new(180, -59.9985123, -3.72687714e-010)
o645.CanCollide = false
o645.FormFactor = Enum.FormFactor.Custom
o645.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o645.CFrame = CFrame.new(823.300049, 38.5000305, -6.49997139, 0.499992639, 3.25226586e-012, -0.866012454, -8.43986773e-012, -1, -8.79688683e-012, -0.866012454, 1.1939204e-011, -0.499992639)
o645.BottomSurface = Enum.SurfaceType.Smooth
o645.TopSurface = Enum.SurfaceType.Smooth
o645.Color = Color3.new(0.411765, 0.4, 0.360784)
o645.Position = Vector3.new(823.300049, 38.5000305, -6.49997139)
o646.Parent = o645
o646.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o647.Parent = o645
o647.C0 = CFrame.new(-7.62939453e-006, 0.399991989, 0, 0.499998778, 2.00763648e-014, -0.866023183, -1.84370917e-014, -1, 1.25375428e-014, -0.866023183, -9.6982113e-015, -0.499998778)
o647.Part0 = o645
o647.Part1 = o777
o648.Name = "Pokey"
o648.Parent = o590
o648.BrickColor = BrickColor.new("Flint")
o648.Position = Vector3.new(823.300049, 37.3000374, -6.49996281)
o648.Rotation = Vector3.new(180, 1.70754731e-006, -1.83176238e-010)
o648.CanCollide = false
o648.FormFactor = Enum.FormFactor.Custom
o648.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o648.CFrame = CFrame.new(823.300049, 37.3000374, -6.49996281, 0.999977231, 3.1969555e-012, 2.98023224e-008, 3.45367745e-012, -1, -1.16698786e-011, 2.98023224e-008, 1.19768162e-011, -0.999977231)
o648.BottomSurface = Enum.SurfaceType.Smooth
o648.TopSurface = Enum.SurfaceType.Smooth
o648.Color = Color3.new(0.411765, 0.4, 0.360784)
o648.Position = Vector3.new(823.300049, 37.3000374, -6.49996281)
o649.Parent = o648
o649.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o650.Parent = o648
o650.C0 = CFrame.new(0, 0, 0, 0.258817971, -1.84370595e-014, -0.965921819, -1.68821967e-014, 1, 1.45638997e-014, 0.965921819, -1.25375208e-014, 0.258817971)
o650.Part0 = o648
o650.Part1 = o651
o651.Name = "Pokey"
o651.Parent = o590
o651.BrickColor = BrickColor.new("Flint")
o651.Position = Vector3.new(823.300049, 37.3000374, -6.49996281)
o651.Rotation = Vector3.new(180, -74.9960098, -7.11817105e-010)
o651.CanCollide = false
o651.FormFactor = Enum.FormFactor.Custom
o651.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o651.CFrame = CFrame.new(823.300049, 37.3000374, -6.49996281, 0.258814245, 3.21539215e-012, -0.965907812, -1.03952853e-011, -1, -6.34184545e-012, -0.965907812, 1.19642794e-011, -0.258814245)
o651.BottomSurface = Enum.SurfaceType.Smooth
o651.TopSurface = Enum.SurfaceType.Smooth
o651.Color = Color3.new(0.411765, 0.4, 0.360784)
o651.Position = Vector3.new(823.300049, 37.3000374, -6.49996281)
o652.Parent = o651
o652.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o653.Parent = o651
o653.C0 = CFrame.new(0, 0.199999809, 1.52587891e-005, 0.258818388, 1.68821967e-014, -0.965923488, -1.84370917e-014, -1, 1.25375428e-014, -0.965923488, -1.45638997e-014, -0.258818388)
o653.Part0 = o651
o653.Part1 = o759
o654.Name = "Pokey"
o654.Parent = o590
o654.BrickColor = BrickColor.new("Flint")
o654.Position = Vector3.new(823.300049, 37.9000359, -10.4999199)
o654.Rotation = Vector3.new(-4.79638163e-010, -44.9993896, -180)
o654.CanCollide = false
o654.FormFactor = Enum.FormFactor.Custom
o654.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o654.CFrame = CFrame.new(823.300049, 37.9000359, -10.4999199, -0.70709914, 3.28913958e-012, -0.707099259, -1.06732409e-011, -1, 5.91931452e-012, -0.707099259, 1.19141285e-011, 0.70709914)
o654.BottomSurface = Enum.SurfaceType.Smooth
o654.TopSurface = Enum.SurfaceType.Smooth
o654.Color = Color3.new(0.411765, 0.4, 0.360784)
o654.Position = Vector3.new(823.300049, 37.9000359, -10.4999199)
o655.Parent = o654
o655.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o656.Parent = o654
o656.C0 = CFrame.new(0, -0.200004101, 2.28881836e-005, -0.707105279, -4.17160974e-015, -0.707105279, -1.84370917e-014, -1, 1.25375428e-014, -0.707105279, -2.19023679e-014, 0.707105279)
o656.Part0 = o654
o656.Part1 = o786
o657.Name = "Pokey"
o657.Parent = o590
o657.BrickColor = BrickColor.new("Flint")
o657.Position = Vector3.new(823.300049, 36.3000374, -10.4999189)
o657.Rotation = Vector3.new(-8.65521654e-010, 44.9990273, -180)
o657.CanCollide = false
o657.FormFactor = Enum.FormFactor.Custom
o657.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o657.CFrame = CFrame.new(823.300049, 36.3000374, -10.4999189, -0.707094908, 3.25226586e-012, 0.707094789, 5.87547285e-012, -1, 1.0681519e-011, 0.707094789, 1.1939204e-011, 0.707094908)
o657.BottomSurface = Enum.SurfaceType.Smooth
o657.TopSurface = Enum.SurfaceType.Smooth
o657.Color = Color3.new(0.411765, 0.4, 0.360784)
o657.Position = Vector3.new(823.300049, 36.3000374, -10.4999189)
o658.Parent = o657
o658.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o659.Parent = o657
o659.C0 = CFrame.new(0, -0.200003147, 0, -0.707104027, 2.19023425e-014, 0.707104027, -1.2537536e-014, 1, 1.84370816e-014, -0.707104027, -4.17160423e-015, -0.707104027)
o659.Part0 = o657
o659.Part1 = o666
o660.Name = "Pokey"
o660.Parent = o590
o660.BrickColor = BrickColor.new("Flint")
o660.Position = Vector3.new(823.300049, 35.7000427, -10.4999361)
o660.Rotation = Vector3.new(180, -74.9955139, -7.1181866e-010)
o660.CanCollide = false
o660.FormFactor = Enum.FormFactor.Custom
o660.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o660.CFrame = CFrame.new(823.300049, 35.7000427, -10.4999361, 0.258813709, 3.21539236e-012, -0.965905547, -1.0395261e-011, -1, -6.34183071e-012, -0.965905547, 1.19642785e-011, -0.258813709)
o660.BottomSurface = Enum.SurfaceType.Smooth
o660.TopSurface = Enum.SurfaceType.Smooth
o660.Color = Color3.new(0.411765, 0.4, 0.360784)
o660.Position = Vector3.new(823.300049, 35.7000427, -10.4999361)
o661.Parent = o660
o661.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o662.Parent = o660
o662.C0 = CFrame.new(0, 0, 0, 0.258817911, -1.68821781e-014, -0.96592176, 9.698213e-015, 1, 2.00763648e-014, 0.96592176, 1.45638811e-014, 0.258817911)
o662.Part0 = o660
o662.Part1 = o663
o663.Name = "Pokey"
o663.Parent = o590
o663.BrickColor = BrickColor.new("Flint")
o663.Position = Vector3.new(823.300049, 35.7000427, -10.4999361)
o663.Rotation = Vector3.new(-5.57057289e-010, -29.9994488, -180)
o663.CanCollide = false
o663.FormFactor = Enum.FormFactor.Custom
o663.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o663.CFrame = CFrame.new(823.300049, 35.7000427, -10.4999361, -0.866010845, 3.233829e-012, -0.499991655, -8.80656832e-012, -1, 8.41977616e-012, -0.499991655, 1.19517417e-011, 0.866010845)
o663.BottomSurface = Enum.SurfaceType.Smooth
o663.TopSurface = Enum.SurfaceType.Smooth
o663.Color = Color3.new(0.411765, 0.4, 0.360784)
o663.Position = Vector3.new(823.300049, 35.7000427, -10.4999361)
o664.Parent = o663
o664.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o665.Parent = o663
o665.C0 = CFrame.new(-1.52587891e-005, 0.599976778, 3.05175781e-005, -0.866023242, -9.698213e-015, -0.499998748, -1.84370917e-014, -1, 1.25375428e-014, -0.499998748, -2.00763648e-014, 0.866023242)
o665.Part0 = o663
o665.Part1 = o765
o666.Name = "Pokey"
o666.Parent = o590
o666.BrickColor = BrickColor.new("Flint")
o666.Position = Vector3.new(823.300049, 36.500042, -10.4999189)
o666.Rotation = Vector3.new(179.997833, -89.7079163, -0.00209601992)
o666.CanCollide = false
o666.FormFactor = Enum.FormFactor.Custom
o666.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o666.CFrame = CFrame.new(823.300049, 36.500042, -10.4999189, 8.94063348e-008, 3.27070272e-012, -0.999987006, -1.1720144e-011, -1, -3.37996341e-012, -0.999987006, 1.19266663e-011, -8.94063348e-008)
o666.BottomSurface = Enum.SurfaceType.Smooth
o666.TopSurface = Enum.SurfaceType.Smooth
o666.Color = Color3.new(0.411765, 0.4, 0.360784)
o666.Position = Vector3.new(823.300049, 36.500042, -10.4999189)
o667.Parent = o666
o667.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o668.Parent = o666
o668.C0 = CFrame.new(-1.52587891e-005, -0.099998951, 1.52587891e-005, 2.98022655e-008, 1.2537536e-014, -0.999997497, -1.84370917e-014, -1, 1.25375428e-014, -0.999997497, -1.84370816e-014, -2.98022655e-008)
o668.Part0 = o666
o668.Part1 = o783
o669.Name = "Pokey"
o669.Parent = o590
o669.BrickColor = BrickColor.new("Flint")
o669.Position = Vector3.new(823.300049, 36.9000397, -10.4999037)
o669.Rotation = Vector3.new(-4.76088668e-010, -44.9990959, -180)
o669.CanCollide = false
o669.FormFactor = Enum.FormFactor.Custom
o669.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o669.CFrame = CFrame.new(823.300049, 36.9000397, -10.4999037, -0.707095504, 3.25226586e-012, -0.707095623, -1.06815294e-011, -1, 5.87547936e-012, -0.707095623, 1.1939204e-011, 0.707095504)
o669.BottomSurface = Enum.SurfaceType.Smooth
o669.TopSurface = Enum.SurfaceType.Smooth
o669.Color = Color3.new(0.411765, 0.4, 0.360784)
o669.Position = Vector3.new(823.300049, 36.9000397, -10.4999037)
o670.Parent = o669
o670.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o671.Parent = o669
o671.C0 = CFrame.new(0, 0.199997902, 0, 0.258818179, 4.17160593e-015, -0.965922713, 2.22357567e-014, 1, 1.63928446e-015, 0.965922713, 2.19023509e-014, 0.258818179)
o671.Part0 = o669
o671.Part1 = o675
o672.Name = "Pokey"
o672.Parent = o590
o672.BrickColor = BrickColor.new("Flint")
o672.Position = Vector3.new(823.30011, 37.3000374, -10.4999151)
o672.Rotation = Vector3.new(-6.19632401e-010, -14.9997959, -180)
o672.CanCollide = false
o672.FormFactor = Enum.FormFactor.Custom
o672.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o672.CFrame = CFrame.new(823.30011, 37.3000374, -10.4999151, -0.965912879, 3.27070272e-012, -0.258815587, -6.2981868e-012, -1, 1.04459861e-011, -0.258815587, 1.19266654e-011, 0.965912879)
o672.BottomSurface = Enum.SurfaceType.Smooth
o672.TopSurface = Enum.SurfaceType.Smooth
o672.Color = Color3.new(0.411765, 0.4, 0.360784)
o672.Position = Vector3.new(823.30011, 37.3000374, -10.4999151)
o673.Parent = o672
o673.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o674.Parent = o672
o674.C0 = CFrame.new(0, -0.199999809, 0, 0.258818388, 1.4563898e-014, -0.96592319, 2.00763732e-014, 1, -9.69821723e-015, 0.96592319, 1.6882195e-014, 0.258818388)
o674.Part0 = o672
o674.Part1 = o678
o675.Name = "Pokey"
o675.Parent = o590
o675.BrickColor = BrickColor.new("Flint")
o675.Position = Vector3.new(823.300049, 36.7000427, -10.4999037)
o675.Rotation = Vector3.new(-7.83333232e-010, 29.9995785, -180)
o675.CanCollide = false
o675.FormFactor = Enum.FormFactor.Custom
o675.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o675.CFrame = CFrame.new(823.300049, 36.7000427, -10.4999037, -0.866014481, 3.27070272e-012, 0.499993622, 2.93293948e-012, -1, 1.18399283e-011, 0.499993622, 1.19266663e-011, 0.866014481)
o675.BottomSurface = Enum.SurfaceType.Smooth
o675.TopSurface = Enum.SurfaceType.Smooth
o675.Color = Color3.new(0.411765, 0.4, 0.360784)
o675.Position = Vector3.new(823.300049, 36.7000427, -10.4999037)
o676.Parent = o675
o676.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o677.Parent = o675
o677.C0 = CFrame.new(0, 0.100001812, 0, -0.86602354, -2.22357567e-014, 0.499998927, -1.84370917e-014, -1, 1.25375428e-014, 0.499998927, -1.63928446e-015, 0.86602354)
o677.Part0 = o675
o677.Part1 = o783
o678.Name = "Pokey"
o678.Parent = o590
o678.BrickColor = BrickColor.new("Flint")
o678.Position = Vector3.new(823.30011, 37.5000381, -10.4999151)
o678.Rotation = Vector3.new(-1.0058413e-009, 59.9989357, -180)
o678.CanCollide = false
o678.FormFactor = Enum.FormFactor.Custom
o678.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o678.CFrame = CFrame.new(823.30011, 37.5000381, -10.4999151, -0.499994725, 3.28913958e-012, 0.86601615, 8.48005693e-012, -1, 8.77752818e-012, 0.86601615, 1.19141285e-011, 0.499994725)
o678.BottomSurface = Enum.SurfaceType.Smooth
o678.TopSurface = Enum.SurfaceType.Smooth
o678.Color = Color3.new(0.411765, 0.4, 0.360784)
o678.Position = Vector3.new(823.30011, 37.5000381, -10.4999151)
o679.Parent = o678
o679.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o680.Parent = o678
o680.C0 = CFrame.new(3.05175781e-005, -0.600004196, -3.05175781e-005, -0.499998957, -2.00763732e-014, 0.8660236, -1.84370917e-014, -1, 1.25375428e-014, 0.8660236, 9.69821723e-015, 0.499998957)
o680.Part0 = o678
o680.Part1 = o786
o681.Name = "Pokey"
o681.Parent = o590
o681.BrickColor = BrickColor.new("Flint")
o681.Position = Vector3.new(823.300049, 40.1000328, -8.49994373)
o681.Rotation = Vector3.new(180, 29.9994812, -2.15171506e-010)
o681.CanCollide = false
o681.FormFactor = Enum.FormFactor.Custom
o681.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o681.CFrame = CFrame.new(823.300049, 40.1000328, -8.49994373, 0.866011977, 3.25226586e-012, 0.499992192, 8.79688163e-012, -1, -8.43986513e-012, 0.499992192, 1.19392031e-011, -0.866011977)
o681.BottomSurface = Enum.SurfaceType.Smooth
o681.TopSurface = Enum.SurfaceType.Smooth
o681.Color = Color3.new(0.411765, 0.4, 0.360784)
o681.Position = Vector3.new(823.300049, 40.1000328, -8.49994373)
o682.Parent = o681
o682.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o683.Parent = o681
o683.C0 = CFrame.new(0, 0, 0, 0.707104683, -9.69821215e-015, 0.707104743, 7.33846306e-015, 1, -2.1053812e-014, -0.707104743, -2.0076358e-014, 0.707104683)
o683.Part0 = o681
o683.Part1 = o741
o684.Name = "Pokey"
o684.Parent = o590
o684.BrickColor = BrickColor.new("Flint")
o684.Position = Vector3.new(823.300049, 33.100071, -8.4999361)
o684.Rotation = Vector3.new(2.63510378e-006, 74.9975433, -3.21749576e-006)
o684.CanCollide = false
o684.FormFactor = Enum.FormFactor.Custom
o684.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o684.CFrame = CFrame.new(823.300049, 33.100071, -8.4999361, 0.258816004, 1.45340442e-008, 0.965914726, -1.17319114e-008, 1, -1.19032677e-008, -0.965914726, -8.25147062e-009, 0.258816004)
o684.BottomSurface = Enum.SurfaceType.Smooth
o684.TopSurface = Enum.SurfaceType.Smooth
o684.Color = Color3.new(0.411765, 0.4, 0.360784)
o684.Position = Vector3.new(823.300049, 33.100071, -8.4999361)
o685.Parent = o684
o685.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o686.Parent = o684
o686.C0 = CFrame.new(0, 0.200001001, 0, -0.707106054, -1.17214487e-008, -0.707105875, 1.33002054e-010, 1, -1.67096523e-008, 0.707105875, -1.19095507e-008, -0.707106054)
o686.Part0 = o684
o686.Part1 = o699
o687.Name = "Pokey"
o687.Parent = o590
o687.BrickColor = BrickColor.new("Flint")
o687.Position = Vector3.new(823.300049, 35.5000496, -8.49994564)
o687.Rotation = Vector3.new(2.63511197e-006, 74.9958649, -3.2175094e-006)
o687.CanCollide = false
o687.FormFactor = Enum.FormFactor.Custom
o687.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o687.CFrame = CFrame.new(823.300049, 35.5000496, -8.49994564, 0.258814067, 1.45339971e-008, 0.965907156, -1.17318519e-008, 1, -1.19032162e-008, -0.965907156, -8.25145019e-009, 0.258814067)
o687.BottomSurface = Enum.SurfaceType.Smooth
o687.TopSurface = Enum.SurfaceType.Smooth
o687.Color = Color3.new(0.411765, 0.4, 0.360784)
o687.Position = Vector3.new(823.300049, 35.5000496, -8.49994564)
o688.Parent = o687
o688.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o689.Parent = o687
o689.C0 = CFrame.new(0, 0.399985075, 0, -4.47034836e-008, -1.17214398e-008, -0.999997139, 1.19095436e-008, 1, -1.17214505e-008, 0.999997139, -1.19095436e-008, -4.47034836e-008)
o689.Part0 = o687
o689.Part1 = o723
o690.Name = "Pokey"
o690.Parent = o590
o690.BrickColor = BrickColor.new("Flint")
o690.Position = Vector3.new(823.300049, 34.9000702, -8.49992847)
o690.Rotation = Vector3.new(180, 59.9983101, -180)
o690.CanCollide = false
o690.FormFactor = Enum.FormFactor.Custom
o690.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o690.CFrame = CFrame.new(823.300049, 34.9000702, -8.49992847, -0.499991447, 5.47176526e-009, 0.866010606, -4.48665318e-008, 1, -3.22218376e-008, -0.866010606, -5.49658061e-008, -0.499991447)
o690.BottomSurface = Enum.SurfaceType.Smooth
o690.TopSurface = Enum.SurfaceType.Smooth
o690.Color = Color3.new(0.411765, 0.4, 0.360784)
o690.Position = Vector3.new(823.300049, 34.9000702, -8.49992847)
o691.Parent = o690
o691.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o692.Parent = o690
o692.C0 = CFrame.new(0, -0.199995041, 0, -0.499998569, -4.48546942e-008, 0.866023183, -5.03296747e-008, 1, 2.27357635e-008, -0.866023183, -3.2218928e-008, -0.499998569)
o692.Part0 = o690
o692.Part1 = o732
o693.Name = "Pokey"
o693.Parent = o590
o693.BrickColor = BrickColor.new("Flint")
o693.Position = Vector3.new(823.300049, 36.1000366, -8.49994564)
o693.Rotation = Vector3.new(180, 59.9983444, -180)
o693.CanCollide = false
o693.FormFactor = Enum.FormFactor.Custom
o693.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o693.CFrame = CFrame.new(823.300049, 36.1000366, -8.49994564, -0.499991626, 5.47176704e-009, 0.866010904, -4.48665283e-008, 1, -3.22218447e-008, -0.866010904, -5.49658168e-008, -0.499991626)
o693.BottomSurface = Enum.SurfaceType.Smooth
o693.TopSurface = Enum.SurfaceType.Smooth
o693.Color = Color3.new(0.411765, 0.4, 0.360784)
o693.Position = Vector3.new(823.300049, 36.1000366, -8.49994564)
o694.Parent = o693
o694.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o695.Parent = o693
o695.C0 = CFrame.new(0, 4.29153442e-006, 0, -0.499998838, -4.48546906e-008, -0.866023302, 5.47509416e-009, 1, -5.49546648e-008, 0.866023302, -3.22189315e-008, -0.499998838)
o695.Part0 = o693
o695.Part1 = o768
o696.Name = "Pokey"
o696.Parent = o590
o696.BrickColor = BrickColor.new("Flint")
o696.Position = Vector3.new(823.300049, 33.900074, -8.49992847)
o696.Rotation = Vector3.new(171.552826, -89.615387, 171.553146)
o696.CanCollide = false
o696.FormFactor = Enum.FormFactor.Custom
o696.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o696.CFrame = CFrame.new(823.300049, 33.900074, -8.49992847, -1.04308128e-007, -1.54900768e-008, -0.999977469, 4.93496444e-008, 1, -1.54906665e-008, 0.999977469, -4.93487846e-008, -1.04308128e-007)
o696.BottomSurface = Enum.SurfaceType.Smooth
o696.TopSurface = Enum.SurfaceType.Smooth
o696.Color = Color3.new(0.411765, 0.4, 0.360784)
o696.Position = Vector3.new(823.300049, 33.900074, -8.49992847)
o697.Parent = o696
o697.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o698.Parent = o696
o698.C0 = CFrame.new(0, 0.200000286, 0, -0.258818269, 8.45383425e-008, 0.965922892, -1.98450309e-007, 1, -1.40695079e-007, -0.965922892, -2.28102266e-007, -0.258818269)
o698.Part0 = o696
o698.Part1 = o702
o699.Name = "Pokey"
o699.Parent = o590
o699.BrickColor = BrickColor.new("Flint")
o699.Position = Vector3.new(823.300049, 33.3000717, -8.4999361)
o699.Rotation = Vector3.new(-3.38642447e-010, -59.99897, 3.76911613e-010)
o699.CanCollide = false
o699.FormFactor = Enum.FormFactor.Custom
o699.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o699.CFrame = CFrame.new(823.300049, 33.3000717, -8.4999361, 0.499994725, -3.28913958e-012, -0.866016448, 1.18415954e-011, 1, 2.95518167e-012, 0.866016448, -1.19141285e-011, 0.499994725)
o699.BottomSurface = Enum.SurfaceType.Smooth
o699.TopSurface = Enum.SurfaceType.Smooth
o699.Color = Color3.new(0.411765, 0.4, 0.360784)
o699.Position = Vector3.new(823.300049, 33.3000717, -8.4999361)
o700.Parent = o699
o700.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o701.Parent = o699
o701.C0 = CFrame.new(0, 0.199998975, 0, 0.499999076, -1.63928573e-015, 0.866023898, 1.84370917e-014, 1, -1.25375428e-014, -0.866023898, -2.22357634e-014, 0.499999076)
o701.Part0 = o699
o701.Part1 = o738
o702.Name = "Pokey"
o702.Parent = o590
o702.BrickColor = BrickColor.new("Flint")
o702.Position = Vector3.new(823.300049, 34.1000748, -8.49992847)
o702.Rotation = Vector3.new(5.28037208e-006, 14.9996948, -1.26115228e-005)
o702.CanCollide = false
o702.FormFactor = Enum.FormFactor.Custom
o702.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o702.CFrame = CFrame.new(823.300049, 34.1000748, -8.49992847, 0.965906978, 2.12608299e-007, 0.258813888, -1.96260132e-007, 1, -8.9017874e-008, -0.258813888, 3.51878846e-008, 0.965906978)
o702.BottomSurface = Enum.SurfaceType.Smooth
o702.TopSurface = Enum.SurfaceType.Smooth
o702.Color = Color3.new(0.411765, 0.4, 0.360784)
o702.Position = Vector3.new(823.300049, 34.1000748, -8.49992847)
o703.Parent = o702
o703.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o704.Parent = o702
o704.C0 = CFrame.new(0, 0, 0, 0.707104921, -1.1417611e-007, -0.707104921, 1.12554773e-007, 1, -4.89136127e-008, 0.707104921, -4.50014426e-008, 0.707104921)
o704.Part0 = o702
o704.Part1 = o711
o705.Name = "Pokey"
o705.Parent = o590
o705.BrickColor = BrickColor.new("Flint")
o705.Position = Vector3.new(823.300049, 39.3000374, -8.49995327)
o705.Rotation = Vector3.new(-5.89118918e-006, 29.9987335, 180)
o705.CanCollide = false
o705.FormFactor = Enum.FormFactor.Custom
o705.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o705.CFrame = CFrame.new(823.300049, 39.3000374, -8.49995327, -0.865992367, -1.25443592e-007, 0.499980867, 1.96263187e-007, -1, 8.90418974e-008, 0.499980867, 1.75237858e-007, 0.865992367)
o705.BottomSurface = Enum.SurfaceType.Smooth
o705.TopSurface = Enum.SurfaceType.Smooth
o705.Color = Color3.new(0.411765, 0.4, 0.360784)
o705.Position = Vector3.new(823.300049, 39.3000374, -8.49995327)
o706.Parent = o705
o706.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o707.Parent = o705
o707.C0 = CFrame.new(0, 0, 0, 0.707102537, -1.14176359e-007, -0.707102537, 1.12554133e-007, 1, -4.89133853e-008, 0.707102537, -4.50015918e-008, 0.707102537)
o707.Part0 = o705
o707.Part1 = o708
o708.Name = "Pokey"
o708.Parent = o590
o708.BrickColor = BrickColor.new("Flint")
o708.Position = Vector3.new(823.300049, 39.3000374, -8.49995327)
o708.Rotation = Vector3.new(5.95583833e-006, 74.9931183, 180)
o708.CanCollide = false
o708.FormFactor = Enum.FormFactor.Custom
o708.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o708.CFrame = CFrame.new(823.300049, 39.3000374, -8.49995327, -0.258810788, -4.90681806e-008, 0.965894759, 8.91858818e-008, -1, -2.6903118e-008, 0.965894759, 7.91817172e-008, 0.258810788)
o708.BottomSurface = Enum.SurfaceType.Smooth
o708.TopSurface = Enum.SurfaceType.Smooth
o708.Color = Color3.new(0.411765, 0.4, 0.360784)
o708.Position = Vector3.new(823.300049, 39.3000374, -8.49995327)
o709.Parent = o708
o709.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o710.Parent = o708
o710.C0 = CFrame.new(0, 0.599999905, 0, -2.98023224e-008, -8.91755221e-008, -0.999994993, -2.69093885e-008, 1, -8.917511e-008, 0.999994993, 2.6909488e-008, -2.98023224e-008)
o710.Part0 = o708
o710.Part1 = o714
o711.Name = "Pokey"
o711.Parent = o590
o711.BrickColor = BrickColor.new("Flint")
o711.Position = Vector3.new(823.300049, 34.1000748, -8.49992847)
o711.Rotation = Vector3.new(-1.78090568e-006, -29.999445, -5.99932719e-006)
o711.CanCollide = false
o711.FormFactor = Enum.FormFactor.Custom
o711.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o711.CFrame = CFrame.new(823.300049, 34.1000748, -8.49992847, 0.866010725, 9.06782631e-008, -0.499991596, -8.91667256e-008, 1, 2.69179221e-008, 0.499991596, 2.12711591e-008, 0.866010725)
o711.BottomSurface = Enum.SurfaceType.Smooth
o711.TopSurface = Enum.SurfaceType.Smooth
o711.Color = Color3.new(0.411765, 0.4, 0.360784)
o711.Position = Vector3.new(823.300049, 34.1000748, -8.49992847)
o712.Parent = o711
o712.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o713.Parent = o711
o713.C0 = CFrame.new(0, 0.60000062, 0, -8.94069672e-008, -8.91755221e-008, -0.999997556, -2.69094578e-008, 1, -8.91753302e-008, 0.999997556, 2.69094826e-008, -8.94069672e-008)
o713.Part0 = o711
o713.Part1 = o732
o714.Name = "Pokey"
o714.Parent = o590
o714.BrickColor = BrickColor.new("Flint")
o714.Position = Vector3.new(823.300049, 38.7000389, -8.49995327)
o714.Rotation = Vector3.new(180, 14.9995842, -1.88545179e-010)
o714.CanCollide = false
o714.FormFactor = Enum.FormFactor.Custom
o714.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o714.CFrame = CFrame.new(823.300049, 38.7000389, -8.49995327, 0.965899587, 3.17851886e-012, 0.25881204, 6.37091942e-012, -1, -1.03614339e-011, 0.25881204, 1.19893522e-011, -0.965899587)
o714.BottomSurface = Enum.SurfaceType.Smooth
o714.TopSurface = Enum.SurfaceType.Smooth
o714.Color = Color3.new(0.411765, 0.4, 0.360784)
o714.Position = Vector3.new(823.300049, 38.7000389, -8.49995327)
o715.Parent = o714
o715.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o716.Parent = o714
o716.C0 = CFrame.new(0, 0.800000191, 0, 0.866021812, 1.45638913e-014, 0.499997914, -2.10537984e-014, -1, 7.33845883e-015, 0.499997914, 1.68821849e-014, -0.866021812)
o716.Part0 = o714
o716.Part1 = o720
o717.Name = "Pokey"
o717.Parent = o590
o717.BrickColor = BrickColor.new("Flint")
o717.Position = Vector3.new(823.300049, 36.3000374, -8.49994564)
o717.Rotation = Vector3.new(-1.0091753e-009, 59.9983559, 3.70575681e-010)
o717.CanCollide = false
o717.FormFactor = Enum.FormFactor.Custom
o717.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o717.CFrame = CFrame.new(823.300049, 36.3000374, -8.49994564, 0.499991685, -3.233829e-012, 0.866011024, -8.4197779e-012, 1, 8.80656919e-012, -0.866011024, -1.19517417e-011, 0.499991685)
o717.BottomSurface = Enum.SurfaceType.Smooth
o717.TopSurface = Enum.SurfaceType.Smooth
o717.Color = Color3.new(0.411765, 0.4, 0.360784)
o717.Position = Vector3.new(823.300049, 36.3000374, -8.49994564)
o718.Parent = o717
o718.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o719.Parent = o717
o719.C0 = CFrame.new(0, -0.199996948, 0, 0.499998778, 2.00763664e-014, -0.866023421, 1.84370917e-014, 1, -1.25375428e-014, 0.866023421, 9.69821469e-015, 0.499998778)
o719.Part0 = o717
o719.Part1 = o768
o720.Name = "Pokey"
o720.Parent = o590
o720.BrickColor = BrickColor.new("Flint")
o720.Position = Vector3.new(823.300049, 37.9000397, -8.49995327)
o720.Rotation = Vector3.new(-7.21673443e-010, 14.9996452, 1.89638028e-010)
o720.CanCollide = false
o720.FormFactor = Enum.FormFactor.Custom
o720.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o720.CFrame = CFrame.new(823.300049, 37.9000397, -8.49995327, 0.96590364, -3.1969555e-012, 0.258813053, 3.15609084e-013, 1, 1.21661136e-011, -0.258813053, -1.19768154e-011, 0.96590364)
o720.BottomSurface = Enum.SurfaceType.Smooth
o720.TopSurface = Enum.SurfaceType.Smooth
o720.Color = Color3.new(0.411765, 0.4, 0.360784)
o720.Position = Vector3.new(823.300049, 37.9000397, -8.49995327)
o721.Parent = o720
o721.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o722.Parent = o720
o722.C0 = CFrame.new(0, -0.400000095, 0, -0.707104266, -2.10537984e-014, 0.707104206, -2.00763614e-014, -1, 9.6982113e-015, 0.707104206, 7.33845883e-015, 0.707104266)
o722.Part0 = o720
o722.Part1 = o726
o723.Name = "Pokey"
o723.Parent = o590
o723.BrickColor = BrickColor.new("Flint")
o723.Position = Vector3.new(823.300049, 35.9000359, -8.49994564)
o723.Rotation = Vector3.new(-6.17629614e-010, -14.9997511, 1.91824057e-010)
o723.CanCollide = false
o723.FormFactor = Enum.FormFactor.Custom
o723.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o723.CFrame = CFrame.new(823.300049, 35.9000359, -8.49994564, 0.965909898, -3.233829e-012, -0.258814842, 6.32729546e-012, 1, 1.04121902e-011, 0.258814842, -1.19517417e-011, 0.965909898)
o723.BottomSurface = Enum.SurfaceType.Smooth
o723.TopSurface = Enum.SurfaceType.Smooth
o723.Color = Color3.new(0.411765, 0.4, 0.360784)
o723.Position = Vector3.new(823.300049, 35.9000359, -8.49994564)
o724.Parent = o723
o724.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o725.Parent = o723
o725.C0 = CFrame.new(0, 0.200003147, 0, 0.965923727, 1.45639031e-014, 0.258818477, 1.84370917e-014, 1, -1.25375428e-014, -0.258818477, -1.68822018e-014, 0.965923727)
o725.Part0 = o723
o725.Part1 = o768
o726.Name = "Pokey"
o726.Parent = o590
o726.BrickColor = BrickColor.new("Flint")
o726.Position = Vector3.new(823.300049, 37.5000381, -8.49995327)
o726.Rotation = Vector3.new(-1.01028674e-009, 59.9980774, -180)
o726.CanCollide = false
o726.FormFactor = Enum.FormFactor.Custom
o726.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o726.CFrame = CFrame.new(823.300049, 37.5000381, -8.49995327, -0.499990344, 3.21539215e-012, 0.86600858, 8.39967852e-012, -1, 8.81624461e-012, 0.86600858, 1.19642785e-011, 0.499990344)
o726.BottomSurface = Enum.SurfaceType.Smooth
o726.TopSurface = Enum.SurfaceType.Smooth
o726.Color = Color3.new(0.411765, 0.4, 0.360784)
o726.Position = Vector3.new(823.300049, 37.5000381, -8.49995327)
o727.Parent = o726
o727.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o728.Parent = o726
o728.C0 = CFrame.new(0, 0.399999619, 0, 0.258818239, 2.00763614e-014, 0.965923011, 1.45639031e-014, 1, 1.68822035e-014, -0.965923011, -9.6982113e-015, 0.258818239)
o728.Part0 = o726
o728.Part1 = o735
o729.Name = "Pokey"
o729.Parent = o590
o729.BrickColor = BrickColor.new("Flint")
o729.Position = Vector3.new(823.300049, 36.500042, -8.49994564)
o729.Rotation = Vector3.new(-8.65859606e-010, 44.9990616, -180)
o729.CanCollide = false
o729.FormFactor = Enum.FormFactor.Custom
o729.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o729.CFrame = CFrame.new(823.300049, 36.500042, -8.49994564, -0.707095265, 3.233829e-012, 0.707095206, 5.85357457e-012, -1, 1.06856945e-011, 0.707095206, 1.19517417e-011, 0.707095265)
o729.BottomSurface = Enum.SurfaceType.Smooth
o729.TopSurface = Enum.SurfaceType.Smooth
o729.Color = Color3.new(0.411765, 0.4, 0.360784)
o729.Position = Vector3.new(823.300049, 36.500042, -8.49994564)
o730.Parent = o729
o730.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o731.Parent = o729
o731.C0 = CFrame.new(0, 0.400001049, 0, -0.707105339, -2.19023713e-014, 0.707105398, -1.84370917e-014, -1, 1.25375428e-014, 0.707105398, 4.17161185e-015, 0.707105339)
o731.Part0 = o729
o731.Part1 = o768
o732.Name = "Pokey"
o732.Parent = o590
o732.BrickColor = BrickColor.new("Flint")
o732.Position = Vector3.new(823.300049, 34.7000771, -8.49992847)
o732.Rotation = Vector3.new(180, -59.9985542, 180)
o732.CanCollide = false
o732.FormFactor = Enum.FormFactor.Custom
o732.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o732.CFrame = CFrame.new(823.300049, 34.7000771, -8.49992847, -0.499992907, -3.25226586e-012, -0.866012812, 8.43987207e-012, 1, -8.79689117e-012, 0.866012812, -1.1939204e-011, -0.499992907)
o732.BottomSurface = Enum.SurfaceType.Smooth
o732.TopSurface = Enum.SurfaceType.Smooth
o732.Color = Color3.new(0.411765, 0.4, 0.360784)
o732.Position = Vector3.new(823.300049, 34.7000771, -8.49992847)
o733.Parent = o732
o733.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o734.Parent = o732
o734.C0 = CFrame.new(-0.866027832, 0.39996314, 0.5, -0.499999046, -0.86602354, -2.00763749e-014, 1.84370917e-014, 1.25375428e-014, 1, -0.86602354, 0.499999046, -9.69821469e-015)
o734.Part0 = o732
o734.Part1 = o771
o735.Name = "Pokey"
o735.Parent = o590
o735.BrickColor = BrickColor.new("Flint")
o735.Position = Vector3.new(823.300049, 37.1000366, -8.49995327)
o735.Rotation = Vector3.new(-6.17629614e-010, -14.9997549, -180)
o735.CanCollide = false
o735.FormFactor = Enum.FormFactor.Custom
o735.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o735.CFrame = CFrame.new(823.300049, 37.1000366, -8.49995327, -0.965909898, 3.233829e-012, -0.258814901, -6.32729633e-012, -1, 1.04121902e-011, -0.258814901, 1.19517417e-011, 0.965909898)
o735.BottomSurface = Enum.SurfaceType.Smooth
o735.TopSurface = Enum.SurfaceType.Smooth
o735.Color = Color3.new(0.411765, 0.4, 0.360784)
o735.Position = Vector3.new(823.300049, 37.1000366, -8.49995327)
o736.Parent = o735
o736.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o737.Parent = o735
o737.C0 = CFrame.new(0, 0.999996185, 7.62939453e-006, -0.965923727, -1.45639031e-014, -0.258818537, -1.84370917e-014, -1, 1.25375428e-014, -0.258818537, -1.68822035e-014, 0.965923727)
o737.Part0 = o735
o737.Part1 = o768
o738.Name = "Pokey"
o738.Parent = o590
o738.BrickColor = BrickColor.new("Flint")
o738.Position = Vector3.new(823.300049, 33.5000725, -8.4999361)
o738.Rotation = Vector3.new(-6.72960243e-010, -3.41509462e-006, 1.89511795e-010)
o738.CanCollide = false
o738.FormFactor = Enum.FormFactor.Custom
o738.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o738.CFrame = CFrame.new(823.300049, 33.5000725, -8.4999361, 0.999991417, -3.30757643e-012, -5.96046448e-008, 3.34310357e-012, 1, 1.17452714e-011, 5.96046448e-008, -1.19015908e-011, 0.999991417)
o738.BottomSurface = Enum.SurfaceType.Smooth
o738.TopSurface = Enum.SurfaceType.Smooth
o738.Color = Color3.new(0.411765, 0.4, 0.360784)
o738.Position = Vector3.new(823.300049, 33.5000725, -8.4999361)
o739.Parent = o738
o739.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o740.Parent = o738
o740.C0 = CFrame.new(-1.52587891e-005, -0.800035954, 0, -0.866023242, -7.39740287e-008, 0.499998778, -1.27215841e-007, 1, -7.23958067e-008, -0.499998778, -1.26304244e-007, -0.866023242)
o740.Part0 = o738
o740.Part1 = o792
o741.Name = "Pokey"
o741.Parent = o590
o741.BrickColor = BrickColor.new("Flint")
o741.Position = Vector3.new(823.300049, 40.1000328, -8.49994373)
o741.Rotation = Vector3.new(-180, 74.9973068, -7.24057314e-010)
o741.CanCollide = false
o741.FormFactor = Enum.FormFactor.Custom
o741.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o741.CFrame = CFrame.new(823.300049, 40.1000328, -8.49994373, 0.258815795, 3.27070272e-012, 0.965913653, 1.21955944e-011, -1, 2.31396499e-013, 0.965913653, 1.19266663e-011, -0.258815795)
o741.BottomSurface = Enum.SurfaceType.Smooth
o741.TopSurface = Enum.SurfaceType.Smooth
o741.Color = Color3.new(0.411765, 0.4, 0.360784)
o741.Position = Vector3.new(823.300049, 40.1000328, -8.49994373)
o742.Parent = o741
o742.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o743.Parent = o741
o743.C0 = CFrame.new(0, -0.500007629, -1.52587891e-005, 0.258818567, -7.33846306e-015, 0.965923786, -1.84370917e-014, -1, 1.25375428e-014, 0.965923786, 2.1053812e-014, -0.258818567)
o743.Part0 = o741
o743.Part1 = o780
o744.Name = "Pokey"
o744.Parent = o590
o744.BrickColor = BrickColor.new("Flint")
o744.Position = Vector3.new(823.300049, 37.1000366, -6.89997005)
o744.Rotation = Vector3.new(-6.69345857e-010, -3.41506097e-006, 30.0000019)
o744.CanCollide = false
o744.FormFactor = Enum.FormFactor.Custom
o744.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o744.CFrame = CFrame.new(823.300049, 37.1000366, -6.89997005, 0.866007805, -0.499989867, -5.96040586e-008, 0.499998927, 0.866023481, 1.16820737e-011, 5.16125489e-008, -2.98123339e-008, 0.999981582)
o744.BottomSurface = Enum.SurfaceType.Smooth
o744.TopSurface = Enum.SurfaceType.Smooth
o744.Color = Color3.new(0.411765, 0.4, 0.360784)
o744.Position = Vector3.new(823.300049, 37.1000366, -6.89997005)
o745.Parent = o744
o745.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o746.Parent = o744
o746.C0 = CFrame.new(0, 0, -0.399993896, -0.258819044, 0.965922475, -7.10542736e-015, -0.965923786, -0.258817673, -1.0658141e-014, 1.24344979e-014, -3.55271368e-015, 0.999997854)
o746.Part0 = o744
o746.Part1 = o753
o747.Name = "Pokey"
o747.Parent = o590
o747.BrickColor = BrickColor.new("Flint")
o747.Position = Vector3.new(823.30011, 35.1000748, -9.49993134)
o747.Rotation = Vector3.new(-6.70064282e-010, -3.41506757e-006, -4.35757002e-020)
o747.CanCollide = false
o747.FormFactor = Enum.FormFactor.Custom
o747.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o747.CFrame = CFrame.new(823.30011, 35.1000748, -9.49993134, 0.999982238, 7.6052588e-022, -5.96041723e-008, 1.49011612e-008, 0.999998391, 1.1694634e-011, 5.96040977e-008, -1.19534304e-011, 0.99998349)
o747.BottomSurface = Enum.SurfaceType.Smooth
o747.TopSurface = Enum.SurfaceType.Smooth
o747.Color = Color3.new(0.411765, 0.4, 0.360784)
o747.Position = Vector3.new(823.30011, 35.1000748, -9.49993134)
o748.Parent = o747
o748.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o749.Parent = o747
o749.C0 = CFrame.new(0, 0, 0, 0.258818209, 0.965922832, 0, -0.96592468, 0.258818716, -1.27595807e-014, 1.24344979e-014, -3.55271368e-015, 0.999997854)
o749.Part0 = o747
o749.Part1 = o750
o750.Name = "Pokey"
o750.Parent = o590
o750.BrickColor = BrickColor.new("Flint")
o750.Position = Vector3.new(823.30011, 35.1000748, -9.49993134)
o750.Rotation = Vector3.new(-6.70805134e-010, -3.41507484e-006, -75)
o750.CanCollide = false
o750.FormFactor = Enum.FormFactor.Custom
o750.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o750.CFrame = CFrame.new(823.30011, 35.1000748, -9.49993134, 0.258815229, 0.965911686, -5.96043002e-008, -0.965925455, 0.258818924, 1.17075898e-011, 1.54382551e-008, 5.75702259e-008, 0.999985635)
o750.BottomSurface = Enum.SurfaceType.Smooth
o750.TopSurface = Enum.SurfaceType.Smooth
o750.Color = Color3.new(0.411765, 0.4, 0.360784)
o750.Position = Vector3.new(823.30011, 35.1000748, -9.49993134)
o751.Parent = o750
o751.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o752.Parent = o750
o752.C0 = CFrame.new(2.28881836e-005, -4.57763672e-005, 1.52587891e-005, 0.258818448, -1.24344979e-014, -0.965925455, 0.965923667, 3.55271368e-015, 0.258818924, 0, -0.999998033, -1.25375428e-014)
o752.Part0 = o750
o752.Part1 = o771
o753.Name = "Pokey"
o753.Parent = o590
o753.BrickColor = BrickColor.new("Flint")
o753.Position = Vector3.new(823.300049, 37.1000366, -7.2999568)
o753.Rotation = Vector3.new(-6.70086708e-010, -3.41506848e-006, -75)
o753.CanCollide = false
o753.FormFactor = Enum.FormFactor.Custom
o753.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o753.CFrame = CFrame.new(823.300049, 37.1000366, -7.2999568, 0.258814752, 0.965909839, -5.96041865e-008, -0.965925455, 0.258818924, 1.16950295e-011, 1.54382374e-008, 5.75701122e-008, 0.999983728)
o753.BottomSurface = Enum.SurfaceType.Smooth
o753.TopSurface = Enum.SurfaceType.Smooth
o753.Color = Color3.new(0.411765, 0.4, 0.360784)
o753.Position = Vector3.new(823.300049, 37.1000366, -7.2999568)
o754.Parent = o753
o754.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o755.Parent = o753
o755.C0 = CFrame.new(-7.62939453e-006, -1.52587891e-005, -0.199996948, 0.258818448, -1.24344979e-014, -0.965925455, 0.965923667, 3.55271368e-015, 0.258818924, 0, -0.999998033, -1.25375428e-014)
o755.Part0 = o753
o755.Part1 = o774
o756.Name = "Pokey"
o756.Parent = o590
o756.BrickColor = BrickColor.new("Flint")
o756.Position = Vector3.new(823.300049, 35.1000671, -10.2999229)
o756.Rotation = Vector3.new(-6.70086708e-010, -3.41506848e-006, -45)
o756.CanCollide = false
o756.FormFactor = Enum.FormFactor.Custom
o756.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o756.CFrame = CFrame.new(823.300049, 35.1000671, -10.2999229, 0.707095265, 0.707095265, -5.96041865e-008, -0.707106769, 0.707106709, 1.16950295e-011, 4.21549728e-008, 4.21380761e-008, 0.999983728)
o756.BottomSurface = Enum.SurfaceType.Smooth
o756.TopSurface = Enum.SurfaceType.Smooth
o756.Color = Color3.new(0.411765, 0.4, 0.360784)
o756.Position = Vector3.new(823.300049, 35.1000671, -10.2999229)
o757.Parent = o756
o757.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o758.Parent = o756
o758.C0 = CFrame.new(-7.62939453e-006, -7.62939453e-006, -0.199981689, 0.707105398, -0.707106769, 8.8817842e-015, 0.707105398, 0.707106709, -8.8817842e-015, 0, -1.25375428e-014, 0.999998033)
o758.Part0 = o756
o758.Part1 = o765
o759.Parent = o590
o759.Material = Enum.Material.Sand
o759.BrickColor = BrickColor.new("Grime")
o759.Position = Vector3.new(823.300049, 37.1000366, -6.49996662)
o759.Rotation = Vector3.new(-6.70086764e-010, -3.41506848e-006, 1.85287757e-010)
o759.FormFactor = Enum.FormFactor.Custom
o759.Size = Vector3.new(1, 1, 1)
o759.CFrame = CFrame.new(823.300049, 37.1000366, -6.49996662, 0.999983788, -3.233829e-012, -5.960419e-008, 3.41682607e-012, 1, 1.16950304e-011, 5.960419e-008, -1.19517417e-011, 0.999983788)
o759.BottomSurface = Enum.SurfaceType.Smooth
o759.TopSurface = Enum.SurfaceType.Smooth
o759.Color = Color3.new(0.498039, 0.556863, 0.392157)
o759.Position = Vector3.new(823.300049, 37.1000366, -6.49996662)
o760.Parent = o759
o760.MeshType = Enum.MeshType.Sphere
o761.Parent = o759
o761.C0 = CFrame.new(0, 3.81469727e-006, -1, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o761.Part0 = o759
o761.Part1 = o774
o762.Parent = o590
o762.Material = Enum.Material.Sand
o762.BrickColor = BrickColor.new("Grime")
o762.Position = Vector3.new(823.300049, 39.1000366, -6.49996471)
o762.Rotation = Vector3.new(-6.70805134e-010, -3.41507507e-006, 1.86343788e-010)
o762.FormFactor = Enum.FormFactor.Custom
o762.Size = Vector3.new(1, 1, 1)
o762.CFrame = CFrame.new(823.300049, 39.1000366, -6.49996471, 0.999985695, -3.25226586e-012, -5.96043037e-008, 3.3983955e-012, 1, 1.17075906e-011, 5.96043037e-008, -1.1939204e-011, 0.999985695)
o762.BottomSurface = Enum.SurfaceType.Smooth
o762.TopSurface = Enum.SurfaceType.Smooth
o762.Color = Color3.new(0.498039, 0.556863, 0.392157)
o762.Position = Vector3.new(823.300049, 39.1000366, -6.49996471)
o763.Parent = o762
o763.MeshType = Enum.MeshType.Sphere
o764.Parent = o762
o764.C0 = CFrame.new(0, -0.999996185, 0, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o764.Part0 = o762
o764.Part1 = o777
o765.Parent = o590
o765.Material = Enum.Material.Sand
o765.BrickColor = BrickColor.new("Grime")
o765.Position = Vector3.new(823.300049, 35.1000671, -10.4999018)
o765.Rotation = Vector3.new(-6.70805134e-010, -3.41507507e-006, 1.86343788e-010)
o765.FormFactor = Enum.FormFactor.Custom
o765.Size = Vector3.new(1, 1, 1)
o765.CFrame = CFrame.new(823.300049, 35.1000671, -10.4999018, 0.999985695, -3.25226586e-012, -5.96043037e-008, 3.3983955e-012, 1, 1.17075906e-011, 5.96043037e-008, -1.1939204e-011, 0.999985695)
o765.BottomSurface = Enum.SurfaceType.Smooth
o765.TopSurface = Enum.SurfaceType.Smooth
o765.Color = Color3.new(0.498039, 0.556863, 0.392157)
o765.Position = Vector3.new(823.300049, 35.1000671, -10.4999018)
o766.Parent = o765
o766.MeshType = Enum.MeshType.Sphere
o767.Parent = o765
o767.C0 = CFrame.new(0, -2.78949738e-005, 1, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o767.Part0 = o765
o767.Part1 = o771
o768.Parent = o590
o768.Material = Enum.Material.Sand
o768.BrickColor = BrickColor.new("Grime")
o768.Position = Vector3.new(823.300049, 36.1000404, -8.49994564)
o768.Rotation = Vector3.new(-6.70805134e-010, -3.41507507e-006, 1.86343788e-010)
o768.FormFactor = Enum.FormFactor.Custom
o768.Size = Vector3.new(1.4000001, 9, 1.4000001)
o768.CFrame = CFrame.new(823.300049, 36.1000404, -8.49994564, 0.999985695, -3.25226586e-012, -5.96043037e-008, 3.3983955e-012, 1, 1.17075906e-011, 5.96043037e-008, -1.1939204e-011, 0.999985695)
o768.BottomSurface = Enum.SurfaceType.Smooth
o768.TopSurface = Enum.SurfaceType.Smooth
o768.Color = Color3.new(0.498039, 0.556863, 0.392157)
o768.Position = Vector3.new(823.300049, 36.1000404, -8.49994564)
o769.Parent = o768
o770.Parent = o768
o770.C0 = CFrame.new(0, -1, -0.999984741, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o770.Part0 = o768
o770.Part1 = o771
o771.Parent = o590
o771.Material = Enum.Material.Sand
o771.BrickColor = BrickColor.new("Grime")
o771.Position = Vector3.new(823.300049, 35.1000404, -9.49991608)
o771.Rotation = Vector3.new(-90, -1.87397459e-010, -3.41512396e-006)
o771.FormFactor = Enum.FormFactor.Custom
o771.Size = Vector3.new(1, 2, 1)
o771.CFrame = CFrame.new(823.300049, 35.1000404, -9.49991608, 0.999987602, 5.96044174e-008, -3.27070272e-012, 3.37996493e-012, -1.17201509e-011, 1, 5.96044174e-008, -0.999987602, -1.19266663e-011)
o771.BottomSurface = Enum.SurfaceType.Smooth
o771.TopSurface = Enum.SurfaceType.Smooth
o771.Color = Color3.new(0.498039, 0.556863, 0.392157)
o771.Position = Vector3.new(823.300049, 35.1000404, -9.49991608)
o772.Parent = o771
o773.Parent = o771
o773.C0 = CFrame.new(0, 1, 1.5, 0.999998093, 1.84370917e-014, 0, 0, 1.25375428e-014, -0.999998093, 1.84370917e-014, 1, -1.25375428e-014)
o773.Part0 = o771
o773.Part1 = o783
o774.Parent = o590
o774.Material = Enum.Material.Sand
o774.BrickColor = BrickColor.new("Grime")
o774.Position = Vector3.new(823.300049, 37.1000404, -7.49995041)
o774.Rotation = Vector3.new(-90, -1.86341109e-010, -3.41512396e-006)
o774.FormFactor = Enum.FormFactor.Custom
o774.Size = Vector3.new(1, 2, 1)
o774.CFrame = CFrame.new(823.300049, 37.1000404, -7.49995041, 0.999985695, 5.96043037e-008, -3.25226586e-012, 3.3983955e-012, -1.17075906e-011, 1, 5.96043037e-008, -0.999985695, -1.1939204e-011)
o774.BottomSurface = Enum.SurfaceType.Smooth
o774.TopSurface = Enum.SurfaceType.Smooth
o774.Color = Color3.new(0.498039, 0.556863, 0.392157)
o774.Position = Vector3.new(823.300049, 37.1000404, -7.49995041)
o775.Parent = o774
o776.Parent = o774
o776.C0 = CFrame.new(0, -1, 1, 0.999998093, 1.84370917e-014, 0, 0, 1.25375428e-014, -0.999998093, 1.84370917e-014, 1, -1.25375428e-014)
o776.Part0 = o774
o776.Part1 = o777
o777.Parent = o590
o777.Material = Enum.Material.Sand
o777.BrickColor = BrickColor.new("Grime")
o777.Position = Vector3.new(823.300049, 38.1000404, -6.49996471)
o777.Rotation = Vector3.new(-6.71523559e-010, -3.41508166e-006, 1.8739979e-010)
o777.FormFactor = Enum.FormFactor.Custom
o777.Size = Vector3.new(1, 2, 1)
o777.CFrame = CFrame.new(823.300049, 38.1000404, -6.49996471, 0.999987602, -3.27070272e-012, -5.96044174e-008, 3.37996493e-012, 1, 1.17201509e-011, 5.96044174e-008, -1.19266663e-011, 0.999987602)
o777.BottomSurface = Enum.SurfaceType.Smooth
o777.TopSurface = Enum.SurfaceType.Smooth
o777.Color = Color3.new(0.498039, 0.556863, 0.392157)
o777.Position = Vector3.new(823.300049, 38.1000404, -6.49996471)
o778.Parent = o777
o779.Parent = o777
o779.C0 = CFrame.new(0, 2.49999952, -2, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o779.Part0 = o777
o779.Part1 = o780
o780.Parent = o590
o780.Material = Enum.Material.Sand
o780.BrickColor = BrickColor.new("Grime")
o780.Position = Vector3.new(823.300049, 40.6000404, -8.49993992)
o780.Rotation = Vector3.new(-6.72241873e-010, -3.41508803e-006, 1.88455793e-010)
o780.FormFactor = Enum.FormFactor.Custom
o780.Size = Vector3.new(1.4000001, 1.39999998, 1.39999998)
o780.CFrame = CFrame.new(823.300049, 40.6000404, -8.49993992, 0.99998951, -3.28913958e-012, -5.96045311e-008, 3.36153436e-012, 1, 1.17327112e-011, 5.96045311e-008, -1.19141285e-011, 0.99998951)
o780.BottomSurface = Enum.SurfaceType.Smooth
o780.TopSurface = Enum.SurfaceType.Smooth
o780.Color = Color3.new(0.498039, 0.556863, 0.392157)
o780.Position = Vector3.new(823.300049, 40.6000404, -8.49993992)
o781.Parent = o780
o781.MeshType = Enum.MeshType.Sphere
o782.Parent = o780
o782.C0 = CFrame.new(0, -2.49999952, -1.99998474, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o782.Part0 = o780
o782.Part1 = o786
o783.Parent = o590
o783.Material = Enum.Material.Sand
o783.BrickColor = BrickColor.new("Grime")
o783.Position = Vector3.new(823.300049, 36.6000404, -10.4999037)
o783.Rotation = Vector3.new(-6.72241873e-010, -3.41508803e-006, 1.88455793e-010)
o783.FormFactor = Enum.FormFactor.Custom
o783.Size = Vector3.new(1, 3, 1)
o783.CFrame = CFrame.new(823.300049, 36.6000404, -10.4999037, 0.99998951, -3.28913958e-012, -5.96045311e-008, 3.36153436e-012, 1, 1.17327112e-011, 5.96045311e-008, -1.19141285e-011, 0.99998951)
o783.BottomSurface = Enum.SurfaceType.Smooth
o783.TopSurface = Enum.SurfaceType.Smooth
o783.Color = Color3.new(0.498039, 0.556863, 0.392157)
o783.Position = Vector3.new(823.300049, 36.6000404, -10.4999037)
o784.Parent = o783
o785.Parent = o783
o785.C0 = CFrame.new(0, 1.5, 0, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o785.Part0 = o783
o785.Part1 = o786
o786.Parent = o590
o786.Material = Enum.Material.Sand
o786.BrickColor = BrickColor.new("Grime")
o786.Position = Vector3.new(823.300049, 38.1000404, -10.4999037)
o786.Rotation = Vector3.new(-6.72960243e-010, -3.41509462e-006, 1.89511795e-010)
o786.FormFactor = Enum.FormFactor.Custom
o786.Size = Vector3.new(1, 1, 1)
o786.CFrame = CFrame.new(823.300049, 38.1000404, -10.4999037, 0.999991417, -3.30757643e-012, -5.96046448e-008, 3.34310357e-012, 1, 1.17452714e-011, 5.96046448e-008, -1.19015908e-011, 0.999991417)
o786.BottomSurface = Enum.SurfaceType.Smooth
o786.TopSurface = Enum.SurfaceType.Smooth
o786.Color = Color3.new(0.498039, 0.556863, 0.392157)
o786.Position = Vector3.new(823.300049, 38.1000404, -10.4999037)
o787.Parent = o786
o787.MeshType = Enum.MeshType.Sphere
o788.Parent = o786
o788.C0 = CFrame.new(0, -5.40000391, 1.99998474, -0.866023242, -7.39740287e-008, 0.499998778, -1.27215841e-007, 1, -7.23958067e-008, -0.499998778, -1.26304244e-007, -0.866023242)
o788.Part0 = o786
o788.Part1 = o792
o789.Name = "Pokey"
o789.Parent = o590
o789.BrickColor = BrickColor.new("Flint")
o789.Position = Vector3.new(823.300049, 32.3000679, -8.4999361)
o789.Rotation = Vector3.new(-6.75669465e-010, -1.70754424e-006, 1.90528426e-010)
o789.CanCollide = false
o789.FormFactor = Enum.FormFactor.Custom
o789.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o789.CFrame = CFrame.new(823.300049, 32.3000679, -8.4999361, 0.999997497, -3.32534e-012, -2.98022691e-008, 3.32178729e-012, 1, 1.17926268e-011, 2.9802278e-008, -1.18739636e-011, 0.999997497)
o789.BottomSurface = Enum.SurfaceType.Smooth
o789.TopSurface = Enum.SurfaceType.Smooth
o789.Color = Color3.new(0.411765, 0.4, 0.360784)
o789.Position = Vector3.new(823.300049, 32.3000679, -8.4999361)
o790.Parent = o789
o790.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o791.Parent = o789
o791.C0 = CFrame.new(-1.52587891e-005, -3.58819962e-005, 0, 4.47034232e-008, -5.32905773e-008, -0.999997497, 1.18217372e-007, 1, -5.32907052e-008, 0.999997497, -1.18217152e-007, 4.47034232e-008)
o791.Part0 = o789
o791.Part1 = o801
o792.Name = "Pokey"
o792.Parent = o590
o792.BrickColor = BrickColor.new("Flint")
o792.Position = Vector3.new(823.300049, 32.7000351, -8.4999361)
o792.Rotation = Vector3.new(180, 29.9998035, 180)
o792.CanCollide = false
o792.FormFactor = Enum.FormFactor.Custom
o792.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o792.CFrame = CFrame.new(823.300049, 32.7000351, -8.4999361, -0.866020083, -7.39770911e-008, 0.49999702, -1.27224595e-007, 1, -7.24043474e-008, -0.49999702, -1.26315669e-007, -0.866020083)
o792.BottomSurface = Enum.SurfaceType.Smooth
o792.TopSurface = Enum.SurfaceType.Smooth
o792.Color = Color3.new(0.411765, 0.4, 0.360784)
o792.Position = Vector3.new(823.300049, 32.7000351, -8.4999361)
o793.Parent = o792
o793.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o794.Parent = o792
o794.C0 = CFrame.new(0, -0.199999988, 0, 0.258818209, -8.12434919e-008, 0.965922892, 1.18632386e-007, 1, 5.2321468e-008, -0.965922892, 1.01047597e-007, 0.258818209)
o794.Part0 = o792
o794.Part1 = o795
o795.Name = "Pokey"
o795.Parent = o590
o795.BrickColor = BrickColor.new("Flint")
o795.Position = Vector3.new(823.300049, 32.5000343, -8.4999361)
o795.Rotation = Vector3.new(180, -44.9998245, -180)
o795.CanCollide = false
o795.FormFactor = Enum.FormFactor.Custom
o795.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o795.CFrame = CFrame.new(823.300049, 32.5000343, -8.4999361, -0.707104623, 4.69051713e-008, -0.707104623, 1.55641402e-007, 1, -8.93072638e-008, 0.707104623, -1.73204427e-007, -0.707104623)
o795.BottomSurface = Enum.SurfaceType.Smooth
o795.TopSurface = Enum.SurfaceType.Smooth
o795.Color = Color3.new(0.411765, 0.4, 0.360784)
o795.Position = Vector3.new(823.300049, 32.5000343, -8.4999361)
o796.Parent = o795
o796.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o797.Parent = o795
o797.C0 = CFrame.new(0, -0.199999988, 0, 0.707104623, 1.0972542e-007, 0.707104623, -5.49751817e-008, 1, -1.00199202e-007, -0.707104623, 3.19776383e-008, 0.707104623)
o797.Part0 = o795
o797.Part1 = o801
o798.Name = "Pokey"
o798.Parent = o590
o798.BrickColor = BrickColor.new("Flint")
o798.Position = Vector3.new(823.300049, 31.900034, -8.4999361)
o798.Rotation = Vector3.new(180, -29.9998989, 180)
o798.CanCollide = false
o798.FormFactor = Enum.FormFactor.Custom
o798.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o798.CFrame = CFrame.new(823.300049, 31.900034, -8.4999361, -0.866022706, -8.66976677e-008, -0.49999845, -3.9738957e-008, 1, -1.04565913e-007, 0.49999845, -7.06871504e-008, -0.866022706)
o798.BottomSurface = Enum.SurfaceType.Smooth
o798.TopSurface = Enum.SurfaceType.Smooth
o798.Color = Color3.new(0.411765, 0.4, 0.360784)
o798.Position = Vector3.new(823.300049, 31.900034, -8.4999361)
o799.Parent = o798
o799.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o800.Parent = o798
o800.C0 = CFrame.new(0, 0.400000006, 0, 0.49999845, -5.26995549e-008, 0.866022706, 4.75420947e-008, 1, 3.34036372e-008, -0.866022706, 2.44702321e-008, 0.49999845)
o800.Part0 = o798
o800.Part1 = o801
o801.Name = "Pokey"
o801.Parent = o590
o801.BrickColor = BrickColor.new("Flint")
o801.Position = Vector3.new(823.300049, 32.3000336, -8.4999361)
o801.Rotation = Vector3.new(-6.77403705e-006, -90, 0)
o801.CanCollide = false
o801.FormFactor = Enum.FormFactor.Custom
o801.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o801.CFrame = CFrame.new(823.300049, 32.3000336, -8.4999361, 1.49011843e-008, -5.32940305e-008, -1, 1.18229245e-007, 1, -5.32940305e-008, 1, -1.18229245e-007, 1.49011896e-008)
o801.BottomSurface = Enum.SurfaceType.Smooth
o801.TopSurface = Enum.SurfaceType.Smooth
o801.Color = Color3.new(0.411765, 0.4, 0.360784)
o801.Position = Vector3.new(823.300049, 32.3000336, -8.4999361)
o802.Parent = o801
o802.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o803.Name = "1"
o803.Parent = o1
o803.Transparency = 1
o803.Position = Vector3.new(430.000061, 38.2000198, -59.8000031)
o803.Rotation = Vector3.new(-180, 0, -180)
o803.Anchored = true
o803.CanCollide = false
o803.Size = Vector3.new(6, 1.20000005, 6)
o803.CFrame = CFrame.new(430.000061, 38.2000198, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o803.BackSurface = Enum.SurfaceType.Weld
o803.BottomSurface = Enum.SurfaceType.Weld
o803.FrontSurface = Enum.SurfaceType.Weld
o803.LeftSurface = Enum.SurfaceType.Weld
o803.RightSurface = Enum.SurfaceType.Weld
o803.TopSurface = Enum.SurfaceType.Smooth
o803.Position = Vector3.new(430.000061, 38.2000198, -59.8000031)
o804.Parent = o1
o804.Material = Enum.Material.Concrete
o804.BrickColor = BrickColor.new("Dark stone grey")
o804.Position = Vector3.new(646.600037, 109.199684, 153.099991)
o804.Anchored = true
o804.Size = Vector3.new(2.79999852, 155.200012, 63.2000008)
o804.CFrame = CFrame.new(646.600037, 109.199684, 153.099991, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o804.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o804.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o804.Color = Color3.new(0.388235, 0.372549, 0.384314)
o804.Position = Vector3.new(646.600037, 109.199684, 153.099991)
o805.Name = "Grass"
o805.Parent = o1
o805.BrickColor = BrickColor.new("Bright green")
o805.Position = Vector3.new(599.800049, 32.1000061, 17.3000069)
o805.Rotation = Vector3.new(-90, 0, 90)
o805.Anchored = true
o805.CanCollide = false
o805.FormFactor = Enum.FormFactor.Plate
o805.Size = Vector3.new(1, 1.20000005, 1)
o805.CFrame = CFrame.new(599.800049, 32.1000061, 17.3000069, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o805.BottomSurface = Enum.SurfaceType.Smooth
o805.TopSurface = Enum.SurfaceType.Smooth
o805.Color = Color3.new(0.294118, 0.592157, 0.294118)
o805.Position = Vector3.new(599.800049, 32.1000061, 17.3000069)
o806.Parent = o805
o806.MeshId = "http://www.roblox.com/asset/?id=1080954"
o806.Scale = Vector3.new(3, 3, 8)
o806.VertexColor = Vector3.new(2, 2, 2)
o806.MeshType = Enum.MeshType.FileMesh
o807.Name = "Grass"
o807.Parent = o1
o807.BrickColor = BrickColor.new("Bright green")
o807.Position = Vector3.new(664.800049, 32.1000061, 82.1000061)
o807.Rotation = Vector3.new(-90, 0, 90)
o807.Anchored = true
o807.CanCollide = false
o807.FormFactor = Enum.FormFactor.Plate
o807.Size = Vector3.new(1, 1.20000005, 1)
o807.CFrame = CFrame.new(664.800049, 32.1000061, 82.1000061, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o807.BottomSurface = Enum.SurfaceType.Smooth
o807.TopSurface = Enum.SurfaceType.Smooth
o807.Color = Color3.new(0.294118, 0.592157, 0.294118)
o807.Position = Vector3.new(664.800049, 32.1000061, 82.1000061)
o808.Parent = o807
o808.MeshId = "http://www.roblox.com/asset/?id=1080954"
o808.Scale = Vector3.new(3, 3, 8)
o808.VertexColor = Vector3.new(2, 2, 2)
o808.MeshType = Enum.MeshType.FileMesh
o809.Name = "Grass"
o809.Parent = o1
o809.BrickColor = BrickColor.new("Bright green")
o809.Position = Vector3.new(545.599976, 32.1000061, 82.1000061)
o809.Rotation = Vector3.new(-90, 0, 90)
o809.Anchored = true
o809.CanCollide = false
o809.FormFactor = Enum.FormFactor.Plate
o809.Size = Vector3.new(1, 1.20000005, 1)
o809.CFrame = CFrame.new(545.599976, 32.1000061, 82.1000061, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o809.BottomSurface = Enum.SurfaceType.Smooth
o809.TopSurface = Enum.SurfaceType.Smooth
o809.Color = Color3.new(0.294118, 0.592157, 0.294118)
o809.Position = Vector3.new(545.599976, 32.1000061, 82.1000061)
o810.Parent = o809
o810.MeshId = "http://www.roblox.com/asset/?id=1080954"
o810.Scale = Vector3.new(3, 3, 8)
o810.VertexColor = Vector3.new(2, 2, 2)
o810.MeshType = Enum.MeshType.FileMesh
o811.Name = "Grass"
o811.Parent = o1
o811.BrickColor = BrickColor.new("Bright green")
o811.Position = Vector3.new(545.599976, 32.1000061, 139.499985)
o811.Rotation = Vector3.new(-90, 0, 90)
o811.Anchored = true
o811.CanCollide = false
o811.FormFactor = Enum.FormFactor.Plate
o811.Size = Vector3.new(1, 1.20000005, 1)
o811.CFrame = CFrame.new(545.599976, 32.1000061, 139.499985, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o811.BottomSurface = Enum.SurfaceType.Smooth
o811.TopSurface = Enum.SurfaceType.Smooth
o811.Color = Color3.new(0.294118, 0.592157, 0.294118)
o811.Position = Vector3.new(545.599976, 32.1000061, 139.499985)
o812.Parent = o811
o812.MeshId = "http://www.roblox.com/asset/?id=1080954"
o812.Scale = Vector3.new(3, 3, 8)
o812.VertexColor = Vector3.new(2, 2, 2)
o812.MeshType = Enum.MeshType.FileMesh
o813.Name = "Grass"
o813.Parent = o1
o813.BrickColor = BrickColor.new("Bright green")
o813.Position = Vector3.new(617.600037, 32.1000061, 139.499985)
o813.Rotation = Vector3.new(-90, 0, 90)
o813.Anchored = true
o813.CanCollide = false
o813.FormFactor = Enum.FormFactor.Plate
o813.Size = Vector3.new(1, 1.20000005, 1)
o813.CFrame = CFrame.new(617.600037, 32.1000061, 139.499985, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o813.BottomSurface = Enum.SurfaceType.Smooth
o813.TopSurface = Enum.SurfaceType.Smooth
o813.Color = Color3.new(0.294118, 0.592157, 0.294118)
o813.Position = Vector3.new(617.600037, 32.1000061, 139.499985)
o814.Parent = o813
o814.MeshId = "http://www.roblox.com/asset/?id=1080954"
o814.Scale = Vector3.new(3, 3, 8)
o814.VertexColor = Vector3.new(2, 2, 2)
o814.MeshType = Enum.MeshType.FileMesh
o815.Name = "Grass"
o815.Parent = o1
o815.BrickColor = BrickColor.new("Bright green")
o815.Position = Vector3.new(617.600037, 32.1000061, 35.8999901)
o815.Rotation = Vector3.new(-90, 0, 90)
o815.Anchored = true
o815.CanCollide = false
o815.FormFactor = Enum.FormFactor.Plate
o815.Size = Vector3.new(1, 1.20000005, 1)
o815.CFrame = CFrame.new(617.600037, 32.1000061, 35.8999901, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o815.BottomSurface = Enum.SurfaceType.Smooth
o815.TopSurface = Enum.SurfaceType.Smooth
o815.Color = Color3.new(0.294118, 0.592157, 0.294118)
o815.Position = Vector3.new(617.600037, 32.1000061, 35.8999901)
o816.Parent = o815
o816.MeshId = "http://www.roblox.com/asset/?id=1080954"
o816.Scale = Vector3.new(3, 3, 8)
o816.VertexColor = Vector3.new(2, 2, 2)
o816.MeshType = Enum.MeshType.FileMesh
o817.Name = "Grass"
o817.Parent = o1
o817.BrickColor = BrickColor.new("Bright green")
o817.Position = Vector3.new(617.600037, 32.1000061, 35.8999901)
o817.Rotation = Vector3.new(-90, 0, 90)
o817.Anchored = true
o817.CanCollide = false
o817.FormFactor = Enum.FormFactor.Plate
o817.Size = Vector3.new(1, 1.20000005, 1)
o817.CFrame = CFrame.new(617.600037, 32.1000061, 35.8999901, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o817.BottomSurface = Enum.SurfaceType.Smooth
o817.TopSurface = Enum.SurfaceType.Smooth
o817.Color = Color3.new(0.294118, 0.592157, 0.294118)
o817.Position = Vector3.new(617.600037, 32.1000061, 35.8999901)
o818.Parent = o817
o818.MeshId = "http://www.roblox.com/asset/?id=1080954"
o818.Scale = Vector3.new(3, 3, 8)
o818.VertexColor = Vector3.new(2, 2, 2)
o818.MeshType = Enum.MeshType.FileMesh
o819.Name = "Grass"
o819.Parent = o1
o819.BrickColor = BrickColor.new("Bright green")
o819.Position = Vector3.new(617.600037, 32.1000061, -204.500015)
o819.Rotation = Vector3.new(-90, 0, 90)
o819.Anchored = true
o819.CanCollide = false
o819.FormFactor = Enum.FormFactor.Plate
o819.Size = Vector3.new(1, 1.20000005, 1)
o819.CFrame = CFrame.new(617.600037, 32.1000061, -204.500015, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o819.BottomSurface = Enum.SurfaceType.Smooth
o819.TopSurface = Enum.SurfaceType.Smooth
o819.Color = Color3.new(0.294118, 0.592157, 0.294118)
o819.Position = Vector3.new(617.600037, 32.1000061, -204.500015)
o820.Parent = o819
o820.MeshId = "http://www.roblox.com/asset/?id=1080954"
o820.Scale = Vector3.new(3, 3, 8)
o820.VertexColor = Vector3.new(2, 2, 2)
o820.MeshType = Enum.MeshType.FileMesh
o821.Name = "Grass"
o821.Parent = o1
o821.BrickColor = BrickColor.new("Bright green")
o821.Position = Vector3.new(784.800049, 32.1000061, -182.500015)
o821.Rotation = Vector3.new(-90, 0, 90)
o821.Anchored = true
o821.CanCollide = false
o821.FormFactor = Enum.FormFactor.Plate
o821.Size = Vector3.new(1, 1.20000005, 1)
o821.CFrame = CFrame.new(784.800049, 32.1000061, -182.500015, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o821.BottomSurface = Enum.SurfaceType.Smooth
o821.TopSurface = Enum.SurfaceType.Smooth
o821.Color = Color3.new(0.294118, 0.592157, 0.294118)
o821.Position = Vector3.new(784.800049, 32.1000061, -182.500015)
o822.Parent = o821
o822.MeshId = "http://www.roblox.com/asset/?id=1080954"
o822.Scale = Vector3.new(3, 3, 8)
o822.VertexColor = Vector3.new(2, 2, 2)
o822.MeshType = Enum.MeshType.FileMesh
o823.Name = "Grass"
o823.Parent = o1
o823.BrickColor = BrickColor.new("Bright green")
o823.Position = Vector3.new(477.599945, 32.1000061, -100.300018)
o823.Rotation = Vector3.new(-90, 0, 90)
o823.Anchored = true
o823.CanCollide = false
o823.FormFactor = Enum.FormFactor.Plate
o823.Size = Vector3.new(1, 1.20000005, 1)
o823.CFrame = CFrame.new(477.599945, 32.1000061, -100.300018, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o823.BottomSurface = Enum.SurfaceType.Smooth
o823.TopSurface = Enum.SurfaceType.Smooth
o823.Color = Color3.new(0.294118, 0.592157, 0.294118)
o823.Position = Vector3.new(477.599945, 32.1000061, -100.300018)
o824.Parent = o823
o824.MeshId = "http://www.roblox.com/asset/?id=1080954"
o824.Scale = Vector3.new(3, 3, 8)
o824.VertexColor = Vector3.new(2, 2, 2)
o824.MeshType = Enum.MeshType.FileMesh
o825.Name = "Grass"
o825.Parent = o1
o825.BrickColor = BrickColor.new("Bright green")
o825.Position = Vector3.new(477.599945, 31.1000061, -133.300018)
o825.Rotation = Vector3.new(-90, 0, 90)
o825.Anchored = true
o825.CanCollide = false
o825.FormFactor = Enum.FormFactor.Plate
o825.Size = Vector3.new(1, 1.20000005, 1)
o825.CFrame = CFrame.new(477.599945, 31.1000061, -133.300018, 0, -1, 0, 0, 0, 1, -1, 0, 0)
o825.BottomSurface = Enum.SurfaceType.Smooth
o825.TopSurface = Enum.SurfaceType.Smooth
o825.Color = Color3.new(0.294118, 0.592157, 0.294118)
o825.Position = Vector3.new(477.599945, 31.1000061, -133.300018)
o826.Parent = o825
o826.MeshId = "http://www.roblox.com/asset/?id=1080954"
o826.Scale = Vector3.new(3, 3, 8)
o826.VertexColor = Vector3.new(2, 2, 2)
o826.MeshType = Enum.MeshType.FileMesh
o827.Parent = o1
o827.Material = Enum.Material.Concrete
o827.BrickColor = BrickColor.new("Dark stone grey")
o827.Position = Vector3.new(609.400024, 109.199753, -69.9000854)
o827.Anchored = true
o827.Size = Vector3.new(2.79999852, 155.200012, 63)
o827.CFrame = CFrame.new(609.400024, 109.199753, -69.9000854, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o827.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o827.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
o827.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o827.Color = Color3.new(0.388235, 0.372549, 0.384314)
o827.Position = Vector3.new(609.400024, 109.199753, -69.9000854)
o828.Parent = o1
o828.Material = Enum.Material.Concrete
o828.BrickColor = BrickColor.new("Mid gray")
o828.Position = Vector3.new(628.000061, 109.199753, -71.5)
o828.Anchored = true
o828.Size = Vector3.new(34.4000015, 155.200012, 512.200012)
o828.CFrame = CFrame.new(628.000061, 109.199753, -71.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o828.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o828.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o828.Color = Color3.new(0.803922, 0.803922, 0.803922)
o828.Position = Vector3.new(628.000061, 109.199753, -71.5)
o829.Parent = o1
o829.Material = Enum.Material.Concrete
o829.BrickColor = BrickColor.new("Dark stone grey")
o829.Position = Vector3.new(609.400024, 109.199684, -295.700012)
o829.Anchored = true
o829.Size = Vector3.new(2.79999852, 155.200012, 63)
o829.CFrame = CFrame.new(609.400024, 109.199684, -295.700012, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o829.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o829.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o829.Color = Color3.new(0.388235, 0.372549, 0.384314)
o829.Position = Vector3.new(609.400024, 109.199684, -295.700012)
o830.Parent = o1
o830.Material = Enum.Material.Concrete
o830.BrickColor = BrickColor.new("Dark stone grey")
o830.Position = Vector3.new(628, 187.999496, 153.099991)
o830.Rotation = Vector3.new(3.48615754e-006, -1.55919622e-006, 90)
o830.Anchored = true
o830.Size = Vector3.new(2.79999852, 40.0000153, 63.2000008)
o830.CFrame = CFrame.new(628, 187.999496, 153.099991, -5.96046448e-008, -1, -2.72131082e-008, 1, -5.96046448e-008, -6.08449255e-008, 6.08449255e-008, -2.72131118e-008, 1)
o830.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o830.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o830.Color = Color3.new(0.388235, 0.372549, 0.384314)
o830.Position = Vector3.new(628, 187.999496, 153.099991)
o831.Parent = o1
o831.Material = Enum.Material.Concrete
o831.BrickColor = BrickColor.new("Dark stone grey")
o831.Position = Vector3.new(646.600037, 109.199684, -295.700012)
o831.Anchored = true
o831.Size = Vector3.new(2.79999852, 155.200012, 63)
o831.CFrame = CFrame.new(646.600037, 109.199684, -295.700012, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o831.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o831.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o831.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o831.Color = Color3.new(0.388235, 0.372549, 0.384314)
o831.Position = Vector3.new(646.600037, 109.199684, -295.700012)
o832.Parent = o1
o832.Material = Enum.Material.Concrete
o832.BrickColor = BrickColor.new("Dark stone grey")
o832.Position = Vector3.new(628.000061, 110.499748, 186)
o832.Rotation = Vector3.new(-0, -90, 0)
o832.Anchored = true
o832.Size = Vector3.new(2.79999852, 157.800018, 40)
o832.CFrame = CFrame.new(628.000061, 110.499748, 186, -5.96046519e-008, 0, -1, 0, 1, 0, 1, 0, -5.96046519e-008)
o832.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o832.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o832.Color = Color3.new(0.388235, 0.372549, 0.384314)
o832.Position = Vector3.new(628.000061, 110.499748, 186)
o833.Parent = o1
o833.Material = Enum.Material.Concrete
o833.BrickColor = BrickColor.new("Dark stone grey")
o833.Position = Vector3.new(628, 110.499695, -328.599976)
o833.Rotation = Vector3.new(-0, -90, 0)
o833.Anchored = true
o833.Size = Vector3.new(2.79999852, 157.800018, 40)
o833.CFrame = CFrame.new(628, 110.499695, -328.599976, -5.96046519e-008, 0, -1, 0, 1, 0, 1, 0, -5.96046519e-008)
o833.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o833.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o833.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
o833.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o833.Color = Color3.new(0.388235, 0.372549, 0.384314)
o833.Position = Vector3.new(628, 110.499695, -328.599976)
o834.Parent = o1
o834.Material = Enum.Material.Concrete
o834.BrickColor = BrickColor.new("Dark stone grey")
o834.Position = Vector3.new(628.000061, 187.999542, -69.9000854)
o834.Rotation = Vector3.new(3.48615754e-006, -1.55919622e-006, 90)
o834.Anchored = true
o834.Size = Vector3.new(2.79999852, 40.0000153, 63)
o834.CFrame = CFrame.new(628.000061, 187.999542, -69.9000854, -5.96046448e-008, -1, -2.72131082e-008, 1, -5.96046448e-008, -6.08449255e-008, 6.08449255e-008, -2.72131118e-008, 1)
o834.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o834.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o834.Color = Color3.new(0.388235, 0.372549, 0.384314)
o834.Position = Vector3.new(628.000061, 187.999542, -69.9000854)
o835.Parent = o1
o835.Material = Enum.Material.Concrete
o835.BrickColor = BrickColor.new("Dark stone grey")
o835.Position = Vector3.new(609.400024, 109.199684, 153.099991)
o835.Anchored = true
o835.Size = Vector3.new(2.79999852, 155.200012, 63.2000008)
o835.CFrame = CFrame.new(609.400024, 109.199684, 153.099991, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o835.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o835.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o835.Color = Color3.new(0.388235, 0.372549, 0.384314)
o835.Position = Vector3.new(609.400024, 109.199684, 153.099991)
o836.Parent = o1
o836.Material = Enum.Material.Concrete
o836.BrickColor = BrickColor.new("Dark stone grey")
o836.Position = Vector3.new(628, 187.999496, -295.700012)
o836.Rotation = Vector3.new(3.48615754e-006, -1.55919622e-006, 90)
o836.Anchored = true
o836.Size = Vector3.new(2.79999852, 40.0000153, 63)
o836.CFrame = CFrame.new(628, 187.999496, -295.700012, -5.96046448e-008, -1, -2.72131082e-008, 1, -5.96046448e-008, -6.08449255e-008, 6.08449255e-008, -2.72131118e-008, 1)
o836.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o836.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o836.Color = Color3.new(0.388235, 0.372549, 0.384314)
o836.Position = Vector3.new(628, 187.999496, -295.700012)
o837.Name = "Pokey"
o837.Parent = o1
o837.BrickColor = BrickColor.new("Flint")
o837.Position = Vector3.new(821.368225, 37.3000031, -7.98228168)
o837.Rotation = Vector3.new(180, 74.9982147, 2.3207003e-009)
o837.CanCollide = false
o837.FormFactor = Enum.FormFactor.Custom
o837.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o837.CFrame = CFrame.new(821.368225, 37.3000031, -7.98228168, 0.258816749, -1.04830779e-011, 0.965917766, 3.46793731e-012, -1, -1.16771523e-011, 0.965917766, 6.28470843e-012, -0.258816749)
o837.BottomSurface = Enum.SurfaceType.Smooth
o837.TopSurface = Enum.SurfaceType.Smooth
o837.Color = Color3.new(0.411765, 0.4, 0.360784)
o837.Position = Vector3.new(821.368225, 37.3000031, -7.98228168)
o838.Parent = o837
o838.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o839.Parent = o837
o839.C0 = CFrame.new(0, 0, 0, 0.258817971, -1.84370595e-014, -0.965921819, -1.68821967e-014, 1, 1.45638997e-014, 0.965921819, -1.25375208e-014, 0.258817971)
o839.Part0 = o837
o839.Part1 = o980
o840.Name = "Pokey"
o840.Parent = o1
o840.BrickColor = BrickColor.new("Flint")
o840.Position = Vector3.new(824.652283, 35.1000748, -8.86223698)
o840.Rotation = Vector3.new(-2.58767918e-009, -74.9959488, 30.0000019)
o840.CanCollide = false
o840.FormFactor = Enum.FormFactor.Custom
o840.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o840.CFrame = CFrame.new(824.652283, 35.1000748, -8.86223698, 0.224138901, -0.129406661, -0.965907514, 0.499998301, 0.866022527, 1.16889519e-011, 0.836498141, -0.482952446, 0.258814007)
o840.BottomSurface = Enum.SurfaceType.Smooth
o840.TopSurface = Enum.SurfaceType.Smooth
o840.Color = Color3.new(0.411765, 0.4, 0.360784)
o840.Position = Vector3.new(824.652283, 35.1000748, -8.86223698)
o841.Parent = o840
o841.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o842.Parent = o840
o842.C0 = CFrame.new(0, 0, 0.399993896, 0.866021991, 0.499999106, -5.32907052e-015, -0.499998063, 0.866023898, -1.0658141e-014, 0, -1.27595781e-014, 0.999997616)
o842.Part0 = o840
o842.Part1 = o890
o843.Name = "Pokey"
o843.Parent = o1
o843.BrickColor = BrickColor.new("Flint")
o843.Position = Vector3.new(823.300049, 32.5000343, -8.49993229)
o843.Rotation = Vector3.new(180, 29.9998989, -180)
o843.CanCollide = false
o843.FormFactor = Enum.FormFactor.Custom
o843.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o843.CFrame = CFrame.new(823.300049, 32.5000343, -8.49993229, -0.866022706, 1.79442594e-007, 0.49999848, 1.55641402e-007, 1, -8.9307278e-008, -0.49999848, 4.78301843e-010, -0.866022706)
o843.BottomSurface = Enum.SurfaceType.Smooth
o843.TopSurface = Enum.SurfaceType.Smooth
o843.Color = Color3.new(0.411765, 0.4, 0.360784)
o843.Position = Vector3.new(823.300049, 32.5000343, -8.49993229)
o844.Parent = o843
o844.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o845.Parent = o843
o845.C0 = CFrame.new(0, -0.199999988, 0, 0.707104623, 1.0972542e-007, 0.707104623, -5.49751817e-008, 1, -1.00199202e-007, -0.707104623, 3.19776383e-008, 0.707104623)
o845.Part0 = o843
o845.Part1 = o2
o846.Name = "Pokey"
o846.Parent = o1
o846.BrickColor = BrickColor.new("Flint")
o846.Position = Vector3.new(823.300049, 32.7000351, -8.49993229)
o846.Rotation = Vector3.new(1.60285254e-005, 74.9986801, -2.27717373e-005)
o846.CanCollide = false
o846.FormFactor = Enum.FormFactor.Custom
o846.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o846.CFrame = CFrame.new(823.300049, 32.7000351, -8.49993229, 0.258817554, 1.02864909e-007, 0.965919852, -1.2722461e-007, 1, -7.24043474e-008, -0.965919852, -1.04149294e-007, 0.258817554)
o846.BottomSurface = Enum.SurfaceType.Smooth
o846.TopSurface = Enum.SurfaceType.Smooth
o846.Color = Color3.new(0.411765, 0.4, 0.360784)
o846.Position = Vector3.new(823.300049, 32.7000351, -8.49993229)
o847.Parent = o846
o847.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o848.Parent = o846
o848.C0 = CFrame.new(0, -0.199999988, 0, 0.258818209, -8.12434919e-008, 0.965922892, 1.18632386e-007, 1, 5.2321468e-008, -0.965922892, 1.01047597e-007, 0.258818209)
o848.Part0 = o846
o848.Part1 = o843
o849.Name = "Pokey"
o849.Parent = o1
o849.BrickColor = BrickColor.new("Flint")
o849.Position = Vector3.new(823.300049, 32.3000679, -8.49991798)
o849.Rotation = Vector3.new(-2.61373323e-009, -74.9994583, -2.35059305e-009)
o849.CanCollide = false
o849.FormFactor = Enum.FormFactor.Custom
o849.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o849.CFrame = CFrame.new(823.300049, 32.3000679, -8.49991798, 0.258818299, 1.0618173e-011, -0.965923369, 3.33599814e-012, 1, 1.18068376e-011, 0.965923369, -6.30606678e-012, 0.258818299)
o849.BottomSurface = Enum.SurfaceType.Smooth
o849.TopSurface = Enum.SurfaceType.Smooth
o849.Color = Color3.new(0.411765, 0.4, 0.360784)
o849.Position = Vector3.new(823.300049, 32.3000679, -8.49991798)
o850.Parent = o849
o850.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o851.Parent = o849
o851.C0 = CFrame.new(-1.52587891e-005, -3.58819962e-005, 0, 4.47034232e-008, -5.32905773e-008, -0.999997497, 1.18217372e-007, 1, -5.32907052e-008, 0.999997497, -1.18217152e-007, 4.47034232e-008)
o851.Part0 = o849
o851.Part1 = o2
o852.Parent = o1
o852.Material = Enum.Material.Sand
o852.BrickColor = BrickColor.new("Grime")
o852.Position = Vector3.new(825.231873, 38.1000404, -9.01756191)
o852.Rotation = Vector3.new(-2.60169286e-009, -74.9981613, -2.36260123e-009)
o852.FormFactor = Enum.FormFactor.Custom
o852.Size = Vector3.new(1, 1, 1)
o852.CFrame = CFrame.new(825.231873, 38.1000404, -9.01756191, 0.258816719, 1.06723519e-011, -0.965917528, 3.35731443e-012, 1, 1.17523768e-011, 0.965917528, -6.29007957e-012, 0.258816719)
o852.BottomSurface = Enum.SurfaceType.Smooth
o852.TopSurface = Enum.SurfaceType.Smooth
o852.Color = Color3.new(0.498039, 0.556863, 0.392157)
o852.Position = Vector3.new(825.231873, 38.1000404, -9.01756191)
o853.Parent = o852
o853.MeshType = Enum.MeshType.Sphere
o854.Parent = o852
o854.C0 = CFrame.new(0, -5.40000391, 1.99998474, -0.866023242, -7.39740287e-008, 0.499998778, -1.27215841e-007, 1, -7.23958067e-008, -0.499998778, -1.26304244e-007, -0.866023242)
o854.Part0 = o852
o854.Part1 = o846
o855.Parent = o1
o855.Material = Enum.Material.Sand
o855.BrickColor = BrickColor.new("Grime")
o855.Position = Vector3.new(825.231873, 36.6000404, -9.01756191)
o855.Rotation = Vector3.new(-2.5989173e-009, -74.9977493, -2.36634334e-009)
o855.FormFactor = Enum.FormFactor.Custom
o855.Size = Vector3.new(1, 3, 1)
o855.CFrame = CFrame.new(825.231873, 36.6000404, -9.01756191, 0.258816212, 1.06892342e-011, -0.96591568, 3.375745e-012, 1, 1.17398166e-011, 0.96591568, -6.2755157e-012, 0.258816212)
o855.BottomSurface = Enum.SurfaceType.Smooth
o855.TopSurface = Enum.SurfaceType.Smooth
o855.Color = Color3.new(0.498039, 0.556863, 0.392157)
o855.Position = Vector3.new(825.231873, 36.6000404, -9.01756191)
o856.Parent = o855
o857.Parent = o855
o857.C0 = CFrame.new(0, 1.5, 0, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o857.Part0 = o855
o857.Part1 = o852
o858.Name = "Pokey"
o858.Parent = o1
o858.BrickColor = BrickColor.new("Flint")
o858.Position = Vector3.new(821.368225, 38.9000015, -7.98228168)
o858.Rotation = Vector3.new(180, -14.999896, 6.21828089e-010)
o858.CanCollide = false
o858.FormFactor = Enum.FormFactor.Custom
o858.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o858.CFrame = CFrame.new(821.368225, 38.9000015, -7.98228168, 0.965919852, -1.04830779e-011, -0.258817285, -1.16771783e-011, -1, -3.46794533e-012, -0.258817285, 6.28470843e-012, -0.965919852)
o858.BottomSurface = Enum.SurfaceType.Smooth
o858.TopSurface = Enum.SurfaceType.Smooth
o858.Color = Color3.new(0.411765, 0.4, 0.360784)
o858.Position = Vector3.new(821.368225, 38.9000015, -7.98228168)
o859.Parent = o858
o859.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o860.Parent = o858
o860.C0 = CFrame.new(0, -0.200000286, 1.52587891e-005, 1.49011345e-008, 1.2537536e-014, -0.999997556, -1.84370917e-014, -1, 1.25375428e-014, -0.999997556, -1.84370816e-014, -1.49011345e-008)
o860.Part0 = o858
o860.Part1 = o875
o861.Parent = o1
o861.Material = Enum.Material.Sand
o861.BrickColor = BrickColor.new("Grime")
o861.Position = Vector3.new(821.368225, 38.1000061, -7.98229647)
o861.Rotation = Vector3.new(-2.59059107e-009, -74.9996185, -2.31321096e-009)
o861.FormFactor = Enum.FormFactor.Custom
o861.Size = Vector3.new(1, 2, 1)
o861.CFrame = CFrame.new(821.368225, 38.1000061, -7.98229647, 0.258818418, 1.04493133e-011, -0.965924084, 3.43108593e-012, 1, 1.17023049e-011, 0.965924084, -6.31383617e-012, 0.258818418)
o861.BottomSurface = Enum.SurfaceType.Smooth
o861.TopSurface = Enum.SurfaceType.Smooth
o861.Color = Color3.new(0.498039, 0.556863, 0.392157)
o861.Position = Vector3.new(821.368225, 38.1000061, -7.98229647)
o862.Parent = o861
o863.Parent = o1
o863.Material = Enum.Material.Sand
o863.BrickColor = BrickColor.new("Grime")
o863.Position = Vector3.new(822.334167, 37.1000061, -8.24111557)
o863.Rotation = Vector3.new(-90, 5.97734251e-010, -75.0000076)
o863.FormFactor = Enum.FormFactor.Custom
o863.Size = Vector3.new(1, 2, 1)
o863.CFrame = CFrame.new(822.334167, 37.1000061, -8.24111557, 0.258818924, 0.965925932, 1.0432431e-011, 3.41265536e-012, -1.17148652e-011, 1, 0.965925932, -0.258818924, -6.32840004e-012)
o863.BottomSurface = Enum.SurfaceType.Smooth
o863.TopSurface = Enum.SurfaceType.Smooth
o863.Color = Color3.new(0.498039, 0.556863, 0.392157)
o863.Position = Vector3.new(822.334167, 37.1000061, -8.24111557)
o864.Parent = o863
o865.Parent = o863
o865.C0 = CFrame.new(0, -1, 1, 0.999998093, 1.84370917e-014, 0, 0, 1.25375428e-014, -0.999998093, 1.84370917e-014, 1, -1.25375428e-014)
o865.Part0 = o863
o865.Part1 = o861
o866.Parent = o1
o866.Material = Enum.Material.Sand
o866.BrickColor = BrickColor.new("Grime")
o866.Position = Vector3.new(824.26593, 35.1000404, -8.75874615)
o866.Rotation = Vector3.new(-90, 6.13415319e-010, -75.0000076)
o866.FormFactor = Enum.FormFactor.Custom
o866.Size = Vector3.new(1, 2, 1)
o866.CFrame = CFrame.new(824.26593, 35.1000404, -8.75874615, 0.258815706, 0.965913832, 1.07061165e-011, 3.39417557e-012, -1.17272563e-011, 1, 0.965913832, -0.258815706, -6.26095183e-012)
o866.BottomSurface = Enum.SurfaceType.Smooth
o866.TopSurface = Enum.SurfaceType.Smooth
o866.Color = Color3.new(0.498039, 0.556863, 0.392157)
o866.Position = Vector3.new(824.26593, 35.1000404, -8.75874615)
o867.Parent = o866
o868.Parent = o866
o868.C0 = CFrame.new(0, 1, 1.5, 0.999998093, 1.84370917e-014, 0, 0, 1.25375428e-014, -0.999998093, 1.84370917e-014, 1, -1.25375428e-014)
o868.Part0 = o866
o868.Part1 = o855
o869.Name = "Pokey"
o869.Parent = o1
o869.BrickColor = BrickColor.new("Flint")
o869.Position = Vector3.new(821.368225, 38.5, -7.98229456)
o869.Rotation = Vector3.new(180, 14.9999447, 6.20825669e-010)
o869.CanCollide = false
o869.FormFactor = Enum.FormFactor.Custom
o869.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o869.CFrame = CFrame.new(821.368225, 38.5, -7.98229456, 0.965921521, -1.04661956e-011, 0.25881809, -8.39885193e-012, -1, -8.83223616e-012, 0.25881809, 6.2992723e-012, -0.965921521)
o869.BottomSurface = Enum.SurfaceType.Smooth
o869.TopSurface = Enum.SurfaceType.Smooth
o869.Color = Color3.new(0.411765, 0.4, 0.360784)
o869.Position = Vector3.new(821.368225, 38.5, -7.98229456)
o870.Parent = o869
o870.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o871.Parent = o869
o871.C0 = CFrame.new(-7.62939453e-006, 0.399991989, 0, 0.499998778, 2.00763648e-014, -0.866023183, -1.84370917e-014, -1, 1.25375428e-014, -0.866023183, -9.6982113e-015, -0.499998778)
o871.Part0 = o869
o871.Part1 = o861
o872.Parent = o1
o872.Material = Enum.Material.Sand
o872.BrickColor = BrickColor.new("Grime")
o872.Position = Vector3.new(825.231873, 35.1000671, -9.01756096)
o872.Rotation = Vector3.new(-2.59336641e-009, -74.9969406, -2.37382736e-009)
o872.FormFactor = Enum.FormFactor.Custom
o872.Size = Vector3.new(1, 1, 1)
o872.CFrame = CFrame.new(825.231873, 35.1000671, -9.01756096, 0.258815199, 1.07229989e-011, -0.965911984, 3.41260614e-012, 1, 1.17146961e-011, 0.965911984, -6.24638796e-012, 0.258815199)
o872.BottomSurface = Enum.SurfaceType.Smooth
o872.TopSurface = Enum.SurfaceType.Smooth
o872.Color = Color3.new(0.498039, 0.556863, 0.392157)
o872.Position = Vector3.new(825.231873, 35.1000671, -9.01756096)
o873.Parent = o872
o873.MeshType = Enum.MeshType.Sphere
o874.Parent = o872
o874.C0 = CFrame.new(0, -2.78949738e-005, 1, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o874.Part0 = o872
o874.Part1 = o866
o875.Parent = o1
o875.Material = Enum.Material.Sand
o875.BrickColor = BrickColor.new("Grime")
o875.Position = Vector3.new(821.368225, 39.1000023, -7.98229647)
o875.Rotation = Vector3.new(-2.58781552e-009, -74.9992065, -2.31695263e-009)
o875.FormFactor = Enum.FormFactor.Custom
o875.Size = Vector3.new(1, 1, 1)
o875.CFrame = CFrame.new(821.368225, 39.1000023, -7.98229647, 0.258817911, 1.04661956e-011, -0.965922236, 3.4495165e-012, 1, 1.16897447e-011, 0.965922236, -6.2992723e-012, 0.258817911)
o875.BottomSurface = Enum.SurfaceType.Smooth
o875.TopSurface = Enum.SurfaceType.Smooth
o875.Color = Color3.new(0.498039, 0.556863, 0.392157)
o875.Position = Vector3.new(821.368225, 39.1000023, -7.98229647)
o876.Parent = o875
o876.MeshType = Enum.MeshType.Sphere
o877.Parent = o875
o877.C0 = CFrame.new(0, -0.999996185, 0, 0.999998093, 1.84370917e-014, 0, 1.84370917e-014, 1, -1.25375428e-014, 0, -1.25375428e-014, 0.999998093)
o877.Part0 = o875
o877.Part1 = o861
o878.Parent = o1
o878.Material = Enum.Material.Sand
o878.BrickColor = BrickColor.new("Grime")
o878.Position = Vector3.new(821.368225, 37.1000023, -7.98229694)
o878.Rotation = Vector3.new(-2.59059107e-009, -74.9996185, -2.31321096e-009)
o878.FormFactor = Enum.FormFactor.Custom
o878.Size = Vector3.new(1, 1, 1)
o878.CFrame = CFrame.new(821.368225, 37.1000023, -7.98229694, 0.258818418, 1.04493133e-011, -0.965924084, 3.43108593e-012, 1, 1.17023049e-011, 0.965924084, -6.31383617e-012, 0.258818418)
o878.BottomSurface = Enum.SurfaceType.Smooth
o878.TopSurface = Enum.SurfaceType.Smooth
o878.Color = Color3.new(0.498039, 0.556863, 0.392157)
o878.Position = Vector3.new(821.368225, 37.1000023, -7.98229694)
o879.Parent = o878
o879.MeshType = Enum.MeshType.Sphere
o880.Parent = o878
o880.C0 = CFrame.new(0, 3.81469727e-006, -1, 0.999998093, 0, 1.84370917e-014, 1.84370917e-014, 1.25375428e-014, 1, 0, -0.999998093, -1.25375428e-014)
o880.Part0 = o878
o880.Part1 = o863
o881.Name = "Pokey"
o881.Parent = o1
o881.BrickColor = BrickColor.new("Flint")
o881.Position = Vector3.new(825.038696, 35.1000671, -8.96579266)
o881.Rotation = Vector3.new(-2.59059085e-009, -74.9965134, -45)
o881.CanCollide = false
o881.FormFactor = Enum.FormFactor.Custom
o881.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o881.CFrame = CFrame.new(825.038696, 35.1000671, -8.96579266, 0.183009624, 0.183009624, -0.965910077, -0.707106769, 0.707106709, 1.17021349e-011, 0.683001578, 0.683001578, 0.258814692)
o881.BottomSurface = Enum.SurfaceType.Smooth
o881.TopSurface = Enum.SurfaceType.Smooth
o881.Color = Color3.new(0.411765, 0.4, 0.360784)
o881.Position = Vector3.new(825.038696, 35.1000671, -8.96579266)
o882.Parent = o881
o882.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o883.Parent = o881
o883.C0 = CFrame.new(-7.62939453e-006, -7.62939453e-006, -0.199981689, 0.707105398, -0.707106769, 8.8817842e-015, 0.707105398, 0.707106709, -8.8817842e-015, 0, -1.25375428e-014, 0.999998033)
o883.Part0 = o881
o883.Part1 = o872
o884.Name = "Pokey"
o884.Parent = o1
o884.BrickColor = BrickColor.new("Flint")
o884.Position = Vector3.new(822.140991, 37.1000023, -8.18933678)
o884.Rotation = Vector3.new(-2.59059085e-009, -74.9996033, -75)
o884.CanCollide = false
o884.FormFactor = Enum.FormFactor.Custom
o884.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o884.CFrame = CFrame.new(822.140991, 37.1000023, -8.18933678, 0.0669871122, 0.249999329, -0.965924025, -0.965925455, 0.258818924, 1.17023041e-011, 0.249999449, 0.933010697, 0.258818418)
o884.BottomSurface = Enum.SurfaceType.Smooth
o884.TopSurface = Enum.SurfaceType.Smooth
o884.Color = Color3.new(0.411765, 0.4, 0.360784)
o884.Position = Vector3.new(822.140991, 37.1000023, -8.18933678)
o885.Parent = o884
o885.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o886.Parent = o884
o886.C0 = CFrame.new(-7.62939453e-006, -1.52587891e-005, -0.199996948, 0.258818448, -1.24344979e-014, -0.965925455, 0.965923667, 3.55271368e-015, 0.258818924, 0, -0.999998033, -1.25375428e-014)
o886.Part0 = o884
o886.Part1 = o863
o887.Name = "Pokey"
o887.Parent = o1
o887.BrickColor = BrickColor.new("Flint")
o887.Position = Vector3.new(824.26593, 35.1000748, -8.75871277)
o887.Rotation = Vector3.new(-2.59336619e-009, -74.9969254, -75)
o887.CanCollide = false
o887.FormFactor = Enum.FormFactor.Custom
o887.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o887.CFrame = CFrame.new(824.26593, 35.1000748, -8.75871277, 0.0669862777, 0.249996215, -0.965911925, -0.965925455, 0.258818924, 1.17146952e-011, 0.249996319, 0.932999015, 0.258815199)
o887.BottomSurface = Enum.SurfaceType.Smooth
o887.TopSurface = Enum.SurfaceType.Smooth
o887.Color = Color3.new(0.411765, 0.4, 0.360784)
o887.Position = Vector3.new(824.26593, 35.1000748, -8.75871277)
o888.Parent = o887
o888.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o889.Parent = o887
o889.C0 = CFrame.new(2.28881836e-005, -4.57763672e-005, 1.52587891e-005, 0.258818448, -1.24344979e-014, -0.965925455, 0.965923667, 3.55271368e-015, 0.258818924, 0, -0.999998033, -1.25375428e-014)
o889.Part0 = o887
o889.Part1 = o866
o890.Name = "Pokey"
o890.Parent = o1
o890.BrickColor = BrickColor.new("Flint")
o890.Position = Vector3.new(824.26593, 35.1000748, -8.75871277)
o890.Rotation = Vector3.new(-2.59050381e-009, -74.99646, -1.64939684e-006)
o890.CanCollide = false
o890.FormFactor = Enum.FormFactor.Custom
o890.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o890.CFrame = CFrame.new(824.26593, 35.1000748, -8.75871277, 0.258814335, 7.45059303e-009, -0.965909839, 1.49011612e-008, 0.999998391, 1.17017394e-011, 0.965908647, -3.3023733e-015, 0.258814633)
o890.BottomSurface = Enum.SurfaceType.Smooth
o890.TopSurface = Enum.SurfaceType.Smooth
o890.Color = Color3.new(0.411765, 0.4, 0.360784)
o890.Position = Vector3.new(824.26593, 35.1000748, -8.75871277)
o891.Parent = o890
o891.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o892.Parent = o890
o892.C0 = CFrame.new(0, 0, 0, 0.258818209, 0.965922832, 0, -0.96592468, 0.258818716, -1.27595807e-014, 1.24344979e-014, -3.55271368e-015, 0.999997854)
o892.Part0 = o890
o892.Part1 = o887
o893.Name = "Pokey"
o893.Parent = o1
o893.BrickColor = BrickColor.new("Flint")
o893.Position = Vector3.new(821.754639, 37.1000023, -8.08581161)
o893.Rotation = Vector3.new(-2.58772848e-009, -74.9991379, 29.9999981)
o893.CanCollide = false
o893.FormFactor = Enum.FormFactor.Custom
o893.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o893.CFrame = CFrame.new(821.754639, 37.1000023, -8.08581161, 0.224142432, -0.129408687, -0.965921938, 0.499998927, 0.866023481, 1.16893483e-011, 0.836511433, -0.482960045, 0.258817852)
o893.BottomSurface = Enum.SurfaceType.Smooth
o893.TopSurface = Enum.SurfaceType.Smooth
o893.Color = Color3.new(0.411765, 0.4, 0.360784)
o893.Position = Vector3.new(821.754639, 37.1000023, -8.08581161)
o894.Parent = o893
o894.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o895.Parent = o893
o895.C0 = CFrame.new(0, 0, -0.399993896, -0.258819044, 0.965922475, -7.10542736e-015, -0.965923786, -0.258817673, -1.0658141e-014, 1.24344979e-014, -3.55271368e-015, 0.999997854)
o895.Part0 = o893
o895.Part1 = o884
o896.Name = "Pokey"
o896.Parent = o1
o896.BrickColor = BrickColor.new("Flint")
o896.Position = Vector3.new(823.300049, 40.0999985, -8.49991989)
o896.Rotation = Vector3.new(-2.38479427e-011, 29.9997692, 180)
o896.CanCollide = false
o896.FormFactor = Enum.FormFactor.Custom
o896.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o896.CFrame = CFrame.new(823.300049, 40.0999985, -8.49991989, -0.866019487, -1.04822722e-011, 0.499996483, 1.2233937e-011, -1, 3.60459058e-013, 0.499996483, 6.37092202e-012, 0.866019487)
o896.BottomSurface = Enum.SurfaceType.Smooth
o896.TopSurface = Enum.SurfaceType.Smooth
o896.Color = Color3.new(0.411765, 0.4, 0.360784)
o896.Position = Vector3.new(823.300049, 40.0999985, -8.49991989)
o897.Parent = o896
o897.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o898.Name = "Pokey"
o898.Parent = o1
o898.BrickColor = BrickColor.new("Flint")
o898.Position = Vector3.new(823.300049, 33.5000725, -8.49991798)
o898.Rotation = Vector3.new(-2.60169286e-009, -74.9981613, -2.36260123e-009)
o898.CanCollide = false
o898.FormFactor = Enum.FormFactor.Custom
o898.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o898.CFrame = CFrame.new(823.300049, 33.5000725, -8.49991798, 0.258816719, 1.06723519e-011, -0.965917528, 3.35731443e-012, 1, 1.17523768e-011, 0.965917528, -6.29007957e-012, 0.258816719)
o898.BottomSurface = Enum.SurfaceType.Smooth
o898.TopSurface = Enum.SurfaceType.Smooth
o898.Color = Color3.new(0.411765, 0.4, 0.360784)
o898.Position = Vector3.new(823.300049, 33.5000725, -8.49991798)
o899.Parent = o898
o899.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o900.Parent = o898
o900.C0 = CFrame.new(-1.52587891e-005, -0.800035954, 0, -0.866023242, -7.39740287e-008, 0.499998778, -1.27215841e-007, 1, -7.23958067e-008, -0.499998778, -1.26304244e-007, -0.866023242)
o900.Part0 = o898
o900.Part1 = o846
o901.Name = "Pokey"
o901.Parent = o1
o901.BrickColor = BrickColor.new("Flint")
o901.Position = Vector3.new(823.30011, 37.1000214, -8.49993229)
o901.Rotation = Vector3.new(-179.995758, -89.6773605, 0.00429491466)
o901.CanCollide = false
o901.FormFactor = Enum.FormFactor.Custom
o901.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o901.CFrame = CFrame.new(823.30011, 37.1000214, -8.49993229, 1.78813934e-007, -1.34039646e-011, -0.999984145, -6.46160122e-012, -1, 1.32603407e-011, -0.999984145, 6.33698302e-012, -1.78813934e-007)
o901.BottomSurface = Enum.SurfaceType.Smooth
o901.TopSurface = Enum.SurfaceType.Smooth
o901.Color = Color3.new(0.411765, 0.4, 0.360784)
o901.Position = Vector3.new(823.30011, 37.1000214, -8.49993229)
o902.Parent = o901
o902.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o903.Name = "Pokey"
o903.Parent = o1
o903.BrickColor = BrickColor.new("Flint")
o903.Position = Vector3.new(823.299988, 34.7000771, -8.49993134)
o903.Rotation = Vector3.new(180, 14.9997902, -180)
o903.CanCollide = false
o903.FormFactor = Enum.FormFactor.Custom
o903.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o903.CFrame = CFrame.new(823.299988, 34.7000771, -8.49993134, -0.965911686, 1.07229989e-011, 0.258815497, 8.4389197e-012, 1, -8.81275088e-012, -0.258815497, -6.24638796e-012, -0.965911686)
o903.BottomSurface = Enum.SurfaceType.Smooth
o903.TopSurface = Enum.SurfaceType.Smooth
o903.Color = Color3.new(0.411765, 0.4, 0.360784)
o903.Position = Vector3.new(823.299988, 34.7000771, -8.49993134)
o904.Parent = o903
o904.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o905.Parent = o903
o905.C0 = CFrame.new(-0.866027832, 0.39996314, 0.5, -0.499999046, -0.86602354, -2.00763749e-014, 1.84370917e-014, 1.25375428e-014, 1, -0.86602354, 0.499999046, -9.69821469e-015)
o905.Part0 = o903
o905.Part1 = o866
o906.Name = "Pokey"
o906.Parent = o1
o906.BrickColor = BrickColor.new("Flint")
o906.Position = Vector3.new(823.30011, 36.5000153, -8.49993229)
o906.Rotation = Vector3.new(-7.12329751e-010, -30.0000038, 180)
o906.CanCollide = false
o906.FormFactor = Enum.FormFactor.Custom
o906.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o906.CFrame = CFrame.new(823.30011, 36.5000153, -8.49993229, -0.866025329, -1.04485066e-011, -0.50000006, 5.84864622e-012, -1, 1.07668596e-011, -0.50000006, 6.40004933e-012, 0.866025329)
o906.BottomSurface = Enum.SurfaceType.Smooth
o906.TopSurface = Enum.SurfaceType.Smooth
o906.Color = Color3.new(0.411765, 0.4, 0.360784)
o906.Position = Vector3.new(823.30011, 36.5000153, -8.49993229)
o907.Parent = o906
o907.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o908.Name = "Pokey"
o908.Parent = o1
o908.BrickColor = BrickColor.new("Flint")
o908.Position = Vector3.new(823.30011, 37.5000191, -8.49993229)
o908.Rotation = Vector3.new(-5.73233794e-010, -14.9998093, 180)
o908.CanCollide = false
o908.FormFactor = Enum.FormFactor.Custom
o908.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o908.CFrame = CFrame.new(823.30011, 37.5000191, -8.49993229, -0.965913296, -1.33870831e-011, -0.258815825, 1.11562296e-011, -1, 9.66378626e-012, -0.258815825, 6.35154646e-012, 0.965913296)
o908.BottomSurface = Enum.SurfaceType.Smooth
o908.TopSurface = Enum.SurfaceType.Smooth
o908.Color = Color3.new(0.411765, 0.4, 0.360784)
o908.Position = Vector3.new(823.30011, 37.5000191, -8.49993229)
o909.Parent = o908
o909.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o910.Parent = o908
o910.C0 = CFrame.new(0, 0.399999619, 0, 0.258818239, 2.00763614e-014, 0.965923011, 1.45639031e-014, 1, 1.68822035e-014, -0.965923011, -9.6982113e-015, 0.258818239)
o910.Part0 = o908
o910.Part1 = o901
o911.Name = "Pokey"
o911.Parent = o1
o911.BrickColor = BrickColor.new("Flint")
o911.Position = Vector3.new(823.30011, 35.9000282, -8.49993229)
o911.Rotation = Vector3.new(-179.995438, -89.7925262, -179.995407)
o911.CanCollide = false
o911.FormFactor = Enum.FormFactor.Custom
o911.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o911.CFrame = CFrame.new(823.30011, 35.9000282, -8.49993229, -1.34110024e-007, 1.07657876e-011, -0.999993443, 6.51656507e-012, 1, 1.06622254e-011, 0.999993443, -6.43574083e-012, -1.34110024e-007)
o911.BottomSurface = Enum.SurfaceType.Smooth
o911.TopSurface = Enum.SurfaceType.Smooth
o911.Color = Color3.new(0.411765, 0.4, 0.360784)
o911.Position = Vector3.new(823.30011, 35.9000282, -8.49993229)
o912.Parent = o911
o912.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o913.Name = "Pokey"
o913.Parent = o1
o913.BrickColor = BrickColor.new("Flint")
o913.Position = Vector3.new(823.30011, 37.9000206, -8.49993229)
o913.Rotation = Vector3.new(-1.68787684e-009, -59.9990807, -1.53212654e-009)
o913.CanCollide = false
o913.FormFactor = Enum.FormFactor.Custom
o913.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o913.CFrame = CFrame.new(823.30011, 37.9000206, -8.49993229, 0.499995291, 1.33702008e-011, -0.866017401, -1.0763751e-012, 1, 1.47293653e-011, 0.866017401, -6.3661099e-012, 0.499995291)
o913.BottomSurface = Enum.SurfaceType.Smooth
o913.TopSurface = Enum.SurfaceType.Smooth
o913.Color = Color3.new(0.411765, 0.4, 0.360784)
o913.Position = Vector3.new(823.30011, 37.9000206, -8.49993229)
o914.Parent = o913
o914.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o915.Parent = o913
o915.C0 = CFrame.new(0, -0.400000095, 0, -0.707104266, -2.10537984e-014, 0.707104206, -2.00763614e-014, -1, 9.6982113e-015, 0.707104206, 7.33845883e-015, 0.707104266)
o915.Part0 = o913
o915.Part1 = o908
o916.Name = "Pokey"
o916.Parent = o1
o916.BrickColor = BrickColor.new("Flint")
o916.Position = Vector3.new(823.30011, 36.3000183, -8.49993229)
o916.Rotation = Vector3.new(-5.21939769e-010, -15.0000038, -6.17459361e-010)
o916.CanCollide = false
o916.FormFactor = Enum.FormFactor.Custom
o916.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o916.CFrame = CFrame.new(823.30011, 36.3000183, -8.49993229, 0.965925753, 1.0409491e-011, -0.258819103, -8.41896691e-012, 1, 8.79916539e-012, 0.258819103, -6.32035179e-012, 0.965925753)
o916.BottomSurface = Enum.SurfaceType.Smooth
o916.TopSurface = Enum.SurfaceType.Smooth
o916.Color = Color3.new(0.411765, 0.4, 0.360784)
o916.Position = Vector3.new(823.30011, 36.3000183, -8.49993229)
o917.Parent = o916
o917.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o918.Name = "Pokey"
o918.Parent = o1
o918.BrickColor = BrickColor.new("Flint")
o918.Position = Vector3.new(823.30011, 38.7000198, -8.49993229)
o918.Rotation = Vector3.new(0.012795506, 89.8165436, 179.987167)
o918.CanCollide = false
o918.FormFactor = Enum.FormFactor.Custom
o918.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o918.CFrame = CFrame.new(823.30011, 38.7000198, -8.49993229, -5.96046448e-008, -1.33533185e-011, 0.999994874, 6.41797726e-012, -1, -1.331113e-011, 0.999994874, 6.38067377e-012, 5.96046448e-008)
o918.BottomSurface = Enum.SurfaceType.Smooth
o918.TopSurface = Enum.SurfaceType.Smooth
o918.Color = Color3.new(0.411765, 0.4, 0.360784)
o918.Position = Vector3.new(823.30011, 38.7000198, -8.49993229)
o919.Parent = o918
o919.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o920.Parent = o918
o920.C0 = CFrame.new(0, 0.800000191, 0, 0.866021812, 1.45638913e-014, 0.499997914, -2.10537984e-014, -1, 7.33845883e-015, 0.499997914, 1.68821849e-014, -0.866021812)
o920.Part0 = o918
o920.Part1 = o913
o921.Name = "Pokey"
o921.Parent = o1
o921.BrickColor = BrickColor.new("Flint")
o921.Position = Vector3.new(823.299988, 34.1000748, -8.49993134)
o921.Rotation = Vector3.new(-180, -74.9963455, -180)
o921.CanCollide = false
o921.FormFactor = Enum.FormFactor.Custom
o921.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o921.CFrame = CFrame.new(823.299988, 34.1000748, -8.49993134, -0.258814782, 2.9229259e-009, -0.965909302, -8.91667113e-008, 1, 2.69179221e-008, 0.965909302, 9.30938313e-008, -0.258814782)
o921.BottomSurface = Enum.SurfaceType.Smooth
o921.TopSurface = Enum.SurfaceType.Smooth
o921.Color = Color3.new(0.411765, 0.4, 0.360784)
o921.Position = Vector3.new(823.299988, 34.1000748, -8.49993134)
o922.Parent = o921
o922.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o923.Parent = o921
o923.C0 = CFrame.new(0, 0.60000062, 0, -8.94069672e-008, -8.91755221e-008, -0.999997556, -2.69094578e-008, 1, -8.91753302e-008, 0.999997556, 2.69094826e-008, -8.94069672e-008)
o923.Part0 = o921
o923.Part1 = o903
o924.Name = "Pokey"
o924.Parent = o1
o924.BrickColor = BrickColor.new("Flint")
o924.Position = Vector3.new(823.30011, 39.3000183, -8.49993229)
o924.Rotation = Vector3.new(1.541448e-006, -5.12261568e-006, 180)
o924.CanCollide = false
o924.FormFactor = Enum.FormFactor.Custom
o924.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o924.CFrame = CFrame.new(823.30011, 39.3000183, -8.49993229, -0.999989867, -8.91880063e-008, -8.94065124e-008, 8.91888305e-008, -1, -2.690307e-008, -8.94065124e-008, -2.69028746e-008, 0.999989867)
o924.BottomSurface = Enum.SurfaceType.Smooth
o924.TopSurface = Enum.SurfaceType.Smooth
o924.Color = Color3.new(0.411765, 0.4, 0.360784)
o924.Position = Vector3.new(823.30011, 39.3000183, -8.49993229)
o925.Parent = o924
o925.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o926.Parent = o924
o926.C0 = CFrame.new(0, 0.599999905, 0, -2.98023224e-008, -8.91755221e-008, -0.999994993, -2.69093885e-008, 1, -8.917511e-008, 0.999994993, 2.6909488e-008, -2.98023224e-008)
o926.Part0 = o924
o926.Part1 = o918
o927.Name = "Pokey"
o927.Parent = o1
o927.BrickColor = BrickColor.new("Flint")
o927.Position = Vector3.new(823.30011, 39.3000183, -8.49993229)
o927.Rotation = Vector3.new(-7.21521701e-006, -44.9990845, 179.999985)
o927.CanCollide = false
o927.FormFactor = Enum.FormFactor.Custom
o927.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o927.CFrame = CFrame.new(823.30011, 39.3000183, -8.49993229, -0.707095325, -2.01740988e-007, -0.707095444, 1.96265248e-007, -1, 8.90440077e-008, -0.707095444, -7.58157768e-008, 0.707095325)
o927.BottomSurface = Enum.SurfaceType.Smooth
o927.TopSurface = Enum.SurfaceType.Smooth
o927.Color = Color3.new(0.411765, 0.4, 0.360784)
o927.Position = Vector3.new(823.30011, 39.3000183, -8.49993229)
o928.Parent = o927
o928.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o929.Parent = o927
o929.C0 = CFrame.new(0, 0, 0, 0.707102537, -1.14176359e-007, -0.707102537, 1.12554133e-007, 1, -4.89133853e-008, 0.707102537, -4.50015918e-008, 0.707102537)
o929.Part0 = o927
o929.Part1 = o924
o930.Name = "Pokey"
o930.Parent = o1
o930.BrickColor = BrickColor.new("Flint")
o930.Position = Vector3.new(823.299988, 34.1000748, -8.49993134)
o930.Rotation = Vector3.new(1.02009017e-005, -59.9980545, -2.41084877e-006)
o930.CanCollide = false
o930.FormFactor = Enum.FormFactor.Custom
o930.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o930.CFrame = CFrame.new(823.299988, 34.1000748, -8.49993134, 0.499989986, 2.10382023e-008, -0.866008401, -1.96260117e-007, 1, -8.9017874e-008, 0.866008401, 2.144711e-007, 0.499989986)
o930.BottomSurface = Enum.SurfaceType.Smooth
o930.TopSurface = Enum.SurfaceType.Smooth
o930.Color = Color3.new(0.411765, 0.4, 0.360784)
o930.Position = Vector3.new(823.299988, 34.1000748, -8.49993134)
o931.Parent = o930
o931.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o932.Parent = o930
o932.C0 = CFrame.new(0, 0, 0, 0.707104921, -1.1417611e-007, -0.707104921, 1.12554773e-007, 1, -4.89136127e-008, 0.707104921, -4.50014426e-008, 0.707104921)
o932.Part0 = o930
o932.Part1 = o921
o933.Name = "Pokey"
o933.Parent = o1
o933.BrickColor = BrickColor.new("Flint")
o933.Position = Vector3.new(823.300049, 33.3000717, -8.49991798)
o933.Rotation = Vector3.new(-180, -44.9993973, -180)
o933.CanCollide = false
o933.FormFactor = Enum.FormFactor.Custom
o933.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o933.CFrame = CFrame.new(823.300049, 33.3000717, -8.49991798, -0.707099557, 1.06892342e-011, -0.707099319, 1.18548539e-011, 1, 2.94642739e-012, 0.707099319, -6.2755157e-012, -0.707099557)
o933.BottomSurface = Enum.SurfaceType.Smooth
o933.TopSurface = Enum.SurfaceType.Smooth
o933.Color = Color3.new(0.411765, 0.4, 0.360784)
o933.Position = Vector3.new(823.300049, 33.3000717, -8.49991798)
o934.Parent = o933
o934.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o935.Parent = o933
o935.C0 = CFrame.new(0, 0.199998975, 0, 0.499999076, -1.63928573e-015, 0.866023898, 1.84370917e-014, 1, -1.25375428e-014, -0.866023898, -2.22357634e-014, 0.499999076)
o935.Part0 = o933
o935.Part1 = o898
o936.Name = "Pokey"
o936.Parent = o1
o936.BrickColor = BrickColor.new("Flint")
o936.Position = Vector3.new(823.299988, 33.900074, -8.49993134)
o936.Rotation = Vector3.new(180, -14.9996405, -180)
o936.CanCollide = false
o936.FormFactor = Enum.FormFactor.Custom
o936.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o936.CFrame = CFrame.new(823.299988, 33.900074, -8.49993134, -0.965903878, 4.36581544e-008, -0.258812964, 4.93496444e-008, 1, -1.54906807e-008, 0.258812964, -2.77346714e-008, -0.965903878)
o936.BottomSurface = Enum.SurfaceType.Smooth
o936.TopSurface = Enum.SurfaceType.Smooth
o936.Color = Color3.new(0.411765, 0.4, 0.360784)
o936.Position = Vector3.new(823.299988, 33.900074, -8.49993134)
o937.Parent = o936
o937.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o938.Parent = o936
o938.C0 = CFrame.new(0, 0.200000286, 0, -0.258818269, 8.45383425e-008, 0.965922892, -1.98450309e-007, 1, -1.40695079e-007, -0.965922892, -2.28102266e-007, -0.258818269)
o938.Part0 = o936
o938.Part1 = o930
o939.Name = "Pokey"
o939.Parent = o1
o939.BrickColor = BrickColor.new("Flint")
o939.Position = Vector3.new(823.30011, 36.1000061, -8.49993229)
o939.Rotation = Vector3.new(2.61086689e-006, 44.9999962, -4.41686825e-006)
o939.CanCollide = false
o939.FormFactor = Enum.FormFactor.Custom
o939.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o939.CFrame = CFrame.new(823.30011, 36.1000061, -8.49993229, 0.707106888, 5.45100853e-008, 0.707106709, -4.48672957e-008, 1, -3.22216067e-008, -0.707106709, -8.94184549e-009, 0.707106888)
o939.BottomSurface = Enum.SurfaceType.Smooth
o939.TopSurface = Enum.SurfaceType.Smooth
o939.Color = Color3.new(0.411765, 0.4, 0.360784)
o939.Position = Vector3.new(823.30011, 36.1000061, -8.49993229)
o940.Parent = o939
o940.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o941.Name = "Pokey"
o941.Parent = o1
o941.BrickColor = BrickColor.new("Flint")
o941.Position = Vector3.new(823.299988, 34.9000702, -8.49993134)
o941.Rotation = Vector3.new(2.61093032e-006, 44.9990082, -4.41686552e-006)
o941.CanCollide = false
o941.FormFactor = Enum.FormFactor.Custom
o941.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o941.CFrame = CFrame.new(823.299988, 34.9000702, -8.49993134, 0.707094669, 5.45091083e-008, 0.70709455, -4.4866546e-008, 1, -3.22218305e-008, -0.70709455, -8.94088537e-009, 0.707094669)
o941.BottomSurface = Enum.SurfaceType.Smooth
o941.TopSurface = Enum.SurfaceType.Smooth
o941.Color = Color3.new(0.411765, 0.4, 0.360784)
o941.Position = Vector3.new(823.299988, 34.9000702, -8.49993134)
o942.Parent = o941
o942.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o943.Parent = o941
o943.C0 = CFrame.new(0, -0.199995041, 0, -0.499998569, -4.48546942e-008, 0.866023183, -5.03296747e-008, 1, 2.27357635e-008, -0.866023183, -3.2218928e-008, -0.499998569)
o943.Part0 = o941
o943.Part1 = o903
o944.Name = "Pokey"
o944.Parent = o1
o944.BrickColor = BrickColor.new("Flint")
o944.Position = Vector3.new(823.30011, 35.500042, -8.49993229)
o944.Rotation = Vector3.new(6.81997733e-007, -5.12264205e-006, -6.72205829e-007)
o944.CanCollide = false
o944.FormFactor = Enum.FormFactor.Custom
o944.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o944.CFrame = CFrame.new(823.30011, 35.500042, -8.49993229, 0.999996305, 1.1732161e-008, -8.94069672e-008, -1.17321459e-008, 1, -1.19030616e-008, 8.94069672e-008, 1.19030643e-008, 0.999996305)
o944.BottomSurface = Enum.SurfaceType.Smooth
o944.TopSurface = Enum.SurfaceType.Smooth
o944.Color = Color3.new(0.411765, 0.4, 0.360784)
o944.Position = Vector3.new(823.30011, 35.500042, -8.49993229)
o945.Parent = o944
o945.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o946.Parent = o944
o946.C0 = CFrame.new(0, 0.399985075, 0, -4.47034836e-008, -1.17214398e-008, -0.999997139, 1.19095436e-008, 1, -1.17214505e-008, 0.999997139, -1.19095436e-008, -4.47034836e-008)
o946.Part0 = o944
o946.Part1 = o911
o947.Name = "Pokey"
o947.Parent = o1
o947.BrickColor = BrickColor.new("Flint")
o947.Position = Vector3.new(823.300049, 33.100071, -8.49991798)
o947.Rotation = Vector3.new(6.8201399e-007, -1.70754731e-006, -6.72203441e-007)
o947.CanCollide = false
o947.FormFactor = Enum.FormFactor.Custom
o947.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o947.CFrame = CFrame.new(823.300049, 33.100071, -8.49991798, 0.999988437, 1.17320269e-008, -2.98023224e-008, -1.1731915e-008, 1, -1.19032517e-008, 2.98023224e-008, 1.19031576e-008, 0.999988437)
o947.BottomSurface = Enum.SurfaceType.Smooth
o947.TopSurface = Enum.SurfaceType.Smooth
o947.Color = Color3.new(0.411765, 0.4, 0.360784)
o947.Position = Vector3.new(823.300049, 33.100071, -8.49991798)
o948.Parent = o947
o948.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o949.Parent = o947
o949.C0 = CFrame.new(0, 0.200001001, 0, -0.707106054, -1.17214487e-008, -0.707105875, 1.33002054e-010, 1, -1.67096523e-008, 0.707105875, -1.19095507e-008, -0.707106054)
o949.Part0 = o947
o949.Part1 = o933
o950.Name = "Pokey"
o950.Parent = o1
o950.BrickColor = BrickColor.new("Flint")
o950.Position = Vector3.new(823.300049, 40.0999985, -8.49991989)
o950.Rotation = Vector3.new(1.86307192e-009, 74.9991531, 180)
o950.CanCollide = false
o950.FormFactor = Enum.FormFactor.Custom
o950.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o950.CFrame = CFrame.new(823.300049, 40.0999985, -8.49991989, -0.25881803, -1.04653898e-011, 0.965921998, 8.89591005e-012, -1, -8.41591814e-012, 0.965921998, 6.38548546e-012, 0.25881803)
o950.BottomSurface = Enum.SurfaceType.Smooth
o950.TopSurface = Enum.SurfaceType.Smooth
o950.Color = Color3.new(0.411765, 0.4, 0.360784)
o950.Position = Vector3.new(823.300049, 40.0999985, -8.49991989)
o951.Parent = o950
o951.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o952.Parent = o950
o952.C0 = CFrame.new(0, 0, 0, 0.707104683, -9.69821215e-015, 0.707104743, 7.33846306e-015, 1, -2.1053812e-014, -0.707104743, -2.0076358e-014, 0.707104683)
o952.Part0 = o950
o952.Part1 = o896
o953.Name = "Pokey"
o953.Parent = o1
o953.BrickColor = BrickColor.new("Flint")
o953.Position = Vector3.new(825.231873, 37.5000381, -9.01752472)
o953.Rotation = Vector3.new(-5.2160265e-010, -14.9998417, 180)
o953.CanCollide = false
o953.FormFactor = Enum.FormFactor.Custom
o953.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o953.CFrame = CFrame.new(825.231873, 37.5000381, -9.01752472, -0.965915442, -1.06892342e-011, -0.258816361, 8.47910631e-012, -1, 8.79338789e-012, -0.258816361, 6.2755157e-012, 0.965915442)
o953.BottomSurface = Enum.SurfaceType.Smooth
o953.TopSurface = Enum.SurfaceType.Smooth
o953.Color = Color3.new(0.411765, 0.4, 0.360784)
o953.Position = Vector3.new(825.231873, 37.5000381, -9.01752472)
o954.Parent = o953
o954.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o955.Parent = o953
o955.C0 = CFrame.new(3.05175781e-005, -0.600004196, -3.05175781e-005, -0.499998957, -2.00763732e-014, 0.8660236, -1.84370917e-014, -1, 1.25375428e-014, 0.8660236, 9.69821723e-015, 0.499998957)
o955.Part0 = o953
o955.Part1 = o852
o956.Name = "Pokey"
o956.Parent = o1
o956.BrickColor = BrickColor.new("Flint")
o956.Position = Vector3.new(825.231873, 36.7000427, -9.01756191)
o956.Rotation = Vector3.new(-9.60457935e-010, -44.9992828, 180)
o956.CanCollide = false
o956.FormFactor = Enum.FormFactor.Custom
o956.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o956.CFrame = CFrame.new(825.231873, 36.7000427, -9.01756191, -0.707097709, -1.07061165e-011, -0.707097888, 2.92418542e-012, -1, 1.18531868e-011, -0.707097888, 6.26095183e-012, 0.707097709)
o956.BottomSurface = Enum.SurfaceType.Smooth
o956.TopSurface = Enum.SurfaceType.Smooth
o956.Color = Color3.new(0.411765, 0.4, 0.360784)
o956.Position = Vector3.new(825.231873, 36.7000427, -9.01756191)
o957.Parent = o956
o957.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o958.Parent = o956
o958.C0 = CFrame.new(0, 0.100001812, 0, -0.86602354, -2.22357567e-014, 0.499998927, -1.84370917e-014, -1, 1.25375428e-014, 0.499998927, -1.63928446e-015, 0.86602354)
o958.Part0 = o956
o958.Part1 = o855
o959.Name = "Pokey"
o959.Parent = o1
o959.BrickColor = BrickColor.new("Flint")
o959.Position = Vector3.new(825.231873, 37.3000374, -9.01752472)
o959.Rotation = Vector3.new(-179.986603, -89.7032623, 0.0137218675)
o959.CanCollide = false
o959.FormFactor = Enum.FormFactor.Custom
o959.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o959.CFrame = CFrame.new(825.231873, 37.3000374, -9.01752472, 4.47034836e-008, -1.07061165e-011, -0.999986589, -6.31375247e-012, -1, 1.04491736e-011, -0.999986589, 6.26095226e-012, -4.47034836e-008)
o959.BottomSurface = Enum.SurfaceType.Smooth
o959.TopSurface = Enum.SurfaceType.Smooth
o959.Color = Color3.new(0.411765, 0.4, 0.360784)
o959.Position = Vector3.new(825.231873, 37.3000374, -9.01752472)
o960.Parent = o959
o960.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o961.Parent = o959
o961.C0 = CFrame.new(0, -0.199999809, 0, 0.258818388, 1.4563898e-014, -0.96592319, 2.00763732e-014, 1, -9.69821723e-015, 0.96592319, 1.6882195e-014, 0.258818388)
o961.Part0 = o959
o961.Part1 = o953
o962.Name = "Pokey"
o962.Parent = o1
o962.BrickColor = BrickColor.new("Flint")
o962.Position = Vector3.new(825.231873, 36.9000397, -9.01756191)
o962.Rotation = Vector3.new(-180, -59.9984169, 1.2287843e-009)
o962.CanCollide = false
o962.FormFactor = Enum.FormFactor.Custom
o962.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o962.CFrame = CFrame.new(825.231873, 36.9000397, -9.01756191, 0.499992192, -1.0722998e-011, -0.86601156, -1.06966016e-011, -1, 5.87045516e-012, -0.86601156, 6.24638839e-012, -0.499992192)
o962.BottomSurface = Enum.SurfaceType.Smooth
o962.TopSurface = Enum.SurfaceType.Smooth
o962.Color = Color3.new(0.411765, 0.4, 0.360784)
o962.Position = Vector3.new(825.231873, 36.9000397, -9.01756191)
o963.Parent = o962
o963.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o964.Parent = o962
o964.C0 = CFrame.new(0, 0.199997902, 0, 0.258818179, 4.17160593e-015, -0.965922713, 2.22357567e-014, 1, 1.63928446e-015, 0.965922713, 2.19023509e-014, 0.258818179)
o964.Part0 = o962
o964.Part1 = o956
o965.Name = "Pokey"
o965.Parent = o1
o965.BrickColor = BrickColor.new("Flint")
o965.Position = Vector3.new(825.231873, 36.500042, -9.01755142)
o965.Rotation = Vector3.new(180, -14.9997921, 6.35062503e-010)
o965.CanCollide = false
o965.FormFactor = Enum.FormFactor.Custom
o965.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o965.CFrame = CFrame.new(825.231873, 36.500042, -9.01755142, 0.965913236, -1.07061165e-011, -0.258815527, -1.17272494e-011, -1, -3.39417405e-012, -0.258815527, 6.26095183e-012, -0.965913236)
o965.BottomSurface = Enum.SurfaceType.Smooth
o965.TopSurface = Enum.SurfaceType.Smooth
o965.Color = Color3.new(0.411765, 0.4, 0.360784)
o965.Position = Vector3.new(825.231873, 36.500042, -9.01755142)
o966.Parent = o965
o966.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o967.Parent = o965
o967.C0 = CFrame.new(-1.52587891e-005, -0.099998951, 1.52587891e-005, 2.98022655e-008, 1.2537536e-014, -0.999997497, -1.84370917e-014, -1, 1.25375428e-014, -0.999997497, -1.84370816e-014, -2.98022655e-008)
o967.Part0 = o965
o967.Part1 = o855
o968.Name = "Pokey"
o968.Parent = o1
o968.BrickColor = BrickColor.new("Flint")
o968.Position = Vector3.new(825.231934, 35.7000427, -9.01756763)
o968.Rotation = Vector3.new(-180, -74.9963913, 2.37756814e-009)
o968.CanCollide = false
o968.FormFactor = Enum.FormFactor.Custom
o968.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o968.CFrame = CFrame.new(825.231934, 35.7000427, -9.01756763, 0.258814812, -1.07398812e-011, -0.965909541, -8.82242716e-012, -1, 8.4188238e-012, -0.965909541, 6.23182408e-012, -0.258814812)
o968.BottomSurface = Enum.SurfaceType.Smooth
o968.TopSurface = Enum.SurfaceType.Smooth
o968.Color = Color3.new(0.411765, 0.4, 0.360784)
o968.Position = Vector3.new(825.231934, 35.7000427, -9.01756763)
o969.Parent = o968
o969.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o970.Parent = o968
o970.C0 = CFrame.new(-1.52587891e-005, 0.599976778, 3.05175781e-005, -0.866023242, -9.698213e-015, -0.499998748, -1.84370917e-014, -1, 1.25375428e-014, -0.499998748, -2.00763648e-014, 0.866023242)
o970.Part0 = o968
o970.Part1 = o872
o971.Name = "Pokey"
o971.Parent = o1
o971.BrickColor = BrickColor.new("Flint")
o971.Position = Vector3.new(825.231934, 35.7000427, -9.01756763)
o971.Rotation = Vector3.new(180, 9.3915105e-006, 6.16330098e-010)
o971.CanCollide = false
o971.FormFactor = Enum.FormFactor.Custom
o971.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o971.CFrame = CFrame.new(825.231934, 35.7000427, -9.01756763, 0.99997896, -1.07567627e-011, 1.63912773e-007, -1.03984451e-011, -1, -6.35739595e-012, 1.63912773e-007, 6.21726065e-012, -0.99997896)
o971.BottomSurface = Enum.SurfaceType.Smooth
o971.TopSurface = Enum.SurfaceType.Smooth
o971.Color = Color3.new(0.411765, 0.4, 0.360784)
o971.Position = Vector3.new(825.231934, 35.7000427, -9.01756763)
o972.Parent = o971
o972.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o973.Parent = o971
o973.C0 = CFrame.new(0, 0, 0, 0.258817911, -1.68821781e-014, -0.96592176, 9.698213e-015, 1, 2.00763648e-014, 0.96592176, 1.45638811e-014, 0.258817911)
o973.Part0 = o971
o973.Part1 = o968
o974.Name = "Pokey"
o974.Parent = o1
o974.BrickColor = BrickColor.new("Flint")
o974.Position = Vector3.new(825.231873, 36.3000374, -9.01755142)
o974.Rotation = Vector3.new(-7.07692793e-010, -29.9994488, 180)
o974.CanCollide = false
o974.FormFactor = Enum.FormFactor.Custom
o974.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o974.CFrame = CFrame.new(825.231873, 36.3000374, -9.01755142, -0.866010666, -1.07229989e-011, -0.499991655, 5.87044822e-012, -1, 1.06965912e-011, -0.499991655, 6.24638796e-012, 0.866010666)
o974.BottomSurface = Enum.SurfaceType.Smooth
o974.TopSurface = Enum.SurfaceType.Smooth
o974.Color = Color3.new(0.411765, 0.4, 0.360784)
o974.Position = Vector3.new(825.231873, 36.3000374, -9.01755142)
o975.Parent = o974
o975.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o976.Parent = o974
o976.C0 = CFrame.new(0, -0.200003147, 0, -0.707104027, 2.19023425e-014, 0.707104027, -1.2537536e-014, 1, 1.84370816e-014, -0.707104027, -4.17160423e-015, -0.707104027)
o976.Part0 = o974
o976.Part1 = o965
o977.Name = "Pokey"
o977.Parent = o1
o977.BrickColor = BrickColor.new("Flint")
o977.Position = Vector3.new(825.231873, 37.9000359, -9.01755047)
o977.Rotation = Vector3.new(-180, -59.9989243, 1.22490895e-009)
o977.CanCollide = false
o977.FormFactor = Enum.FormFactor.Custom
o977.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o977.CFrame = CFrame.new(825.231873, 37.9000359, -9.01755047, 0.499994725, -1.06892342e-011, -0.86601603, -1.06883139e-011, -1, 5.91429076e-012, -0.86601603, 6.2755157e-012, -0.499994725)
o977.BottomSurface = Enum.SurfaceType.Smooth
o977.TopSurface = Enum.SurfaceType.Smooth
o977.Color = Color3.new(0.411765, 0.4, 0.360784)
o977.Position = Vector3.new(825.231873, 37.9000359, -9.01755047)
o978.Parent = o977
o978.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o979.Parent = o977
o979.C0 = CFrame.new(0, -0.200004101, 2.28881836e-005, -0.707105279, -4.17160974e-015, -0.707105279, -1.84370917e-014, -1, 1.25375428e-014, -0.707105279, -2.19023679e-014, 0.707105279)
o979.Part0 = o977
o979.Part1 = o852
o980.Name = "Pokey"
o980.Parent = o1
o980.BrickColor = BrickColor.new("Flint")
o980.Position = Vector3.new(821.368225, 37.3000031, -7.98228168)
o980.Rotation = Vector3.new(180, 6.83018925e-006, 5.99671368e-010)
o980.CanCollide = false
o980.FormFactor = Enum.FormFactor.Custom
o980.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o980.CFrame = CFrame.new(821.368225, 37.3000031, -7.98228168, 0.999995768, -1.04661956e-011, 1.1920929e-007, -1.03986203e-011, -1, -6.3575022e-012, 1.1920929e-007, 6.2992723e-012, -0.999995768)
o980.BottomSurface = Enum.SurfaceType.Smooth
o980.TopSurface = Enum.SurfaceType.Smooth
o980.Color = Color3.new(0.411765, 0.4, 0.360784)
o980.Position = Vector3.new(821.368225, 37.3000031, -7.98228168)
o981.Parent = o980
o981.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o982.Parent = o980
o982.C0 = CFrame.new(0, 0.199999809, 1.52587891e-005, 0.258818388, 1.68821967e-014, -0.965923488, -1.84370917e-014, -1, 1.25375428e-014, -0.965923488, -1.45638997e-014, -0.258818388)
o982.Part0 = o980
o982.Part1 = o878
o983.Name = "Pokey"
o983.Parent = o1
o983.BrickColor = BrickColor.new("Flint")
o983.Position = Vector3.new(822.334167, 37.1000023, -8.24110126)
o983.Rotation = Vector3.new(-2.59059085e-009, -74.9996033, -8.5608724e-007)
o983.CanCollide = false
o983.FormFactor = Enum.FormFactor.Custom
o983.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o983.CFrame = CFrame.new(822.334167, 37.1000023, -8.24110126, 0.258818299, 3.86714438e-009, -0.965924025, -1.48977302e-008, 0.999999464, 1.17023041e-011, 0.965923548, 1.43870764e-008, 0.258818418)
o983.BottomSurface = Enum.SurfaceType.Smooth
o983.TopSurface = Enum.SurfaceType.Smooth
o983.Color = Color3.new(0.411765, 0.4, 0.360784)
o983.Position = Vector3.new(822.334167, 37.1000023, -8.24110126)
o984.Parent = o983
o984.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o985.Parent = o983
o985.C0 = CFrame.new(-1.52587891e-005, 3.81469727e-006, 0, 0.999997556, 0, -1.49011425e-008, 1.49011514e-008, 1.2537536e-014, 0.999999464, 0, -0.999998033, -1.25375428e-014)
o985.Part0 = o983
o985.Part1 = o863
o986.Name = "Pokey"
o986.Parent = o1
o986.BrickColor = BrickColor.new("Flint")
o986.Position = Vector3.new(823.879578, 35.1000748, -8.65518475)
o986.Rotation = Vector3.new(-2.59336619e-009, -74.9969254, 15.000001)
o986.CanCollide = false
o986.FormFactor = Enum.FormFactor.Custom
o986.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o986.CFrame = CFrame.new(823.879578, 35.1000748, -8.65518475, 0.24999623, -0.0669862926, -0.965911925, 0.258818984, 0.965925574, 1.17146952e-011, 0.932999074, -0.249996379, 0.258815199)
o986.BottomSurface = Enum.SurfaceType.Smooth
o986.TopSurface = Enum.SurfaceType.Smooth
o986.Color = Color3.new(0.411765, 0.4, 0.360784)
o986.Position = Vector3.new(823.879578, 35.1000748, -8.65518475)
o987.Parent = o986
o987.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o988.Parent = o986
o988.C0 = CFrame.new(-4.57763672e-005, -2.28881836e-005, -0.399993896, 0.965923727, 3.55271368e-015, 0.258818984, -0.258818507, 1.24344979e-014, 0.965925574, 0, -0.999998033, -1.25375428e-014)
o988.Part0 = o986
o988.Part1 = o866
o989.Name = "Pokey"
o989.Parent = o1
o989.BrickColor = BrickColor.new("Flint")
o989.Position = Vector3.new(821.947815, 37.1000023, -8.1375742)
o989.Rotation = Vector3.new(-2.58489874e-009, -74.9986267, -14.999999)
o989.CanCollide = false
o989.FormFactor = Enum.FormFactor.Custom
o989.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o989.CFrame = CFrame.new(821.947815, 37.1000023, -8.1375742, 0.249996901, 0.066986464, -0.965919614, -0.258817345, 0.965919793, 1.16765373e-011, 0.933001637, 0.24999705, 0.258817226)
o989.BottomSurface = Enum.SurfaceType.Smooth
o989.TopSurface = Enum.SurfaceType.Smooth
o989.Color = Color3.new(0.411765, 0.4, 0.360784)
o989.Position = Vector3.new(821.947815, 37.1000023, -8.1375742)
o990.Parent = o989
o990.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o991.Parent = o989
o991.C0 = CFrame.new(0, 0, 0.199996948, 0.707102299, -0.707102954, 3.55271368e-015, 0.707103431, 0.707104146, -1.0658141e-014, -7.10542736e-015, -1.0658141e-014, 0.999997616)
o991.Part0 = o989
o991.Part1 = o893
o992.Name = "Pokey"
o992.Parent = o1
o992.BrickColor = BrickColor.new("Flint")
o992.Position = Vector3.new(823.30011, 37.9000206, -8.49993229)
o992.Rotation = Vector3.new(3.91347232e-010, 44.9992294, 180)
o992.CanCollide = false
o992.FormFactor = Enum.FormFactor.Custom
o992.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o992.CFrame = CFrame.new(823.30011, 37.9000206, -8.49993229, -0.707097232, -1.33870831e-011, 0.707097292, 1.39471898e-011, -1, -4.8296844e-012, 0.707097292, 6.35154646e-012, 0.707097232)
o992.BottomSurface = Enum.SurfaceType.Smooth
o992.TopSurface = Enum.SurfaceType.Smooth
o992.Color = Color3.new(0.411765, 0.4, 0.360784)
o992.Position = Vector3.new(823.30011, 37.9000206, -8.49993229)
o993.Parent = o992
o993.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o994.Parent = o992
o994.C0 = CFrame.new(0, 0, 0, 0.25881809, -1.6392798e-015, 0.96592176, -2.10537984e-014, -1, 7.33845883e-015, 0.96592176, 2.22357296e-014, -0.25881809)
o994.Part0 = o992
o994.Part1 = o913
o995.Name = "Pokey"
o995.Parent = o1
o995.BrickColor = BrickColor.new("Flint")
o995.Position = Vector3.new(823.30011, 38.9000206, -8.49993229)
o995.Rotation = Vector3.new(9.50757917e-010, 59.9989777, 180)
o995.CanCollide = false
o995.FormFactor = Enum.FormFactor.Custom
o995.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o995.CFrame = CFrame.new(823.30011, 38.9000206, -8.49993229, -0.499994874, -1.33702008e-011, 0.866016507, 1.22178049e-011, -1, -8.29684325e-012, 0.866016507, 6.3661099e-012, 0.499994874)
o995.BottomSurface = Enum.SurfaceType.Smooth
o995.TopSurface = Enum.SurfaceType.Smooth
o995.Color = Color3.new(0.411765, 0.4, 0.360784)
o995.Position = Vector3.new(823.30011, 38.9000206, -8.49993229)
o996.Parent = o995
o996.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o997.Parent = o995
o997.C0 = CFrame.new(0, 0.199999809, 0, 0.866020918, -4.17160508e-015, -0.499997377, -1.45638913e-014, 1, -1.68821849e-014, 0.499997377, -2.19023306e-014, 0.866020918)
o997.Part0 = o995
o997.Part1 = o918
o998.Name = "Pokey"
o998.Parent = o1
o998.BrickColor = BrickColor.new("Flint")
o998.Position = Vector3.new(823.30011, 39.5000153, -8.49993229)
o998.Rotation = Vector3.new(5.63941983e-011, 29.99897, 180)
o998.CanCollide = false
o998.FormFactor = Enum.FormFactor.Custom
o998.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o998.CFrame = CFrame.new(823.30011, 39.5000153, -8.49993229, -0.865998507, -1.35387977e-011, 0.499984413, 1.46747232e-011, -1, -8.52371559e-013, 0.499984413, 6.18342703e-012, 0.865998507)
o998.BottomSurface = Enum.SurfaceType.Smooth
o998.TopSurface = Enum.SurfaceType.Smooth
o998.Color = Color3.new(0.411765, 0.4, 0.360784)
o998.Position = Vector3.new(823.30011, 39.5000153, -8.49993229)
o999.Parent = o998
o999.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1000.Parent = o998
o1000.C0 = CFrame.new(0, 0, 0, 0.499995977, 2.23174699e-014, -0.866018414, -8.35616773e-014, 1, -7.40143759e-014, 0.866018414, -1.09373651e-013, 0.499995977)
o1000.Part0 = o998
o1000.Part1 = o1001
o1001.Name = "Pokey"
o1001.Parent = o1
o1001.BrickColor = BrickColor.new("Flint")
o1001.Position = Vector3.new(823.30011, 39.5000153, -8.49993229)
o1001.Rotation = Vector3.new(0.0126973214, 89.6113358, 179.987061)
o1001.CanCollide = false
o1001.FormFactor = Enum.FormFactor.Custom
o1001.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o1001.CFrame = CFrame.new(823.30011, 39.5000153, -8.49993229, -5.96046448e-008, -1.34647848e-011, 0.999976993, 6.51567689e-012, -1, -1.32089895e-011, 0.999976993, 6.26698693e-012, 5.96046448e-008)
o1001.BottomSurface = Enum.SurfaceType.Smooth
o1001.TopSurface = Enum.SurfaceType.Smooth
o1001.Color = Color3.new(0.411765, 0.4, 0.360784)
o1001.Position = Vector3.new(823.30011, 39.5000153, -8.49993229)
o1002.Parent = o1001
o1002.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1003.Parent = o1001
o1003.C0 = CFrame.new(0, 0.199995995, 0, -0.707101941, -7.5822868e-008, 0.707101882, -1.96260345e-007, 1, -8.9030074e-008, -0.707101882, -2.01729506e-007, -0.707101941)
o1003.Part0 = o1001
o1003.Part1 = o927
o1004.Name = "Pokey"
o1004.Parent = o1
o1004.BrickColor = BrickColor.new("Flint")
o1004.Position = Vector3.new(823.30011, 38.5000153, -8.49993229)
o1004.Rotation = Vector3.new(1.59561864e-006, -15.0000076, 180)
o1004.CanCollide = false
o1004.FormFactor = Enum.FormFactor.Custom
o1004.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o1004.CFrame = CFrame.new(823.30011, 38.5000153, -8.49993229, -0.965925813, -7.91855896e-008, -0.258819163, 8.91867629e-008, -1, -2.68998743e-008, -0.258819163, -4.90665251e-008, 0.965925813)
o1004.BottomSurface = Enum.SurfaceType.Smooth
o1004.TopSurface = Enum.SurfaceType.Smooth
o1004.Color = Color3.new(0.411765, 0.4, 0.360784)
o1004.Position = Vector3.new(823.30011, 38.5000153, -8.49993229)
o1005.Parent = o1004
o1005.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1006.Parent = o1004
o1006.C0 = CFrame.new(0, -0.200004101, 0, -0.258817762, -8.9175515e-008, -0.965920866, -4.90726855e-008, 1, -7.91718762e-008, 0.965920866, 2.69094933e-008, -0.258817762)
o1006.Part0 = o1004
o1006.Part1 = o918
o1007.Name = "Pokey"
o1007.Parent = o1
o1007.BrickColor = BrickColor.new("Flint")
o1007.Position = Vector3.new(823.300049, 40.2999687, -8.49991989)
o1007.Rotation = Vector3.new(-2.59535748e-009, -74.9983215, -2.32052022e-009)
o1007.CanCollide = false
o1007.FormFactor = Enum.FormFactor.Custom
o1007.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o1007.CFrame = CFrame.new(823.300049, 40.2999687, -8.49991989, 0.258816957, 1.04822722e-011, -0.965918243, 3.51454889e-012, 1, 1.17237695e-011, 0.965918243, -6.37092202e-012, 0.258816957)
o1007.BottomSurface = Enum.SurfaceType.Smooth
o1007.TopSurface = Enum.SurfaceType.Smooth
o1007.Color = Color3.new(0.411765, 0.4, 0.360784)
o1007.Position = Vector3.new(823.300049, 40.2999687, -8.49991989)
o1008.Parent = o1007
o1008.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1009.Parent = o1007
o1009.C0 = CFrame.new(0, -0.199969292, 0, 0.86602205, -1.84370697e-014, 0.499998003, 9.69821215e-015, -1, 2.0076358e-014, 0.499998003, 1.25375276e-014, -0.86602205)
o1009.Part0 = o1007
o1009.Part1 = o950
o1010.Name = "AnchoredBase"
o1010.Parent = o1
o1010.Transparency = 1
o1010.Position = Vector3.new(823.300049, 32.1000443, -8.49993229)
o1010.Rotation = Vector3.new(-2.23443064e-009, -75, -1.90795535e-009)
o1010.Anchored = true
o1010.FormFactor = Enum.FormFactor.Custom
o1010.Size = Vector3.new(1, 1, 1)
o1010.CFrame = CFrame.new(823.300049, 32.1000443, -8.49993229, 0.258818984, 8.61869864e-012, -0.965925813, 4.36924281e-012, 1, 1.00934677e-011, 0.965925813, -6.83274574e-012, 0.258818984)
o1010.BottomSurface = Enum.SurfaceType.Smooth
o1010.TopSurface = Enum.SurfaceType.Smooth
o1010.Position = Vector3.new(823.300049, 32.1000443, -8.49993229)
o1011.Parent = o1010
o1012.Parent = o1010
o1012.C0 = CFrame.new(0, 0.199964046, 0, 1.49011612e-008, -5.32906341e-008, -0.99999845, 1.18217379e-007, 1, -5.32906981e-008, 0.99999845, -1.18217258e-007, 1.49011612e-008)
o1012.Part0 = o1010
o1012.Part1 = o2
o1013.Name = "Pokey"
o1013.Parent = o1
o1013.BrickColor = BrickColor.new("Flint")
o1013.Position = Vector3.new(823.30011, 35.3000488, -8.49993229)
o1013.Rotation = Vector3.new(-2.66207145e-009, -75.0000153, -2.37177256e-009)
o1013.CanCollide = false
o1013.FormFactor = Enum.FormFactor.Custom
o1013.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o1013.CFrame = CFrame.new(823.30011, 35.3000488, -8.49993229, 0.258818895, 1.07138708e-011, -0.965925872, 3.48351643e-012, 1, 1.20252202e-011, 0.965925872, -6.47717253e-012, 0.258818895)
o1013.BottomSurface = Enum.SurfaceType.Smooth
o1013.TopSurface = Enum.SurfaceType.Smooth
o1013.Color = Color3.new(0.411765, 0.4, 0.360784)
o1013.Position = Vector3.new(823.30011, 35.3000488, -8.49993229)
o1014.Parent = o1013
o1014.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1015.Parent = o1013
o1015.C0 = CFrame.new(0, 0.19999218, 0, 0.25881803, 1.45374663e-008, 0.965922296, -1.17214318e-008, 1, -1.19095382e-008, -0.965922296, -8.23963475e-009, 0.25881803)
o1015.Part0 = o1013
o1015.Part1 = o944
o1016.Name = "Pokey"
o1016.Parent = o1
o1016.BrickColor = BrickColor.new("Flint")
o1016.Position = Vector3.new(823.300049, 39.9000015, -8.49991989)
o1016.Rotation = Vector3.new(-7.12329751e-010, -30.0000038, 180)
o1016.CanCollide = false
o1016.FormFactor = Enum.FormFactor.Custom
o1016.Size = Vector3.new(1.79999995, 0.200000003, 0.200000003)
o1016.CFrame = CFrame.new(823.300049, 39.9000015, -8.49991989, -0.866025388, -1.04485075e-011, -0.50000006, 5.84864709e-012, -1, 1.07668605e-011, -0.50000006, 6.40004933e-012, 0.866025388)
o1016.BottomSurface = Enum.SurfaceType.Smooth
o1016.TopSurface = Enum.SurfaceType.Smooth
o1016.Color = Color3.new(0.411765, 0.4, 0.360784)
o1016.Position = Vector3.new(823.300049, 39.9000015, -8.49991989)
o1017.Parent = o1016
o1017.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1018.Parent = o1016
o1018.C0 = CFrame.new(0, -0.199995995, 0, -0.25881806, 2.19023459e-014, -0.965921998, -9.69821215e-015, 1, -2.0076358e-014, 0.965921998, -4.17160635e-015, -0.25881806)
o1018.Part0 = o1016
o1018.Part1 = o950
o1019.Name = "Pokey"
o1019.Parent = o1
o1019.BrickColor = BrickColor.new("Flint")
o1019.Position = Vector3.new(821.368225, 39.1000023, -7.98229647)
o1019.Rotation = Vector3.new(-179.996674, -89.800209, 0.00335900066)
o1019.CanCollide = false
o1019.FormFactor = Enum.FormFactor.Custom
o1019.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o1019.CFrame = CFrame.new(821.368225, 39.1000023, -7.98229647, 1.78813934e-007, -1.04830779e-011, -0.99999392, -6.37205479e-012, -1, 1.03817181e-011, -0.99999392, 6.28470843e-012, -1.78813934e-007)
o1019.BottomSurface = Enum.SurfaceType.Smooth
o1019.TopSurface = Enum.SurfaceType.Smooth
o1019.Color = Color3.new(0.411765, 0.4, 0.360784)
o1019.Position = Vector3.new(821.368225, 39.1000023, -7.98229647)
o1020.Parent = o1019
o1020.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1021.Parent = o1019
o1021.C0 = CFrame.new(0, 0, 0, -0.965923548, -1.45638997e-014, -0.258818448, -1.84370917e-014, -1, 1.25375428e-014, -0.258818448, -1.68822001e-014, 0.965923548)
o1021.Part0 = o1019
o1021.Part1 = o875
o1022.Name = "Pokey"
o1022.Parent = o1
o1022.BrickColor = BrickColor.new("Flint")
o1022.Position = Vector3.new(821.368225, 37.9000015, -7.98228312)
o1022.Rotation = Vector3.new(-180, -74.9981461, 2.32069852e-009)
o1022.CanCollide = false
o1022.FormFactor = Enum.FormFactor.Custom
o1022.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o1022.CFrame = CFrame.new(821.368225, 37.9000015, -7.98228312, 0.258816957, -1.04830779e-011, -0.965917468, -8.84189597e-012, -1, 8.37874041e-012, -0.965917468, 6.28470843e-012, -0.258816957)
o1022.BottomSurface = Enum.SurfaceType.Smooth
o1022.TopSurface = Enum.SurfaceType.Smooth
o1022.Color = Color3.new(0.411765, 0.4, 0.360784)
o1022.Position = Vector3.new(821.368225, 37.9000015, -7.98228312)
o1023.Parent = o1022
o1023.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1024.Parent = o1022
o1024.C0 = CFrame.new(0, -0.200000286, 0, -0.707103729, 9.69820114e-015, 0.707103729, -2.10538052e-014, 1, -7.33846137e-015, -0.707103729, 2.0076341e-014, -0.707103729)
o1024.Part0 = o1022
o1024.Part1 = o1025
o1025.Name = "Pokey"
o1025.Parent = o1
o1025.BrickColor = BrickColor.new("Flint")
o1025.Position = Vector3.new(821.368225, 38.1000023, -7.98228312)
o1025.Rotation = Vector3.new(180, 59.9995804, 1.19934318e-009)
o1025.CanCollide = false
o1025.FormFactor = Enum.FormFactor.Custom
o1025.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o1025.CFrame = CFrame.new(821.368225, 38.1000023, -7.98228312, 0.499997735, -1.04661956e-011, 0.866021752, 3.06448009e-013, -1, -1.21842198e-011, 0.866021752, 6.2992723e-012, -0.499997735)
o1025.BottomSurface = Enum.SurfaceType.Smooth
o1025.TopSurface = Enum.SurfaceType.Smooth
o1025.Color = Color3.new(0.411765, 0.4, 0.360784)
o1025.Position = Vector3.new(821.368225, 38.1000023, -7.98228312)
o1026.Parent = o1025
o1026.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1027.Parent = o1025
o1027.C0 = CFrame.new(-1.52587891e-005, -3.81469727e-006, 0, 0.965923429, 2.10538052e-014, -0.258818418, -1.84370917e-014, -1, 1.25375428e-014, -0.258818418, 7.33846137e-015, -0.965923429)
o1027.Part0 = o1025
o1027.Part1 = o861
o1028.Name = "Pokey"
o1028.Parent = o1
o1028.BrickColor = BrickColor.new("Flint")
o1028.Position = Vector3.new(821.368225, 38.3000031, -7.98229456)
o1028.Rotation = Vector3.new(-180, -59.9991264, 1.20128207e-009)
o1028.CanCollide = false
o1028.FormFactor = Enum.FormFactor.Custom
o1028.Size = Vector3.new(1.39999998, 0.200000003, 0.200000003)
o1028.CFrame = CFrame.new(821.368225, 38.3000031, -7.98229456, 0.499995887, -1.04830779e-011, -0.866017818, -1.07091948e-011, -1, 5.80478981e-012, -0.866017818, 6.28470886e-012, -0.499995887)
o1028.BottomSurface = Enum.SurfaceType.Smooth
o1028.TopSurface = Enum.SurfaceType.Smooth
o1028.Color = Color3.new(0.411765, 0.4, 0.360784)
o1028.Position = Vector3.new(821.368225, 38.3000031, -7.98229456)
o1029.Parent = o1028
o1029.Scale = Vector3.new(1, 0.200000003, 0.200000003)
o1030.Parent = o1028
o1030.C0 = CFrame.new(0, -0.199995995, 0, 0.258817971, 4.17160338e-015, 0.96592176, -2.00763648e-014, 1, 9.6982113e-015, -0.96592176, 2.19023374e-014, 0.258817971)
o1030.Part0 = o1028
o1030.Part1 = o869
o1031.Parent = o1
o1031.Material = Enum.Material.DiamondPlate
o1031.BrickColor = BrickColor.new("Ghost grey")
o1031.Position = Vector3.new(646.200012, 183.699539, -71.5000076)
o1031.Anchored = true
o1031.Size = Vector3.new(2, 6.19999695, 512.200012)
o1031.CFrame = CFrame.new(646.200012, 183.699539, -71.5000076, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1031.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1031.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1031.Color = Color3.new(0.792157, 0.796079, 0.819608)
o1031.Position = Vector3.new(646.200012, 183.699539, -71.5000076)
o1032.Parent = o1
o1032.Material = Enum.Material.DiamondPlate
o1032.BrickColor = BrickColor.new("Smoky grey")
o1032.Position = Vector3.new(645.600037, 71.5998688, -72.5000076)
o1032.Anchored = true
o1032.Size = Vector3.new(0.800000012, 3, 512.200012)
o1032.CFrame = CFrame.new(645.600037, 71.5998688, -72.5000076, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1032.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1032.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1032.Color = Color3.new(0.356863, 0.364706, 0.411765)
o1032.Position = Vector3.new(645.600037, 71.5998688, -72.5000076)
o1033.Parent = o1
o1033.Material = Enum.Material.DiamondPlate
o1033.BrickColor = BrickColor.new("Ghost grey")
o1033.Position = Vector3.new(644.100037, 187.699539, -71.5000076)
o1033.Rotation = Vector3.new(-7.72947897e-006, -1.42225581e-005, 90)
o1033.Anchored = true
o1033.Size = Vector3.new(2, 6.19999695, 512.200012)
o1033.CFrame = CFrame.new(644.100037, 187.699539, -71.5000076, 1.64733043e-015, -1, -2.48230464e-007, 1, -3.1840165e-014, 1.34904852e-007, -1.34904852e-007, -2.48230464e-007, 1)
o1033.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1033.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1033.Color = Color3.new(0.792157, 0.796079, 0.819608)
o1033.Position = Vector3.new(644.100037, 187.699539, -71.5000076)
o1034.Parent = o1
o1034.Material = Enum.Material.DiamondPlate
o1034.BrickColor = BrickColor.new("Ghost grey")
o1034.Position = Vector3.new(612.100098, 187.699539, -71.5000153)
o1034.Rotation = Vector3.new(-180, 1.36603785e-005, -90)
o1034.Anchored = true
o1034.Size = Vector3.new(2, 6.19999695, 512.200012)
o1034.CFrame = CFrame.new(612.100098, 187.699539, -71.5000153, -1.11210614e-008, 1, 2.38418579e-007, 1, 1.11210383e-008, 9.74451808e-008, 9.74451808e-008, 2.38418579e-007, -1)
o1034.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1034.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1034.Color = Color3.new(0.792157, 0.796079, 0.819608)
o1034.Position = Vector3.new(612.100098, 187.699539, -71.5000153)
o1035.Parent = o1
o1035.Material = Enum.Material.DiamondPlate
o1035.BrickColor = BrickColor.new("Ghost grey")
o1035.Position = Vector3.new(610.100037, 183.699539, -71.5000076)
o1035.Rotation = Vector3.new(180, -6.83018925e-006, 180)
o1035.Anchored = true
o1035.Size = Vector3.new(2, 6.19999695, 512.200012)
o1035.CFrame = CFrame.new(610.100037, 183.699539, -71.5000076, -1, -1.11210738e-008, -1.1920929e-007, -1.11210694e-008, 1, -3.74596567e-008, 1.1920929e-007, -3.74596567e-008, -1)
o1035.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1035.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1035.Color = Color3.new(0.792157, 0.796079, 0.819608)
o1035.Position = Vector3.new(610.100037, 183.699539, -71.5000076)
o1036.Parent = o1
o1036.Material = Enum.Material.DiamondPlate
o1036.BrickColor = BrickColor.new("Smoky grey")
o1036.Position = Vector3.new(610.400024, 101.599731, -72.5000076)
o1036.Anchored = true
o1036.Size = Vector3.new(0.800000012, 3, 512.200012)
o1036.CFrame = CFrame.new(610.400024, 101.599731, -72.5000076, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1036.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1036.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1036.Color = Color3.new(0.356863, 0.364706, 0.411765)
o1036.Position = Vector3.new(610.400024, 101.599731, -72.5000076)
o1037.Parent = o1
o1037.Material = Enum.Material.DiamondPlate
o1037.BrickColor = BrickColor.new("Smoky grey")
o1037.Position = Vector3.new(610.800049, 71.5998688, -72.5000076)
o1037.Anchored = true
o1037.Size = Vector3.new(0.800000012, 3, 512.200012)
o1037.CFrame = CFrame.new(610.800049, 71.5998688, -72.5000076, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1037.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1037.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1037.Color = Color3.new(0.356863, 0.364706, 0.411765)
o1037.Position = Vector3.new(610.800049, 71.5998688, -72.5000076)
o1038.Parent = o1
o1038.Material = Enum.Material.Concrete
o1038.BrickColor = BrickColor.new("Institutional white")
o1038.Position = Vector3.new(606.599976, 110.499695, -69.9000092)
o1038.Anchored = true
o1038.Size = Vector3.new(2.79999852, 157.800003, 15.5999985)
o1038.CFrame = CFrame.new(606.599976, 110.499695, -69.9000092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1038.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1038.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1038.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1038.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1038.Position = Vector3.new(606.599976, 110.499695, -69.9000092)
o1039.Parent = o1
o1039.Material = Enum.Material.Concrete
o1039.BrickColor = BrickColor.new("Institutional white")
o1039.Position = Vector3.new(606.599976, 110.199753, 153.099991)
o1039.Anchored = true
o1039.Size = Vector3.new(2.79999852, 158.400009, 15.5999985)
o1039.CFrame = CFrame.new(606.599976, 110.199753, 153.099991, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1039.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1039.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1039.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1039.Position = Vector3.new(606.599976, 110.199753, 153.099991)
o1040.Parent = o1
o1040.Material = Enum.Material.Concrete
o1040.BrickColor = BrickColor.new("Institutional white")
o1040.Position = Vector3.new(606.599976, 109.899734, -295.700012)
o1040.Anchored = true
o1040.Size = Vector3.new(2.79999852, 159, 15.5999985)
o1040.CFrame = CFrame.new(606.599976, 109.899734, -295.700012, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1040.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1040.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1040.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1040.Position = Vector3.new(606.599976, 109.899734, -295.700012)
o1041.Parent = o1
o1041.Material = Enum.Material.Concrete
o1041.BrickColor = BrickColor.new("Institutional white")
o1041.Position = Vector3.new(649.300049, 109.899734, -296.299988)
o1041.Anchored = true
o1041.Size = Vector3.new(2.59999847, 159, 15.5999985)
o1041.CFrame = CFrame.new(649.300049, 109.899734, -296.299988, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1041.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1041.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1041.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1041.Position = Vector3.new(649.300049, 109.899734, -296.299988)
o1042.Parent = o1
o1042.Material = Enum.Material.Concrete
o1042.BrickColor = BrickColor.new("Institutional white")
o1042.Position = Vector3.new(649.400024, 110.499695, -69.9000092)
o1042.Anchored = true
o1042.Size = Vector3.new(2.79999852, 157.800003, 15.5999985)
o1042.CFrame = CFrame.new(649.400024, 110.499695, -69.9000092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1042.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1042.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1042.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1042.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1042.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1042.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1042.Position = Vector3.new(649.400024, 110.499695, -69.9000092)
o1043.Parent = o1
o1043.Material = Enum.Material.Concrete
o1043.BrickColor = BrickColor.new("Institutional white")
o1043.Position = Vector3.new(649.400024, 109.899734, 153.099991)
o1043.Anchored = true
o1043.Size = Vector3.new(2.79999852, 159, 15.5999985)
o1043.CFrame = CFrame.new(649.400024, 109.899734, 153.099991, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1043.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1043.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1043.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1043.Position = Vector3.new(649.400024, 109.899734, 153.099991)
o1044.Parent = o1
o1044.Material = Enum.Material.Concrete
o1044.BrickColor = BrickColor.new("Institutional white")
o1044.Position = Vector3.new(628, 190.7995, -69.9000168)
o1044.Rotation = Vector3.new(3.48615708e-006, -1.60629861e-005, -90)
o1044.Anchored = true
o1044.Size = Vector3.new(2.79999852, 45.5999985, 15.5999985)
o1044.CFrame = CFrame.new(628, 190.7995, -69.9000168, -2.98023011e-008, 1, -2.80351998e-007, -1, -2.98023224e-008, -6.08449184e-008, -6.08449255e-008, 2.80352026e-007, 1)
o1044.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1044.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1044.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1044.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1044.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1044.Position = Vector3.new(628, 190.7995, -69.9000168)
o1045.Parent = o1
o1045.Material = Enum.Material.Concrete
o1045.BrickColor = BrickColor.new("Institutional white")
o1045.Position = Vector3.new(627.800049, 190.7995, -295.700012)
o1045.Rotation = Vector3.new(3.48615708e-006, -1.60629861e-005, -90)
o1045.Anchored = true
o1045.Size = Vector3.new(2.79999852, 45.5999985, 15.5999985)
o1045.CFrame = CFrame.new(627.800049, 190.7995, -295.700012, -2.98023011e-008, 1, -2.80351998e-007, -1, -2.98023224e-008, -6.08449184e-008, -6.08449255e-008, 2.80352026e-007, 1)
o1045.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1045.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1045.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1045.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1045.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1045.Position = Vector3.new(627.800049, 190.7995, -295.700012)
o1046.Parent = o1
o1046.Material = Enum.Material.Concrete
o1046.BrickColor = BrickColor.new("Institutional white")
o1046.Position = Vector3.new(628, 190.7995, 153.09996)
o1046.Rotation = Vector3.new(3.48615708e-006, -1.60629861e-005, -90)
o1046.Anchored = true
o1046.Size = Vector3.new(2.79999852, 45.5999985, 15.5999985)
o1046.CFrame = CFrame.new(628, 190.7995, 153.09996, -2.98023011e-008, 1, -2.80351998e-007, -1, -2.98023224e-008, -6.08449184e-008, -6.08449255e-008, 2.80352026e-007, 1)
o1046.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1046.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1046.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1046.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1046.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1046.Position = Vector3.new(628, 190.7995, 153.09996)
o1047.Parent = o1
o1047.Material = Enum.Material.Concrete
o1047.BrickColor = BrickColor.new("Institutional white")
o1047.Position = Vector3.new(699.400024, 49.4999542, -69.9000092)
o1047.Anchored = true
o1047.Size = Vector3.new(17.3999996, 35.8000031, 15.5999985)
o1047.CFrame = CFrame.new(699.400024, 49.4999542, -69.9000092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1047.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1047.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1047.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1047.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1047.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1047.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1047.Position = Vector3.new(699.400024, 49.4999542, -69.9000092)
o1048.Parent = o1
o1048.Material = Enum.Material.Concrete
o1048.BrickColor = BrickColor.new("Institutional white")
o1048.Position = Vector3.new(699.400024, 49.4999542, -296.299988)
o1048.Anchored = true
o1048.Size = Vector3.new(17.3999996, 35.8000031, 15.5999985)
o1048.CFrame = CFrame.new(699.400024, 49.4999542, -296.299988, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1048.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1048.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1048.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1048.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1048.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1048.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1048.Position = Vector3.new(699.400024, 49.4999542, -296.299988)
o1049.Parent = o1
o1049.Material = Enum.Material.Concrete
o1049.BrickColor = BrickColor.new("Institutional white")
o1049.Position = Vector3.new(699.400024, 49.4999542, 153.099991)
o1049.Anchored = true
o1049.Size = Vector3.new(17.3999996, 35.8000031, 15.5999985)
o1049.CFrame = CFrame.new(699.400024, 49.4999542, 153.099991, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1049.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1049.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1049.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1049.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1049.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1049.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1049.Position = Vector3.new(699.400024, 49.4999542, 153.099991)
o1050.Parent = o1
o1050.Material = Enum.Material.Concrete
o1050.BrickColor = BrickColor.new("Institutional white")
o1050.Position = Vector3.new(617.800049, 49.4999542, 153.099991)
o1050.Anchored = true
o1050.Size = Vector3.new(17.3999996, 35.8000031, 15.5999985)
o1050.CFrame = CFrame.new(617.800049, 49.4999542, 153.099991, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1050.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1050.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1050.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1050.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1050.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1050.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1050.Position = Vector3.new(617.800049, 49.4999542, 153.099991)
o1051.Parent = o1
o1051.Material = Enum.Material.Concrete
o1051.BrickColor = BrickColor.new("Institutional white")
o1051.Position = Vector3.new(551.599976, 49.4999542, 153.099991)
o1051.Anchored = true
o1051.Size = Vector3.new(17.3999996, 35.8000031, 15.5999985)
o1051.CFrame = CFrame.new(551.599976, 49.4999542, 153.099991, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1051.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1051.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1051.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1051.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1051.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1051.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1051.Position = Vector3.new(551.599976, 49.4999542, 153.099991)
o1052.Parent = o1
o1052.Material = Enum.Material.Concrete
o1052.BrickColor = BrickColor.new("Institutional white")
o1052.Position = Vector3.new(551.599976, 49.4999542, -69.9000092)
o1052.Anchored = true
o1052.Size = Vector3.new(17.3999996, 35.8000031, 15.5999985)
o1052.CFrame = CFrame.new(551.599976, 49.4999542, -69.9000092, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1052.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1052.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1052.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1052.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1052.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1052.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1052.Position = Vector3.new(551.599976, 49.4999542, -69.9000092)
o1053.Parent = o1
o1053.Material = Enum.Material.Concrete
o1053.BrickColor = BrickColor.new("Institutional white")
o1053.Position = Vector3.new(551.599976, 49.4999542, -296.299988)
o1053.Anchored = true
o1053.Size = Vector3.new(17.3999996, 35.8000031, 15.5999985)
o1053.CFrame = CFrame.new(551.599976, 49.4999542, -296.299988, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o1053.BackSurface = Enum.SurfaceType.SmoothNoOutlines
o1053.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1053.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
o1053.RightSurface = Enum.SurfaceType.SmoothNoOutlines
o1053.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1053.Color = Color3.new(0.972549, 0.972549, 0.972549)
o1053.Position = Vector3.new(551.599976, 49.4999542, -296.299988)
o1054.Parent = o1
o1054.Material = Enum.Material.Metal
o1054.BrickColor = BrickColor.new("Dark stone grey")
o1054.Position = Vector3.new(583.599976, 122.381683, 153.099991)
o1054.Rotation = Vector3.new(-0, 0, -30.0000019)
o1054.Anchored = true
o1054.Size = Vector3.new(9.79999828, 132.799988, 3.99999809)
o1054.CFrame = CFrame.new(583.599976, 122.381683, 153.099991, 0.866025388, 0.5, 0, -0.5, 0.866025388, 0, 0, 0, 1)
o1054.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1054.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1054.Color = Color3.new(0.388235, 0.372549, 0.384314)
o1054.Position = Vector3.new(583.599976, 122.381683, 153.099991)
o1055.Parent = o1
o1055.Material = Enum.Material.Metal
o1055.BrickColor = BrickColor.new("Dark stone grey")
o1055.Position = Vector3.new(583.599976, 122.381683, -296.299988)
o1055.Rotation = Vector3.new(-0, 0, -30.0000019)
o1055.Anchored = true
o1055.Size = Vector3.new(9.79999828, 132.800003, 3.99999809)
o1055.CFrame = CFrame.new(583.599976, 122.381683, -296.299988, 0.866025388, 0.5, 0, -0.5, 0.866025388, 0, 0, 0, 1)
o1055.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1055.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1055.Color = Color3.new(0.388235, 0.372549, 0.384314)
o1055.Position = Vector3.new(583.599976, 122.381683, -296.299988)
o1056.Parent = o1
o1056.Material = Enum.Material.Metal
o1056.BrickColor = BrickColor.new("Dark stone grey")
o1056.Position = Vector3.new(583.599976, 122.381683, -69.9000092)
o1056.Rotation = Vector3.new(-0, 0, -30.0000019)
o1056.Anchored = true
o1056.Size = Vector3.new(9.79999828, 132.800003, 3.99999809)
o1056.CFrame = CFrame.new(583.599976, 122.381683, -69.9000092, 0.866025388, 0.5, 0, -0.5, 0.866025388, 0, 0, 0, 1)
o1056.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1056.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1056.Color = Color3.new(0.388235, 0.372549, 0.384314)
o1056.Position = Vector3.new(583.599976, 122.381683, -69.9000092)
o1057.Parent = o1
o1057.Material = Enum.Material.Metal
o1057.BrickColor = BrickColor.new("Dark stone grey")
o1057.Position = Vector3.new(667.400024, 122.381683, -69.9000092)
o1057.Rotation = Vector3.new(-6.38164602e-006, -2.88116257e-006, 30.0000076)
o1057.Anchored = true
o1057.Size = Vector3.new(9.79999828, 132.800003, 3.99999809)
o1057.CFrame = CFrame.new(667.400024, 122.381683, -69.9000092, 0.866025329, -0.500000119, -5.02857738e-008, 0.500000119, 0.866025329, 1.11380736e-007, -1.21416299e-008, -1.21601431e-007, 1)
o1057.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1057.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1057.Color = Color3.new(0.388235, 0.372549, 0.384314)
o1057.Position = Vector3.new(667.400024, 122.381683, -69.9000092)
o1058.Parent = o1
o1058.Material = Enum.Material.Metal
o1058.BrickColor = BrickColor.new("Dark stone grey")
o1058.Position = Vector3.new(667.400024, 122.381683, -296.299988)
o1058.Rotation = Vector3.new(-6.38164602e-006, -2.88116257e-006, 30.0000076)
o1058.Anchored = true
o1058.Size = Vector3.new(9.79999828, 132.800003, 3.99999809)
o1058.CFrame = CFrame.new(667.400024, 122.381683, -296.299988, 0.866025329, -0.500000119, -5.02857738e-008, 0.500000119, 0.866025329, 1.11380736e-007, -1.21416299e-008, -1.21601431e-007, 1)
o1058.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1058.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1058.Color = Color3.new(0.388235, 0.372549, 0.384314)
o1058.Position = Vector3.new(667.400024, 122.381683, -296.299988)
o1059.Parent = o1
o1059.Material = Enum.Material.Metal
o1059.BrickColor = BrickColor.new("Dark stone grey")
o1059.Position = Vector3.new(667.400024, 122.381683, 153.099991)
o1059.Rotation = Vector3.new(-6.38164602e-006, -2.88116257e-006, 30.0000076)
o1059.Anchored = true
o1059.Size = Vector3.new(9.79999828, 132.800003, 3.99999809)
o1059.CFrame = CFrame.new(667.400024, 122.381683, 153.099991, 0.866025329, -0.500000119, -5.02857738e-008, 0.500000119, 0.866025329, 1.11380736e-007, -1.21416299e-008, -1.21601431e-007, 1)
o1059.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
o1059.TopSurface = Enum.SurfaceType.SmoothNoOutlines
o1059.Color = Color3.new(0.388235, 0.372549, 0.384314)
o1059.Position = Vector3.new(667.400024, 122.381683, 153.099991)
o1060.Name = "1"
o1060.Parent = o1
o1060.Transparency = 1
o1060.Position = Vector3.new(430.000061, 33.4000206, -59.8000031)
o1060.Rotation = Vector3.new(-180, 0, -180)
o1060.Anchored = true
o1060.CanCollide = false
o1060.Size = Vector3.new(6, 1.20000005, 6)
o1060.CFrame = CFrame.new(430.000061, 33.4000206, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1060.BackSurface = Enum.SurfaceType.Weld
o1060.BottomSurface = Enum.SurfaceType.Weld
o1060.FrontSurface = Enum.SurfaceType.Weld
o1060.LeftSurface = Enum.SurfaceType.Weld
o1060.RightSurface = Enum.SurfaceType.Weld
o1060.TopSurface = Enum.SurfaceType.Smooth
o1060.Position = Vector3.new(430.000061, 33.4000206, -59.8000031)
o1061.Name = "1"
o1061.Parent = o1
o1061.Transparency = 1
o1061.Position = Vector3.new(430.000061, 34.6000175, -59.8000031)
o1061.Rotation = Vector3.new(-180, 0, -180)
o1061.Anchored = true
o1061.CanCollide = false
o1061.Size = Vector3.new(6, 1.20000005, 6)
o1061.CFrame = CFrame.new(430.000061, 34.6000175, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1061.BackSurface = Enum.SurfaceType.Weld
o1061.BottomSurface = Enum.SurfaceType.Weld
o1061.FrontSurface = Enum.SurfaceType.Weld
o1061.LeftSurface = Enum.SurfaceType.Weld
o1061.RightSurface = Enum.SurfaceType.Weld
o1061.TopSurface = Enum.SurfaceType.Smooth
o1061.Position = Vector3.new(430.000061, 34.6000175, -59.8000031)
o1062.Name = "1"
o1062.Parent = o1
o1062.Transparency = 1
o1062.Position = Vector3.new(430.000061, 35.8000183, -59.8000031)
o1062.Rotation = Vector3.new(-180, 0, -180)
o1062.Anchored = true
o1062.CanCollide = false
o1062.Size = Vector3.new(6, 1.20000005, 6)
o1062.CFrame = CFrame.new(430.000061, 35.8000183, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1062.BackSurface = Enum.SurfaceType.Weld
o1062.BottomSurface = Enum.SurfaceType.Weld
o1062.FrontSurface = Enum.SurfaceType.Weld
o1062.LeftSurface = Enum.SurfaceType.Weld
o1062.RightSurface = Enum.SurfaceType.Weld
o1062.TopSurface = Enum.SurfaceType.Smooth
o1062.Position = Vector3.new(430.000061, 35.8000183, -59.8000031)
o1063.Name = "2"
o1063.Parent = o1
o1063.Transparency = 1
o1063.Position = Vector3.new(820.000122, 33.4000206, -59.8000031)
o1063.Rotation = Vector3.new(-180, 0, -180)
o1063.Anchored = true
o1063.CanCollide = false
o1063.Size = Vector3.new(6, 1.20000005, 6)
o1063.CFrame = CFrame.new(820.000122, 33.4000206, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1063.BackSurface = Enum.SurfaceType.Weld
o1063.BottomSurface = Enum.SurfaceType.Weld
o1063.FrontSurface = Enum.SurfaceType.Weld
o1063.LeftSurface = Enum.SurfaceType.Weld
o1063.RightSurface = Enum.SurfaceType.Weld
o1063.TopSurface = Enum.SurfaceType.Smooth
o1063.Position = Vector3.new(820.000122, 33.4000206, -59.8000031)
o1064.Name = "2"
o1064.Parent = o1
o1064.Transparency = 1
o1064.Position = Vector3.new(820.000122, 34.6000175, -59.8000031)
o1064.Rotation = Vector3.new(-180, 0, -180)
o1064.Anchored = true
o1064.CanCollide = false
o1064.Size = Vector3.new(6, 1.20000005, 6)
o1064.CFrame = CFrame.new(820.000122, 34.6000175, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1064.BackSurface = Enum.SurfaceType.Weld
o1064.BottomSurface = Enum.SurfaceType.Weld
o1064.FrontSurface = Enum.SurfaceType.Weld
o1064.LeftSurface = Enum.SurfaceType.Weld
o1064.RightSurface = Enum.SurfaceType.Weld
o1064.TopSurface = Enum.SurfaceType.Smooth
o1064.Position = Vector3.new(820.000122, 34.6000175, -59.8000031)
o1065.Name = "2"
o1065.Parent = o1
o1065.Transparency = 1
o1065.Position = Vector3.new(820.000122, 35.8000183, -59.8000031)
o1065.Rotation = Vector3.new(-180, 0, -180)
o1065.Anchored = true
o1065.CanCollide = false
o1065.Size = Vector3.new(6, 1.20000005, 6)
o1065.CFrame = CFrame.new(820.000122, 35.8000183, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1065.BackSurface = Enum.SurfaceType.Weld
o1065.BottomSurface = Enum.SurfaceType.Weld
o1065.FrontSurface = Enum.SurfaceType.Weld
o1065.LeftSurface = Enum.SurfaceType.Weld
o1065.RightSurface = Enum.SurfaceType.Weld
o1065.TopSurface = Enum.SurfaceType.Smooth
o1065.Position = Vector3.new(820.000122, 35.8000183, -59.8000031)
o1066.Name = "2"
o1066.Parent = o1
o1066.Transparency = 1
o1066.Position = Vector3.new(820.000122, 37.0000191, -59.8000031)
o1066.Rotation = Vector3.new(-180, 0, -180)
o1066.Anchored = true
o1066.CanCollide = false
o1066.Size = Vector3.new(6, 1.20000005, 6)
o1066.CFrame = CFrame.new(820.000122, 37.0000191, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1066.BackSurface = Enum.SurfaceType.Weld
o1066.BottomSurface = Enum.SurfaceType.Weld
o1066.FrontSurface = Enum.SurfaceType.Weld
o1066.LeftSurface = Enum.SurfaceType.Weld
o1066.RightSurface = Enum.SurfaceType.Weld
o1066.TopSurface = Enum.SurfaceType.Smooth
o1066.Position = Vector3.new(820.000122, 37.0000191, -59.8000031)
o1067.Name = "2"
o1067.Parent = o1
o1067.Transparency = 1
o1067.Position = Vector3.new(820.000122, 38.2000198, -59.8000031)
o1067.Rotation = Vector3.new(-180, 0, -180)
o1067.Anchored = true
o1067.CanCollide = false
o1067.Size = Vector3.new(6, 1.20000005, 6)
o1067.CFrame = CFrame.new(820.000122, 38.2000198, -59.8000031, -1, 0, 0, 0, 1, 0, 0, 0, -1)
o1067.BackSurface = Enum.SurfaceType.Weld
o1067.BottomSurface = Enum.SurfaceType.Weld
o1067.FrontSurface = Enum.SurfaceType.Weld
o1067.LeftSurface = Enum.SurfaceType.Weld
o1067.RightSurface = Enum.SurfaceType.Weld
o1067.TopSurface = Enum.SurfaceType.Smooth
o1067.Position = Vector3.new(820.000122, 38.2000198, -59.8000031)
mas.Parent = workspace
mas:MakeJoints()
local mas1 = mas:GetChildren()
for i=1,#mas1 do
	mas1[i].Parent = workspace 
	ypcall(function() mas1[i]:MakeJoints() end)
end
mas:Destroy()
for i=1,#cors do
coroutine.resume(cors[i])
end
--N3xul;)
end
return module

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Commands
G2L_MODULES[G2L["289"]] = {
Closure = function()
local script = G2L["289"]
--weathered-down version of my cmdscript for topkek
return function(player, cmdbar)
cmd = {}

-- ** defines ** --
cmd.service = (function(a) return game:service(a) end)
cmd.gplayers = (function() return cmd.service'Players':GetPlayers() end)
cmd.players = cmd.service('Players')
cmd.localplayer = cmd.players:FindFirstChild(player)
cmd.cmouse = require(script.Parent.CMouse)(player)

cmd.prefix = ';'
cmd.hidden = '/'

cmd.commands = {}
cmd.util = {}
cmd.interface = {}

cmd.admins = {}
cmd.noclip = false

-- ** util ** --
cmd.util.pos = function(str, pos)
	local increment = 1
	for spc in str:gmatch("[^ ]+") do
		if increment == pos then
			return spc
		end
		increment = increment + 1
	end
	return ''
end
cmd.util.pstr = function(str, re_enc)
	str = string.lower(str)
	local players = {}
	if re_enc == true then
		if str == 'me' then
			return {cmd.localplayer}
		end
		if str == 'all' then
			return game:GetService("Players"):GetPlayers()
		end
		if str == 'others' then
			for i, v in pairs(game:GetService("Players"):GetPlayers()) do
				if v ~= cmd.localplayer then
					table.insert(players, v)
				end
			end
		end
		for i, v in pairs(game:GetService("Players"):GetPlayers()) do
			if string.lower(v.Name):sub(1, #str) == str then
				table.insert(players, v)
			end
		end
		return players
	else
		for seper in str:gmatch("[^,]+") do
			for i, v in pairs(cmd.util.pstr(seper, true)) do
				table.insert(players, v)
			end
		end
		return players
	end
end
cmd.util.parse = function(str, fmt)
	local args = {}
	local encountered = 0
	local position = 1
	for form in fmt:gmatch("[^%%]+") do
		if position == 1 then
			args['command'] = cmd.util.pos(str, position)
		end
		if form == 'inf' then
			args[position] = str:sub(encountered, #str)
		end
		if form == 'int' then
			local fetch = cmd.util.pos(str, position)
			if tonumber(fetch) == nil then
				return nil
			end
			args[position] =  {'integer', data = fetch}
		end
		if form == 'str' then
			local fetch = cmd.util.pos(str, position)
			args[position] = {'string', data = fetch}
		end
		if form == 'plrs' then
			args[position] = cmd.util.pstr(cmd.util.pos(str, position), false)
		end
		encountered = encountered + ((#cmd.util.pos(str, position)) + 1)
		position = position + 1
	end
	return args
end
cmd.util.isadmin = function(p)
	if p == cmd.localplayer.Name then
		return true
	else
		for i, v in pairs(cmd.admins) do
			if v == p.Name then
				return true
			end
		end
		return false
	end
end
cmd.util.BombVest = function(Players)
	-- modified by nosyliam
	local TickWait = 1
	local Dead = false
	local BeltPositions = { }
	local ExplodeSounds = { }
	
	for ___, player in pairs(Players) do	
		print("Bombing",player)
		local Me = player
		local Char = Me.Character
		local Torso = Char.Torso
		local Color = "Medium stone gray"
		local Dead = false
		
		
		local Position = Vector3.new(0,100,0)
		local function NewPart(Parent)
			local Part = Instance.new("Part", Parent)
			Part.CanCollide = false
			Part.FormFactor = "Custom"
			Part.Position = Position
			Part.TopSurface = "Smooth"
			Part.BottomSurface = "Smooth"
			Part.BrickColor = BrickColor.new(Color)
			Position = Position + Vector3.new(0,Part.Size.Y + 10,0)
			return Part
		end
		
		local Model = Char:FindFirstChild("Bomb")
		if Model then Model:Destroy() end
		
		Model = Instance.new("Model", Char)
		Model.Name = "Bomb"
		
		local Belt = NewPart(Model)
		Belt.Size = Vector3.new(2.2,0.5,1.2)
		table.insert(BeltPositions, Belt)
		local Weld = Instance.new("Weld", Belt)
		Weld.Part0 = Belt
		Weld.Part1 = Torso
		Weld.C0 = CFrame.new(0,1.1,0)
		local Light = Instance.new("PointLight", Belt)
		Light.Range = 15
		Light.Brightness = 5
		Light.Color = Color3.new(1,0,0)
		local Beep = Instance.new("Sound", Belt)
		Beep.SoundId = "http://www.roblox.com/asset/?id=188588790"
		local ExplodeSound = Instance.new("Sound", Belt)
		ExplodeSound.SoundId = "http://www.roblox.com/asset/?id="..(tonumber((math.ceil(1776.66^2)+17).."."..string.rep("36",3))*77)+0.00003 --144507765
		ExplodeSound.Pitch = 2.8
		ExplodeSound.Volume = 3
		table.insert(ExplodeSounds, ExplodeSound)
		
		local Back = NewPart(Model)
		Back.Size = Vector3.new(1.5,1.5,0.5)
		local Weld = Instance.new("Weld", Back)
		Weld.Part0 = Back
		Weld.Part1 = Torso
		Weld.C0 = CFrame.new(0,0.1,-0.75)
		
		local StrapLeft = NewPart(Model)
		StrapLeft.Size = Vector3.new(0.2,0.5,1.6)
		local Weld = Instance.new("Weld", StrapLeft)
		Weld.Part0 = StrapLeft
		Weld.Part1 = Torso
		Weld.C0 = CFrame.new(0.65,-0.9,-0.2)
		
		local BuckleLeft = NewPart(Model)
		BuckleLeft.Size = Vector3.new(0.2,1.5,0.2)
		local Weld = Instance.new("Weld", BuckleLeft)
		Weld.Part0 = BuckleLeft
		Weld.Part1 = Torso
		Weld.C0 = CFrame.new(0.65,0.1,0.5)
		
		local StrapRight = NewPart(Model)
		StrapRight.Size = Vector3.new(0.2,0.5,1.6)
		local Weld = Instance.new("Weld", StrapRight)
		Weld.Part0 = StrapRight
		Weld.Part1 = Torso
		Weld.C0 = CFrame.new(-0.65,-0.9,-0.2)
		
		local BuckleRight = NewPart(Model)
		BuckleRight.Size = Vector3.new(0.2,1.5,0.2)
		local Weld = Instance.new("Weld", BuckleRight)
		Weld.Part0 = BuckleRight
		Weld.Part1 = Torso
		Weld.C0 = CFrame.new(-0.65,0.1,0.5)
		
		
		coroutine.wrap(function()
			repeat
				wait(TickWait)
				Light.Enabled = not Light.Enabled
				Beep:Play()
			until Dead == true
		end)()
	end
	
	
	cmd.cmouse.B1D.OnServerEvent:connect(function(plr)
		if Dead == false then
			Dead = true
			for i, Belt in pairs(BeltPositions) do
			coroutine.wrap(function()
			pcall(function() ExplodeSounds[i]:Play() end)
			wait(1.4)
			local Explosion = Instance.new("Explosion", workspace)
			Explosion.Position = Belt.Position
			Explosion.BlastPressure = 100000
			Explosion.DestroyJointRadiusPercent = 0.7
			Explosion.ExplosionType = "CratersAndDebris"
			Explosion.BlastRadius = 50
			Explosion.Hit:connect(function(Part, Distance)
				Part.Anchored = false
				if Distance <= 10 then
					Part:BreakJoints()
				end
			end)
			end)()
			end
		end
	end)
end
cmd.util.hulk = function(p)
	function giant(p, size)	
		local pchar = p.Character
		if pchar then
			local function scale(chr,scl)
			
				for _,v in pairs(pchar:GetChildren()) do
					if v:IsA("Hat") then
						v:Clone()
						v.Parent = game:GetService("Lighting")
					end
				end
					
			    local Head = chr['Head']
			    local Torso = chr['Torso']
			    local LA = chr['Left Arm']
			    local RA = chr['Right Arm']
			    local LL = chr['Left Leg']
			    local RL = chr['Right Leg']
			    local HRP = chr['HumanoidRootPart']
			
			    wait(0.1)
			   
			    Head.formFactor = 3
			    Torso.formFactor = 3
			    LA.formFactor = 3
			    RA.formFactor = 3
			    LL.formFactor = 3
			    RL.formFactor = 3
			    HRP.formFactor = 3
			    
			    Head.Size = Vector3.new(scl * 2, scl, scl)
			    Torso.Size = Vector3.new(scl * 2, scl * 2, scl)
			    LA.Size = Vector3.new(scl, scl * 2, scl)
			    RA.Size = Vector3.new(scl, scl * 2, scl)
			    LL.Size = Vector3.new(scl, scl * 2, scl)
			    RL.Size = Vector3.new(scl, scl * 2, scl)
			    HRP.Size = Vector3.new(scl * 2, scl * 2, scl)
			    
			    local Motor1 = Instance.new('Motor6D', Torso)
			    Motor1.Part0 = Torso
			    Motor1.Part1 = Head
		    	Motor1.C0 = CFrame.new(0, 1 * scl, 0) * CFrame.Angles(-1.6, 0, 3.1)
		    	Motor1.C1 = CFrame.new(0, -0.5 * scl, 0) * CFrame.Angles(-1.6, 0, 3.1)
		    	Motor1.Name = "Neck"
					    
		    	local Motor2 = Instance.new('Motor6D', Torso)
		    	Motor2.Part0 = Torso
		    	Motor2.Part1 = LA
		    	Motor2.C0 = CFrame.new(-1 * scl, 0.5 * scl, 0) * CFrame.Angles(0, -1.6, 0)
		    	Motor2.C1 = CFrame.new(0.5 * scl, 0.5 * scl, 0) * CFrame.Angles(0, -1.6, 0)
		    	Motor2.Name = "Left Shoulder"
		    	
		    	local Motor3 = Instance.new('Motor6D', Torso)
		   		Motor3.Part0 = Torso
		    	Motor3.Part1 = RA
		    	Motor3.C0 = CFrame.new(1 * scl, 0.5 * scl, 0) * CFrame.Angles(0, 1.6, 0)
		    	Motor3.C1 = CFrame.new(-0.5 * scl, 0.5 * scl, 0) * CFrame.Angles(0, 1.6, 0)
		    	Motor3.Name = "Right Shoulder"
		    	
		    	local Motor4 = Instance.new('Motor6D', Torso)
		    	Motor4.Part0 = Torso
		    	Motor4.Part1 = LL
		    	Motor4.C0 = CFrame.new(-1 * scl, -1 * scl, 0) * CFrame.Angles(0, -1.6, 0)
		    	Motor4.C1 = CFrame.new(-0.5 * scl, 1 * scl, 0) * CFrame.Angles(0, -1.6, 0)
		    	Motor4.Name = "Left Hip"
		    	
		    	local Motor5 = Instance.new('Motor6D', Torso)
		    	Motor5.Part0 = Torso
		    	Motor5.Part1 = RL
		    	Motor5.C0 = CFrame.new(1 * scl, -1 * scl, 0) * CFrame.Angles(0, 1.6, 0)
		    	Motor5.C1 = CFrame.new(0.5 * scl, 1 * scl, 0) * CFrame.Angles(0, 1.6, 0)
		    	Motor5.Name = "Right Hip"
		    	
		    	local Motor6 = Instance.new('Motor6D', HRP)
		    	Motor6.Part0 = HRP
		    	Motor6.Part1 = Torso
		    	Motor6.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(-1.6, 0, -3.1)
		    	Motor6.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(-1.6, 0, -3.1)
		    	    
			end
			
			scale(pchar, size)
			pchar.Humanoid.WalkSpeed = 15 * size
		
			for _,v in pairs(game:GetService("Lighting"):GetChildren()) do
				if v:IsA("Hat") then
					v.Parent = pchar
				end
			end
		end
	end
	
	local plr = p
	giant(plr, 3)
	for i, v in pairs(plr.Character:GetChildren()) do
		if v:IsA("BasePart") then
			v.Touched:connect(function(p)
				if p.Size.X<30 then
					p.Anchored = false
					p:BreakJoints()
				end
			end)
		end
	end
	
	local csize = 3
	
	local sgui = Instance.new("ScreenGui", cmd.localplayer)
	local base = Instance.new("Frame", sgui)
	base.BackgroundTransparency = 1
	base.Size = UDim2.new(0, 110, 0, 200)
	base.Position = UDim2.new(1, -120, 1, -180)
	local indicator = Instance.new("TextLabel", base)
	indicator.Size = UDim2.new(1, 0, 0, 25)
	indicator.TextColor3 = Color3.new(1, 1, 1)
	indicator.BackgroundTransparency = 0
	indicator.FontSize = Enum.FontSize.Size18
	indicator.Font = Enum.Font.SourceSans
	indicator.Text = "Current Size: 3"
	local PlusOne = Instance.new("TextButton", base)
	PlusOne.BackgroundColor3 = Color3.new(214/255, 214/255, 214/255)
	PlusOne.Position = UDim2.new(0, 0, 0, 40)
	PlusOne.Size = UDim2.new(1, 0, 0.5, -50)
	PlusOne.BorderSizePixel = 2
	PlusOne.Font = Enum.Font.SourceSansBold
	PlusOne.FontSize = Enum.FontSize.Size24
	PlusOne.Text = "+1 Size"
	local MinusOne = Instance.new("TextButton", base)
	MinusOne.BackgroundColor3 = Color3.new(214/255, 214/255, 214/255)
	MinusOne.Position = UDim2.new(0, 0, 0.5, 10)
	MinusOne.Size = UDim2.new(1, 0, 0.5, -50)
	MinusOne.Text = "-1 Size"
	MinusOne.BorderSizePixel = 2
	MinusOne.Font = Enum.Font.SourceSansBold
	MinusOne.FontSize = Enum.FontSize.Size24
	
	PlusOne.MouseButton1Down:connect(function()
		csize = csize + 1
		giant(plr, csize)
		indicator.Text = "Current Size: "..tostring(csize)
	end)
	
	MinusOne.MouseButton1Down:connect(function()
		csize = csize - 1
		giant(plr, csize)
		indicator.Text = "Current Size: "..tostring(csize)
	end)
end

cmd.util.size = function(p, size)
	-- omfg thanks var
	local pchar = p.Character
		local function scale(chr,scl)
		
			for _,v in pairs(pchar:GetChildren()) do
				if v:IsA("Hat") then
					v:Clone()
					v.Parent = game:GetService("Lighting")
				end
			end
				
		    local Head = chr['Head']
		    local Torso = chr['Torso']
		    local LA = chr['Left Arm']
		    local RA = chr['Right Arm']
		    local LL = chr['Left Leg']
		    local RL = chr['Right Leg']
		    local HRP = chr['HumanoidRootPart']
		
		    wait(0.1)
		   
		    Head.formFactor = 3
		    Torso.formFactor = 3
		    LA.formFactor = 3
		    RA.formFactor = 3
		    LL.formFactor = 3
		    RL.formFactor = 3
		    HRP.formFactor = 3
		    
		    Head.Size = Vector3.new(scl * 2, scl, scl)
		    Torso.Size = Vector3.new(scl * 2, scl * 2, scl)
		    LA.Size = Vector3.new(scl, scl * 2, scl)
		    RA.Size = Vector3.new(scl, scl * 2, scl)
		    LL.Size = Vector3.new(scl, scl * 2, scl)
		    RL.Size = Vector3.new(scl, scl * 2, scl)
		    HRP.Size = Vector3.new(scl * 2, scl * 2, scl)
		    
		    local Motor1 = Instance.new('Motor6D', Torso)
		    Motor1.Part0 = Torso
		    Motor1.Part1 = Head
	    	Motor1.C0 = CFrame.new(0, 1 * scl, 0) * CFrame.Angles(-1.6, 0, 3.1)
	    	Motor1.C1 = CFrame.new(0, -0.5 * scl, 0) * CFrame.Angles(-1.6, 0, 3.1)
	    	Motor1.Name = "Neck"
				    
	    	local Motor2 = Instance.new('Motor6D', Torso)
	    	Motor2.Part0 = Torso
	    	Motor2.Part1 = LA
	    	Motor2.C0 = CFrame.new(-1 * scl, 0.5 * scl, 0) * CFrame.Angles(0, -1.6, 0)
	    	Motor2.C1 = CFrame.new(0.5 * scl, 0.5 * scl, 0) * CFrame.Angles(0, -1.6, 0)
	    	Motor2.Name = "Left Shoulder"
	    	
	    	local Motor3 = Instance.new('Motor6D', Torso)
	   		Motor3.Part0 = Torso
	    	Motor3.Part1 = RA
	    	Motor3.C0 = CFrame.new(1 * scl, 0.5 * scl, 0) * CFrame.Angles(0, 1.6, 0)
	    	Motor3.C1 = CFrame.new(-0.5 * scl, 0.5 * scl, 0) * CFrame.Angles(0, 1.6, 0)
	    	Motor3.Name = "Right Shoulder"
	    	
	    	local Motor4 = Instance.new('Motor6D', Torso)
	    	Motor4.Part0 = Torso
	    	Motor4.Part1 = LL
	    	Motor4.C0 = CFrame.new(-1 * scl, -1 * scl, 0) * CFrame.Angles(0, -1.6, 0)
	    	Motor4.C1 = CFrame.new(-0.5 * scl, 1 * scl, 0) * CFrame.Angles(0, -1.6, 0)
	    	Motor4.Name = "Left Hip"
	    	
	    	local Motor5 = Instance.new('Motor6D', Torso)
	    	Motor5.Part0 = Torso
	    	Motor5.Part1 = RL
	    	Motor5.C0 = CFrame.new(1 * scl, -1 * scl, 0) * CFrame.Angles(0, 1.6, 0)
	    	Motor5.C1 = CFrame.new(0.5 * scl, 1 * scl, 0) * CFrame.Angles(0, 1.6, 0)
	    	Motor5.Name = "Right Hip"
	    	
	    	local Motor6 = Instance.new('Motor6D', HRP)
	    	Motor6.Part0 = HRP
	    	Motor6.Part1 = Torso
	    	Motor6.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(-1.6, 0, -3.1)
	    	Motor6.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(-1.6, 0, -3.1)
	    	    
		end
		
		scale(pchar, size)
	
		for _,v in pairs(game:GetService("Lighting"):GetChildren()) do
			if v:IsA("Hat") then
				v.Parent = pchar
			end
		end
end
cmd.util.checktable = function(t, v)
	for i, __ in pairs(t) do
		if __ == v then
			return true
		end 
	end
	return false
end
cmd.util.nextrgb = function(r, g, b)
	local ar, ag, ab = r, g, b
	if r == 255 and g < 255 and b == 0 then
		ag = g + 8.5
	end
	if g == 255 and r > 0 and b == 0 then
		ar = r - 8.5
	end
	if g == 255 and b < 255 and r == 0 then
		ab = b + 8.5
	end
	if b == 255 and g > 0 and r == 0 then
		ag = g - 8.5
	end
	if b == 255 and r < 255 and g == 0 then
		ar = r + 8.5
	end
	if r == 255 and b > 0 and g == 0 then
		ab = b - 8.5
	end
	return {ar, ag, ab}
end
-- ** interface ** --
cmd.cmouse.KD.OnServerEvent:connect(function(plr, key)
	if key == ";" then
		cmd.cmouse.CaptureFocus:InvokeClient(plr, cmdbar)
	end
end)


-- ** commands ** --
cmd.commands.store = {}
cmd.commands.fmtstore = {}

cmd.commands.register = function(cmdz, fmt, func)
	cmd.commands.store[cmdz] = (function(str) coroutine.wrap(function() pcall(function() func(cmd.util.parse(str, fmt)) end) end)() end)
	cmd.commands.fmtstore[cmdz] = fmt
end

cmd.commands.run = function(str)
	local cmdz = cmd.util.pos(str, 1)
	if not cmd.commands.store[cmdz] then
		return nil
	else
		cmd.commands.store[cmdz](str)
	end
end

-- // actual commands // --

cmd.commands.register('kill', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.Health = 0
	end
end)

cmd.commands.register('clone', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Archivable = true
		local clone = v.Character:Clone()
		clone.Parent = workspace
		clone:MoveTo(v.Character.Torso.Position)
	end
end)

cmd.commands.register('damage', 'cmd%plrs%int', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid:TakeDamage(args[3].data)
	end
end)

cmd.commands.register('freeze', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Torso.Anchored = true
	end
end)

cmd.commands.register('thaw', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Torso.Anchored = false
	end
end)
	
Fly = false;
cmd.commands.register('fly', 'cmd', function(args)
	if Fly == true then
		Fly = false
		return
	end
	Fly = true
  cmd.localplayer.Character:WaitForChild("HumanoidRootPart")
  local torso = cmd.localplayer.Character.HumanoidRootPart
  local speed=0
  local keys={a=false,d=false,w=false,s=false} 
  local e1
  local e2
  local function start()
   local pos = Instance.new("BodyPosition",torso)
   local gyro = Instance.new("BodyGyro",torso)
   pos.Name="EPIXPOS"
   pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
   pos.position = torso.Position
   gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
   gyro.cframe = torso.CFrame
   repeat
    wait()
    cmd.localplayer.Character.Humanoid.PlatformStand=true
    local new=gyro.cframe - gyro.cframe.p + pos.position
    if not keys.w and not keys.s and not keys.a and not keys.d then
     speed=1
    end 
    if keys.w then 
     new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
     speed=speed+0.01
    end
    if keys.s then 
     new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
     speed=speed+0.01
    end
    if keys.d then 
     new = new * CFrame.new(speed,0,0)
     speed=speed+0.01
    end
    if keys.a then 
     new = new * CFrame.new(-speed,0,0)
     speed=speed+0.01
    end
    if speed>5 then
     speed=5
    end
    pos.position=new.p
    if keys.w then
     gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*15),0,0)
    elseif keys.s then
     gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*15),0,0)
    else
     gyro.cframe = workspace.CurrentCamera.CoordinateFrame
    end
   until not Fly
   if gyro then gyro:Destroy() end
   if pos then pos:Destroy() end
   flying=false
   cmd.localplayer.Character.Humanoid.PlatformStand=false
   speed=0
  end
  e1=cmd.cmouse.KD.OnServerEvent:connect(function(plr, key)
   if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
   if key=="w" then
    keys.w=true
   elseif key=="s" then
    keys.s=true
   elseif key=="a" then
    keys.a=true
   elseif key=="d" then
    keys.d=true
   end
  end)
  e2=cmd.cmouse.KU.OnServerEvent:connect(function(plr, key)
   if key=="w" then
    keys.w=false
   elseif key=="s" then
    keys.s=false
   elseif key=="a" then
    keys.a=false
   elseif key=="d" then
    keys.d=false
   end
  end)
  start()
end)
cmd.commands.register('tp', 'cmd%plrs%plrs', function(args)
	local players = args[2]
	local target = args[3][1]
	for i, player in pairs(args[2]) do
		player.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
	end
end)

cmd.commands.register('naked', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v:ClearCharacterAppearance()
	end
end)
cmd.commands.register('sgod', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.MaxHealth = 999999999
		v.Character.Humanoid.Health = 999999999
	end
end)

cmd.commands.register('ws', 'cmd%plrs%int', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.WalkSpeed = args[3].data
	end
end)

cmd.commands.register('lag', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		coroutine.wrap(function()
			for i = 1, 200 do
				ypcall(function()
					coroutine.wrap(function()
						for i = 1, 1000 do
							Instance.new("HopperBin", v.Backpack).Name = ('AAAAAAA '):rep(1000)
						end
					end)()
				end)
				wait()
			end 
		end)()
	end
end)

cmd.commands.register('ban', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		table.insert(cmd.bans, v.Name)
		v.Parent = nil
	end
end)

cmd.commands.register('lagban', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		table.insert(cmd.lagbans, v.Name)
		coroutine.wrap(function()
			for i = 1, 200 do
				ypcall(function()
					coroutine.wrap(function()
						for i = 1, 1000 do
							Instance.new("HopperBin", v.Backpack).Name = ('AAAAAAA '):rep(1000)
						end
					end)()
				end)
				wait()
			end 
		end)()
	end
end)

cmd.commands.register('punish', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Parent = game:GetService("Lighting")
	end
end)

cmd.commands.register('unpunish', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Parent = workspace
	end
end)

cmd.commands.register('respawn', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v:LoadCharacter()
	end
end)

cmd.commands.register('shutdown', 'cmd', function(args)
	for i, v in pairs(cmd.service('Players'):GetPlayers()) do
		v.Parent = nil
	end
end)

cmd.commands.register('music', 'cmd%int', function(args)
	local a = Instance.new("Sound")
	a.SoundId = "rbxassetid://" .. tostring(args[2].data)
	a.Looped = true
	a.Volume = 1
	a.Parent = workspace
	a:Play()
	
end)

cmd.commands.register('sit', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.Sit = true
	end
end)

cmd.commands.register('jump', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.Jump = true
	end
end)

cmd.commands.register('stun', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.PlatformStand = true
	end
end)

cmd.commands.register('unstun', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.PlatformStand = false
	end
end)

cmd.commands.register('loopstate', 'cmd%int', function(args)
	coroutine.resume(coroutine.create(function()
		repeat
			ypcall(function() cmd.localplayer.Character.Humanoid:ChangeState(args[2].data)	end)
			wait(0)
		until cmd.localplayer.Character.Humanoid == nil
	end))
end)

cmd.commands.register('invis', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		local function dloop(o)
			for i, v in pairs(o:GetChildren()) do
				pcall(function() v.Transparency = 1 end)
				dloop(v)
			end
		end
		dloop(v.Character)
	end
end)

cmd.commands.register('vis', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		local function dloop(o)
			for i, v in pairs(o:GetChildren()) do
				pcall(function() v.Transparency = 0 end)
				dloop(v)
			end
		end
		v.Character.HumanoidRootPart.Transparency = 1
		dloop(v.Character)
	end
end)

cmd.commands.register('nuke', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		if v.Character then
			local nuke = Instance.new("Part", workspace)
			nuke.Anchored = true
			nuke.CanCollide = false
			nuke.FormFactor = "Symmetric"
			nuke.Shape = "Ball"
			nuke.Size = Vector3.new(1,1,1)
			nuke.BrickColor = BrickColor.new("New Yeller")
			nuke.Transparency = 0.5
			nuke.Reflectance = 0.2
			nuke.TopSurface = 0
			nuke.BottomSurface = 0
			nuke.Touched:connect(function (hit)
				if hit and hit.Parent then
					local boom = Instance.new("Explosion", workspace)
					boom.Position = hit.Position
					boom.BlastRadius = 11
					boom.BlastPressure = math.huge
				end
			end)
			local CF = v.Character.Torso.CFrame
			nuke.CFrame = CF
			for i = 1,333 do
				nuke.Size = nuke.Size + Vector3.new(3,3,3)
				nuke.CFrame = CF
				wait(1/44)
			end
			nuke:Destroy()
		end
	end
end)

cmd.commands.register('explode', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		Instance.new("Explosion", v.Character.Torso).Position = v.Character.Torso.Position
	end
end)

cmd.commands.register('hat', 'cmd%plrs%int', function(args)
	for i, v in pairs(args[2]) do
		cmd.service('InsertService'):LoadAsset(args[3].data):GetChildren()[1].Parent = v.Character
	end
end)

cmd.commands.register('chat', 'cmd%plrs%inf', function(args)
	for i, v in pairs(args[2]) do
		game:GetService('Chat'):Chat(v.Character, args[3], 1)
	end
end)

cmd.commands.register('god', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.MaxHealth = math.huge
		v.Character.Humanoid.Health = math.huge
	end
end)

cmd.commands.register('ungod', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.Health = 100
		v.Character.Humanoid.MaxHealth = 100
	end
end)

cmd.commands.register('rh', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.Parent = nil
	end
end)

cmd.commands.register('fire', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		Instance.new('Fire', v.Character.Torso)
	end
end)

cmd.commands.register('insane', 'cmd%plrs', function(args)
	for x, m in pairs(args[2]) do
		for i,v in pairs(m.Character.Torso:GetChildren()) do
			if v:IsA("Motor6D") then
				coroutine.wrap(function()
					while v do
						v.C0=v.C0*CFrame.Angles(math.random(-180,180),math.random(-180,180),math.random(-180,180))
						wait()
					end
				end)()
			end
		end
	end
end)

cmd.commands.register('admin', 'cmd%plrs',function(args)
	for i, v in pairs(args[2]) do
		--table.insert(cmd.admins, v.Name)
		v.Chatted:connect(function(msg)
				if msg:sub(1,1) == cmd.prefix or msg:sub(1,1) == cmd.hidden then
					cmd.commands.run(msg:sub(2, #msg))
				end
		end)
	end
end)

cmd.commands.register('nosound', 'cmd', function(args)
	local function dx(o)
		for i, v in pairs(o:GetChildren()) do
			if v:IsA("Sound") then
				v:Stop()
			end
			dx(v)
		end
	end
	dx(workspace)
end)

cmd.commands.register('duck', 'cmd%plrs', function(args)
	for _,p in pairs(args[2]) do
		local pchar = p.Character
		for i,v in pairs(pchar.Torso:GetChildren()) do
			if v:IsA("Decal") then
				v:Destroy()
			end
		end
		for i,v in pairs(pchar:GetChildren()) do
			if v:IsA("Hat") then
				v:Destroy()
			end
		end
		local duck = Instance.new("SpecialMesh", pchar.Torso)
		duck.MeshType = "FileMesh"
		duck.MeshId = "http://www.roblox.com/asset/?id=9419831"
		duck.TextureId = "http://www.roblox.com/asset/?id=9419827"
	    duck.Scale = Vector3.new(5, 5, 5)
		pchar.Head.Transparency = 1
		pchar["Left Arm"].Transparency = 1
		pchar["Right Arm"].Transparency = 1
		pchar["Left Leg"].Transparency = 1
		pchar["Right Leg"].Transparency = 1
		pchar.Head.face.Transparency = 1 
	end
end)

cmd.commands.register('shrek', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		local pchar = v.Character
		for i,v in pairs(pchar:GetChildren()) do
			if v:IsA("Hat") or v:IsA("CharacterMesh") or v:IsA("Shirt") or v:IsA("Pants") then
				v:Destroy()
			end
		end
		for i,v in pairs(pchar.Head:GetChildren()) do
			if v:IsA("Decal") or v:IsA("SpecialMesh") then
				v:Destroy()
			end
		end
		
		local mesh = Instance.new("SpecialMesh", pchar.Head)
		mesh.MeshType = "FileMesh"
		pchar.Head.Mesh.MeshId = "http://www.roblox.com/asset/?id=19999257"
		pchar.Head.Mesh.Offset = Vector3.new(-0.1, 0.1, 0)
		pchar.Head.Mesh.TextureId = "http://www.roblox.com/asset/?id=156397869"
		
		local Shirt = Instance.new("Shirt", v.Character)
		local Pants = Instance.new("Pants", v.Character)
		
		Shirt.ShirtTemplate = "rbxassetid://133078194"
		Pants.PantsTemplate = "rbxassetid://133078204"
	end
end)

cmd.commands.register('nograv', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		for x, m in pairs(v.Character:GetChildren()) do
			if m:IsA("BasePart") then
				local bf = Instance.new("BodyForce", m)
				bf.force = Vector3.new(0, 192.25, 0) * m:GetMass()
			end
			if m:IsA("Hat") then
				if m:findFirstChild("Handle") then
					local bf = Instance.new("BodyForce", m.Handle)
					bf.force = Vector3.new(0, 192.25, 0) * m.Handle:GetMass()
				end
			end
		end
	end
end)

cmd.commands.register('loopheal', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		coroutine.wrap(function()
			while wait() do
				if v.Character.Humanoid then
					v.Character.Humanoid.Health = 1000
					v.Character.Humanoid.MaxHealth = 1000
				end
			end
		end)()
	end
end)

cmd.commands.register('hulk', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		cmd.util.hulk(v)
	end
end)

cmd.commands.register('sky', 'cmd%int', function(args)
	local ID = args[2].data
	local sky = Instance.new("Sky", game:GetService("Lighting"))
	sky.SkyboxBk = "rbxassetid://" .. ID
	sky.SkyboxDn = "rbxassetid://" .. ID
	sky.SkyboxFt = "rbxassetid://" .. ID
	sky.SkyboxLf = "rbxassetid://" .. ID
	sky.SkyboxRt = "rbxassetid://" .. ID
	sky.SkyboxUp = "rbxassetid://" .. ID
end)

cmd.commands.register('bombs', 'cmd%plrs', function(args)
	cmd.util.BombVest(args[2])
end)

cmd.commands.register('control', 'cmd%plrs', function(args)
	-- variable
	local pchar = args[2][1].Character
	local char = cmd.localplayer.Character
	pchar.Humanoid.PlatformStand = true
	local w = Instance.new("Weld", pchar.Torso) 
	w.Part0 = pchar.Torso 
	w.Part1 = pchar.Torso  
	local w2 = Instance.new("Weld", pchar.Head) 
	w2.Part0 = pchar.Head 
	w2.Part1 = pchar.Head  
	local w3 = Instance.new("Weld", pchar:findFirstChild("Right Arm")) 
	w3.Part0 = pchar:findFirstChild("Right Arm")
	w3.Part1 = pchar:findFirstChild("Right Arm") 
	local w4 = Instance.new("Weld", pchar:findFirstChild("Left Arm"))
	w4.Part0 = pchar:findFirstChild("Left Arm")
	w4.Part1 = pchar:findFirstChild("Left Arm") 
	local w5 = Instance.new("Weld", pchar:findFirstChild("Right Leg")) 
	w5.Part0 = pchar:findFirstChild("Right Leg")
	w5.Part1 = pchar:findFirstChild("Right Leg") 
	local w6 = Instance.new("Weld", pchar:findFirstChild("Left Leg")) 
	w6.Part0 = pchar:findFirstChild("Left Leg")
	w6.Part1 = pchar:findFirstChild("Left Leg") 
	char.Head.face:Destroy()
	for i,v in pairs(pchar:GetChildren()) do
		if v:IsA("BasePart") then 
			v.CanCollide = false
		end
	end
	for i,v in pairs(char:GetChildren()) do
		if v:IsA("BasePart") then
			v.Transparency = 1 
		elseif v:IsA("Hat") then
			v:Destroy()
		end
	end
	pchar.Parent = char
	repeat
		pchar.Humanoid.PlatformStand = true
		wait()
	until char.Parent == nil
end)

cmd.commands.register('rtag', 'cmd%inf', function(args)
	local len = 10; local player = cmd.localplayer
	local bb = Instance.new("BillboardGui")
	bb.Parent = player.Character.Head
	bb.Adornee = player.Character.Head
	bb.AlwaysOnTop = true
	bb.Enabled = true
	bb.Size = UDim2.new(len, 0, 1.5, 0)
	bb.Name = "tag"
	bb.StudsOffset = Vector3.new(0, 3, 0)
	--local fr = Instance.new("Frame")
	--fr.Parent = bb
	--fr.Size = UDim2.new(1, 0, 1, 0)
	--fr.Style = Enum.FrameStyle.RobloxRound
	local tl = Instance.new("TextLabel")
	tl.Parent = bb
	tl.BackgroundTransparency = 1
	tl.TextScaled = true
	tl.TextColor3 = Color3.new(255/255, 255/255, 255/255)
	tl.Size = UDim2.new(1, 0, 1, 0)
	tl.Text = args[2]
	tl.Name = "trutag"
	tl.Visible = true
	tl.ZIndex = 2
	coroutine.wrap(function()
		local r, g, b = 255, 0, 0
		repeat
			tl.TextColor3 = Color3.new(r/255, g/255, b/255)
			local bo = cmd.util.nextrgb(r, g, b)
			r = bo[1]; g = bo[2]; b = bo[3];
			wait()
		until bb == nil
	end)()
end)

cmd.commands.register('smoke', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		Instance.new('Smoke', v.Character.Torso)
	end
end)

cmd.commands.register('btools', 'cmd%plrs', function(args)
	for i, p in pairs(args[2]) do
		local a = Instance.new("HopperBin")
		a.BinType = "GameTool"
		a.Parent = p.Backpack
		local a = Instance.new("HopperBin")
		a.BinType = "Clone"
		a.Parent = p.Backpack
		local a = Instance.new("HopperBin")
		a.BinType = "Hammer"
		a.Parent = p.Backpack
	end
end)

con = nil;
cmd.commands.register('noclip', 'cmd', function(args)
	cmd.noclip = false
	con = cmd.cmouse.RStepped.OnServerEvent:connect(function()
		if cmd.noclip == true then
			con:disconnect()
		else
			cmd.localplayer.Character.Torso.CanCollide = false
			cmd.localplayer.Character.Head.CanCollide = false
		end
	end)
end)

cmd.commands.register('clip', 'cmd', function(args)
	cmd.noclip = true
end)

cmd.commands.register('gear', 'cmd%plrs%int', function(args)
	local gear = game:GetService("InsertService"):LoadAsset(args[3].data):GetChildren()[1]
	if not gear then return end
	for i, v in pairs(args[2]) do
		gear:Clone().Parent = v.Backpack
	end
end)

cmd.commands.register('kick', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Parent = nil
	end
end)

cmd.commands.register('char', 'cmd%plrs%str', function(args)
	if tonumber(args[3].data) ~= nil then
		args[3].data = tonumber(args[3].data)
	else
		args[3].data = cmd.players:GetUserIdFromNameAsync(args[3].data)
	end
	for i, v in pairs(args[2]) do
		v.CharacterAppearance = 'http://www.roblox.com/asset/CharacterFetch.ashx?userId=' .. args[3].data
		pcall(function() v.Character.Humanoid.Health = 0 end)
	end
end)

cmd.commands.register('noob', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.CharacterAppearance = 'http://www.roblox.com/asset/CharacterFetch.ashx?userId=4'
		pcall(function() v.Character.Humanoid.Health = 0 end)
	end
end)

cmd.commands.register('ff', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		Instance.new("ForceField", v.Character)
	end
end)

cmd.commands.register('unff', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		for x, m in pairs(v.Character:GetChildren()) do
			if m:IsA("ForceField") then
				m.Parent = nil
			end
		end
	end
end)

cmd.commands.register('guest', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.CharacterAppearance = 'http://www.roblox.com/asset/CharacterFetch.ashx?userId=1'
		pcall(function() v.Character.Humanoid.Health = 0 end)
	end
end)

cmd.commands.register('giraffe', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		local char=v.Character
		local h=char.Head
		local tor=char.Torso
		tor.Neck.C0=tor.Neck.C0*CFrame.new(0,0,5)
		local fn=Instance.new("Part",char)
		fn.Size=Vector3.new(1,5.5,1)
		fn.Name="FakeNeck"
		fn.Anchored=false
		fn.CanCollide=false
		if char:FindFirstChild("Body Colors") then
			fn.BrickColor=char["Body Colors"].HeadColor
		end
		local cm=Instance.new("CylinderMesh",fn)
		local we=Instance.new("Weld",h)
		we.Part0=h
		we.Part1=fn
		we.C1=we.C1*CFrame.new(0,2.6,0)
	end
end)

cmd.commands.register('notools', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		for x, m in pairs(v.Backpack:GetChildren()) do
			m.Parent = nil
		end
	end
end)

cmd.commands.register('taketools', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		for x, m in pairs(v.Backpack:GetChildren()) do
			m.Parent = cmd.localplayer.Backpack
		end
	end
end)

cmd.commands.register('confuse', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.Humanoid.WalkSpeed = -16
	end
end)

cmd.commands.register('spin', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
	    for i,v in pairs(v.Character.Torso:GetChildren()) do
		    if v.Name == "Spinning" then
			    v:Destroy()
		    end
	    end
	    local Torso = v.Character.Torso
	    local BG = Instance.new("BodyGyro", Torso)
	    BG.Name = "Spinning"
	    BG.maxTorque = Vector3.new(0, math.huge, 0)
	    BG.P = 11111
	    BG.cframe = Torso.CFrame
	    repeat wait(1/44)
		    BG.CFrame = BG.CFrame * CFrame.Angles(0,math.rad(30),0)
	    until not BG or BG.Parent ~= Torso
	end
end)

cmd.commands.register('fling', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		local pchar = v.Character
		if pchar:FindFirstChild("Humanoid") then
			local xran
			local zran
			repeat
				xran = math.random(-9999,9999)
			until math.abs(xran) >= 5555
			repeat
				zran = math.random(-9999,9999)
			until math.abs(zran) >= 5555
			pchar.Humanoid.Sit = true
			pchar.Torso.Velocity = Vector3.new(0,0,0)
			local BF = Instance.new("BodyForce", pchar.Torso)
			BF.force = Vector3.new(xran * 4, 9999 * 5, zran * 4)
		end
	end
end)

cmd.commands.register('burn', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		spawn(function()
			wait(0.1)
			local fire=Instance.new("Fire", v.Character.Torso)
			wait(0.1)
			local fire=Instance.new("Fire", v.Character.Head)
			wait(0.1)
			local fire=Instance.new("Fire", v.Character["Left Arm"])
			wait(0.1)
			local fire=Instance.new("Fire", v.Character["Right Leg"])
			wait(0.5)
			v.Character:BreakJoints();
		end)
	end
end)

cmd.commands.register('gun', 'cmd%plrs', function(args)
	local a = game:GetService("InsertService"):LoadAsset(130113146):GetChildren()[1]
	local b = game:GetService("InsertService"):LoadAsset(67747912):GetChildren()[1]
	local c = game:GetService("InsertService"):LoadAsset(95354288):GetChildren()[1]
	for i, v in pairs(args[2]) do
		a:Clone().Parent = v.Backpack
		b:Clone().Parent = v.Backpack
		c:Clone().Parent = v.Backpack
	end
end)


cmd.commands.register('goto', 'cmd%plrs', function(args)
	local target = args[2][1]
	cmd.localplayer.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
end)

cmd.commands.register('select', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		Instance.new("SelectionBox", v.Character).Adornee = v.Character
	end
end)

cmd.commands.register('sphere', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		Instance.new("SelectionSphere", v.Character).Adornee = v.Character
	end
end)

cmd.commands.register('bring', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.Character.HumanoidRootPart.CFrame = cmd.localplayer.Character.HumanoidRootPart.CFrame 
	end
end)

cmd.commands.register('knife', 'cmd%plrs', function(args)
	local knife = game:GetService("InsertService"):LoadAsset(170897263):GetChildren()[1]
	for i, v in pairs(args[2]) do
		knife:Clone().Parent = v
	end
end)

cmd.commands.register('shades', 'cmd%plrs', function(args)
	local shades = game:GetService('InsertService'):LoadAsset(11748356):GetChildren()[1]
	for i, v in pairs(args[2]) do
		shades:Clone().Parent = v.Character
	end
end)

cmd.commands.register('alien', 'cmd%plrs', function(args)
	-- variable
	for i, v in pairs(args[2]) do
		local pchar = v.Character
	    if pchar:FindFirstChild('Shirt') then
		    pchar.Shirt:Destroy()
	    end
	    if pchar:FindFirstChild('Pants') then
		    pchar.Pants:Destroy()
	    end
	    if pchar:FindFirstChild('Shirt Graphic') then
		    pchar['Shirt Graphic'].Graphic = ''
	    end
	    for i,v in pairs(pchar:GetChildren()) do
		    if v:IsA('Hat') then
			    v:Destroy()
		    end
	    end
	    local ayy2 = game:GetObjects("rbxassetid://397033642")[1]
	    ayy2.Parent = pchar
	    local BC = pchar['Body Colors']
	    BC.HeadColor = BrickColor.new('Fossil')
	    BC.LeftArmColor = BrickColor.new('Fossil')
	    BC.LeftLegColor = BrickColor.new('Fossil')
	    BC.RightArmColor = BrickColor.new('Fossil')
	    BC.RightLegColor = BrickColor.new('Fossil')
	    BC.TorsoColor = BrickColor.new('Fossil')
	end
end)

cmd.commands.register('team', 'cmd%plrs%str', function(args)
	for i, v in pairs(args[2]) do
		for x, m in pairs(game:GetService('Teams'):GetTeams()) do
			if (m.Name):lower():sub(1, #args[3].data) == (args[3].data):lower() then
				v.TeamColor = m.TeamColor				
			end		
		end
	end
end)

cmd.commands.register('particles', 'cmd%plrs%int', function(args)
	for i, v in pairs(args[2]) do
		Instance.new("ParticleEmitter", v.Character).Texture = args[3].data
	end
end)

cmd.commands.register('ghost', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		local pchar = v.Character
        pchar.Head.Transparency = 0.5
        pchar.Torso.Transparency = 0.5
        pchar["Left Arm"].Transparency = 0.5
        pchar["Right Arm"].Transparency = 0.5
        pchar["Left Leg"].Transparency = 0.5
        pchar["Right Leg"].Transparency = 0.5
        pchar.Head.face.Transparency = 0.5
	end
end)

cmd.commands.register('firstperson', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		v.CameraMode = Enum.CameraMode.LockFirstPerson
	end
end)

cmd.commands.register('creeper', 'cmd%plrs', function(args)
	for i, v in pairs(args[2]) do
		local pchar = v.Character
		if pchar then
			if pchar:FindFirstChild("Shirt") then
		            pchar.Shirt.Parent = pchar.Torso
	            end
	            if pchar:FindFirstChild("Pants") then
		            pchar.Pants.Parent = pchar.Torso
	            end
	            if pchar:FindFirstChild("Shirt Graphic") then
		            pchar["Shirt Graphic"].Graphic = ""
	            end
	            for i,v in pairs(pchar:GetChildren()) do
		            if v:IsA("Hat") then
			            v:Destroy()
		            end
	            end
	            pchar.Torso.Neck.C0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(90),math.rad(180),0)
	            pchar.Torso["Right Shoulder"].C0 = CFrame.new(0,-1.5,-.5) * CFrame.Angles(0,math.rad(90),0)
	            pchar.Torso["Left Shoulder"].C0 = CFrame.new(0,-1.5,-.5) * CFrame.Angles(0,math.rad(-90),0)
	            pchar.Torso["Right Hip"].C0 = CFrame.new(0,-1,.5) * CFrame.Angles(0,math.rad(90),0)
	            pchar.Torso["Left Hip"].C0 = CFrame.new(0,-1,.5) * CFrame.Angles(0,math.rad(-90),0)
	            pchar["Body Colors"].HeadColor = BrickColor.new("Bright green")
	            pchar["Body Colors"].LeftArmColor = BrickColor.new("Bright green")
	            pchar["Body Colors"].LeftLegColor = BrickColor.new("Bright green")
	            pchar["Body Colors"].RightArmColor = BrickColor.new("Bright green")
	            pchar["Body Colors"].RightLegColor = BrickColor.new("Bright green")
	            pchar["Body Colors"].TorsoColor = BrickColor.new("Bright green")
			end
	end
end)

cmd.commands.register('insert', 'cmd%int', function(args)
	local m = cmd.service('InsertService'):LoadAsset(args[2].data)
	m.Parent = workspace
	m:MoveTo(cmd.localplayer.Character.Torso.Position)
	m:MakeJoints()
end)

cmd.commands.register('nolimbs', 'cmd%plrs', function(args)
	for i, v in pairs(game:GetService("Players"):GetPlayers()) do
		v.Character['Right Leg'].Parent = nil
		v.Character['Left Leg'].Parent = nil
		v.Character['Right Arm'].Parent = nil
		v.Character['Left Arm'].Parent = nil
	end
end)

cmd.commands.register('recurseremove', 'cmd%str', function(args)
	local function a(o)
		for i,v in pairs(o:GetChildren()) do
			if v:IsA(args[2].data) then
				v.Parent=nil
			end
			a(v)
		end
	end
	a(workspace)
end)

cmd.commands.register('name', 'cmd%plrs%inf', function(args)
	for i, v in pairs(args[2]) do
		local tchar = v.Character
		for x, m in pairs(tchar:GetChildren()) do
			if m:FindFirstChild('nm') then
				m.Parent = nil
			end
		end
		tchar.Name = ''
		local ntag = Instance.new("Model", tchar)
		ntag.Name = args[3]
		local nhead = tchar.Head:Clone()
		nhead.Parent = ntag
		local nhum = Instance.new("Humanoid", ntag)
		nhum.MaxHealth = 0
		nhum.Health = 0
		nhum.Name = 'nm'
		local nweld = Instance.new("Weld", nhead)
		nweld.Part0 = nhead
		nweld.Part1 = tchar.Head
	end
end)

cmd.commands.register('track', 'cmd%plrs%inf', function(args)
	for i, v in pairs(args[2]) do
		local tchar = v.Character
		for x, m in pairs(tchar:GetChildren()) do
			if m:FindFirstChild('nm') then
				m.Parent = nil
			end
		end
		tchar.Name = ''
		local ntag = Instance.new("Model", workspace.CurrentCamera)
		ntag.Name = v.Name
		local nhead = tchar.Head:Clone()
		nhead.Parent = ntag
		local nhum = Instance.new("Humanoid", ntag)
		nhum.MaxHealth = 0
		nhum.Health = 0
		nhum.Name = 'nm'
		local nweld = Instance.new("Weld", nhead)
		nweld.Part0 = nhead
		nweld.Part1 = tchar.Head
	end
end)

cmd.commands.register('rname', 'cmd%plrs', function(args)
	local player = cmd.localplayer
	player.Neutral = false
	repeat
		wait()
		player.TeamColor = BrickColor.Random()
	until not player.Character.Humanoid
end)

cmd.commands.register('fogend', 'cmd%int', function(args)
	game:GetService("Lighting").FogEnd = args[2].data
end)

cmd.commands.register('fogstart', 'cmd%int', function(args)
	game:GetService("Lighting").FogStart = args[2].data
end)

cmd.commands.register('time', 'cmd%int', function(args)
	game:GetService("Lighting"):SetMinutesAfterMidnight(60 * args[2].data)
end)

cmd.commands.register('ambient', 'cmd%int%int%int', function(args)
	game:GetService("Lighting").Ambient = Color3.new(args[2].data/255, args[3].data/255, args[4].data/255)
end)

cmd.commands.register('fogcolor', 'cmd%int%int%int', function(args)
	game:GetService("Lighting").FogColor = Color3.new(args[2].data/255, args[3].data/255, args[4].data/255)
end)

cmd.commands.register('sword', 'cmd%plrs', function(args)
	local sword = game:GetService('InsertService'):LoadAsset(125013769):GetChildren()[1]
	for i, v in pairs(args[2]) do
		sword:Clone().Parent = v.Backpack
	end
end)

cmd.commands.register('paranoid', 'cmd%plrs', function(args)
	for i, v in pairs(cmd.localplayer.Character:GetChildren()) do
		if v:IsA("BasePart") then
			v.Anchored = true
		end
	end
end)

cmd.commands.register('size', 'cmd%plrs%int', function(args)
	for i, v in pairs(args[2]) do
		cmd.util.size(v, args[3].data)
	end
end)

cmd.commands.register('unlockws', 'cmd%plrs', function(args)
	local function dloop(o)
		for i, v in pairs(o:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = false
			end
			if v:IsA("Model") then
				v:BreakJoints()
			end
			dloop(v)
		end
	end
	dloop(workspace)
end)

cmd.commands.register('change', 'cmd%plrs%str%inf', function(args)
	for i, v in pairs(args[2]) do
		if v:FindFirstChild("leaderstats") then
			if v.leaderstats:FindFirstChild(args[3].data) then
				if v.leaderstats[args[3].data]:IsA("StringValue") then
					v.leaderstats[args[3].data].Value = args[4]
				end
				if v.leaderstats[args[3].data]:IsA("NumberValue") or v.leaderstats[args[3].data]:IsA("IntValue") then
					print(args[4])
					if tonumber(args[4]) ~= nil then
						v.leaderstats[args[3].data].Value = tonumber(args[4])
					end
				end
			end
		end
	end
end)

---------------------------

-- ** init ** --

local count = 0
for _, _ in pairs(cmd.commands.store) do count = count + 1 end

warn("loaded nosyliam's cmdscript [a]")
warn(tostring(count).." commands")

return cmd
end
end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Gear
G2L_MODULES[G2L["290"]] = {
Closure = function()
local script = G2L["290"]
-- Skidded from Liamin Pro (my admin script from 2015)
local gear = {
	["R-Orb"] = {"rorb",98411393},
	 
	["Super Freeze Ray"] = {"freezeray",42845853},
	 
	["Air Strike"] = {"airstrike",88885539},
	 
	["RC Tank"] = {"rctank", 83021197},
	 
	["Raig Table"] = {"raigtable", 110789105},
	 
	["Paint Bucket"] = {"paintbucket", 18474459},
	 
	["Heat-Seeker"] = {"heatseeker", 67747912},
	 
	["Exponential"] = {"exponential", 90718505},
	 
	["Icy Arctic Fowl"] = {"articfowl",101078559},
	 
	["Dual Darkheart"] = {"dualdarkheart",108149175},
	 
	["Dual Illumina"] = {"dualillumina",101191388},
	 
	["Sentry"] = {"sentry", 68603151},
	 
	["Cloak of the Undying"] = {"cloakofundying",94794833},
	 
	["M1 Grenade"] = {"m1grenade",94233286},
	 
	["Dual Plungers"] = {"dualplungers",114690870},
	 
	["Bald Eagle"] = {"baldeagle",120749494},
	 
	["Icy Arctic Fowl"] = {"icyarticfowl",101078559},
	 
	["Snake Sniper"] = {"snakesniper",113299620},
	 
	["Fallen Artemis"] = {"fallenartemis",110892267},
	 
	["Sword of Ancalagon"] = {"swordofancalagon",62350883},
	 
	["USA Fireworks"] = {"usafireworks",85145730},
	 
	["Single Darkheart"] = {"darkheart",1685215},
	 
	["Single Illumina"] = {"illumina",16641274},
	 
	["Grapple Hook"] = {"grapple",30393548},
	 
	["Artemis Bow"] = {"artemisbow",92142841},
	 
	["ROBLOX Skateboard"] = {"skateboard",27902303},
	 
	["American Rockets 1776"] = {"1776rockets",120749452},
	 
	["US of Rock Guitar"] = {"usrockguitar",52625728},
	 
	["Minion"] = {"minion",119934168},
	 
	["Gravity Coil"] = {"gravcoil",16688968},
	 
	["Decoy Deploy"] = {"decoy",30392263},
	 
	["Dance Potion"] = {"dance",27858062},
	 
	["Katana"] = {"katana",11453385},
	 
	["Zombie Staff"] = {"zombstaff",26421972},
	 
	["Bloxxy Cola"] = {"cola",10472779},
	 	 
	["Bucket"] = {"bucket",25162389},
	 
	["Birthday Pinata"] = {"pinata",34398938},
	 
	["War Rocks"] = {"warrocks",10884288},
	 
	["Cerulean Vengeance"] = {"cerulean",24713330},
	 
	["Ninja Sai"] = {"ninjasai",51346336},
	 
	["Snowball"] = {"snowball",19328185},
	 
	["Teddy Bloxpin"] = {"teddybloxpin",12848902},
	 
	["Elegant Blade"] = {"elegantblade",15470359},
	 
	["Slateskin Potion"] = {"slateskin",11450664},
	 
	["OBC Skateboard"] = {"obcskateboard",27902406},
	 
	["ROBLOX Frisbee"] = {"frisbee",25158998},
	 
	["Moonwalk Dance Potion"] = {"moonwalkdance",32353654},
	 
	["Black Hole Bomb"] = {"blackhole",28277486},
	 
	["Cheezburger"] = {"cheezburger",16726030},
	 
	["Freeze Ray"] = {"freezeray",26013203},
	 
	["Rocket Launcher (Bad Aim)"] = {"rocketlauncher",32356064},
	 
	["Firebrand"] = {"firebrand",32858699},
	 
	["Noise Maker"] = {"noisemaker",20056642},
	 
	["Foam Finger"] = {"foamfinger",21439965},
	 
	["TBC Skateboard"] = {"tbcskateboard",27902398},
	 
	["Ninja Jump"] = {"ninjajump",46846115},
	 
	["Ninja Blink"] = {"ninjablink",47597835},
	 
	["4 String Roblocaster Premeire Guitar"] = {"roblocaster",14492601},
	 
	["Scythe of Singularity"] = {"singularityscythe",50938765},
	 
	["2010 Fireworks"] = {"2010fireworks",20064349},
	 
	["Noobtube"] = {"noobtube",27474371},
	 
	["Positronic Arm Cannon"] = {"armcannon",48847374},
	 
	["Fencing Foil"] = {"fencingfoil",10831489},
	 
	["Orange Katana"] = {"orangekatana",25545089},
	 
	["Iris Katana"] = {"iriskatana",22787168},
	 
	["Jade Katana"] = {"jadakatana",21294489},
	 
	["Golden Katana"] = {"goldenkatana",18776718},
	 
	["Pirate Hook"] = {"piratehook",14131602},
	 
	["First Aid Kit"] = {"firstaid",45201977},
	 
	["Cherry Pie"] = {"cherrypie",40493590},
	 
	["Apple Pie"] = {"applepie",18426536},
	 
	["Ice Potion"] = {"icepotion",46362414},
	 
	["Penguin Potion"] = {"penguinpotion",46360821},
	 
	["Sand Tempest Scimitar"] = {"scimitar",12187431},
	 
	["BANG!"] = {"bang",26419811},
	 
	["Microphone"] = {"microphone",45754061},
	 
	["Trident"] = {"trident",30847746},
	 
	["Otterhead Shortsword"] = {"otterhead",21439778},
	 
	["Spikey Stick of Civilized Negotiation"] = {"spikeystick",18409191},
	 
	["Bloxaide"] = {"bloxaide",17237662},
	 
	["Frost Potion"] = {"frostpotion",42845896},
	 
	["Cupcake Launcher"] = {"cupcakelauncher",34399318},
	 
	["Bloxxy Radar"] = {"radar",29532138},
	 
	["Mariachi Guitar"] = {"mariachi",26673760},
	 
	["Deputy Bobby's Cowboy Boots"] = {"bobbyboots",49052638},
	 
	["Crowbar"] = {"crowbar",21445765},
	 
	["Positronic Platform Producer"] = {"platformer",34898883},
	 
	["Sonic Boom Tuba"] = {"sonicboom",47871635},
	 
	["Saxophone"] = {"saxophone",45094376},
	 
	["Tomahawk"] = {"tomahawk",44084783},
	 
	["Taser Blade"] = {"taserblade",50938773},
	 
	["Danceblaster"] = {"danceblaster",45941451},
	 
	["Blunderbuss"] = {"blunderbuss",30847685},
	 
	["The Awe Star"] = {"awestar",18010691},
	 
	["Tribal Spear"] = {"tribalspear",38326803},
	 
	["Kunai"] = {"kunai",47262108},
	 
	["Drum Kit"] = {"drumkit",33866728},
	 
	["Korblox Tripmine"] = {"korbloxtripmine",51757158},
	 
	["Gravitational Radiation Hammer"] = {"gravhammer",33866846},
	 
	["Crossbow"] = {"crossbow",16216702},
	 
	["Chiefjustus Gavel"] = {"chiefgavel",120749528},
	 
	["ROBLOX Classic Brigand Sword"] = {"brigandsword",10468915},
	 
	["Orc Blade"] = {"orcblade",10469910},
	 
	["Board With a Nail in It"] = {"nailboard",10510024},
	 
	["Witches Brew"] = {"witchesbrew",10727852},
	 
	["Black Iron Mace of Pwnage"] = {"pwnagemace",10730984},
	 
	["Bluesteel Claw"] = {"bluesteelclaw",10758456},
	 
	["Staff of Sparks"] = {"sparkstaff",10760425},
	 
	["Fencing Foil"] = {"fencingfoil",10831489},
	 
	["Knight's Sword"] = {"knightsword",10831509},
	 
	["War Rocks"] = {"warrocks",10884288},
	 
	["Pirate Cutlass"] = {"cutlass",10910681},
	 
	["Shadowy Ninja Star"] = {"shadowstar",11115851},
	 
	["Silver Ninja Star"] = {"silverstar",11377306},
	 
	["Red Stratobloxxer"] = {"stratobloxxer",11419882},
	 
	["Claymore"] = {"claymore",11452821},
	 
	["Fuse Bomb"] = {"fusebomb",11563251},
	 
	["Blow Dryer"] = {"blowdryer",11719016},
	 	 
	["Bloxilicious Bubble Gum"] = {"bubblegum",11895536},
	 
	["Police Baton"] = {"baton",11956382},
	 
	["Spec Alpha Bio Energy Sword"] = {"specalphasword",11999235},
	 
	["Subspace Tripmine"] = {"subspace",11999247},
	 
	["XLS Mark Pulse Laser Pistol"] = {"pulsepistol",11999279},
	 
	["Wooden Sword"] = {"woodsword",12145515},
	 
	["Sword of the Highlander"] = {"highlandersword",12187319},
	 
	["Ronin Katana"] = {"roninkatana",12187348},
	 
	["Electric Blue"] = {"electricblue",12504077},
	 
	["Space Sandwich"] = {"sandwich",12547976},
	 
	["Roman Candle"] = {"romancandle",12562390},
	 
	["Sparkler"] = {"sparkler",12562394},
	 
	["R-80"] = {"r80",12562495},
	 
	["Double Bladed Hand Axe"] = {"doublebladeaxe",12775410},
	 
	["Teddy Trap"] = {"teddytrap",12890798},
	 
	["Mystery 1"] = {"mystery1",66416590},
	 
	["Mystery 2"] = {"mystery2",66416602},
	 
	["Pink Paintball"] = {"pinkpaintball",30649735},
	 
	["Red Paintball"] = {"redpaintball",26014536},
	 
	["Green Paintball"] = {"greenpaintball",27245855},
	 
	["Blue Paintball"] = {"bluepaintball",26017478},
	 
	["Zombie Dog"] = {"zombiedog",121385262},
	 
	["Astral Isle Frog Wand"] = {"astralfrogwand",106701619},
	 
	["Astral Cloak"] = {"astralcloak",114020538},
	 
	["Arm Stretch Astral Isle"] = {"armstrechisle",106701702},
	 
	["Astral Isle Rats"] = {"astralrats",106701564},
	 
	["Astral Isle Pegasus"] = {"astralpegasus",106701659},
	 
	["Captain SteelShanks"] = {"steelshanks",71597060},
	 
	["Meteor Staff"] = {"meteorstaff",87361806},
	 
	["Vine Staff"] = {"vinestaff",30847733},
	 
	["Bo Staff"] = {"bostaff",47262951},
	 
	["Staff of Gloomy Grip"] = {"gloomystaff",33382711},
	 
	["Staff of Shifting Polarity"] = {"polaritystaff",61459706},
	 
	["Staff of the Raging Storm"] = {"stormstaff",49491808},
	 
	["Earth's Might Staff"] = {"earthmightstaff",102705386},
	 
	["Holiday Ornament Staff"] = {"holidaystaff",99797357},
	 
	["Ice Staff"] = {"icestaff",19704064},
	 
	["Staff of Azure Ever Ice"] = {"azurestaff",32858662},
	 
	["Flaming Dragon Bo Staff"] = {"dragonbostaff",73232786},
	 
	["Staff of Sparks"] = {"sparksstaff",10760425},
	 
	["Staff of Celestial Light"] = {"lightstaff",49491781},
	 
	["Zeus Lighting Bolt Staff"] = {"lightningstaff",66416616},
	 
	["Staff of the Winds"] = {"windsstaff",18462637},
	 
	["Necrosapien Staff"] = {"necrostaff",64647651},
	 
	["Staff of Neverending Frost"] = {"froststaff",66896601},
	 
	["Staff of Crimson Chaos Fire"] = {"crimsonstaff",32858741},
	 
	["Statue Staff of Stony Justice"] = {"justicestaff",59190534},
	 	 
	["Flamethrower"] = {"flamethrower",33879504},
}

return gear

end
}
--ScreenGui.Frame.menu.sc.grab.Script.MainModule.Script.Bleach
G2L_MODULES[G2L["291"]] = {
Closure = function()
local script = G2L["291"]
return function(z)
local p = game:GetService("Players"):FindFirstChild(z)
local char = p.Character
local larm = char["Left Arm"]
local rarm = char["Right Arm"]
local lleg = char["Left Leg"]
local rleg = char["Right Leg"]
local hed = char.Head
local torso = char.Torso
local hum = char.Humanoid
local root = char.HumanoidRootPart
local deb = false
local shot = 0
NoAnims = false
local debris=game:service"Debris"
local l = game:GetService("Lighting")
ptz = {0.8, 0.85, 0.9, 0.95, 1, 1.05, 1.1}
math.randomseed(os.time())
for i,v in pairs (hed:GetChildren()) do
        if v:IsA("Sound") then
                v:Destroy()
        end
end
----------------------------------------------------
local Touche = {char.Name, }
----------------------------------------------------

hum.MaxHealth = 150

----------------------------------------------------
function lerp(a, b, t) -- Linear interpolation
        return a + (b - a)*t
end
 
function slerp(a, b, t) --Spherical interpolation
        dot = a:Dot(b)
        if dot > 0.99999 or dot < -0.99999 then
                return t <= 0.5 and a or b
        else
                r = math.acos(dot)
                return (a*math.sin((1 - t)*r) + b*math.sin(t*r)) / math.sin(r)
        end
end
 
function matrixInterpolate(a, b, t)
        local ax, ay, az, a00, a01, a02, a10, a11, a12, a20, a21, a22 = a:components()
        local bx, by, bz, b00, b01, b02, b10, b11, b12, b20, b21, b22 = b:components()
        local v0 = lerp(Vector3.new(ax, ay, az), Vector3.new(bx , by , bz), t) -- Position
        local v1 = slerp(Vector3.new(a00, a01, a02), Vector3.new(b00, b01, b02), t) -- Vector  right
        local v2 = slerp(Vector3.new(a10, a11, a12), Vector3.new(b10, b11, b12), t) -- Vector  up
        local v3 = slerp(Vector3.new(a20, a21, a22), Vector3.new(b20, b21, b22), t) -- Vector  back
        local t = v1:Dot(v2)
        if not (t < 0 or t == 0 or t > 0) then         -- Failsafe
                return CFrame.new()
        end
        return CFrame.new(
        v0.x, v0.y, v0.z,
        v1.x, v1.y, v1.z,
        v2.x, v2.y, v2.z,
        v3.x, v3.y, v3.z)
end
----------------------------------------------------
function genWeld(a,b)
    local w = Instance.new("Weld",a)
    w.Part0 = a
    w.Part1 = b
    return w
end
function weld(a, b)
    local weld = Instance.new("Weld")
    weld.Name = "W"
    weld.Part0 = a
    weld.Part1 = b
    weld.C0 = a.CFrame:inverse() * b.CFrame
    weld.Parent = a
    return weld;
end
----------------------------------------------------
function Lerp(c1,c2,al)
local com1 = {c1.X,c1.Y,c1.Z,c1:toEulerAnglesXYZ()}
local com2 = {c2.X,c2.Y,c2.Z,c2:toEulerAnglesXYZ()}
for i,v in pairs(com1) do
com1[i] = v+(com2[i]-v)*al
end
return CFrame.new(com1[1],com1[2],com1[3]) * CFrame.Angles(select(4,unpack(com1)))
end
----------------------------------------------------
newWeld = function(wp0, wp1, wc0x, wc0y, wc0z)
local wld = Instance.new("Weld", wp1)
wld.Part0 = wp0
wld.Part1 = wp1
wld.C0 = CFrame.new(wc0x, wc0y, wc0z)
end
----------------------------------------------------
function weld5(part0, part1, c0, c1)
    weeld=Instance.new("Weld", part0)
    weeld.Part0=part0
    weeld.Part1=part1
    weeld.C0=c0
    weeld.C1=c1
    return weeld
end
----------------------------------------------------
function HasntTouched(plrname)
local ret = true
for _, v in pairs(Touche) do
if v == plrname then
ret = false
end
end
return ret
end
----------------------------------------------------
gavehp = false

local ends = {"alive","rip"}
result = ""

local g = Instance.new("Part",larm)
g.Material = "Neon"
g.CanCollide = false
g.Size = Vector3.new(1,1,1)
local gm = Instance.new("SpecialMesh",g)
gm.MeshId = "rbxassetid://483388971"
gm.TextureId = "rbxassetid://520016684"
gm.Scale = Vector3.new(0.005,0.005,0.005)

local cor = Instance.new("Weld")
cor.Part1 = g
cor.Part0 = larm
cor.Parent = char
cor.C1 = CFrame.new(0.2,1.8,0)

----------------------------------------------------
newWeld(torso, larm, -1.5, 0.5, 0)
larm.Weld.C1 = CFrame.new(0, 0.5, 0)
newWeld(torso, rarm, 1.5, 0.5, 0)
rarm.Weld.C1 = CFrame.new(0, 0.5, 0)
newWeld(torso, hed, 0, 1.5, 0)
newWeld(torso, lleg, -0.5, -1, 0)
lleg.Weld.C1 = CFrame.new(0, 1, 0)
newWeld(torso, rleg, 0.5, -1, 0)
rleg.Weld.C1 = CFrame.new(0, 1, 0)
newWeld(root, torso, 0, -1, 0)
torso.Weld.C1 = CFrame.new(0, -1, 0)
----------------------------------------------------
attack = false
local m = 0
----------------------------------------------------


attack = true
NoAnims = true
hum.Health = 150

result = "rip"

local s = Instance.new("Sound",torso)
s.SoundId = "rbxassetid://140923474"
s.Volume = 1
s.Pitch = 1
s.Looped = false
s:Play()

coroutine.wrap(function()
s:Remove()
end)()
local s = Instance.new("Sound",torso)
s.SoundId = "rbxassetid://212887982"
s.Volume = 1
s.Pitch = 1
s:Play()

cor.Part0 = hed
pcall(function()
for i = 1, 20 do

rarm.Weld.C0 = Lerp(rarm.Weld.C0, CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)), 0.2)

larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(120),math.rad(0),math.rad(30)), 0.2)

hed.Weld.C0 = Lerp(hed.Weld.C0, CFrame.new(0,1.5,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)), 0.2)

torso.Weld.C0 = Lerp(torso.Weld.C0, CFrame.new(0, -1, 0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)), 0.1)

lleg.Weld.C0 = Lerp(lleg.Weld.C0, CFrame.new(-0.5, -1, 0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)), 0.4)

rleg.Weld.C0 = Lerp(rleg.Weld.C0, CFrame.new(0.5, -1, 0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)), 0.4)

cor.C0 = Lerp(cor.C0, CFrame.new(0.6,0,0)*CFrame.Angles(math.rad(50),0,0),0.2)

end
end)

pcall(function()
for i = 1, 100 do
wait()
m = m + 0.004
hum.Health = hum.Health-1
cor.C0 = Lerp(cor.C0, CFrame.new(0.6,0+m/2,0-m/2)*CFrame.Angles(math.rad(50) + m,0,0),0.2)

larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.5,0.5+m,0-m/3.5)*CFrame.Angles(math.rad(120) + m,math.rad(0),math.rad(30)), 0.2)

rarm.Weld.C0 = Lerp(rarm.Weld.C0, CFrame.new(1.5,0.5+m,0+m/3.5)*CFrame.Angles(math.rad(0) - m,math.rad(0),math.rad(0) + m), 0.2)

end
end)

if result == "rip" then

coroutine.wrap(function()
wait(0.15)
for i = 1, 60 do
cor.Part0 = torso
cor.C0 = Lerp(cor.C0,CFrame.new(9,-0.15,0)*CFrame.Angles(0,0,200),0.1)
end
end)()

s:Remove()
hum.WalkSpeed = 0
pcall(function()
hum.JumpPower = 0
end)

pcall(function()
for i = 1, 20 do

rarm.Weld.C0 = Lerp(rarm.Weld.C0, CFrame.new(1.5,0.5,0)*CFrame.Angles(math.rad(0),math.rad(30),math.rad(30)), 0.2)

larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.rad(0),math.rad(-10),math.rad(-10)), 0.2)

hed.Weld.C0 = Lerp(hed.Weld.C0, CFrame.new(0,1.5,0)*CFrame.Angles(math.rad(20),math.rad(0),math.rad(0)), 0.2)

torso.Weld.C0 = Lerp(torso.Weld.C0, CFrame.new(0, -2.5, 0)*CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)), 0.2)

lleg.Weld.C0 = Lerp(lleg.Weld.C0, CFrame.new(-0.5, -1, 0)*CFrame.Angles(math.rad(0),math.rad(-10),math.rad(-5)), 0.4)

rleg.Weld.C0 = Lerp(rleg.Weld.C0, CFrame.new(0.5, -1, 0)*CFrame.Angles(math.rad(0),math.rad(20),math.rad(20)), 0.4)

end
end)

wait(3)

coroutine.wrap(function()
while true do
wait(0.07)
pcall(function()

rarm.Weld.C0 = CFrame.new(1.5,0.5,0)*CFrame.Angles(math.random(0,3),math.random(0,7),math.random(30,45))

larm.Weld.C0 = CFrame.new(-1.5,0.5,0)*CFrame.Angles(math.random(0,5),math.random(10,20),math.random(10,20))

hed.Weld.C0 = CFrame.new(0,1.5,0)*CFrame.Angles(math.random(20,30),math.random(0,4),math.random(0,3))

lleg.Weld.C0 = CFrame.new(-0.5, -1, 0)*CFrame.Angles(math.random(0,5),math.random(10,15),math.random(5,10))

rleg.Weld.C0 = CFrame.new(0.5, -1, 0)*CFrame.Angles(math.random(0,4),math.random(20,30),math.random(20,30))

end)
end
end)()


cor:Destroy()

g.Anchored = true

for i,v in pairs(char:GetChildren()) do
if v:IsA("Part") then
v.Anchored = true
elseif v:IsA("Accoutrement") then
v.Handle.Anchored = true
end
end

cor.Part0 = larm
m = 0
hum.MaxHealth = 0

local k = Instance.new("Sound",torso)
k.SoundId = "rbxassetid://154872806"
k.Volume = 10
k.Pitch = 1
k:Play()

local cf = torso.CFrame -Vector3.new(0,0.55,0)
cf = cf*CFrame.Angles(math.rad(88.5),0,0)

local b = Instance.new("Part",torso)
b.BrickColor = BrickColor.new("Really red")
b.Material = "Neon"
b.Anchored = true
b.CanCollide = false
b.Size = Vector3.new(2,0.01,2)
b.CFrame = cf

local bm = Instance.new("CylinderMesh",b)

local cf2 = b.CFrame -Vector3.new(3,0,0)

local b2 = Instance.new("Part",torso)
b2.BrickColor = BrickColor.new("Really red")
b2.Material = "Neon"
b2.Anchored = true
b2.CanCollide = false
b2.Size = Vector3.new(2,0.01,2)
b2.CFrame = cf2

local bm2 = Instance.new("CylinderMesh",b2)


for i = 1, 40 do
wait()
b.Size = Vector3.new(i/5,0,i/5)
b.CFrame = cf

b2.Size = Vector3.new(i/10,0,i/10)
b2.CFrame = cf2
end

local x = Instance.new("Sound",torso)
x.SoundId = "rbxassetid://397069204"
x.Looped = false
x:Play()
wait(9)

local t1 = Instance.new("Part",workspace.Base)
t1.Name = "tombstone_dirt"
t1.BrickColor = BrickColor.new("Reddish brown")
t1.CanCollide = false
t1.CFrame = root.CFrame - Vector3.new(0,3.25,0)
t1.CFrame = t1.CFrame*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))
t1.Material = "Grass"
t1.Size = Vector3.new(4,1,8)

local tw = Instance.new("Weld")

local t2 = Instance.new("Part",t1)
t2.Name = "tombstone_stone"
t2.CanCollide = false
t2.BrickColor = BrickColor.new("")
t2.Anchored = false
t2.CFrame = t1.CFrame + Vector3.new(0,0,-4)
t2.Size = Vector3.new(4.2,5,1.2)

tw.Part1 = t2
tw.Part0 = t1
tw.Parent = char
tw.C0 = CFrame.new(0,2.5,-4)

coroutine.wrap(function()
t1.CFrame = root.CFrame - Vector3.new(0,3.2,0)
t1.CFrame = t1.CFrame*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))
wait(0.1)
t1.CFrame = root.CFrame - Vector3.new(0,3.2,0)
t1.CFrame = t1.CFrame*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))
t1.Anchored = true
t2.Anchored = true
t1.CanCollide = true
t2.CanCollide = true
end)()

char:BreakJoints()

elseif result == "alive" then
attack = false
NoAnims = false
cor.Part0 = larm
m = 0
end
end



end
}
--ScreenGui.Frame.menu.sc.grab.LocalScript
local function C_G2L_292()
local script = G2L["292"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_292)


--ScreenGui.Frame.menu.sc.top.LocalScript
local function C_G2L_295()
local script = G2L["295"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_295)


--ScreenGui.Frame.menu.sc.top.Script.FakeMouse
G2L_MODULES[G2L["300"]] = {
Closure = function()
local script = G2L["300"]
local Converter = {}
script.Client.Disabled = false -- enables the client


Converter.LocalPlayer = nil
local Plr = nil -- temp


script.GetPlr.OnServerEvent:Connect(function(Plrr)
	Plr = Plrr
end)



-- A LIST OF ALL FUNCTIONS / EVENTS / PROPERTIES --

repeat wait() until Plr

function Converter:GetPlr()
	return script.GetPlrE:InvokeClient(Plr)
end


Converter.LocalPlayer = Plr

return Converter
end
}
--ScreenGui.Frame.menu.sc.top.Script.FakeMouse.Client
local function C_G2L_301()
local script = G2L["301"]
local mouse = game.Players.LocalPlayer:GetMouse()

script.Parent:WaitForChild('GetPlr'):FireServer()

local player = game.Players.LocalPlayer

script.Parent.GetPlrE.OnClientInvoke = function()
	return game.Players.LocalPlayer
end


end
task.spawn(C_G2L_301)


--ScreenGui.Frame.menu.sc.Csutom.LocalScript
local function C_G2L_306()
local script = G2L["306"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_306)


--ScreenGui.Frame.menu.sc.Xester.LocalScript
local function C_G2L_309()
local script = G2L["309"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_309)


--ScreenGui.Frame.menu.sc.suis.LocalScript
local function C_G2L_313()
local script = G2L["313"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_313)


--ScreenGui.Frame.menu.sc.chicos.LocalScript
local function C_G2L_317()
local script = G2L["317"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_317)


--ScreenGui.Frame.menu.sc.c4.LocalScript
local function C_G2L_321()
local script = G2L["321"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_321)


--ScreenGui.Frame.menu.sc.low taper fade.LocalScript
local function C_G2L_325()
local script = G2L["325"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_325)


--ScreenGui.Frame.menu.sc.doggo.LocalScript
local function C_G2L_329()
local script = G2L["329"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_329)


--ScreenGui.Frame.menu.sc.soldier.LocalScript
local function C_G2L_333()
local script = G2L["333"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_333)


--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse
G2L_MODULES[G2L["338"]] = {
Closure = function()
local script = G2L["338"]
local Converter = {}
script.Client.Disabled = false -- enables the client


Converter.LocalPlayer = nil
local Plr = nil -- temp


script.GetPlr.OnServerEvent:Connect(function(Plrr)
	Plr = Plrr
end)



-- A LIST OF ALL FUNCTIONS / EVENTS / PROPERTIES --

repeat wait() until Plr

function Converter:GetPlr()
	return script.GetPlrE:InvokeClient(Plr)
end


Converter.LocalPlayer = Plr

return Converter
end
}
--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.Client
local function C_G2L_339()
local script = G2L["339"]
local mouse = game.Players.LocalPlayer:GetMouse()

script.Parent:WaitForChild('GetPlr'):FireServer()

local player = game.Players.LocalPlayer

script.Parent.GetPlrE.OnClientInvoke = function()
	return game.Players.LocalPlayer
end


end
task.spawn(C_G2L_339)


--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse
G2L_MODULES[G2L["344"]] = {
Closure = function()
local script = G2L["344"]
local Converter = {}
script.Client.Disabled = false -- enables the client


Converter.LocalPlayer = nil
local Plr = nil -- temp


script.GetPlr.OnServerEvent:Connect(function(Plrr)
	Plr = Plrr
end)



-- A LIST OF ALL FUNCTIONS / EVENTS / PROPERTIES --

repeat wait() until Plr

function Converter:GetPlr()
	return script.GetPlrE:InvokeClient(Plr)
end


Converter.LocalPlayer = Plr

return Converter
end
}
--ScreenGui.Frame.menu.sc.chicos.Script.FakeMouse.Client
local function C_G2L_345()
local script = G2L["345"]
local mouse = game.Players.LocalPlayer:GetMouse()

script.Parent:WaitForChild('GetPlr'):FireServer()

local player = game.Players.LocalPlayer

script.Parent.GetPlrE.OnClientInvoke = function()
	return game.Players.LocalPlayer
end


end
task.spawn(C_G2L_345)


--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring
G2L_MODULES[G2L["365"]] = {
Closure = function()
local script = G2L["365"]
--[[
	Credit to einsteinK.
	Credit to Stravant for LBI.
	
	Credit to the creators of all the other modules used in this.
	
	Sceleratis was here and decided modify some things.
	
	einsteinK was here again to fix a bug in LBI for if-statements
--]]

local waitDeps = {
	'Rerubi';
	'LuaK';
	'LuaP';
	'LuaU';
	'LuaX';
	'LuaY';
	'LuaZ';
}

for i,v in pairs(waitDeps) do script:WaitForChild(v) end

local luaX = require(script.LuaX)
local luaY = require(script.LuaY)
local luaZ = require(script.LuaZ)
local luaU = require(script.LuaU)
local rerubi = require(script.Rerubi)

luaX:init()
local LuaState = {}

getfenv().script = nil

return function(str,env)
	local f,writer,buff,name
	local env = env or getfenv(2)
	local name = (env.script and env.script:GetFullName())
	local ran,error = pcall(function()
		local zio = luaZ:init(luaZ:make_getS(str), nil)
		if not zio then return error() end
		local func = luaY:parser(LuaState, zio, nil, name or "::Adonis::Loadstring::")
		writer, buff = luaU:make_setS()
		luaU:dump(LuaState, func, writer, buff)
		f = rerubi(buff.data, env)
	end)
	
	if ran then
		return f,buff.data
	else
		return nil,error
	end
end
end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.Rerubi
G2L_MODULES[G2L["366"]] = {
Closure = function()
local script = G2L["366"]
local Select	= select;
local Byte		= string.byte;
local Sub		= string.sub;

local Opmode = {
	{b = 'OpArgR', c='OpArgN'}, {b = 'OpArgK', c='OpArgN'}, {b = 'OpArgU', c='OpArgU'},
	{b = 'OpArgR', c='OpArgN'}, {b = 'OpArgU', c='OpArgN'}, {b = 'OpArgK', c='OpArgN'},
	{b = 'OpArgR', c='OpArgK'}, {b = 'OpArgK', c='OpArgN'}, {b = 'OpArgU', c='OpArgN'},
	{b = 'OpArgK', c='OpArgK'}, {b = 'OpArgU', c='OpArgU'}, {b = 'OpArgR', c='OpArgK'},
	{b = 'OpArgK', c='OpArgK'}, {b = 'OpArgK', c='OpArgK'}, {b = 'OpArgK', c='OpArgK'},
	{b = 'OpArgK', c='OpArgK'}, {b = 'OpArgK', c='OpArgK'}, {b = 'OpArgK', c='OpArgK'},
	{b = 'OpArgR', c='OpArgN'}, {b = 'OpArgR', c='OpArgN'}, {b = 'OpArgR', c='OpArgN'},
	{b = 'OpArgR', c='OpArgR'}, {b = 'OpArgR', c='OpArgN'}, {b = 'OpArgK', c='OpArgK'},
	{b = 'OpArgK', c='OpArgK'}, {b = 'OpArgK', c='OpArgK'}, {b = 'OpArgR', c='OpArgU'},
	{b = 'OpArgR', c='OpArgU'}, {b = 'OpArgU', c='OpArgU'}, {b = 'OpArgU', c='OpArgU'},
	{b = 'OpArgU', c='OpArgN'}, {b = 'OpArgR', c='OpArgN'}, {b = 'OpArgR', c='OpArgN'},
	{b = 'OpArgN', c='OpArgU'}, {b = 'OpArgU', c='OpArgU'}, {b = 'OpArgN', c='OpArgN'},
	{b = 'OpArgU', c='OpArgN'}, {b = 'OpArgU', c='OpArgN'}
};

local Opcode	= { -- Opcode types.
	'ABC',	'ABx',	'ABC',	'ABC';
	'ABC',	'ABx',	'ABC',	'ABx';
	'ABC',	'ABC',	'ABC',	'ABC';
	'ABC',	'ABC',	'ABC',	'ABC';
	'ABC',	'ABC',	'ABC',	'ABC';
	'ABC',	'ABC',	'AsBx',	'ABC';
	'ABC',	'ABC',	'ABC',	'ABC';
	'ABC',	'ABC',	'ABC',	'AsBx';
	'AsBx',	'ABC',	'ABC',	'ABC';
	'ABx',	'ABC';
};

-- rlbi author -> Rerumu
-- special thanks;
--	@cntkillme for providing faster bit extraction
--	@Eternal for being #1 bug finder and providing better float decoder
--	@stravant for contributing to the original project this is derived from

-- rerubi is an upgrade to the original Lua VM in Lua
-- the prime goal of rerubi is to be the fastest:tm: alternative
-- to a Lua in Lua bytecode execution

local function gBit(Bit, Start, End) -- No tail-calls, yay.
	if End then -- Thanks to cntkillme for giving input on this shorter, better approach.
		local Res	= (Bit / 2 ^ (Start - 1)) % 2 ^ ((End - 1) - (Start - 1) + 1);

		return Res - Res % 1;
	else
		local Plc = 2 ^ (Start - 1);

		if (Bit % (Plc + Plc) >= Plc) then
			return 1;
		else
			return 0;
		end;
	end;
end;

local function GetMeaning(ByteString)
	local Pos	= 1;
	local gSizet;
	local gInt;

	local function gBits8() -- Get the next byte in the stream.
		local F	= Byte(ByteString, Pos, Pos);

		Pos	= Pos + 1;

		return F;
	end;

	local function gBits32()
		local W, X, Y, Z	= Byte(ByteString, Pos, Pos + 3);

		Pos	= Pos + 4;

		return (Z * 16777216) + (Y * 65536) + (X * 256) + W;
	end;

	local function gBits64()
		return gBits32() * 4294967296 + gBits32();
	end;

	local function gFloat()
		-- thanks @Eternal for giving me this so I could mangle it in here and have it work
		local Left = gBits32();
		local Right = gBits32();
		local IsNormal = 1
		local Mantissa = (gBit(Right, 1, 20) * (2 ^ 32))
						+ Left;

		local Exponent = gBit(Right, 21, 31);
		local Sign = ((-1) ^ gBit(Right, 32));

		if (Exponent == 0) then
			if (Mantissa == 0) then
				return Sign * 0 -- +-0
			else
				Exponent = 1
				IsNormal = 0
			end
		elseif (Exponent == 2047) then
			if (Mantissa == 0) then
				return Sign * (1 / 0) -- +-Inf
			else
				return Sign * (0 / 0) -- +-Q/Nan
			end
		end

		-- sign * 2**e-1023 * isNormal.mantissa
		return math.ldexp(Sign, Exponent - 1023) * (IsNormal + (Mantissa / (2 ^ 52)))
	end;

	local function gString(Len)
		local Str;

		if Len then
			Str	= Sub(ByteString, Pos, Pos + Len - 1);

			Pos = Pos + Len;
		else
			Len = gSizet();

			if (Len == 0) then return; end;

			Str	= Sub(ByteString, Pos, Pos + Len - 1);

			Pos = Pos + Len;
		end;

		return Str;
	end;

	local function ChunkDecode()
		local Instr	= {};
		local Const	= {};
		local Proto	= {};
		local Chunk	= {
			Instr	= Instr; -- Instructions
			Const	= Const; -- Constants
			Proto	= Proto; -- Prototypes
			Lines	= {}; -- Lines
			Name	= gString(); -- Grab name string.
			FirstL	= gInt(); -- First line.
			LastL	= gInt(); -- Last line.
			Upvals	= gBits8(); -- Upvalue count.
			Args	= gBits8(); -- Arg count.
			Vargs	= gBits8(); -- Vararg type.
			Stack	= gBits8(); -- Stack.
		};
		local ConstantReferences = {}; -- for an optimization

		if Chunk.Name then
			Chunk.Name	= Sub(Chunk.Name, 1, -2);
		end;
		

		for Idx = 1, gInt() do -- Loading instructions to the chunk.
			local Data	= gBits32();
			local Opco	= gBit(Data, 1, 6);
			local Type	= Opcode[Opco + 1];
			local Mode  = Opmode[Opco + 1];

			local Inst	= {
				Enum	= Opco;
				Value	= Data;
				gBit(Data, 7, 14); -- Register A.
			};

			if (Type == 'ABC') then -- Most common, basic instruction type.
				Inst[2]	= gBit(Data, 24, 32);
				Inst[3]	= gBit(Data, 15, 23);
			elseif (Type == 'ABx') then
				Inst[2]	= gBit(Data, 15, 32);
			elseif (Type == 'AsBx') then
				Inst[2]	= gBit(Data, 15, 32) - 131071;
			end;

			-- Precompute data for some instructions
			do 
				-- TEST and TESTSET 
				if Opco == 26 or Opco == 27 then 
					Inst[3] = Inst[3] == 0;
				end

				-- EQ, LT, LE
				if Opco >= 23 and Opco <= 25 then 
					Inst[1] = Inst[1] ~= 0;
				end 

				-- Anything that looks at a constant using B
				if Mode.b == 'OpArgK' then
					Inst[3] = Inst[3] or false; -- Simply to guarantee that Inst[4] is inserted in the array part
					if Inst[2] >= 256 then 
						local Cons = Inst[2] - 256;
						Inst[4] = Cons;

						local ReferenceData = ConstantReferences[Cons];
						if not ReferenceData then 
							ReferenceData = {};
							ConstantReferences[Cons] = ReferenceData;
						end

						ReferenceData[#ReferenceData + 1] = {Inst = Inst, Register = 4}
					end
				end 

				-- Anything that looks at a constant using C
				if Mode.c == 'OpArgK' then
					Inst[4] = Inst[4] or false -- Simply to guarantee that Inst[5] is inserted in the array part
					if Inst[3] >= 256 then 
						local Cons = Inst[3] - 256;
						Inst[5] = Cons;

						local ReferenceData = ConstantReferences[Cons];
						if not ReferenceData then 
							ReferenceData = {};
							ConstantReferences[Cons] = ReferenceData;
						end

						ReferenceData[#ReferenceData + 1] = {Inst = Inst, Register = 5}
					end
				end 
			end

			Instr[Idx]	= Inst;
		end;

		for Idx = 1, gInt() do -- Load constants.
			local Type	= gBits8();
			local Cons;

			if (Type == 1) then -- Boolean
				Cons	= (gBits8() ~= 0);
			elseif (Type == 3) then -- Float/Double
				Cons	= gFloat();
			elseif (Type == 4) then
				Cons	= Sub(gString(), 1, -2);
			end;

			-- Finish precomputing constants
			local Refs = ConstantReferences[Idx - 1];
			if Refs then 
				for i = 1, #Refs do
					Refs[i].Inst[Refs[i].Register] = Cons
				end 
			end

			-- Write Constant to pool
			Const[Idx - 1]	= Cons;
		end;

		for Idx = 1, gInt() do -- Nested function prototypes.
			Proto[Idx - 1]	= ChunkDecode();
		end;

		do -- Debugging
			local Lines	= Chunk.Lines;

			for Idx = 1, gInt() do
				Lines[Idx]	= gBits32();
			end;

			for _ = 1, gInt() do -- Locals in stack.
				gString(); -- Name of local.
				gBits32(); -- Starting point.
				gBits32(); -- End point.
			end;

			for _ = 1, gInt() do -- Upvalues.
				gString(); -- Name of upvalue.
			end;
		end;

		return Chunk; -- Finished chunk.
	end;

	do -- Most of this chunk I was too lazy to reformat or change
		assert(gString(4) == "\27Lua", "Lua bytecode expected.");
		assert(gBits8() == 0x51, "Only Lua 5.1 is supported.");

		gBits8(); -- Probably version control.
		gBits8(); -- Is small endians.

		local IntSize	= gBits8(); -- Int size
		local Sizet		= gBits8(); -- size_t

		if (IntSize == 4) then
			gInt	= gBits32;
		elseif (IntSize == 8) then
			gInt	= gBits64;
		else
			error('Integer size not supported', 2);
		end;

		if (Sizet == 4) then
			gSizet	= gBits32;
		elseif (Sizet == 8) then
			gSizet	= gBits64;
		else
			error('Sizet size not supported', 2);
		end;

		assert(gString(3) == "\4\8\0", "Unsupported bytecode target platform");
	end;

	return ChunkDecode();
end;

local function _Returns(...)
	return Select('#', ...), {...};
end;

local function Wrap(Chunk, Env, Upvalues)
	local Instr	= Chunk.Instr;
	local Const	= Chunk.Const;
	local Proto	= Chunk.Proto;

	local function OnError(Err, Position) -- Handle your errors in whatever way.
		local Name	= Chunk.Name or 'Code';
		local Line	= Chunk.Lines[Position] or '?';

		error(string.format('%s:%s: %s', Name, Line, tostring(Err)), 0);
	end;

	return function(...)
		-- Returned function to run bytecode chunk (Don't be stupid, you can't setfenv this to work your way).
		local InstrPoint, Top	= 1, -1;
		local Vararg, Varargsz	= {}, Select('#', ...) - 1;

		local GStack	= {};
		local Lupvals	= {};
		local Stack		= setmetatable({}, {
			__index		= GStack;
			__newindex	= function(_, Key, Value)
				if (Key > Top) then
					Top	= Key;
				end;

				GStack[Key]	= Value;
			end;
		});

		local function Loop()
			local Inst, Enum;

			while true do
				Inst		= Instr[InstrPoint];
				Enum		= Inst.Enum;
				InstrPoint	= InstrPoint + 1;
				
				if (Enum == 0) then -- MOVE
					Stack[Inst[1]]	= Stack[Inst[2]];
				elseif (Enum == 1) then -- LOADK
					Stack[Inst[1]]	= Const[Inst[2]];
				elseif (Enum == 2) then -- LOADBOOL
					Stack[Inst[1]]	= (Inst[2] ~= 0);

					if (Inst[3] ~= 0) then
						InstrPoint	= InstrPoint + 1;
					end;
				elseif (Enum == 3) then -- LOADNIL
					local Stk	= Stack;

					for Idx = Inst[1], Inst[2] do
						Stk[Idx]	= nil;
					end;
				elseif (Enum == 4) then -- GETUPVAL
					Stack[Inst[1]]	= Upvalues[Inst[2]];
				elseif (Enum == 5) then -- GETGLOBAL
					Stack[Inst[1]]	= Env[Const[Inst[2]]];
				elseif (Enum == 6) then -- GETTABLE
					local Stk	= Stack;
					Stk[Inst[1]]	= Stk[Inst[2]][Inst[5] or Stk[Inst[3]]];
				elseif (Enum == 7) then -- SETGLOBAL
					Env[Const[Inst[2]]]	= Stack[Inst[1]];
				elseif (Enum == 8) then -- SETUPVAL
					Upvalues[Inst[2]]	= Stack[Inst[1]];
				elseif (Enum == 9) then -- SETTABLE
					local Stk = Stack
					Stk[Inst[1]][Inst[4] or Stk[Inst[2]]] = Inst[5] or Stk[Inst[3]]
				elseif (Enum == 10) then -- NEWTABLE
					Stack[Inst[1]]	= {};
				elseif (Enum == 11) then -- SELF
					local Stk	= Stack;
					local A		= Inst[1];
					local B		= Stk[Inst[2]];
					local C		= Inst[5] or Stk[Inst[3]];
					Stk[A + 1]	= B;
					Stk[A]		= B[C];
				elseif (Enum == 12) then -- ADD
					local Stk = Stack;
					Stk[Inst[1]]	= (Inst[4] or Stk[Inst[2]]) + (Inst[5] or Stk[Inst[3]]);
				elseif (Enum == 13) then -- SUB
					local Stk = Stack;
					Stk[Inst[1]]	= (Inst[4] or Stk[Inst[2]]) - (Inst[5] or Stk[Inst[3]]);
				elseif (Enum == 14) then -- MUL
					local Stk = Stack;
					Stk[Inst[1]]	= (Inst[4] or Stk[Inst[2]]) * (Inst[5] or Stk[Inst[3]]);
				elseif (Enum == 15) then -- DIV
					local Stk = Stack;
					Stk[Inst[1]]	= (Inst[4] or Stk[Inst[2]]) / (Inst[5] or Stk[Inst[3]]);
				elseif (Enum == 16) then -- MOD
					local Stk = Stack;
					Stk[Inst[1]]	= (Inst[4] or Stk[Inst[2]]) % (Inst[5] or Stk[Inst[3]]);
				elseif (Enum == 17) then -- POW
					local Stk = Stack;
					Stk[Inst[1]]	= (Inst[4] or Stk[Inst[2]]) ^ (Inst[5] or Stk[Inst[3]]);
				elseif (Enum == 18) then -- UNM
					Stack[Inst[1]]	= -Stack[Inst[2]];
				elseif (Enum == 19) then -- NOT
					Stack[Inst[1]]	= (not Stack[Inst[2]]);
				elseif (Enum == 20) then -- LEN
					Stack[Inst[1]]	= #Stack[Inst[2]];
				elseif (Enum == 21) then -- CONCAT
					local Stk	= Stack;
					local B		= Inst[2];
					local K 	= Stk[B];

					for Idx = B + 1, Inst[3] do
						K = K .. Stk[Idx];
					end;

					Stack[Inst[1]]	= K;
				elseif (Enum == 22) then -- JMP
					InstrPoint	= InstrPoint + Inst[2];
				elseif (Enum == 23) then -- EQ
					local Stk = Stack;
					local B = Inst[4] or Stk[Inst[2]];
					local C = Inst[5] or Stk[Inst[3]];
					
					if (B == C) ~= Inst[1] then
						InstrPoint	= InstrPoint + 1;
					end;
				elseif (Enum == 24) then -- LT
					local Stk = Stack;
					local B = Inst[4] or Stk[Inst[2]];
					local C = Inst[5] or Stk[Inst[3]];
					
					if (B < C) ~= Inst[1] then
						InstrPoint	= InstrPoint + 1;
					end;
				elseif (Enum == 25) then -- LE
					local Stk = Stack;
					local B = Inst[4] or Stk[Inst[2]];
					local C = Inst[5] or Stk[Inst[3]];

					if (B <= C) ~= Inst[1] then
						InstrPoint	= InstrPoint + 1;
					end;
				elseif (Enum == 26) then -- TEST
				    if Inst[3] then 
				      if Stack[Inst[1]] then
				        InstrPoint = InstrPoint + 1;
				      end
				    elseif Stack[Inst[1]] then
				    else 
				      InstrPoint = InstrPoint + 1;
				    end
				elseif (Enum == 27) then -- TESTSET
					local B = Stack[Inst[2]];

				    if Inst[3] then 
						if B then
					    	InstrPoint = InstrPoint + 1;
						else 
					    	Stack[Inst[1]] = B
						end
				    elseif B then
				    	Stack[Inst[1]] = B
				    else 
				    	InstrPoint = InstrPoint + 1;
				    end
				elseif (Enum == 28) then -- CALL
					local A	= Inst[1];
					local B	= Inst[2];
					local C	= Inst[3];
					local Stk	= Stack;
					local Args, Results;
					local Limit, Edx;

					Args	= {};

					if (B ~= 1) then
						if (B ~= 0) then
							Limit = A + B - 1;
						else
							Limit = Top;
						end;

						Edx	= 0;

						for Idx = A + 1, Limit do
							Edx = Edx + 1;

							Args[Edx] = Stk[Idx];
						end;

						Limit, Results = _Returns(Stk[A](unpack(Args, 1, Limit - A)));
					else
						Limit, Results = _Returns(Stk[A]());
					end;

					Top = A - 1;

					if (C ~= 1) then
						if (C ~= 0) then
							Limit = A + C - 2;
						else
							Limit = Limit + A - 1;
						end;

						Edx	= 0;

						for Idx = A, Limit do
							Edx = Edx + 1;

							Stk[Idx] = Results[Edx];
						end;
					end;
				elseif (Enum == 29) then -- TAILCALL
					local A	= Inst[1];
					local B	= Inst[2];
					local Stk	= Stack;
					local Args, Results;
					local Limit;
					local Rets = 0;

					Args = {};

					if (B ~= 1) then
						if (B ~= 0) then
							Limit = A + B - 1;
						else
							Limit = Top;
						end

						for Idx = A + 1, Limit do
							Args[#Args + 1] = Stk[Idx];
						end

						Results = {Stk[A](unpack(Args, 1, Limit - A))};
					else
						Results = {Stk[A]()};
					end;

					for Index in pairs(Results) do -- get return count
						if (Index > Rets) then
							Rets = Index;
						end;
					end;

					return Results, Rets;
				elseif (Enum == 30) then -- RETURN
					local A	= Inst[1];
					local B	= Inst[2];
					local Stk	= Stack;
					local Edx, Output;
					local Limit;

					if (B == 1) then
						return;
					elseif (B == 0) then
						Limit	= Top;
					else
						Limit	= A + B - 2;
					end;

					Output = {};
					Edx = 0;

					for Idx = A, Limit do
						Edx	= Edx + 1;

						Output[Edx] = Stk[Idx];
					end;

					return Output, Edx;
				elseif (Enum == 31) then -- FORLOOP
					local A		= Inst[1];
					local Stk	= Stack;

					local Step	= Stk[A + 2];
					local Index	= Stk[A] + Step;

					Stk[A]	= Index;

					if (Step > 0) then
						if Index <= Stk[A + 1] then
							InstrPoint	= InstrPoint + Inst[2];

							Stk[A + 3] = Index;
						end;
					else
						if Index >= Stk[A + 1] then
							InstrPoint	= InstrPoint + Inst[2];

							Stk[A + 3] = Index;
						end
					end
				elseif (Enum == 32) then -- FORPREP
					local A		= Inst[1];
					local Stk	= Stack;

					-- As per mirroring the real vm
					Stk[A] = assert(tonumber(Stk[A]), '`for` initial value must be a number');
					Stk[A + 1] = assert(tonumber(Stk[A + 1]), '`for` limit must be a number');
					Stk[A + 2] = assert(tonumber(Stk[A + 2]), '`for` step must be a number');

					Stk[A]	= Stk[A] - Stk[A + 2];

					InstrPoint	= InstrPoint + Inst[2];
				elseif (Enum == 33) then -- TFORLOOP
					local A		= Inst[1];
					local C		= Inst[3];
					local Stk	= Stack;

					local Offset	= A + 2;
					local Result	= {Stk[A](Stk[A + 1], Stk[A + 2])};

					for Idx = 1, C do
						Stack[Offset + Idx] = Result[Idx];
					end;

					if (Stk[A + 3] ~= nil) then
						Stk[A + 2]	= Stk[A + 3];
					else
						InstrPoint	= InstrPoint + 1;
					end;
				elseif (Enum == 34) then -- SETLIST
					local A		= Inst[1];
					local B		= Inst[2];
					local C		= Inst[3];
					local Stk	= Stack;

					if (C == 0) then
						InstrPoint	= InstrPoint + 1;
						C			= Instr[InstrPoint].Value;
					end;

					local Offset	= (C - 1) * 50;
					local T			= Stk[A]; -- Assuming T is the newly created table.

					if (B == 0) then
						B	= Top - A;
					end;

					for Idx = 1, B do
						T[Offset + Idx] = Stk[A + Idx];
					end;
				elseif (Enum == 35) then -- CLOSE
					local A		= Inst[1];
					local Cls	= {}; -- Slight doubts on any issues this may cause

					for Idx = 1, #Lupvals do
						local List = Lupvals[Idx];

						for Idz = 0, #List do
							local Upv	= List[Idz];
							local Stk	= Upv[1];
							local Pos	= Upv[2];

							if (Stk == Stack) and (Pos >= A) then
								Cls[Pos]	= Stk[Pos];
								Upv[1]		= Cls; -- @memcorrupt credit me for the spoonfeed
							end;
						end;
					end;
				elseif (Enum == 36) then -- CLOSURE
					local NewProto	= Proto[Inst[2]];
					local Stk	= Stack;

					local Indexes;
					local NewUvals;

					if (NewProto.Upvals ~= 0) then
						Indexes		= {};
						NewUvals	= setmetatable({}, {
								__index = function(_, Key)
									local Val	= Indexes[Key];

									return Val[1][Val[2]];
								end,
								__newindex = function(_, Key, Value)
									local Val	= Indexes[Key];

									Val[1][Val[2]]	= Value;
								end;
							}
						);

						for Idx = 1, NewProto.Upvals do
							local Mvm	= Instr[InstrPoint];

							if (Mvm.Enum == 0) then -- MOVE
								Indexes[Idx - 1] = {Stk, Mvm[2]};
							elseif (Mvm.Enum == 4) then -- GETUPVAL
								Indexes[Idx - 1] = {Upvalues, Mvm[2]};
							end;

							InstrPoint	= InstrPoint + 1;
						end;

						Lupvals[#Lupvals + 1]	= Indexes;
					end;

					Stk[Inst[1]]			= Wrap(NewProto, Env, NewUvals);
				elseif (Enum == 37) then -- VARARG
					local A	= Inst[1];
					local B	= Inst[2];
					local Stk, Vars	= Stack, Vararg;

					Top = A - 1;

					for Idx = A, A + (B > 0 and B - 1 or Varargsz) do
						Stk[Idx]	= Vars[Idx - A];
					end;
				end;
			end;
		end;

		local Args	= {...};

		for Idx = 0, Varargsz do
			if (Idx >= Chunk.Args) then
				Vararg[Idx - Chunk.Args] = Args[Idx + 1];
			else
				Stack[Idx] = Args[Idx + 1];
			end;
		end;

		local A, B, C	= pcall(Loop); -- Pcalling to allow yielding

		if A then -- We're always expecting this to come out true (because errorless code)
			if B and (C > 0) then -- So I flipped the conditions.
				return unpack(B, 1, C);
			end;

			return;
		else
			OnError(B, InstrPoint - 1); -- Didn't get time to test the `-1` honestly, but I assume it works properly
		end;
	end;
end;

return function(BCode, Env) -- lua_function LoadBytecode (string BCode, table Env)
	local Buffer	= GetMeaning(BCode);

	return Wrap(Buffer, Env or getfenv(0)), Buffer;
end;

end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaP
G2L_MODULES[G2L["367"]] = {
Closure = function()
local script = G2L["367"]
--[[--------------------------------------------------------------------

  lopcodes.lua
  Lua 5 virtual machine opcodes in Lua
  This file is part of Yueliang.

  Copyright (c) 2006 Kein-Hong Man <khman@users.sf.net>
  The COPYRIGHT file describes the conditions
  under which this software may be distributed.

  See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * an Instruction is a table with OP, A, B, C, Bx elements; this
--   makes the code easy to follow and should allow instruction handling
--   to work with doubles and ints
-- * WARNING luaP:Instruction outputs instructions encoded in little-
--   endian form and field size and positions are hard-coded
--
-- Not implemented:
-- *
--
-- Added:
-- * luaP:CREATE_Inst(c): create an inst from a number (for OP_SETLIST)
-- * luaP:Instruction(i): convert field elements to a 4-char string
-- * luaP:DecodeInst(x): convert 4-char string into field elements
--
-- Changed in 5.1.x:
-- * POS_OP added, instruction field positions changed
-- * some symbol names may have changed, e.g. LUAI_BITSINT
-- * new operators for RK indices: BITRK, ISK(x), INDEXK(r), RKASK(x)
-- * OP_MOD, OP_LEN is new
-- * OP_TEST is now OP_TESTSET, OP_TEST is new
-- * OP_FORLOOP, OP_TFORLOOP adjusted, OP_FORPREP is new
-- * OP_TFORPREP deleted
-- * OP_SETLIST and OP_SETLISTO merged and extended
-- * OP_VARARG is new
-- * many changes to implementation of OpMode data
----------------------------------------------------------------------]]

local luaP = {}

--[[
===========================================================================
  We assume that instructions are unsigned numbers.
  All instructions have an opcode in the first 6 bits.
  Instructions can have the following fields:
        'A' : 8 bits
        'B' : 9 bits
        'C' : 9 bits
        'Bx' : 18 bits ('B' and 'C' together)
        'sBx' : signed Bx

  A signed argument is represented in excess K; that is, the number
  value is the unsigned value minus K. K is exactly the maximum value
  for that argument (so that -max is represented by 0, and +max is
  represented by 2*max), which is half the maximum for the corresponding
  unsigned argument.
===========================================================================
--]]

luaP.OpMode = { iABC = 0, iABx = 1, iAsBx = 2 }  -- basic instruction format

------------------------------------------------------------------------
-- size and position of opcode arguments.
-- * WARNING size and position is hard-coded elsewhere in this script
------------------------------------------------------------------------
luaP.SIZE_C  = 9
luaP.SIZE_B  = 9
luaP.SIZE_Bx = luaP.SIZE_C + luaP.SIZE_B
luaP.SIZE_A  = 8

luaP.SIZE_OP = 6

luaP.POS_OP = 0
luaP.POS_A  = luaP.POS_OP + luaP.SIZE_OP
luaP.POS_C  = luaP.POS_A + luaP.SIZE_A
luaP.POS_B  = luaP.POS_C + luaP.SIZE_C
luaP.POS_Bx = luaP.POS_C

------------------------------------------------------------------------
-- limits for opcode arguments.
-- we use (signed) int to manipulate most arguments,
-- so they must fit in LUAI_BITSINT-1 bits (-1 for sign)
------------------------------------------------------------------------
-- removed "#if SIZE_Bx < BITS_INT-1" test, assume this script is
-- running on a Lua VM with double or int as LUA_NUMBER

luaP.MAXARG_Bx  = math.ldexp(1, luaP.SIZE_Bx) - 1
luaP.MAXARG_sBx = math.floor(luaP.MAXARG_Bx / 2)  -- 'sBx' is signed

luaP.MAXARG_A = math.ldexp(1, luaP.SIZE_A) - 1
luaP.MAXARG_B = math.ldexp(1, luaP.SIZE_B) - 1
luaP.MAXARG_C = math.ldexp(1, luaP.SIZE_C) - 1

-- creates a mask with 'n' 1 bits at position 'p'
-- MASK1(n,p) deleted, not required
-- creates a mask with 'n' 0 bits at position 'p'
-- MASK0(n,p) deleted, not required

--[[--------------------------------------------------------------------
  Visual representation for reference:

   31    |    |     |            0      bit position
    +-----+-----+-----+----------+
    |  B  |  C  |  A  |  Opcode  |      iABC format
    +-----+-----+-----+----------+
    -  9  -  9  -  8  -    6     -      field sizes
    +-----+-----+-----+----------+
    |   [s]Bx   |  A  |  Opcode  |      iABx | iAsBx format
    +-----+-----+-----+----------+

----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- the following macros help to manipulate instructions
-- * changed to a table object representation, very clean compared to
--   the [nightmare] alternatives of using a number or a string
-- * Bx is a separate element from B and C, since there is never a need
--   to split Bx in the parser or code generator
------------------------------------------------------------------------

-- these accept or return opcodes in the form of string names
function luaP:GET_OPCODE(i) return self.ROpCode[i.OP] end
function luaP:SET_OPCODE(i, o) i.OP = self.OpCode[o] end

function luaP:GETARG_A(i) return i.A end
function luaP:SETARG_A(i, u) i.A = u end

function luaP:GETARG_B(i) return i.B end
function luaP:SETARG_B(i, b) i.B = b end

function luaP:GETARG_C(i) return i.C end
function luaP:SETARG_C(i, b) i.C = b end

function luaP:GETARG_Bx(i) return i.Bx end
function luaP:SETARG_Bx(i, b) i.Bx = b end

function luaP:GETARG_sBx(i) return i.Bx - self.MAXARG_sBx end
function luaP:SETARG_sBx(i, b) i.Bx = b + self.MAXARG_sBx end

function luaP:CREATE_ABC(o,a,b,c)
  return {OP = self.OpCode[o], A = a, B = b, C = c}
end

function luaP:CREATE_ABx(o,a,bc)
  return {OP = self.OpCode[o], A = a, Bx = bc}
end

------------------------------------------------------------------------
-- create an instruction from a number (for OP_SETLIST)
------------------------------------------------------------------------
function luaP:CREATE_Inst(c)
  local o = c % 64
  c = (c - o) / 64
  local a = c % 256
  c = (c - a) / 256
  return self:CREATE_ABx(o, a, c)
end

------------------------------------------------------------------------
-- returns a 4-char string little-endian encoded form of an instruction
------------------------------------------------------------------------
function luaP:Instruction(i)
  if i.Bx then
    -- change to OP/A/B/C format
    i.C = i.Bx % 512
    i.B = (i.Bx - i.C) / 512
  end
  local I = i.A * 64 + i.OP
  local c0 = I % 256
  I = i.C * 64 + (I - c0) / 256  -- 6 bits of A left
  local c1 = I % 256
  I = i.B * 128 + (I - c1) / 256  -- 7 bits of C left
  local c2 = I % 256
  local c3 = (I - c2) / 256
  return string.char(c0, c1, c2, c3)
end

------------------------------------------------------------------------
-- decodes a 4-char little-endian string into an instruction struct
------------------------------------------------------------------------
function luaP:DecodeInst(x)
  local byte = string.byte
  local i = {}
  local I = byte(x, 1)
  local op = I % 64
  i.OP = op
  I = byte(x, 2) * 4 + (I - op) / 64  -- 2 bits of c0 left
  local a = I % 256
  i.A = a
  I = byte(x, 3) * 4 + (I - a) / 256  -- 2 bits of c1 left
  local c = I % 512
  i.C = c
  i.B = byte(x, 4) * 2 + (I - c) / 512 -- 1 bits of c2 left
  local opmode = self.OpMode[tonumber(string.sub(self.opmodes[op + 1], 7, 7))]
  if opmode ~= "iABC" then
    i.Bx = i.B * 512 + i.C
  end
  return i
end

------------------------------------------------------------------------
-- Macros to operate RK indices
-- * these use arithmetic instead of bit ops
------------------------------------------------------------------------

-- this bit 1 means constant (0 means register)
luaP.BITRK = math.ldexp(1, luaP.SIZE_B - 1)

-- test whether value is a constant
function luaP:ISK(x) return x >= self.BITRK end

-- gets the index of the constant
function luaP:INDEXK(x) return x - self.BITRK end

luaP.MAXINDEXRK = luaP.BITRK - 1

-- code a constant index as a RK value
function luaP:RKASK(x) return x + self.BITRK end

------------------------------------------------------------------------
-- invalid register that fits in 8 bits
------------------------------------------------------------------------
luaP.NO_REG = luaP.MAXARG_A

------------------------------------------------------------------------
-- R(x) - register
-- Kst(x) - constant (in constant table)
-- RK(x) == if ISK(x) then Kst(INDEXK(x)) else R(x)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- grep "ORDER OP" if you change these enums
------------------------------------------------------------------------

--[[--------------------------------------------------------------------
Lua virtual machine opcodes (enum OpCode):
------------------------------------------------------------------------
name          args    description
------------------------------------------------------------------------
OP_MOVE       A B     R(A) := R(B)
OP_LOADK      A Bx    R(A) := Kst(Bx)
OP_LOADBOOL   A B C   R(A) := (Bool)B; if (C) pc++
OP_LOADNIL    A B     R(A) := ... := R(B) := nil
OP_GETUPVAL   A B     R(A) := UpValue[B]
OP_GETGLOBAL  A Bx    R(A) := Gbl[Kst(Bx)]
OP_GETTABLE   A B C   R(A) := R(B)[RK(C)]
OP_SETGLOBAL  A Bx    Gbl[Kst(Bx)] := R(A)
OP_SETUPVAL   A B     UpValue[B] := R(A)
OP_SETTABLE   A B C   R(A)[RK(B)] := RK(C)
OP_NEWTABLE   A B C   R(A) := {} (size = B,C)
OP_SELF       A B C   R(A+1) := R(B); R(A) := R(B)[RK(C)]
OP_ADD        A B C   R(A) := RK(B) + RK(C)
OP_SUB        A B C   R(A) := RK(B) - RK(C)
OP_MUL        A B C   R(A) := RK(B) * RK(C)
OP_DIV        A B C   R(A) := RK(B) / RK(C)
OP_MOD        A B C   R(A) := RK(B) % RK(C)
OP_POW        A B C   R(A) := RK(B) ^ RK(C)
OP_UNM        A B     R(A) := -R(B)
OP_NOT        A B     R(A) := not R(B)
OP_LEN        A B     R(A) := length of R(B)
OP_CONCAT     A B C   R(A) := R(B).. ... ..R(C)
OP_JMP        sBx     pc+=sBx
OP_EQ         A B C   if ((RK(B) == RK(C)) ~= A) then pc++
OP_LT         A B C   if ((RK(B) <  RK(C)) ~= A) then pc++
OP_LE         A B C   if ((RK(B) <= RK(C)) ~= A) then pc++
OP_TEST       A C     if not (R(A) <=> C) then pc++
OP_TESTSET    A B C   if (R(B) <=> C) then R(A) := R(B) else pc++
OP_CALL       A B C   R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1))
OP_TAILCALL   A B C   return R(A)(R(A+1), ... ,R(A+B-1))
OP_RETURN     A B     return R(A), ... ,R(A+B-2)  (see note)
OP_FORLOOP    A sBx   R(A)+=R(A+2);
                      if R(A) <?= R(A+1) then { pc+=sBx; R(A+3)=R(A) }
OP_FORPREP    A sBx   R(A)-=R(A+2); pc+=sBx
OP_TFORLOOP   A C     R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));
                      if R(A+3) ~= nil then R(A+2)=R(A+3) else pc++
OP_SETLIST    A B C   R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B
OP_CLOSE      A       close all variables in the stack up to (>=) R(A)
OP_CLOSURE    A Bx    R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))
OP_VARARG     A B     R(A), R(A+1), ..., R(A+B-1) = vararg
----------------------------------------------------------------------]]

luaP.opnames = {}  -- opcode names
luaP.OpCode = {}   -- lookup name -> number
luaP.ROpCode = {}  -- lookup number -> name

------------------------------------------------------------------------
-- ORDER OP
------------------------------------------------------------------------
local i = 0
for v in string.gmatch([[
MOVE LOADK LOADBOOL LOADNIL GETUPVAL
GETGLOBAL GETTABLE SETGLOBAL SETUPVAL SETTABLE
NEWTABLE SELF ADD SUB MUL
DIV MOD POW UNM NOT
LEN CONCAT JMP EQ LT
LE TEST TESTSET CALL TAILCALL
RETURN FORLOOP FORPREP TFORLOOP SETLIST
CLOSE CLOSURE VARARG
]], "%S+") do
  local n = "OP_"..v
  luaP.opnames[i] = v
  luaP.OpCode[n] = i
  luaP.ROpCode[i] = n
  i = i + 1
end
luaP.NUM_OPCODES = i

--[[
===========================================================================
  Notes:
  (*) In OP_CALL, if (B == 0) then B = top. C is the number of returns - 1,
      and can be 0: OP_CALL then sets 'top' to last_result+1, so
      next open instruction (OP_CALL, OP_RETURN, OP_SETLIST) may use 'top'.
  (*) In OP_VARARG, if (B == 0) then use actual number of varargs and
      set top (like in OP_CALL with C == 0).
  (*) In OP_RETURN, if (B == 0) then return up to 'top'
  (*) In OP_SETLIST, if (B == 0) then B = 'top';
      if (C == 0) then next 'instruction' is real C
  (*) For comparisons, A specifies what condition the test should accept
      (true or false).
  (*) All 'skips' (pc++) assume that next instruction is a jump
===========================================================================
--]]

--[[--------------------------------------------------------------------
  masks for instruction properties. The format is:
  bits 0-1: op mode
  bits 2-3: C arg mode
  bits 4-5: B arg mode
  bit 6: instruction set register A
  bit 7: operator is a test

  for OpArgMask:
  OpArgN - argument is not used
  OpArgU - argument is used
  OpArgR - argument is a register or a jump offset
  OpArgK - argument is a constant or register/constant
----------------------------------------------------------------------]]

-- was enum OpArgMask
luaP.OpArgMask = { OpArgN = 0, OpArgU = 1, OpArgR = 2, OpArgK = 3 }

------------------------------------------------------------------------
-- e.g. to compare with symbols, luaP:getOpMode(...) == luaP.OpCode.iABC
-- * accepts opcode parameter as strings, e.g. "OP_MOVE"
------------------------------------------------------------------------

function luaP:getOpMode(m)
  return self.opmodes[self.OpCode[m]] % 4
end

function luaP:getBMode(m)
  return math.floor(self.opmodes[self.OpCode[m]] / 16) % 4
end

function luaP:getCMode(m)
  return math.floor(self.opmodes[self.OpCode[m]] / 4) % 4
end

function luaP:testAMode(m)
  return math.floor(self.opmodes[self.OpCode[m]] / 64) % 2
end

function luaP:testTMode(m)
  return math.floor(self.opmodes[self.OpCode[m]] / 128)
end

-- luaP_opnames[] is set above, as the luaP.opnames table

-- number of list items to accumulate before a SETLIST instruction
luaP.LFIELDS_PER_FLUSH = 50

------------------------------------------------------------------------
-- build instruction properties array
-- * deliberately coded to look like the C equivalent
------------------------------------------------------------------------
local function opmode(t, a, b, c, m)
  local luaP = luaP
  return t * 128 + a * 64 +
         luaP.OpArgMask[b] * 16 + luaP.OpArgMask[c] * 4 + luaP.OpMode[m]
end

-- ORDER OP
luaP.opmodes = {
-- T A B C mode opcode
  opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_LOADK
  opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_LOADBOOL
  opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LOADNIL
  opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_GETUPVAL
  opmode(0, 1, "OpArgK", "OpArgN", "iABx"),     -- OP_GETGLOBAL
  opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_GETTABLE
  opmode(0, 0, "OpArgK", "OpArgN", "iABx"),     -- OP_SETGLOBAL
  opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_SETUPVAL
  opmode(0, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_SETTABLE
  opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_NEWTABLE
  opmode(0, 1, "OpArgR", "OpArgK", "iABC"),     -- OP_SELF
  opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_ADD
  opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_SUB
  opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MUL
  opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_DIV
  opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_MOD
  opmode(0, 1, "OpArgK", "OpArgK", "iABC"),     -- OP_POW
  opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_UNM
  opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_NOT
  opmode(0, 1, "OpArgR", "OpArgN", "iABC"),     -- OP_LEN
  opmode(0, 1, "OpArgR", "OpArgR", "iABC"),     -- OP_CONCAT
  opmode(0, 0, "OpArgR", "OpArgN", "iAsBx"),    -- OP_JMP
  opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_EQ
  opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LT
  opmode(1, 0, "OpArgK", "OpArgK", "iABC"),     -- OP_LE
  opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TEST
  opmode(1, 1, "OpArgR", "OpArgU", "iABC"),     -- OP_TESTSET
  opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_CALL
  opmode(0, 1, "OpArgU", "OpArgU", "iABC"),     -- OP_TAILCALL
  opmode(0, 0, "OpArgU", "OpArgN", "iABC"),     -- OP_RETURN
  opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORLOOP
  opmode(0, 1, "OpArgR", "OpArgN", "iAsBx"),    -- OP_FORPREP
  opmode(1, 0, "OpArgN", "OpArgU", "iABC"),     -- OP_TFORLOOP
  opmode(0, 0, "OpArgU", "OpArgU", "iABC"),     -- OP_SETLIST
  opmode(0, 0, "OpArgN", "OpArgN", "iABC"),     -- OP_CLOSE
  opmode(0, 1, "OpArgU", "OpArgN", "iABx"),     -- OP_CLOSURE
  opmode(0, 1, "OpArgU", "OpArgN", "iABC"),     -- OP_VARARG
}
-- an awkward way to set a zero-indexed table...
luaP.opmodes[0] =
  opmode(0, 1, "OpArgR", "OpArgN", "iABC")      -- OP_MOVE

return luaP
end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaU
G2L_MODULES[G2L["368"]] = {
Closure = function()
local script = G2L["368"]
--[[--------------------------------------------------------------------

  ldump.lua
  Save precompiled Lua chunks
  This file is part of Yueliang.

  Copyright (c) 2006 Kein-Hong Man <khman@users.sf.net>
  The COPYRIGHT file describes the conditions
  under which this software may be distributed.

  See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * WARNING! byte order (little endian) and data type sizes for header
--   signature values hard-coded; see luaU:header
-- * chunk writer generators are included, see below
-- * one significant difference is that instructions are still in table
--   form (with OP/A/B/C/Bx fields) and luaP:Instruction() is needed to
--   convert them into 4-char strings
--
-- Not implemented:
-- * DumpVar, DumpMem has been removed
-- * DumpVector folded into folded into DumpDebug, DumpCode
--
-- Added:
-- * for convenience, the following two functions have been added:
--   luaU:make_setS: create a chunk writer that writes to a string
--   luaU:make_setF: create a chunk writer that writes to a file
--   (lua.h contains a typedef for lua_Writer/lua_Chunkwriter, and
--    a Lua-based implementation exists, writer() in lstrlib.c)
-- * luaU:ttype(o) (from lobject.h)
-- * for converting number types to its binary equivalent:
--   luaU:from_double(x): encode double value for writing
--   luaU:from_int(x): encode integer value for writing
--     (error checking is limited for these conversion functions)
--     (double conversion does not support denormals or NaNs)
--
-- Changed in 5.1.x:
-- * the dumper was mostly rewritten in Lua 5.1.x, so notes on the
--   differences between 5.0.x and 5.1.x is limited
-- * LUAC_VERSION bumped to 0x51, LUAC_FORMAT added
-- * developer is expected to adjust LUAC_FORMAT in order to identify
--   non-standard binary chunk formats
-- * header signature code is smaller, has been simplified, and is
--   tested as a single unit; its logic is shared with the undumper
-- * no more endian conversion, invalid endianness mean rejection
-- * opcode field sizes are no longer exposed in the header
-- * code moved to front of a prototype, followed by constants
-- * debug information moved to the end of the binary chunk, and the
--   relevant functions folded into a single function
-- * luaU:dump returns a writer status code
-- * chunk writer now implements status code because dumper uses it
-- * luaU:endianness removed
----------------------------------------------------------------------]]

--requires luaP
local luaU = {}
local luaP = require(script.Parent.LuaP)

-- mark for precompiled code ('<esc>Lua') (from lua.h)
luaU.LUA_SIGNATURE = "\27Lua"

-- constants used by dumper (from lua.h)
luaU.LUA_TNUMBER  = 3
luaU.LUA_TSTRING  = 4
luaU.LUA_TNIL     = 0
luaU.LUA_TBOOLEAN = 1
luaU.LUA_TNONE    = -1

-- constants for header of binary files (from lundump.h)
luaU.LUAC_VERSION    = 0x51     -- this is Lua 5.1
luaU.LUAC_FORMAT     = 0        -- this is the official format
luaU.LUAC_HEADERSIZE = 12       -- size of header of binary files

--[[--------------------------------------------------------------------
-- Additional functions to handle chunk writing
-- * to use make_setS and make_setF, see test_ldump.lua elsewhere
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- create a chunk writer that writes to a string
-- * returns the writer function and a table containing the string
-- * to get the final result, look in buff.data
------------------------------------------------------------------------
function luaU:make_setS()
  local buff = {}
        buff.data = ""
  local writer =
    function(s, buff)  -- chunk writer
      if not s then return 0 end
      buff.data = buff.data..s
      return 0
    end
  return writer, buff
end

------------------------------------------------------------------------
-- create a chunk writer that writes to a file
-- * returns the writer function and a table containing the file handle
-- * if a nil is passed, then writer should close the open file
------------------------------------------------------------------------

--[[
function luaU:make_setF(filename)
  local buff = {}
        buff.h = io.open(filename, "wb")
  if not buff.h then return nil end
  local writer =
    function(s, buff)  -- chunk writer
      if not buff.h then return 0 end
      if not s then
        if buff.h:close() then return 0 end
      else
        if buff.h:write(s) then return 0 end
      end
      return 1
    end
  return writer, buff
end--]]

------------------------------------------------------------------------
-- works like the lobject.h version except that TObject used in these
-- scripts only has a 'value' field, no 'tt' field (native types used)
------------------------------------------------------------------------
function luaU:ttype(o)
  local tt = type(o.value)
  if tt == "number" then return self.LUA_TNUMBER
  elseif tt == "string" then return self.LUA_TSTRING
  elseif tt == "nil" then return self.LUA_TNIL
  elseif tt == "boolean" then return self.LUA_TBOOLEAN
  else
    return self.LUA_TNONE  -- the rest should not appear
  end
end

-----------------------------------------------------------------------
-- converts a IEEE754 double number to an 8-byte little-endian string
-- * luaU:from_double() and luaU:from_int() are adapted from ChunkBake
-- * supports +/- Infinity, but not denormals or NaNs
-----------------------------------------------------------------------
function luaU:from_double(x)
  local function grab_byte(v)
    local c = v % 256
    return (v - c) / 256, string.char(c)
  end
  local sign = 0
  if x < 0 then sign = 1; x = -x end
  local mantissa, exponent = math.frexp(x)
  if x == 0 then -- zero
    mantissa, exponent = 0, 0
  elseif x == 1/0 then
    mantissa, exponent = 0, 2047
  else
    mantissa = (mantissa * 2 - 1) * math.ldexp(0.5, 53)
    exponent = exponent + 1022
  end
  local v, byte = "" -- convert to bytes
  x = math.floor(mantissa)
  for i = 1,6 do
    x, byte = grab_byte(x); v = v..byte -- 47:0
  end
  x, byte = grab_byte(exponent * 16 + x); v = v..byte -- 55:48
  x, byte = grab_byte(sign * 128 + x); v = v..byte -- 63:56
  return v
end

-----------------------------------------------------------------------
-- converts a number to a little-endian 32-bit integer string
-- * input value assumed to not overflow, can be signed/unsigned
-----------------------------------------------------------------------
function luaU:from_int(x)
  local v = ""
  x = math.floor(x)
  if x < 0 then x = 4294967296 + x end  -- ULONG_MAX+1
  for i = 1, 4 do
    local c = x % 256
    v = v..string.char(c); x = math.floor(x / 256)
  end
  return v
end

--[[--------------------------------------------------------------------
-- Functions to make a binary chunk
-- * many functions have the size parameter removed, since output is
--   in the form of a string and some sizes are implicit or hard-coded
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct DumpState:
--   L  -- lua_State (not used in this script)
--   writer  -- lua_Writer (chunk writer function)
--   data  -- void* (chunk writer context or data already written)
--   strip  -- if true, don't write any debug information
--   status  -- if non-zero, an error has occured
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- dumps a block of bytes
-- * lua_unlock(D.L), lua_lock(D.L) unused
------------------------------------------------------------------------
function luaU:DumpBlock(b, D)
  if D.status == 0 then
    -- lua_unlock(D->L);
    D.status = D.write(b, D.data)
    -- lua_lock(D->L);
  end
end

------------------------------------------------------------------------
-- dumps a char
------------------------------------------------------------------------
function luaU:DumpChar(y, D)
  self:DumpBlock(string.char(y), D)
end

------------------------------------------------------------------------
-- dumps a 32-bit signed or unsigned integer (for int) (hard-coded)
------------------------------------------------------------------------
function luaU:DumpInt(x, D)
  self:DumpBlock(self:from_int(x), D)
end

------------------------------------------------------------------------
-- dumps a lua_Number (hard-coded as a double)
------------------------------------------------------------------------
function luaU:DumpNumber(x, D)
  self:DumpBlock(self:from_double(x), D)
end

------------------------------------------------------------------------
-- dumps a Lua string (size type is hard-coded)
------------------------------------------------------------------------
function luaU:DumpString(s, D)
  if s == nil then
    self:DumpInt(0, D)
  else
    s = s.."\0"  -- include trailing '\0'
    self:DumpInt(#s, D)
    self:DumpBlock(s, D)
  end
end

------------------------------------------------------------------------
-- dumps instruction block from function prototype
------------------------------------------------------------------------
function luaU:DumpCode(f, D)
  local n = f.sizecode
  --was DumpVector
  self:DumpInt(n, D)
  for i = 0, n - 1 do
    self:DumpBlock(luaP:Instruction(f.code[i]), D)
  end
end

------------------------------------------------------------------------
-- dump constant pool from function prototype
-- * bvalue(o), nvalue(o) and rawtsvalue(o) macros removed
------------------------------------------------------------------------
function luaU:DumpConstants(f, D)
  local n = f.sizek
  self:DumpInt(n, D)
  for i = 0, n - 1 do
    local o = f.k[i]  -- TValue
    local tt = self:ttype(o)
    self:DumpChar(tt, D)
    if tt == self.LUA_TNIL then
    elseif tt == self.LUA_TBOOLEAN then
      self:DumpChar(o.value and 1 or 0, D)
    elseif tt == self.LUA_TNUMBER then
      self:DumpNumber(o.value, D)
    elseif tt == self.LUA_TSTRING then
      self:DumpString(o.value, D)
    else
      --lua_assert(0)  -- cannot happen
    end
  end
  n = f.sizep
  self:DumpInt(n, D)
  for i = 0, n - 1 do
    self:DumpFunction(f.p[i], f.source, D)
  end
end

------------------------------------------------------------------------
-- dump debug information
------------------------------------------------------------------------
function luaU:DumpDebug(f, D)
  local n
  n = D.strip and 0 or f.sizelineinfo           -- dump line information
  --was DumpVector
  self:DumpInt(n, D)
  for i = 0, n - 1 do
    self:DumpInt(f.lineinfo[i], D)
  end
  n = D.strip and 0 or f.sizelocvars            -- dump local information
  self:DumpInt(n, D)
  for i = 0, n - 1 do
    self:DumpString(f.locvars[i].varname, D)
    self:DumpInt(f.locvars[i].startpc, D)
    self:DumpInt(f.locvars[i].endpc, D)
  end
  n = D.strip and 0 or f.sizeupvalues           -- dump upvalue information
  self:DumpInt(n, D)
  for i = 0, n - 1 do
    self:DumpString(f.upvalues[i], D)
  end
end

------------------------------------------------------------------------
-- dump child function prototypes from function prototype
------------------------------------------------------------------------
function luaU:DumpFunction(f, p, D)
  local source = f.source
  if source == p or D.strip then source = nil end
  self:DumpString(source, D)
  self:DumpInt(f.lineDefined, D)
  self:DumpInt(f.lastlinedefined, D)
  self:DumpChar(f.nups, D)
  self:DumpChar(f.numparams, D)
  self:DumpChar(f.is_vararg, D)
  self:DumpChar(f.maxstacksize, D)
  self:DumpCode(f, D)
  self:DumpConstants(f, D)
  self:DumpDebug(f, D)
end

------------------------------------------------------------------------
-- dump Lua header section (some sizes hard-coded)
------------------------------------------------------------------------
function luaU:DumpHeader(D)
  local h = self:header()
  assert(#h == self.LUAC_HEADERSIZE) -- fixed buffer now an assert
  self:DumpBlock(h, D)
end

------------------------------------------------------------------------
-- make header (from lundump.c)
-- returns the header string
------------------------------------------------------------------------
function luaU:header()
 local x = 1
 return self.LUA_SIGNATURE..
        string.char(
          self.LUAC_VERSION,
          self.LUAC_FORMAT,
          x,                    -- endianness (1=little)
          4,                    -- sizeof(int)
          4,                    -- sizeof(size_t)
          4,                    -- sizeof(Instruction)
          8,                    -- sizeof(lua_Number)
          0)                    -- is lua_Number integral?
end

------------------------------------------------------------------------
-- dump Lua function as precompiled chunk
-- (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)
-- * w, data are created from make_setS, make_setF
------------------------------------------------------------------------
function luaU:dump(L, f, w, data, strip)
  local D = {}  -- DumpState
  D.L = L
  D.write = w
  D.data = data
  D.strip = strip
  D.status = 0
  self:DumpHeader(D)
  self:DumpFunction(f, nil, D)
  -- added: for a chunk writer writing to a file, this final call with
  -- nil data is to indicate to the writer to close the file
  D.write(nil, D.data)
  return D.status
end

return luaU
end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaK
G2L_MODULES[G2L["369"]] = {
Closure = function()
local script = G2L["369"]
--[[--------------------------------------------------------------------

  lcode.lua
  Lua 5 code generator in Lua
  This file is part of Yueliang.

  Copyright (c) 2005-2007 Kein-Hong Man <khman@users.sf.net>
  The COPYRIGHT file describes the conditions
  under which this software may be distributed.

  See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * one function manipulate a pointer argument with a simple data type
--   (can't be emulated by a table, ambiguous), now returns that value:
--   luaK:concat(fs, l1, l2)
-- * luaM_growvector uses the faux luaY:growvector, for limit checking
-- * some function parameters changed to boolean, additional code
--   translates boolean back to 1/0 for instruction fields
--
-- Not implemented:
-- * NOTE there is a failed assert in luaK:addk, a porting problem
--
-- Added:
-- * constant MAXSTACK from llimits.h
-- * luaK:ttisnumber(o) (from lobject.h)
-- * luaK:nvalue(o) (from lobject.h)
-- * luaK:setnilvalue(o) (from lobject.h)
-- * luaK:setnvalue(o, x) (from lobject.h)
-- * luaK:setbvalue(o, x) (from lobject.h)
-- * luaK:sethvalue(o, x) (from lobject.h), parameter L deleted
-- * luaK:setsvalue(o, x) (from lobject.h), parameter L deleted
-- * luaK:numadd, luaK:numsub, luaK:nummul, luaK:numdiv, luaK:nummod,
--   luaK:numpow, luaK:numunm, luaK:numisnan (from luaconf.h)
-- * copyexp(e1, e2) added in luaK:posfix to copy expdesc struct
--
-- Changed in 5.1.x:
-- * enum BinOpr has a new entry, OPR_MOD
-- * enum UnOpr has a new entry, OPR_LEN
-- * binopistest, unused in 5.0.x, has been deleted
-- * macro setmultret is new
-- * functions isnumeral, luaK_ret, boolK are new
-- * funcion nilK was named nil_constant in 5.0.x
-- * function interface changed: need_value, patchtestreg, concat
-- * TObject now a TValue
-- * functions luaK_setreturns, luaK_setoneret are new
-- * function luaK:setcallreturns deleted, to be replaced by:
--   luaK:setmultret, luaK:ret, luaK:setreturns, luaK:setoneret
-- * functions constfolding, codearith, codecomp are new
-- * luaK:codebinop has been deleted
-- * function luaK_setlist is new
-- * OPR_MULT renamed to OPR_MUL
----------------------------------------------------------------------]]

-- requires luaP, luaX, luaY
local luaK = {}
local luaP = require(script.Parent.LuaP)
local luaX = require(script.Parent.LuaX)

------------------------------------------------------------------------
-- constants used by code generator
------------------------------------------------------------------------
-- maximum stack for a Lua function
luaK.MAXSTACK = 250  -- (from llimits.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- emulation of TValue macros (these are from lobject.h)
-- * TValue is a table since lcode passes references around
-- * tt member field removed, using Lua's type() instead
-- * for setsvalue, sethvalue, parameter L (deleted here) in lobject.h
--   is used in an assert for testing, see checkliveness(g,obj)
------------------------------------------------------------------------
function luaK:ttisnumber(o)
  if o then return type(o.value) == "number" else return false end
end
function luaK:nvalue(o) return o.value end
function luaK:setnilvalue(o) o.value = nil end
function luaK:setsvalue(o, x) o.value = x end
luaK.setnvalue = luaK.setsvalue
luaK.sethvalue = luaK.setsvalue
luaK.setbvalue = luaK.setsvalue

------------------------------------------------------------------------
-- The luai_num* macros define the primitive operations over numbers.
-- * this is not the entire set of primitive operations from luaconf.h
-- * used in luaK:constfolding()
------------------------------------------------------------------------
function luaK:numadd(a, b) return a + b end
function luaK:numsub(a, b) return a - b end
function luaK:nummul(a, b) return a * b end
function luaK:numdiv(a, b) return a / b end
function luaK:nummod(a, b) return a % b end
  -- ((a) - floor((a)/(b))*(b)) /* actual, for reference */
function luaK:numpow(a, b) return a ^ b end
function luaK:numunm(a) return -a end
function luaK:numisnan(a) return not a == a end
  -- a NaN cannot equal another NaN

--[[--------------------------------------------------------------------
-- code generator functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- Marks the end of a patch list. It is an invalid value both as an absolute
-- address, and as a list link (would link an element to itself).
------------------------------------------------------------------------
luaK.NO_JUMP = -1

------------------------------------------------------------------------
-- grep "ORDER OPR" if you change these enums
------------------------------------------------------------------------
luaK.BinOpr = {
  OPR_ADD = 0, OPR_SUB = 1, OPR_MUL = 2, OPR_DIV = 3, OPR_MOD = 4, OPR_POW = 5,
  OPR_CONCAT = 6,
  OPR_NE = 7, OPR_EQ = 8,
  OPR_LT = 9, OPR_LE = 10, OPR_GT = 11, OPR_GE = 12,
  OPR_AND = 13, OPR_OR = 14,
  OPR_NOBINOPR = 15,
}

-- * UnOpr is used by luaK:prefix's op argument, but not directly used
--   because the function receives the symbols as strings, e.g. "OPR_NOT"
luaK.UnOpr = {
  OPR_MINUS = 0, OPR_NOT = 1, OPR_LEN = 2, OPR_NOUNOPR = 3
}

------------------------------------------------------------------------
-- returns the instruction object for given e (expdesc), was a macro
------------------------------------------------------------------------
function luaK:getcode(fs, e)
  return fs.f.code[e.info]
end

------------------------------------------------------------------------
-- codes an instruction with a signed Bx (sBx) field, was a macro
-- * used in luaK:jump(), (lparser) luaY:forbody()
------------------------------------------------------------------------
function luaK:codeAsBx(fs, o, A, sBx)
  return self:codeABx(fs, o, A, sBx + luaP.MAXARG_sBx)
end

------------------------------------------------------------------------
-- set the expdesc e instruction for multiple returns, was a macro
------------------------------------------------------------------------
function luaK:setmultret(fs, e)
  self:setreturns(fs, e, luaY.LUA_MULTRET)
end

------------------------------------------------------------------------
-- there is a jump if patch lists are not identical, was a macro
-- * used in luaK:exp2reg(), luaK:exp2anyreg(), luaK:exp2val()
------------------------------------------------------------------------
function luaK:hasjumps(e)
  return e.t ~= e.f
end

------------------------------------------------------------------------
-- true if the expression is a constant number (for constant folding)
-- * used in constfolding(), infix()
------------------------------------------------------------------------
function luaK:isnumeral(e)
  return e.k == "VKNUM" and e.t == self.NO_JUMP and e.f == self.NO_JUMP
end

------------------------------------------------------------------------
-- codes loading of nil, optimization done if consecutive locations
-- * used in luaK:discharge2reg(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:_nil(fs, from, n)
  if fs.pc > fs.lasttarget then  -- no jumps to current position?
    if fs.pc == 0 then  -- function start?
      if from >= fs.nactvar then
        return  -- positions are already clean
      end
    else
      local previous = fs.f.code[fs.pc - 1]
      if luaP:GET_OPCODE(previous) == "OP_LOADNIL" then
        local pfrom = luaP:GETARG_A(previous)
        local pto = luaP:GETARG_B(previous)
        if pfrom <= from and from <= pto + 1 then  -- can connect both?
          if from + n - 1 > pto then
            luaP:SETARG_B(previous, from + n - 1)
          end
          return
        end
      end
    end
  end
  self:codeABC(fs, "OP_LOADNIL", from, from + n - 1, 0)  -- else no optimization
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:jump(fs)
  local jpc = fs.jpc  -- save list of jumps to here
  fs.jpc = self.NO_JUMP
  local j = self:codeAsBx(fs, "OP_JMP", 0, self.NO_JUMP)
  j = self:concat(fs, j, jpc)  -- keep them on hold
  return j
end

------------------------------------------------------------------------
-- codes a RETURN instruction
-- * used in luaY:close_func(), luaY:retstat()
------------------------------------------------------------------------
function luaK:ret(fs, first, nret)
  self:codeABC(fs, "OP_RETURN", first, nret + 1, 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codecomp()
------------------------------------------------------------------------
function luaK:condjump(fs, op, A, B, C)
  self:codeABC(fs, op, A, B, C)
  return self:jump(fs)
end

------------------------------------------------------------------------
--
-- * used in luaK:patchlistaux(), luaK:concat()
------------------------------------------------------------------------
function luaK:fixjump(fs, pc, dest)
  local jmp = fs.f.code[pc]
  local offset = dest - (pc + 1)
  assert(dest ~= self.NO_JUMP)
  if math.abs(offset) > luaP.MAXARG_sBx then
    luaX:syntaxerror(fs.ls, "control structure too long")
  end
  luaP:SETARG_sBx(jmp, offset)
end

------------------------------------------------------------------------
-- returns current 'pc' and marks it as a jump target (to avoid wrong
-- optimizations with consecutive instructions not in the same basic block).
-- * used in multiple locations
-- * fs.lasttarget tested only by luaK:_nil() when optimizing OP_LOADNIL
------------------------------------------------------------------------
function luaK:getlabel(fs)
  fs.lasttarget = fs.pc
  return fs.pc
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:removevalues(), luaK:patchlistaux(),
--   luaK:concat()
------------------------------------------------------------------------
function luaK:getjump(fs, pc)
  local offset = luaP:GETARG_sBx(fs.f.code[pc])
  if offset == self.NO_JUMP then  -- point to itself represents end of list
    return self.NO_JUMP  -- end of list
  else
    return (pc + 1) + offset  -- turn offset into absolute position
  end
end

------------------------------------------------------------------------
--
-- * used in luaK:need_value(), luaK:patchtestreg(), luaK:invertjump()
------------------------------------------------------------------------
function luaK:getjumpcontrol(fs, pc)
  local pi = fs.f.code[pc]
  local ppi = fs.f.code[pc - 1]
  if pc >= 1 and luaP:testTMode(luaP:GET_OPCODE(ppi)) ~= 0 then
    return ppi
  else
    return pi
  end
end

------------------------------------------------------------------------
-- check whether list has any jump that do not produce a value
-- (or produce an inverted value)
-- * return value changed to boolean
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:need_value(fs, list)
  while list ~= self.NO_JUMP do
    local i = self:getjumpcontrol(fs, list)
    if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then return true end
    list = self:getjump(fs, list)
  end
  return false  -- not found
end

------------------------------------------------------------------------
--
-- * used in luaK:removevalues(), luaK:patchlistaux()
------------------------------------------------------------------------
function luaK:patchtestreg(fs, node, reg)
  local i = self:getjumpcontrol(fs, node)
  if luaP:GET_OPCODE(i) ~= "OP_TESTSET" then
    return false  -- cannot patch other instructions
  end
  if reg ~= luaP.NO_REG and reg ~= luaP:GETARG_B(i) then
    luaP:SETARG_A(i, reg)
  else  -- no register to put value or register already has the value
    -- due to use of a table as i, i cannot be replaced by another table
    -- so the following is required; there is no change to ARG_C
    luaP:SET_OPCODE(i, "OP_TEST")
    local b = luaP:GETARG_B(i)
    luaP:SETARG_A(i, b)
    luaP:SETARG_B(i, 0)
    -- *i = CREATE_ABC(OP_TEST, GETARG_B(*i), 0, GETARG_C(*i)); /* C */
  end
  return true
end

------------------------------------------------------------------------
--
-- * used only in luaK:codenot()
------------------------------------------------------------------------
function luaK:removevalues(fs, list)
  while list ~= self.NO_JUMP do
    self:patchtestreg(fs, list, luaP.NO_REG)
    list = self:getjump(fs, list)
  end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargejpc(), luaK:patchlist(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:patchlistaux(fs, list, vtarget, reg, dtarget)
  while list ~= self.NO_JUMP do
    local _next = self:getjump(fs, list)
    if self:patchtestreg(fs, list, reg) then
      self:fixjump(fs, list, vtarget)
    else
      self:fixjump(fs, list, dtarget)  -- jump to default target
    end
    list = _next
  end
end

------------------------------------------------------------------------
--
-- * used only in luaK:code()
------------------------------------------------------------------------
function luaK:dischargejpc(fs)
  self:patchlistaux(fs, fs.jpc, fs.pc, luaP.NO_REG, fs.pc)
  fs.jpc = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:whilestat(), luaY:repeatstat(), luaY:forbody()
------------------------------------------------------------------------
function luaK:patchlist(fs, list, target)
  if target == fs.pc then
    self:patchtohere(fs, list)
  else
    assert(target < fs.pc)
    self:patchlistaux(fs, list, target, luaP.NO_REG, target)
  end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:patchtohere(fs, list)
  self:getlabel(fs)
  fs.jpc = self:concat(fs, fs.jpc, list)
end

------------------------------------------------------------------------
-- * l1 was a pointer, now l1 is returned and callee assigns the value
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:concat(fs, l1, l2)
  if l2 == self.NO_JUMP then return l1
  elseif l1 == self.NO_JUMP then
    return l2
  else
    local list = l1
    local _next = self:getjump(fs, list)
    while _next ~= self.NO_JUMP do  -- find last element
      list = _next
      _next = self:getjump(fs, list)
    end
    self:fixjump(fs, list, l2)
  end
  return l1
end

------------------------------------------------------------------------
--
-- * used in luaK:reserveregs(), (lparser) luaY:forlist()
------------------------------------------------------------------------
function luaK:checkstack(fs, n)
  local newstack = fs.freereg + n
  if newstack > fs.f.maxstacksize then
    if newstack >= self.MAXSTACK then
      luaX:syntaxerror(fs.ls, "function or expression too complex")
    end
    fs.f.maxstacksize = newstack
  end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:reserveregs(fs, n)
  self:checkstack(fs, n)
  fs.freereg = fs.freereg + n
end

------------------------------------------------------------------------
--
-- * used in luaK:freeexp(), luaK:dischargevars()
------------------------------------------------------------------------
function luaK:freereg(fs, reg)
  if not luaP:ISK(reg) and reg >= fs.nactvar then
    fs.freereg = fs.freereg - 1
    assert(reg == fs.freereg)
  end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:freeexp(fs, e)
  if e.k == "VNONRELOC" then
    self:freereg(fs, e.info)
  end
end

------------------------------------------------------------------------
-- * TODO NOTE implementation is not 100% correct, since the assert fails
-- * luaH_set, setobj deleted; direct table access used instead
-- * used in luaK:stringK(), luaK:numberK(), luaK:boolK(), luaK:nilK()
------------------------------------------------------------------------
function luaK:addk(fs, k, v)
  local L = fs.L
  local idx = fs.h[k.value]
  --TValue *idx = luaH_set(L, fs->h, k); /* C */
  local f = fs.f
  if self:ttisnumber(idx) then
    --TODO this assert currently FAILS (last tested for 5.0.2)
    --assert(fs.f.k[self:nvalue(idx)] == v)
    --assert(luaO_rawequalObj(&fs->f->k[cast_int(nvalue(idx))], v)); /* C */
    return self:nvalue(idx)
  else -- constant not found; create a new entry
    idx = {}
    self:setnvalue(idx, fs.nk)
    fs.h[k.value] = idx
    -- setnvalue(idx, cast_num(fs->nk)); /* C */
    luaY:growvector(L, f.k, fs.nk, f.sizek, nil,
                    luaP.MAXARG_Bx, "constant table overflow")
    -- loop to initialize empty f.k positions not required
    f.k[fs.nk] = v
    -- setobj(L, &f->k[fs->nk], v); /* C */
    -- luaC_barrier(L, f, v); /* GC */
    local nk = fs.nk
    fs.nk = fs.nk + 1
    return nk
  end

end

------------------------------------------------------------------------
-- creates and sets a string object
-- * used in (lparser) luaY:codestring(), luaY:singlevar()
------------------------------------------------------------------------
function luaK:stringK(fs, s)
  local o = {}  -- TValue
  self:setsvalue(o, s)
  return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a number object
-- * used in luaK:prefix() for negative (or negation of) numbers
-- * used in (lparser) luaY:simpleexp(), luaY:fornum()
------------------------------------------------------------------------
function luaK:numberK(fs, r)
  local o = {}  -- TValue
  self:setnvalue(o, r)
  return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a boolean object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:boolK(fs, b)
  local o = {}  -- TValue
  self:setbvalue(o, b)
  return self:addk(fs, o, o)
end

------------------------------------------------------------------------
-- creates and sets a nil object
-- * used only in luaK:exp2RK()
------------------------------------------------------------------------
function luaK:nilK(fs)
  local k, v = {}, {}  -- TValue
  self:setnilvalue(v)
  -- cannot use nil as key; instead use table itself to represent nil
  self:sethvalue(k, fs.h)
  return self:addk(fs, k, v)
end

------------------------------------------------------------------------
--
-- * used in luaK:setmultret(), (lparser) luaY:adjust_assign()
------------------------------------------------------------------------
function luaK:setreturns(fs, e, nresults)
  if e.k == "VCALL" then  -- expression is an open function call?
    luaP:SETARG_C(self:getcode(fs, e), nresults + 1)
  elseif e.k == "VVARARG" then
    luaP:SETARG_B(self:getcode(fs, e), nresults + 1);
    luaP:SETARG_A(self:getcode(fs, e), fs.freereg);
    luaK:reserveregs(fs, 1)
  end
end

------------------------------------------------------------------------
--
-- * used in luaK:dischargevars(), (lparser) luaY:assignment()
------------------------------------------------------------------------
function luaK:setoneret(fs, e)
  if e.k == "VCALL" then  -- expression is an open function call?
    e.k = "VNONRELOC"
    e.info = luaP:GETARG_A(self:getcode(fs, e))
  elseif e.k == "VVARARG" then
    luaP:SETARG_B(self:getcode(fs, e), 2)
    e.k = "VRELOCABLE"  -- can relocate its simple result
  end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:dischargevars(fs, e)
  local k = e.k
  if k == "VLOCAL" then
    e.k = "VNONRELOC"
  elseif k == "VUPVAL" then
    e.info = self:codeABC(fs, "OP_GETUPVAL", 0, e.info, 0)
    e.k = "VRELOCABLE"
  elseif k == "VGLOBAL" then
    e.info = self:codeABx(fs, "OP_GETGLOBAL", 0, e.info)
    e.k = "VRELOCABLE"
  elseif k == "VINDEXED" then
    self:freereg(fs, e.aux)
    self:freereg(fs, e.info)
    e.info = self:codeABC(fs, "OP_GETTABLE", 0, e.info, e.aux)
    e.k = "VRELOCABLE"
  elseif k == "VVARARG" or k == "VCALL" then
    self:setoneret(fs, e)
  else
    -- there is one value available (somewhere)
  end
end

------------------------------------------------------------------------
--
-- * used only in luaK:exp2reg()
------------------------------------------------------------------------
function luaK:code_label(fs, A, b, jump)
  self:getlabel(fs)  -- those instructions may be jump targets
  return self:codeABC(fs, "OP_LOADBOOL", A, b, jump)
end

------------------------------------------------------------------------
--
-- * used in luaK:discharge2anyreg(), luaK:exp2reg()
------------------------------------------------------------------------
function luaK:discharge2reg(fs, e, reg)
  self:dischargevars(fs, e)
  local k = e.k
  if k == "VNIL" then
    self:_nil(fs, reg, 1)
  elseif k == "VFALSE" or k == "VTRUE" then
    self:codeABC(fs, "OP_LOADBOOL", reg, (e.k == "VTRUE") and 1 or 0, 0)
  elseif k == "VK" then
    self:codeABx(fs, "OP_LOADK", reg, e.info)
  elseif k == "VKNUM" then
    self:codeABx(fs, "OP_LOADK", reg, self:numberK(fs, e.nval))
  elseif k == "VRELOCABLE" then
    local pc = self:getcode(fs, e)
    luaP:SETARG_A(pc, reg)
  elseif k == "VNONRELOC" then
    if reg ~= e.info then
      self:codeABC(fs, "OP_MOVE", reg, e.info, 0)
    end
  else
    assert(e.k == "VVOID" or e.k == "VJMP")
    return  -- nothing to do...
  end
  e.info = reg
  e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:jumponcond(), luaK:codenot()
------------------------------------------------------------------------
function luaK:discharge2anyreg(fs, e)
  if e.k ~= "VNONRELOC" then
    self:reserveregs(fs, 1)
    self:discharge2reg(fs, e, fs.freereg - 1)
  end
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2nextreg(), luaK:exp2anyreg(), luaK:storevar()
------------------------------------------------------------------------
function luaK:exp2reg(fs, e, reg)
  self:discharge2reg(fs, e, reg)
  if e.k == "VJMP" then
    e.t = self:concat(fs, e.t, e.info)  -- put this jump in 't' list
  end
  if self:hasjumps(e) then
    local final  -- position after whole expression
    local p_f = self.NO_JUMP  -- position of an eventual LOAD false
    local p_t = self.NO_JUMP  -- position of an eventual LOAD true
    if self:need_value(fs, e.t) or self:need_value(fs, e.f) then
      local fj = (e.k == "VJMP") and self.NO_JUMP or self:jump(fs)
      p_f = self:code_label(fs, reg, 0, 1)
      p_t = self:code_label(fs, reg, 1, 0)
      self:patchtohere(fs, fj)
    end
    final = self:getlabel(fs)
    self:patchlistaux(fs, e.f, final, reg, p_f)
    self:patchlistaux(fs, e.t, final, reg, p_t)
  end
  e.f, e.t = self.NO_JUMP, self.NO_JUMP
  e.info = reg
  e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2nextreg(fs, e)
  self:dischargevars(fs, e)
  self:freeexp(fs, e)
  self:reserveregs(fs, 1)
  self:exp2reg(fs, e, fs.freereg - 1)
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2anyreg(fs, e)
  self:dischargevars(fs, e)
  if e.k == "VNONRELOC" then
    if not self:hasjumps(e) then  -- exp is already in a register
      return e.info
    end
    if e.info >= fs.nactvar then  -- reg. is not a local?
      self:exp2reg(fs, e, e.info)  -- put value on it
      return e.info
    end
  end
  self:exp2nextreg(fs, e)  -- default
  return e.info
end

------------------------------------------------------------------------
--
-- * used in luaK:exp2RK(), luaK:prefix(), luaK:posfix()
-- * used in (lparser) luaY:yindex()
------------------------------------------------------------------------
function luaK:exp2val(fs, e)
  if self:hasjumps(e) then
    self:exp2anyreg(fs, e)
  else
    self:dischargevars(fs, e)
  end
end

------------------------------------------------------------------------
--
-- * used in multiple locations
------------------------------------------------------------------------
function luaK:exp2RK(fs, e)
  self:exp2val(fs, e)
  local k = e.k
  if k == "VKNUM" or k == "VTRUE" or k == "VFALSE" or k == "VNIL" then
    if fs.nk <= luaP.MAXINDEXRK then  -- constant fit in RK operand?
      -- converted from a 2-deep ternary operator expression
      if e.k == "VNIL" then
        e.info = self:nilK(fs)
      else
        e.info = (e.k == "VKNUM") and self:numberK(fs, e.nval)
                                  or self:boolK(fs, e.k == "VTRUE")
      end
      e.k = "VK"
      return luaP:RKASK(e.info)
    end
  elseif k == "VK" then
    if e.info <= luaP.MAXINDEXRK then  -- constant fit in argC?
      return luaP:RKASK(e.info)
    end
  else
    -- default
  end
  -- not a constant in the right range: put it in a register
  return self:exp2anyreg(fs, e)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:assignment(), luaY:localfunc(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:storevar(fs, var, ex)
  local k = var.k
  if k == "VLOCAL" then
    self:freeexp(fs, ex)
    self:exp2reg(fs, ex, var.info)
    return
  elseif k == "VUPVAL" then
    local e = self:exp2anyreg(fs, ex)
    self:codeABC(fs, "OP_SETUPVAL", e, var.info, 0)
  elseif k == "VGLOBAL" then
    local e = self:exp2anyreg(fs, ex)
    self:codeABx(fs, "OP_SETGLOBAL", e, var.info)
  elseif k == "VINDEXED" then
    local e = self:exp2RK(fs, ex)
    self:codeABC(fs, "OP_SETTABLE", var.info, var.aux, e)
  else
    assert(0)  -- invalid var kind to store
  end
  self:freeexp(fs, ex)
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:primaryexp()
------------------------------------------------------------------------
function luaK:_self(fs, e, key)
  self:exp2anyreg(fs, e)
  self:freeexp(fs, e)
  local func = fs.freereg
  self:reserveregs(fs, 2)
  self:codeABC(fs, "OP_SELF", func, e.info, self:exp2RK(fs, key))
  self:freeexp(fs, key)
  e.info = func
  e.k = "VNONRELOC"
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:codenot()
------------------------------------------------------------------------
function luaK:invertjump(fs, e)
  local pc = self:getjumpcontrol(fs, e.info)
  assert(luaP:testTMode(luaP:GET_OPCODE(pc)) ~= 0 and
             luaP:GET_OPCODE(pc) ~= "OP_TESTSET" and
             luaP:GET_OPCODE(pc) ~= "OP_TEST")
  luaP:SETARG_A(pc, (luaP:GETARG_A(pc) == 0) and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:goiftrue(), luaK:goiffalse()
------------------------------------------------------------------------
function luaK:jumponcond(fs, e, cond)
  if e.k == "VRELOCABLE" then
    local ie = self:getcode(fs, e)
    if luaP:GET_OPCODE(ie) == "OP_NOT" then
      fs.pc = fs.pc - 1  -- remove previous OP_NOT
      return self:condjump(fs, "OP_TEST", luaP:GETARG_B(ie), 0, cond and 0 or 1)
    end
    -- else go through
  end
  self:discharge2anyreg(fs, e)
  self:freeexp(fs, e)
  return self:condjump(fs, "OP_TESTSET", luaP.NO_REG, e.info, cond and 1 or 0)
end

------------------------------------------------------------------------
--
-- * used in luaK:infix(), (lparser) luaY:cond()
------------------------------------------------------------------------
function luaK:goiftrue(fs, e)
  local pc  -- pc of last jump
  self:dischargevars(fs, e)
  local k = e.k
  if k == "VK" or k == "VKNUM" or k == "VTRUE" then
    pc = self.NO_JUMP  -- always true; do nothing
  elseif k == "VFALSE" then
    pc = self:jump(fs)  -- always jump
  elseif k == "VJMP" then
    self:invertjump(fs, e)
    pc = e.info
  else
    pc = self:jumponcond(fs, e, false)
  end
  e.f = self:concat(fs, e.f, pc)  -- insert last jump in `f' list
  self:patchtohere(fs, e.t)
  e.t = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used in luaK:infix()
------------------------------------------------------------------------
function luaK:goiffalse(fs, e)
  local pc  -- pc of last jump
  self:dischargevars(fs, e)
  local k = e.k
  if k == "VNIL" or k == "VFALSE"then
    pc = self.NO_JUMP  -- always false; do nothing
  elseif k == "VTRUE" then
    pc = self:jump(fs)  -- always jump
  elseif k == "VJMP" then
    pc = e.info
  else
    pc = self:jumponcond(fs, e, true)
  end
  e.t = self:concat(fs, e.t, pc)  -- insert last jump in `t' list
  self:patchtohere(fs, e.f)
  e.f = self.NO_JUMP
end

------------------------------------------------------------------------
--
-- * used only in luaK:prefix()
------------------------------------------------------------------------
function luaK:codenot(fs, e)
  self:dischargevars(fs, e)
  local k = e.k
  if k == "VNIL" or k == "VFALSE" then
    e.k = "VTRUE"
  elseif k == "VK" or k == "VKNUM" or k == "VTRUE" then
    e.k = "VFALSE"
  elseif k == "VJMP" then
    self:invertjump(fs, e)
  elseif k == "VRELOCABLE" or k == "VNONRELOC" then
    self:discharge2anyreg(fs, e)
    self:freeexp(fs, e)
    e.info = self:codeABC(fs, "OP_NOT", 0, e.info, 0)
    e.k = "VRELOCABLE"
  else
    assert(0)  -- cannot happen
  end
  -- interchange true and false lists
  e.f, e.t = e.t, e.f
  self:removevalues(fs, e.f)
  self:removevalues(fs, e.t)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:field(), luaY:primaryexp()
------------------------------------------------------------------------
function luaK:indexed(fs, t, k)
  t.aux = self:exp2RK(fs, k)
  t.k = "VINDEXED"
end

------------------------------------------------------------------------
--
-- * used only in luaK:codearith()
------------------------------------------------------------------------
function luaK:constfolding(op, e1, e2)
  local r
  if not self:isnumeral(e1) or not self:isnumeral(e2) then return false end
  local v1 = e1.nval
  local v2 = e2.nval
  if op == "OP_ADD" then
    r = self:numadd(v1, v2)
  elseif op == "OP_SUB" then
    r = self:numsub(v1, v2)
  elseif op == "OP_MUL" then
    r = self:nummul(v1, v2)
  elseif op == "OP_DIV" then
    if v2 == 0 then return false end  -- do not attempt to divide by 0
    r = self:numdiv(v1, v2)
  elseif op == "OP_MOD" then
    if v2 == 0 then return false end  -- do not attempt to divide by 0
    r = self:nummod(v1, v2)
  elseif op == "OP_POW" then
    r = self:numpow(v1, v2)
  elseif op == "OP_UNM" then
    r = self:numunm(v1)
  elseif op == "OP_LEN" then
    return false  -- no constant folding for 'len'
  else
    assert(0)
    r = 0
  end
  if self:numisnan(r) then return false end  -- do not attempt to produce NaN
  e1.nval = r
  return true
end

------------------------------------------------------------------------
--
-- * used in luaK:prefix(), luaK:posfix()
------------------------------------------------------------------------
function luaK:codearith(fs, op, e1, e2)
  if self:constfolding(op, e1, e2) then
    return
  else
    local o2 = (op ~= "OP_UNM" and op ~= "OP_LEN") and self:exp2RK(fs, e2) or 0
    local o1 = self:exp2RK(fs, e1)
    if o1 > o2 then
      self:freeexp(fs, e1)
      self:freeexp(fs, e2)
    else
      self:freeexp(fs, e2)
      self:freeexp(fs, e1)
    end
    e1.info = self:codeABC(fs, op, 0, o1, o2)
    e1.k = "VRELOCABLE"
  end
end

------------------------------------------------------------------------
--
-- * used only in luaK:posfix()
------------------------------------------------------------------------
function luaK:codecomp(fs, op, cond, e1, e2)
  local o1 = self:exp2RK(fs, e1)
  local o2 = self:exp2RK(fs, e2)
  self:freeexp(fs, e2)
  self:freeexp(fs, e1)
  if cond == 0 and op ~= "OP_EQ" then
    -- exchange args to replace by `<' or `<='
    o1, o2 = o2, o1  -- o1 <==> o2
    cond = 1
  end
  e1.info = self:condjump(fs, op, cond, o1, o2)
  e1.k = "VJMP"
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:prefix(fs, op, e)
  local e2 = {}  -- expdesc
  e2.t, e2.f = self.NO_JUMP, self.NO_JUMP
  e2.k = "VKNUM"
  e2.nval = 0
  if op == "OPR_MINUS" then
    if not self:isnumeral(e) then
      self:exp2anyreg(fs, e)  -- cannot operate on non-numeric constants
    end
    self:codearith(fs, "OP_UNM", e, e2)
  elseif op == "OPR_NOT" then
    self:codenot(fs, e)
  elseif op == "OPR_LEN" then
    self:exp2anyreg(fs, e)  -- cannot operate on constants
    self:codearith(fs, "OP_LEN", e, e2)
  else
    assert(0)
  end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
function luaK:infix(fs, op, v)
  if op == "OPR_AND" then
    self:goiftrue(fs, v)
  elseif op == "OPR_OR" then
    self:goiffalse(fs, v)
  elseif op == "OPR_CONCAT" then
    self:exp2nextreg(fs, v)  -- operand must be on the 'stack'
  elseif op == "OPR_ADD" or op == "OPR_SUB" or
         op == "OPR_MUL" or op == "OPR_DIV" or
         op == "OPR_MOD" or op == "OPR_POW" then
    if not self:isnumeral(v) then self:exp2RK(fs, v) end
  else
    self:exp2RK(fs, v)
  end
end

------------------------------------------------------------------------
--
-- * used only in (lparser) luaY:subexpr()
------------------------------------------------------------------------
-- table lookups to simplify testing
luaK.arith_op = {
  OPR_ADD = "OP_ADD", OPR_SUB = "OP_SUB", OPR_MUL = "OP_MUL",
  OPR_DIV = "OP_DIV", OPR_MOD = "OP_MOD", OPR_POW = "OP_POW",
}
luaK.comp_op = {
  OPR_EQ = "OP_EQ", OPR_NE = "OP_EQ", OPR_LT = "OP_LT",
  OPR_LE = "OP_LE", OPR_GT = "OP_LT", OPR_GE = "OP_LE",
}
luaK.comp_cond = {
  OPR_EQ = 1, OPR_NE = 0, OPR_LT = 1,
  OPR_LE = 1, OPR_GT = 0, OPR_GE = 0,
}
function luaK:posfix(fs, op, e1, e2)
  -- needed because e1 = e2 doesn't copy values...
  -- * in 5.0.x, only k/info/aux/t/f copied, t for AND, f for OR
  --   but here, all elements are copied for completeness' sake
  local function copyexp(e1, e2)
    e1.k = e2.k
    e1.info = e2.info; e1.aux = e2.aux
    e1.nval = e2.nval
    e1.t = e2.t; e1.f = e2.f
  end
  if op == "OPR_AND" then
    assert(e1.t == self.NO_JUMP)  -- list must be closed
    self:dischargevars(fs, e2)
    e2.f = self:concat(fs, e2.f, e1.f)
    copyexp(e1, e2)
  elseif op == "OPR_OR" then
    assert(e1.f == self.NO_JUMP)  -- list must be closed
    self:dischargevars(fs, e2)
    e2.t = self:concat(fs, e2.t, e1.t)
    copyexp(e1, e2)
  elseif op == "OPR_CONCAT" then
    self:exp2val(fs, e2)
    if e2.k == "VRELOCABLE" and luaP:GET_OPCODE(self:getcode(fs, e2)) == "OP_CONCAT" then
      assert(e1.info == luaP:GETARG_B(self:getcode(fs, e2)) - 1)
      self:freeexp(fs, e1)
      luaP:SETARG_B(self:getcode(fs, e2), e1.info)
      e1.k = "VRELOCABLE"
      e1.info = e2.info
    else
      self:exp2nextreg(fs, e2)  -- operand must be on the 'stack'
      self:codearith(fs, "OP_CONCAT", e1, e2)
    end
  else
    -- the following uses a table lookup in place of conditionals
    local arith = self.arith_op[op]
    if arith then
      self:codearith(fs, arith, e1, e2)
    else
      local comp = self.comp_op[op]
      if comp then
        self:codecomp(fs, comp, self.comp_cond[op], e1, e2)
      else
        assert(0)
      end
    end--if arith
  end--if op
end

------------------------------------------------------------------------
-- adjusts debug information for last instruction written, in order to
-- change the line where item comes into existence
-- * used in (lparser) luaY:funcargs(), luaY:forbody(), luaY:funcstat()
------------------------------------------------------------------------
function luaK:fixline(fs, line)
  fs.f.lineinfo[fs.pc - 1] = line
end

------------------------------------------------------------------------
-- general function to write an instruction into the instruction buffer,
-- sets debug information too
-- * used in luaK:codeABC(), luaK:codeABx()
-- * called directly by (lparser) luaY:whilestat()
------------------------------------------------------------------------
function luaK:code(fs, i, line)
  local f = fs.f
  self:dischargejpc(fs)  -- 'pc' will change
  -- put new instruction in code array
  luaY:growvector(fs.L, f.code, fs.pc, f.sizecode, nil,
                  luaY.MAX_INT, "code size overflow")
  f.code[fs.pc] = i
  -- save corresponding line information
  luaY:growvector(fs.L, f.lineinfo, fs.pc, f.sizelineinfo, nil,
                  luaY.MAX_INT, "code size overflow")
  f.lineinfo[fs.pc] = line
  local pc = fs.pc
  fs.pc = fs.pc + 1
  return pc
end

------------------------------------------------------------------------
-- writes an instruction of type ABC
-- * calls luaK:code()
------------------------------------------------------------------------
function luaK:codeABC(fs, o, a, b, c)
  assert(luaP:getOpMode(o) == luaP.OpMode.iABC)
  assert(luaP:getBMode(o) ~= luaP.OpArgMask.OpArgN or b == 0)
  assert(luaP:getCMode(o) ~= luaP.OpArgMask.OpArgN or c == 0)
  return self:code(fs, luaP:CREATE_ABC(o, a, b, c), fs.ls.lastline)
end

------------------------------------------------------------------------
-- writes an instruction of type ABx
-- * calls luaK:code(), called by luaK:codeAsBx()
------------------------------------------------------------------------
function luaK:codeABx(fs, o, a, bc)
  assert(luaP:getOpMode(o) == luaP.OpMode.iABx or
             luaP:getOpMode(o) == luaP.OpMode.iAsBx)
  assert(luaP:getCMode(o) == luaP.OpArgMask.OpArgN)
  return self:code(fs, luaP:CREATE_ABx(o, a, bc), fs.ls.lastline)
end

------------------------------------------------------------------------
--
-- * used in (lparser) luaY:closelistfield(), luaY:lastlistfield()
------------------------------------------------------------------------
function luaK:setlist(fs, base, nelems, tostore)
  local c = math.floor((nelems - 1)/luaP.LFIELDS_PER_FLUSH) + 1
  local b = (tostore == luaY.LUA_MULTRET) and 0 or tostore
  assert(tostore ~= 0)
  if c <= luaP.MAXARG_C then
    self:codeABC(fs, "OP_SETLIST", base, b, c)
  else
    self:codeABC(fs, "OP_SETLIST", base, b, 0)
    self:code(fs, luaP:CREATE_Inst(c), fs.ls.lastline)
  end
  fs.freereg = base + 1  -- free registers with list values
end

return function(a) luaY = a return luaK end
end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaY
G2L_MODULES[G2L["370"]] = {
Closure = function()
local script = G2L["370"]
--[[--------------------------------------------------------------------

  lparser.lua
  Lua 5 parser in Lua
  This file is part of Yueliang.

  Copyright (c) 2005-2007 Kein-Hong Man <khman@users.sf.net>
  The COPYRIGHT file describes the conditions
  under which this software may be distributed.

  See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * some unused C code that were not converted are kept as comments
-- * LUA_COMPAT_VARARG option changed into a comment block
-- * for value/size specific code added, look for 'NOTE: '
--
-- Not implemented:
-- * luaX_newstring not needed by this Lua implementation
-- * luaG_checkcode() in assert is not currently implemented
--
-- Added:
-- * some constants added from various header files
-- * luaY.LUA_QS used in error_expected, check_match (from luaconf.h)
-- * luaY:LUA_QL needed for error messages (from luaconf.h)
-- * luaY:growvector (from lmem.h) -- skeleton only, limit checking
-- * luaY.SHRT_MAX (from <limits.h>) for registerlocalvar
-- * luaY:newproto (from lfunc.c)
-- * luaY:int2fb (from lobject.c)
-- * NOTE: HASARG_MASK, for implementing a VARARG_HASARG bit operation
-- * NOTE: value-specific code for VARARG_NEEDSARG to replace a bitop
--
-- Changed in 5.1.x:
-- * various code changes are not detailed...
-- * names of constants may have changed, e.g. added a LUAI_ prefix
-- * struct expkind: added VKNUM, VVARARG; VCALL's info changed?
-- * struct expdesc: added nval
-- * struct FuncState: upvalues data type changed to upvaldesc
-- * macro hasmultret is new
-- * function checklimit moved to parser from lexer
-- * functions anchor_token, errorlimit, checknext are new
-- * checknext is new, equivalent to 5.0.x's check, see check too
-- * luaY:next and luaY:lookahead moved to lexer
-- * break keyword no longer skipped in luaY:breakstat
-- * function new_localvarstr replaced by new_localvarliteral
-- * registerlocalvar limits local variables to SHRT_MAX
-- * create_local deleted, new_localvarliteral used instead
-- * constant LUAI_MAXUPVALUES increased to 60
-- * constants MAXPARAMS, LUA_MAXPARSERLEVEL, MAXSTACK removed
-- * function interface changed: singlevaraux, singlevar
-- * enterlevel and leavelevel uses nCcalls to track call depth
-- * added a name argument to main entry function, luaY:parser
-- * function luaY_index changed to yindex
-- * luaY:int2fb()'s table size encoding format has been changed
-- * luaY:log2() no longer needed for table constructors
-- * function code_params deleted, functionality folded in parlist
-- * vararg flags handling (is_vararg) changes; also see VARARG_*
-- * LUA_COMPATUPSYNTAX section for old-style upvalues removed
-- * repeatstat() calls chunk() instead of block()
-- * function interface changed: cond, test_then_block
-- * while statement implementation considerably simplified; MAXEXPWHILE
--   and EXTRAEXP no longer required, no limits to the complexity of a
--   while condition
-- * repeat, forbody statement implementation has major changes,
--   mostly due to new scoping behaviour of local variables
-- * OPR_MULT renamed to OPR_MUL
----------------------------------------------------------------------]]

--requires luaP, luaX, luaK
local luaY = {}
local luaX = require(script.Parent.LuaX)
local luaK = require(script.Parent.LuaK)(luaY)
local luaP = require(script.Parent.LuaP)

--[[--------------------------------------------------------------------
-- Expression descriptor
-- * expkind changed to string constants; luaY:assignment was the only
--   function to use a relational operator with this enumeration
-- VVOID       -- no value
-- VNIL        -- no value
-- VTRUE       -- no value
-- VFALSE      -- no value
-- VK          -- info = index of constant in 'k'
-- VKNUM       -- nval = numerical value
-- VLOCAL      -- info = local register
-- VUPVAL,     -- info = index of upvalue in 'upvalues'
-- VGLOBAL     -- info = index of table; aux = index of global name in 'k'
-- VINDEXED    -- info = table register; aux = index register (or 'k')
-- VJMP        -- info = instruction pc
-- VRELOCABLE  -- info = instruction pc
-- VNONRELOC   -- info = result register
-- VCALL       -- info = instruction pc
-- VVARARG     -- info = instruction pc
} ----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- * expdesc in Lua 5.1.x has a union u and another struct s; this Lua
--   implementation ignores all instances of u and s usage
-- struct expdesc:
--   k  -- (enum: expkind)
--   info, aux -- (int, int)
--   nval -- (lua_Number)
--   t  -- patch list of 'exit when true'
--   f  -- patch list of 'exit when false'
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct upvaldesc:
--   k  -- (lu_byte)
--   info -- (lu_byte)
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- state needed to generate code for a given function
-- struct FuncState:
--   f  -- current function header (table: Proto)
--   h  -- table to find (and reuse) elements in 'k' (table: Table)
--   prev  -- enclosing function (table: FuncState)
--   ls  -- lexical state (table: LexState)
--   L  -- copy of the Lua state (table: lua_State)
--   bl  -- chain of current blocks (table: BlockCnt)
--   pc  -- next position to code (equivalent to 'ncode')
--   lasttarget   -- 'pc' of last 'jump target'
--   jpc  -- list of pending jumps to 'pc'
--   freereg  -- first free register
--   nk  -- number of elements in 'k'
--   np  -- number of elements in 'p'
--   nlocvars  -- number of elements in 'locvars'
--   nactvar  -- number of active local variables
--   upvalues[LUAI_MAXUPVALUES]  -- upvalues (table: upvaldesc)
--   actvar[LUAI_MAXVARS]  -- declared-variable stack
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- constants used by parser
-- * picks up duplicate values from luaX if required
------------------------------------------------------------------------

luaY.LUA_QS = luaX.LUA_QS or "'%s'"  -- (from luaconf.h)

luaY.SHRT_MAX = 32767 -- (from <limits.h>)
luaY.LUAI_MAXVARS = 200  -- (luaconf.h)
luaY.LUAI_MAXUPVALUES = 60  -- (luaconf.h)
luaY.MAX_INT = luaX.MAX_INT or 2147483645  -- (from llimits.h)
  -- * INT_MAX-2 for 32-bit systems
luaY.LUAI_MAXCCALLS = 200  -- (from luaconf.h)

luaY.VARARG_HASARG = 1  -- (from lobject.h)
-- NOTE: HASARG_MASK is value-specific
luaY.HASARG_MASK = 2 -- this was added for a bitop in parlist()
luaY.VARARG_ISVARARG = 2
-- NOTE: there is some value-specific code that involves VARARG_NEEDSARG
luaY.VARARG_NEEDSARG = 4

luaY.LUA_MULTRET = -1  -- (lua.h)

--[[--------------------------------------------------------------------
-- other functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- LUA_QL describes how error messages quote program elements.
-- CHANGE it if you want a different appearance. (from luaconf.h)
------------------------------------------------------------------------
function luaY:LUA_QL(x)
  return "'"..x.."'"
end

------------------------------------------------------------------------
-- this is a stripped-down luaM_growvector (from lmem.h) which is a
-- macro based on luaM_growaux (in lmem.c); all the following does is
-- reproduce the size limit checking logic of the original function
-- so that error behaviour is identical; all arguments preserved for
-- convenience, even those which are unused
-- * set the t field to nil, since this originally does a sizeof(t)
-- * size (originally a pointer) is never updated, their final values
--   are set by luaY:close_func(), so overall things should still work
------------------------------------------------------------------------
function luaY:growvector(L, v, nelems, size, t, limit, e)
  if nelems >= limit then
    error(e)  -- was luaG_runerror
  end
end

------------------------------------------------------------------------
-- initialize a new function prototype structure (from lfunc.c)
-- * used only in open_func()
------------------------------------------------------------------------
function luaY:newproto(L)
  local f = {} -- Proto
  -- luaC_link(L, obj2gco(f), LUA_TPROTO); /* GC */
  f.k = {}
  f.sizek = 0
  f.p = {}
  f.sizep = 0
  f.code = {}
  f.sizecode = 0
  f.sizelineinfo = 0
  f.sizeupvalues = 0
  f.nups = 0
  f.upvalues = {}
  f.numparams = 0
  f.is_vararg = 0
  f.maxstacksize = 0
  f.lineinfo = {}
  f.sizelocvars = 0
  f.locvars = {}
  f.lineDefined = 0
  f.lastlinedefined = 0
  f.source = nil
  return f
end

------------------------------------------------------------------------
-- converts an integer to a "floating point byte", represented as
-- (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if
-- eeeee != 0 and (xxx) otherwise.
------------------------------------------------------------------------
function luaY:int2fb(x)
  local e = 0  -- exponent
  while x >= 16 do
    x = math.floor((x + 1) / 2)
    e = e + 1
  end
  if x < 8 then
    return x
  else
    return ((e + 1) * 8) + (x - 8)
  end
end

--[[--------------------------------------------------------------------
-- parser functions
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- true of the kind of expression produces multiple return values
------------------------------------------------------------------------
function luaY:hasmultret(k)
  return k == "VCALL" or k == "VVARARG"
end

------------------------------------------------------------------------
-- convenience function to access active local i, returns entry
------------------------------------------------------------------------
function luaY:getlocvar(fs, i)
  return fs.f.locvars[ fs.actvar[i] ]
end

------------------------------------------------------------------------
-- check a limit, string m provided as an error message
------------------------------------------------------------------------
function luaY:checklimit(fs, v, l, m)
  if v > l then self:errorlimit(fs, l, m) end
end

--[[--------------------------------------------------------------------
-- nodes for block list (list of active blocks)
-- struct BlockCnt:
--   previous  -- chain (table: BlockCnt)
--   breaklist  -- list of jumps out of this loop
--   nactvar  -- # active local variables outside the breakable structure
--   upval  -- true if some variable in the block is an upvalue (boolean)
--   isbreakable  -- true if 'block' is a loop (boolean)
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- prototypes for recursive non-terminal functions
------------------------------------------------------------------------
-- prototypes deleted; not required in Lua

------------------------------------------------------------------------
-- reanchor if last token is has a constant string, see close_func()
-- * used only in close_func()
------------------------------------------------------------------------
function luaY:anchor_token(ls)
  if ls.t.token == "TK_NAME" or ls.t.token == "TK_STRING" then
    -- not relevant to Lua implementation of parser
    -- local ts = ls.t.seminfo
    -- luaX_newstring(ls, getstr(ts), ts->tsv.len); /* C */
  end
end

------------------------------------------------------------------------
-- throws a syntax error if token expected is not there
------------------------------------------------------------------------
function luaY:error_expected(ls, token)
  luaX:syntaxerror(ls,
    string.format(self.LUA_QS.." expected", luaX:token2str(ls, token)))
end

------------------------------------------------------------------------
-- prepares error message for display, for limits exceeded
-- * used only in checklimit()
------------------------------------------------------------------------
function luaY:errorlimit(fs, limit, what)
  local msg = (fs.f.linedefined == 0) and
    string.format("main function has more than %d %s", limit, what) or
    string.format("function at line %d has more than %d %s",
                  fs.f.linedefined, limit, what)
  luaX:lexerror(fs.ls, msg, 0)
end

------------------------------------------------------------------------
-- tests for a token, returns outcome
-- * return value changed to boolean
------------------------------------------------------------------------
function luaY:testnext(ls, c)
  if ls.t.token == c then
    luaX:next(ls)
    return true
  else
    return false
  end
end

------------------------------------------------------------------------
-- check for existence of a token, throws error if not found
------------------------------------------------------------------------
function luaY:check(ls, c)
  if ls.t.token ~= c then
    self:error_expected(ls, c)
  end
end

------------------------------------------------------------------------
-- verify existence of a token, then skip it
------------------------------------------------------------------------
function luaY:checknext(ls, c)
  self:check(ls, c)
  luaX:next(ls)
end

------------------------------------------------------------------------
-- throws error if condition not matched
------------------------------------------------------------------------
function luaY:check_condition(ls, c, msg)
  if not c then luaX:syntaxerror(ls, msg) end
end

------------------------------------------------------------------------
-- verifies token conditions are met or else throw error
------------------------------------------------------------------------
function luaY:check_match(ls, what, who, where)
  if not self:testnext(ls, what) then
    if where == ls.linenumber then
      self:error_expected(ls, what)
    else
      luaX:syntaxerror(ls, string.format(
        self.LUA_QS.." expected (to close "..self.LUA_QS.." at line %d)",
        luaX:token2str(ls, what), luaX:token2str(ls, who), where))
    end
  end
end

------------------------------------------------------------------------
-- expect that token is a name, return the name
------------------------------------------------------------------------
function luaY:str_checkname(ls)
  self:check(ls, "TK_NAME")
  local ts = ls.t.seminfo
  luaX:next(ls)
  return ts
end

------------------------------------------------------------------------
-- initialize a struct expdesc, expression description data structure
------------------------------------------------------------------------
function luaY:init_exp(e, k, i)
  e.f, e.t = luaK.NO_JUMP, luaK.NO_JUMP
  e.k = k
  e.info = i
end

------------------------------------------------------------------------
-- adds given string s in string pool, sets e as VK
------------------------------------------------------------------------
function luaY:codestring(ls, e, s)
  self:init_exp(e, "VK", luaK:stringK(ls.fs, s))
end

------------------------------------------------------------------------
-- consume a name token, adds it to string pool, sets e as VK
------------------------------------------------------------------------
function luaY:checkname(ls, e)
  self:codestring(ls, e, self:str_checkname(ls))
end

------------------------------------------------------------------------
-- creates struct entry for a local variable
-- * used only in new_localvar()
------------------------------------------------------------------------
function luaY:registerlocalvar(ls, varname)
  local fs = ls.fs
  local f = fs.f
  self:growvector(ls.L, f.locvars, fs.nlocvars, f.sizelocvars,
                  nil, self.SHRT_MAX, "too many local variables")
  -- loop to initialize empty f.locvar positions not required
  f.locvars[fs.nlocvars] = {} -- LocVar
  f.locvars[fs.nlocvars].varname = varname
  -- luaC_objbarrier(ls.L, f, varname) /* GC */
  local nlocvars = fs.nlocvars
  fs.nlocvars = fs.nlocvars + 1
  return nlocvars
end

------------------------------------------------------------------------
-- creates a new local variable given a name and an offset from nactvar
-- * used in fornum(), forlist(), parlist(), body()
------------------------------------------------------------------------
function luaY:new_localvarliteral(ls, v, n)
  self:new_localvar(ls, v, n)
end

------------------------------------------------------------------------
-- register a local variable, set in active variable list
------------------------------------------------------------------------
function luaY:new_localvar(ls, name, n)
  local fs = ls.fs
  self:checklimit(fs, fs.nactvar + n + 1, self.LUAI_MAXVARS, "local variables")
  fs.actvar[fs.nactvar + n] = self:registerlocalvar(ls, name)
end

------------------------------------------------------------------------
-- adds nvars number of new local variables, set debug information
------------------------------------------------------------------------
function luaY:adjustlocalvars(ls, nvars)
  local fs = ls.fs
  fs.nactvar = fs.nactvar + nvars
  for i = nvars, 1, -1 do
    self:getlocvar(fs, fs.nactvar - i).startpc = fs.pc
  end
end

------------------------------------------------------------------------
-- removes a number of locals, set debug information
------------------------------------------------------------------------
function luaY:removevars(ls, tolevel)
  local fs = ls.fs
  while fs.nactvar > tolevel do
    fs.nactvar = fs.nactvar - 1
    self:getlocvar(fs, fs.nactvar).endpc = fs.pc
  end
end

------------------------------------------------------------------------
-- returns an existing upvalue index based on the given name, or
-- creates a new upvalue struct entry and returns the new index
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:indexupvalue(fs, name, v)
  local f = fs.f
  for i = 0, f.nups - 1 do
    if fs.upvalues[i].k == v.k and fs.upvalues[i].info == v.info then
      assert(f.upvalues[i] == name)
      return i
    end
  end
  -- new one
  self:checklimit(fs, f.nups + 1, self.LUAI_MAXUPVALUES, "upvalues")
  self:growvector(fs.L, f.upvalues, f.nups, f.sizeupvalues,
                  nil, self.MAX_INT, "")
  -- loop to initialize empty f.upvalues positions not required
  f.upvalues[f.nups] = name
  -- luaC_objbarrier(fs->L, f, name); /* GC */
  assert(v.k == "VLOCAL" or v.k == "VUPVAL")
  -- this is a partial copy; only k & info fields used
  fs.upvalues[f.nups] = { k = v.k, info = v.info }
  local nups = f.nups
  f.nups = f.nups + 1
  return nups
end

------------------------------------------------------------------------
-- search the local variable namespace of the given fs for a match
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:searchvar(fs, n)
  for i = fs.nactvar - 1, 0, -1 do
    if n == self:getlocvar(fs, i).varname then
      return i
    end
  end
  return -1  -- not found
end

------------------------------------------------------------------------
-- * mark upvalue flags in function states up to a given level
-- * used only in singlevaraux()
------------------------------------------------------------------------
function luaY:markupval(fs, level)
  local bl = fs.bl
  while bl and bl.nactvar > level do bl = bl.previous end
  if bl then bl.upval = true end
end

------------------------------------------------------------------------
-- handle locals, globals and upvalues and related processing
-- * search mechanism is recursive, calls itself to search parents
-- * used only in singlevar()
------------------------------------------------------------------------
function luaY:singlevaraux(fs, n, var, base)
  if fs == nil then  -- no more levels?
    self:init_exp(var, "VGLOBAL", luaP.NO_REG)  -- default is global variable
    return "VGLOBAL"
  else
    local v = self:searchvar(fs, n)  -- look up at current level
    if v >= 0 then
      self:init_exp(var, "VLOCAL", v)
      if base == 0 then
        self:markupval(fs, v)  -- local will be used as an upval
      end
      return "VLOCAL"
    else  -- not found at current level; try upper one
      if self:singlevaraux(fs.prev, n, var, 0) == "VGLOBAL" then
        return "VGLOBAL"
      end
      var.info = self:indexupvalue(fs, n, var)  -- else was LOCAL or UPVAL
      var.k = "VUPVAL"  -- upvalue in this level
      return "VUPVAL"
    end--if v
  end--if fs
end

------------------------------------------------------------------------
-- consume a name token, creates a variable (global|local|upvalue)
-- * used in prefixexp(), funcname()
------------------------------------------------------------------------
function luaY:singlevar(ls, var)
  local varname = self:str_checkname(ls)
  local fs = ls.fs
  if self:singlevaraux(fs, varname, var, 1) == "VGLOBAL" then
    var.info = luaK:stringK(fs, varname)  -- info points to global name
  end
end

------------------------------------------------------------------------
-- adjust RHS to match LHS in an assignment
-- * used in assignment(), forlist(), localstat()
------------------------------------------------------------------------
function luaY:adjust_assign(ls, nvars, nexps, e)
  local fs = ls.fs
  local extra = nvars - nexps
  if self:hasmultret(e.k) then
    extra = extra + 1  -- includes call itself
    if extra <= 0 then extra = 0 end
    luaK:setreturns(fs, e, extra)  -- last exp. provides the difference
    if extra > 1 then luaK:reserveregs(fs, extra - 1) end
  else
    if e.k ~= "VVOID" then luaK:exp2nextreg(fs, e) end  -- close last expression
    if extra > 0 then
      local reg = fs.freereg
      luaK:reserveregs(fs, extra)
      luaK:_nil(fs, reg, extra)
    end
  end
end

------------------------------------------------------------------------
-- tracks and limits parsing depth, assert check at end of parsing
------------------------------------------------------------------------
function luaY:enterlevel(ls)
  ls.L.nCcalls = ls.L.nCcalls + 1
  if ls.L.nCcalls > self.LUAI_MAXCCALLS then
    luaX:lexerror(ls, "chunk has too many syntax levels", 0)
  end
end

------------------------------------------------------------------------
-- tracks parsing depth, a pair with luaY:enterlevel()
------------------------------------------------------------------------
function luaY:leavelevel(ls)
  ls.L.nCcalls = ls.L.nCcalls - 1
end

------------------------------------------------------------------------
-- enters a code unit, initializes elements
------------------------------------------------------------------------
function luaY:enterblock(fs, bl, isbreakable)
  bl.breaklist = luaK.NO_JUMP
  bl.isbreakable = isbreakable
  bl.nactvar = fs.nactvar
  bl.upval = false
  bl.previous = fs.bl
  fs.bl = bl
  assert(fs.freereg == fs.nactvar)
end

------------------------------------------------------------------------
-- leaves a code unit, close any upvalues
------------------------------------------------------------------------
function luaY:leaveblock(fs)
  local bl = fs.bl
  fs.bl = bl.previous
  self:removevars(fs.ls, bl.nactvar)
  if bl.upval then
    luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
  end
  -- a block either controls scope or breaks (never both)
  assert(not bl.isbreakable or not bl.upval)
  assert(bl.nactvar == fs.nactvar)
  fs.freereg = fs.nactvar  -- free registers
  luaK:patchtohere(fs, bl.breaklist)
end

------------------------------------------------------------------------
-- implement the instantiation of a function prototype, append list of
-- upvalues after the instantiation instruction
-- * used only in body()
------------------------------------------------------------------------
function luaY:pushclosure(ls, func, v)
  local fs = ls.fs
  local f = fs.f
  self:growvector(ls.L, f.p, fs.np, f.sizep, nil,
                  luaP.MAXARG_Bx, "constant table overflow")
  -- loop to initialize empty f.p positions not required
  f.p[fs.np] = func.f
  fs.np = fs.np + 1
  -- luaC_objbarrier(ls->L, f, func->f); /* C */
  self:init_exp(v, "VRELOCABLE", luaK:codeABx(fs, "OP_CLOSURE", 0, fs.np - 1))
  for i = 0, func.f.nups - 1 do
    local o = (func.upvalues[i].k == "VLOCAL") and "OP_MOVE" or "OP_GETUPVAL"
    luaK:codeABC(fs, o, 0, func.upvalues[i].info, 0)
  end
end

------------------------------------------------------------------------
-- opening of a function
------------------------------------------------------------------------
function luaY:open_func(ls, fs)
  local L = ls.L
  local f = self:newproto(ls.L)
  fs.f = f
  fs.prev = ls.fs  -- linked list of funcstates
  fs.ls = ls
  fs.L = L
  ls.fs = fs
  fs.pc = 0
  fs.lasttarget = -1
  fs.jpc = luaK.NO_JUMP
  fs.freereg = 0
  fs.nk = 0
  fs.np = 0
  fs.nlocvars = 0
  fs.nactvar = 0
  fs.bl = nil
  f.source = ls.source
  f.maxstacksize = 2  -- registers 0/1 are always valid
  fs.h = {}  -- constant table; was luaH_new call
  -- anchor table of constants and prototype (to avoid being collected)
  -- sethvalue2s(L, L->top, fs->h); incr_top(L); /* C */
  -- setptvalue2s(L, L->top, f); incr_top(L);
end

------------------------------------------------------------------------
-- closing of a function
------------------------------------------------------------------------
function luaY:close_func(ls)
  local L = ls.L
  local fs = ls.fs
  local f = fs.f
  self:removevars(ls, 0)
  luaK:ret(fs, 0, 0)  -- final return
  -- luaM_reallocvector deleted for f->code, f->lineinfo, f->k, f->p,
  -- f->locvars, f->upvalues; not required for Lua table arrays
  f.sizecode = fs.pc
  f.sizelineinfo = fs.pc
  f.sizek = fs.nk
  f.sizep = fs.np
  f.sizelocvars = fs.nlocvars
  f.sizeupvalues = f.nups
  --assert(luaG_checkcode(f))  -- currently not implemented
  assert(fs.bl == nil)
  ls.fs = fs.prev
  -- the following is not required for this implementation; kept here
  -- for completeness
  -- L->top -= 2;  /* remove table and prototype from the stack */
  -- last token read was anchored in defunct function; must reanchor it
  if fs then self:anchor_token(ls) end
end

------------------------------------------------------------------------
-- parser initialization function
-- * note additional sub-tables needed for LexState, FuncState
------------------------------------------------------------------------
function luaY:parser(L, z, buff, name)
  local lexstate = {}  -- LexState
        lexstate.t = {}
        lexstate.lookahead = {}
  local funcstate = {}  -- FuncState
        funcstate.upvalues = {}
        funcstate.actvar = {}
  -- the following nCcalls initialization added for convenience
  L.nCcalls = 0
  lexstate.buff = buff
  luaX:setinput(L, lexstate, z, name)
  self:open_func(lexstate, funcstate)
  funcstate.f.is_vararg = self.VARARG_ISVARARG  -- main func. is always vararg
  luaX:next(lexstate)  -- read first token
  self:chunk(lexstate)
  self:check(lexstate, "TK_EOS")
  self:close_func(lexstate)
  assert(funcstate.prev == nil)
  assert(funcstate.f.nups == 0)
  assert(lexstate.fs == nil)
  return funcstate.f
end

--[[--------------------------------------------------------------------
-- GRAMMAR RULES
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a function name suffix, for function call specifications
-- * used in primaryexp(), funcname()
------------------------------------------------------------------------
function luaY:field(ls, v)
  -- field -> ['.' | ':'] NAME
  local fs = ls.fs
  local key = {}  -- expdesc
  luaK:exp2anyreg(fs, v)
  luaX:next(ls)  -- skip the dot or colon
  self:checkname(ls, key)
  luaK:indexed(fs, v, key)
end

------------------------------------------------------------------------
-- parse a table indexing suffix, for constructors, expressions
-- * used in recfield(), primaryexp()
------------------------------------------------------------------------
function luaY:yindex(ls, v)
  -- index -> '[' expr ']'
  luaX:next(ls)  -- skip the '['
  self:expr(ls, v)
  luaK:exp2val(ls.fs, v)
  self:checknext(ls, "]")
end

--[[--------------------------------------------------------------------
-- Rules for Constructors
----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- struct ConsControl:
--   v  -- last list item read (table: struct expdesc)
--   t  -- table descriptor (table: struct expdesc)
--   nh  -- total number of 'record' elements
--   na  -- total number of array elements
--   tostore  -- number of array elements pending to be stored
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parse a table record (hash) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:recfield(ls, cc)
  -- recfield -> (NAME | '['exp1']') = exp1
  local fs = ls.fs
  local reg = ls.fs.freereg
  local key, val = {}, {}  -- expdesc
  if ls.t.token == "TK_NAME" then
    self:checklimit(fs, cc.nh, self.MAX_INT, "items in a constructor")
    self:checkname(ls, key)
  else  -- ls->t.token == '['
    self:yindex(ls, key)
  end
  cc.nh = cc.nh + 1
  self:checknext(ls, "=")
  local rkkey = luaK:exp2RK(fs, key)
  self:expr(ls, val)
  luaK:codeABC(fs, "OP_SETTABLE", cc.t.info, rkkey, luaK:exp2RK(fs, val))
  fs.freereg = reg  -- free registers
end

------------------------------------------------------------------------
-- emit a set list instruction if enough elements (LFIELDS_PER_FLUSH)
-- * used in constructor()
------------------------------------------------------------------------
function luaY:closelistfield(fs, cc)
  if cc.v.k == "VVOID" then return end  -- there is no list item
  luaK:exp2nextreg(fs, cc.v)
  cc.v.k = "VVOID"
  if cc.tostore == luaP.LFIELDS_PER_FLUSH then
    luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)  -- flush
    cc.tostore = 0  -- no more items pending
  end
end

------------------------------------------------------------------------
-- emit a set list instruction at the end of parsing list constructor
-- * used in constructor()
------------------------------------------------------------------------
function luaY:lastlistfield(fs, cc)
  if cc.tostore == 0 then return end
  if self:hasmultret(cc.v.k) then
    luaK:setmultret(fs, cc.v)
    luaK:setlist(fs, cc.t.info, cc.na, self.LUA_MULTRET)
    cc.na = cc.na - 1  -- do not count last expression (unknown number of elements)
  else
    if cc.v.k ~= "VVOID" then
      luaK:exp2nextreg(fs, cc.v)
    end
    luaK:setlist(fs, cc.t.info, cc.na, cc.tostore)
  end
end

------------------------------------------------------------------------
-- parse a table list (array) field
-- * used in constructor()
------------------------------------------------------------------------
function luaY:listfield(ls, cc)
  self:expr(ls, cc.v)
  self:checklimit(ls.fs, cc.na, self.MAX_INT, "items in a constructor")
  cc.na = cc.na + 1
  cc.tostore = cc.tostore + 1
end

------------------------------------------------------------------------
-- parse a table constructor
-- * used in funcargs(), simpleexp()
------------------------------------------------------------------------
function luaY:constructor(ls, t)
  -- constructor -> '{' [ field { fieldsep field } [ fieldsep ] ] '}'
  -- field -> recfield | listfield
  -- fieldsep -> ',' | ';'
  local fs = ls.fs
  local line = ls.linenumber
  local pc = luaK:codeABC(fs, "OP_NEWTABLE", 0, 0, 0)
  local cc = {}  -- ConsControl
        cc.v = {}
  cc.na, cc.nh, cc.tostore = 0, 0, 0
  cc.t = t
  self:init_exp(t, "VRELOCABLE", pc)
  self:init_exp(cc.v, "VVOID", 0)  -- no value (yet)
  luaK:exp2nextreg(ls.fs, t)  -- fix it at stack top (for gc)
  self:checknext(ls, "{")
  repeat
    assert(cc.v.k == "VVOID" or cc.tostore > 0)
    if ls.t.token == "}" then break end
    self:closelistfield(fs, cc)
    local c = ls.t.token

    if c == "TK_NAME" then  -- may be listfields or recfields
      luaX:lookahead(ls)
      if ls.lookahead.token ~= "=" then  -- expression?
        self:listfield(ls, cc)
      else
        self:recfield(ls, cc)
      end
    elseif c == "[" then  -- constructor_item -> recfield
      self:recfield(ls, cc)
    else  -- constructor_part -> listfield
      self:listfield(ls, cc)
    end
  until not self:testnext(ls, ",") and not self:testnext(ls, ";")
  self:check_match(ls, "}", "{", line)
  self:lastlistfield(fs, cc)
  luaP:SETARG_B(fs.f.code[pc], self:int2fb(cc.na)) -- set initial array size
  luaP:SETARG_C(fs.f.code[pc], self:int2fb(cc.nh)) -- set initial table size
end

-- }======================================================================

------------------------------------------------------------------------
-- parse the arguments (parameters) of a function declaration
-- * used in body()
------------------------------------------------------------------------
function luaY:parlist(ls)
  -- parlist -> [ param { ',' param } ]
  local fs = ls.fs
  local f = fs.f
  local nparams = 0
  f.is_vararg = 0
  if ls.t.token ~= ")" then  -- is 'parlist' not empty?
    repeat
      local c = ls.t.token
      if c == "TK_NAME" then  -- param -> NAME
        self:new_localvar(ls, self:str_checkname(ls), nparams)
        nparams = nparams + 1
      elseif c == "TK_DOTS" then  -- param -> `...'
        luaX:next(ls)
-- [[
-- #if defined(LUA_COMPAT_VARARG)
        -- use `arg' as default name
        self:new_localvarliteral(ls, "arg", nparams)
        nparams = nparams + 1
        f.is_vararg = self.VARARG_HASARG + self.VARARG_NEEDSARG
-- #endif
--]]
        f.is_vararg = f.is_vararg + self.VARARG_ISVARARG
      else
        luaX:syntaxerror(ls, "<name> or "..self:LUA_QL("...").." expected")
      end
    until f.is_vararg ~= 0 or not self:testnext(ls, ",")
  end--if
  self:adjustlocalvars(ls, nparams)
  -- NOTE: the following works only when HASARG_MASK is 2!
  f.numparams = fs.nactvar - (f.is_vararg % self.HASARG_MASK)
  luaK:reserveregs(fs, fs.nactvar)  -- reserve register for parameters
end

------------------------------------------------------------------------
-- parse function declaration body
-- * used in simpleexp(), localfunc(), funcstat()
------------------------------------------------------------------------
function luaY:body(ls, e, needself, line)
  -- body ->  '(' parlist ')' chunk END
  local new_fs = {}  -- FuncState
        new_fs.upvalues = {}
        new_fs.actvar = {}
  self:open_func(ls, new_fs)
  new_fs.f.lineDefined = line
  self:checknext(ls, "(")
  if needself then
    self:new_localvarliteral(ls, "self", 0)
    self:adjustlocalvars(ls, 1)
  end
  self:parlist(ls)
  self:checknext(ls, ")")
  self:chunk(ls)
  new_fs.f.lastlinedefined = ls.linenumber
  self:check_match(ls, "TK_END", "TK_FUNCTION", line)
  self:close_func(ls)
  self:pushclosure(ls, new_fs, e)
end

------------------------------------------------------------------------
-- parse a list of comma-separated expressions
-- * used is multiple locations
------------------------------------------------------------------------
function luaY:explist1(ls, v)
  -- explist1 -> expr { ',' expr }
  local n = 1  -- at least one expression
  self:expr(ls, v)
  while self:testnext(ls, ",") do
    luaK:exp2nextreg(ls.fs, v)
    self:expr(ls, v)
    n = n + 1
  end
  return n
end

------------------------------------------------------------------------
-- parse the parameters of a function call
-- * contrast with parlist(), used in function declarations
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:funcargs(ls, f)
  local fs = ls.fs
  local args = {}  -- expdesc
  local nparams
  local line = ls.linenumber
  local c = ls.t.token
  if c == "(" then  -- funcargs -> '(' [ explist1 ] ')'
    if line ~= ls.lastline then
      luaX:syntaxerror(ls, "ambiguous syntax (function call x new statement)")
    end
    luaX:next(ls)
    if ls.t.token == ")" then  -- arg list is empty?
      args.k = "VVOID"
    else
      self:explist1(ls, args)
      luaK:setmultret(fs, args)
    end
    self:check_match(ls, ")", "(", line)
  elseif c == "{" then  -- funcargs -> constructor
    self:constructor(ls, args)
  elseif c == "TK_STRING" then  -- funcargs -> STRING
    self:codestring(ls, args, ls.t.seminfo)
    luaX:next(ls)  -- must use 'seminfo' before 'next'
  else
    luaX:syntaxerror(ls, "function arguments expected")
    return
  end
  assert(f.k == "VNONRELOC")
  local base = f.info  -- base register for call
  if self:hasmultret(args.k) then
    nparams = self.LUA_MULTRET  -- open call
  else
    if args.k ~= "VVOID" then
      luaK:exp2nextreg(fs, args)  -- close last argument
    end
    nparams = fs.freereg - (base + 1)
  end
  self:init_exp(f, "VCALL", luaK:codeABC(fs, "OP_CALL", base, nparams + 1, 2))
  luaK:fixline(fs, line)
  fs.freereg = base + 1  -- call remove function and arguments and leaves
                         -- (unless changed) one result
end

--[[--------------------------------------------------------------------
-- Expression parsing
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- parses an expression in parentheses or a single variable
-- * used in primaryexp()
------------------------------------------------------------------------
function luaY:prefixexp(ls, v)
  -- prefixexp -> NAME | '(' expr ')'
  local c = ls.t.token
  if c == "(" then
    local line = ls.linenumber
    luaX:next(ls)
    self:expr(ls, v)
    self:check_match(ls, ")", "(", line)
    luaK:dischargevars(ls.fs, v)
  elseif c == "TK_NAME" then
    self:singlevar(ls, v)
  else
    luaX:syntaxerror(ls, "unexpected symbol")
  end--if c
  return
end

------------------------------------------------------------------------
-- parses a prefixexp (an expression in parentheses or a single variable)
-- or a function call specification
-- * used in simpleexp(), assignment(), exprstat()
------------------------------------------------------------------------
function luaY:primaryexp(ls, v)
  -- primaryexp ->
  --    prefixexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs }
  local fs = ls.fs
  self:prefixexp(ls, v)
  while true do
    local c = ls.t.token
    if c == "." then  -- field
      self:field(ls, v)
    elseif c == "[" then  -- '[' exp1 ']'
      local key = {}  -- expdesc
      luaK:exp2anyreg(fs, v)
      self:yindex(ls, key)
      luaK:indexed(fs, v, key)
    elseif c == ":" then  -- ':' NAME funcargs
      local key = {}  -- expdesc
      luaX:next(ls)
      self:checkname(ls, key)
      luaK:_self(fs, v, key)
      self:funcargs(ls, v)
    elseif c == "(" or c == "TK_STRING" or c == "{" then  -- funcargs
      luaK:exp2nextreg(fs, v)
      self:funcargs(ls, v)
    else
      return
    end--if c
  end--while
end

------------------------------------------------------------------------
-- parses general expression types, constants handled here
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:simpleexp(ls, v)
  -- simpleexp -> NUMBER | STRING | NIL | TRUE | FALSE | ... |
  --              constructor | FUNCTION body | primaryexp
  local c = ls.t.token
  if c == "TK_NUMBER" then
    self:init_exp(v, "VKNUM", 0)
    v.nval = ls.t.seminfo
  elseif c == "TK_STRING" then
    self:codestring(ls, v, ls.t.seminfo)
  elseif c == "TK_NIL" then
    self:init_exp(v, "VNIL", 0)
  elseif c == "TK_TRUE" then
    self:init_exp(v, "VTRUE", 0)
  elseif c == "TK_FALSE" then
    self:init_exp(v, "VFALSE", 0)
  elseif c == "TK_DOTS" then  -- vararg
    local fs = ls.fs
    self:check_condition(ls, fs.f.is_vararg ~= 0,
                    "cannot use "..self:LUA_QL("...").." outside a vararg function");
    -- NOTE: the following substitutes for a bitop, but is value-specific
    local is_vararg = fs.f.is_vararg
    if is_vararg >= self.VARARG_NEEDSARG then
      fs.f.is_vararg = is_vararg - self.VARARG_NEEDSARG  -- don't need 'arg'
    end
    self:init_exp(v, "VVARARG", luaK:codeABC(fs, "OP_VARARG", 0, 1, 0))
  elseif c == "{" then  -- constructor
    self:constructor(ls, v)
    return
  elseif c == "TK_FUNCTION" then
    luaX:next(ls)
    self:body(ls, v, false, ls.linenumber)
    return
  else
    self:primaryexp(ls, v)
    return
  end--if c
  luaX:next(ls)
end

------------------------------------------------------------------------
-- Translates unary operators tokens if found, otherwise returns
-- OPR_NOUNOPR. getunopr() and getbinopr() are used in subexpr().
-- * used in subexpr()
------------------------------------------------------------------------
function luaY:getunopr(op)
  if op == "TK_NOT" then
    return "OPR_NOT"
  elseif op == "-" then
    return "OPR_MINUS"
  elseif op == "#" then
    return "OPR_LEN"
  else
    return "OPR_NOUNOPR"
  end
end

------------------------------------------------------------------------
-- Translates binary operator tokens if found, otherwise returns
-- OPR_NOBINOPR. Code generation uses OPR_* style tokens.
-- * used in subexpr()
------------------------------------------------------------------------
luaY.getbinopr_table = {
  ["+"] = "OPR_ADD",
  ["-"] = "OPR_SUB",
  ["*"] = "OPR_MUL",
  ["/"] = "OPR_DIV",
  ["%"] = "OPR_MOD",
  ["^"] = "OPR_POW",
  ["TK_CONCAT"] = "OPR_CONCAT",
  ["TK_NE"] = "OPR_NE",
  ["TK_EQ"] = "OPR_EQ",
  ["<"] = "OPR_LT",
  ["TK_LE"] = "OPR_LE",
  [">"] = "OPR_GT",
  ["TK_GE"] = "OPR_GE",
  ["TK_AND"] = "OPR_AND",
  ["TK_OR"] = "OPR_OR",
}
function luaY:getbinopr(op)
  local opr = self.getbinopr_table[op]
  if opr then return opr else return "OPR_NOBINOPR" end
end

------------------------------------------------------------------------
-- the following priority table consists of pairs of left/right values
-- for binary operators (was a static const struct); grep for ORDER OPR
-- * the following struct is replaced:
--   static const struct {
--     lu_byte left;  /* left priority for each binary operator */
--     lu_byte right; /* right priority */
--   } priority[] = {  /* ORDER OPR */
------------------------------------------------------------------------
luaY.priority = {
  {6, 6}, {6, 6}, {7, 7}, {7, 7}, {7, 7}, -- `+' `-' `/' `%'
  {10, 9}, {5, 4},                 -- power and concat (right associative)
  {3, 3}, {3, 3},                  -- equality
  {3, 3}, {3, 3}, {3, 3}, {3, 3},  -- order
  {2, 2}, {1, 1}                   -- logical (and/or)
}

luaY.UNARY_PRIORITY = 8  -- priority for unary operators

------------------------------------------------------------------------
-- Parse subexpressions. Includes handling of unary operators and binary
-- operators. A subexpr is given the rhs priority level of the operator
-- immediately left of it, if any (limit is -1 if none,) and if a binop
-- is found, limit is compared with the lhs priority level of the binop
-- in order to determine which executes first.
------------------------------------------------------------------------

------------------------------------------------------------------------
-- subexpr -> (simpleexp | unop subexpr) { binop subexpr }
-- where 'binop' is any binary operator with a priority higher than 'limit'
-- * for priority lookups with self.priority[], 1=left and 2=right
-- * recursively called
-- * used in expr()
------------------------------------------------------------------------
function luaY:subexpr(ls, v, limit)
  self:enterlevel(ls)
  local uop = self:getunopr(ls.t.token)
  if uop ~= "OPR_NOUNOPR" then
    luaX:next(ls)
    self:subexpr(ls, v, self.UNARY_PRIORITY)
    luaK:prefix(ls.fs, uop, v)
  else
    self:simpleexp(ls, v)
  end
  -- expand while operators have priorities higher than 'limit'
  local op = self:getbinopr(ls.t.token)
  while op ~= "OPR_NOBINOPR" and self.priority[luaK.BinOpr[op] + 1][1] > limit do
    local v2 = {}  -- expdesc
    luaX:next(ls)
    luaK:infix(ls.fs, op, v)
    -- read sub-expression with higher priority
    local nextop = self:subexpr(ls, v2, self.priority[luaK.BinOpr[op] + 1][2])
    luaK:posfix(ls.fs, op, v, v2)
    op = nextop
  end
  self:leavelevel(ls)
  return op  -- return first untreated operator
end

------------------------------------------------------------------------
-- Expression parsing starts here. Function subexpr is entered with the
-- left operator (which is non-existent) priority of -1, which is lower
-- than all actual operators. Expr information is returned in parm v.
-- * used in multiple locations
------------------------------------------------------------------------
function luaY:expr(ls, v)
  self:subexpr(ls, v, 0)
end

-- }====================================================================

--[[--------------------------------------------------------------------
-- Rules for Statements
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks next token, used as a look-ahead
-- * returns boolean instead of 0|1
-- * used in retstat(), chunk()
------------------------------------------------------------------------
function luaY:block_follow(token)
  if token == "TK_ELSE" or token == "TK_ELSEIF" or token == "TK_END"
     or token == "TK_UNTIL" or token == "TK_EOS" then
    return true
  else
    return false
  end
end

------------------------------------------------------------------------
-- parse a code block or unit
-- * used in multiple functions
------------------------------------------------------------------------
function luaY:block(ls)
  -- block -> chunk
  local fs = ls.fs
  local bl = {}  -- BlockCnt
  self:enterblock(fs, bl, false)
  self:chunk(ls)
  assert(bl.breaklist == luaK.NO_JUMP)
  self:leaveblock(fs)
end

------------------------------------------------------------------------
-- structure to chain all variables in the left-hand side of an
-- assignment
-- struct LHS_assign:
--   prev  -- (table: struct LHS_assign)
--   v  -- variable (global, local, upvalue, or indexed) (table: expdesc)
------------------------------------------------------------------------

------------------------------------------------------------------------
-- check whether, in an assignment to a local variable, the local variable
-- is needed in a previous assignment (to a table). If so, save original
-- local value in a safe place and use this safe copy in the previous
-- assignment.
-- * used in assignment()
------------------------------------------------------------------------
function luaY:check_conflict(ls, lh, v)
  local fs = ls.fs
  local extra = fs.freereg  -- eventual position to save local variable
  local conflict = false
  while lh do
    if lh.v.k == "VINDEXED" then
      if lh.v.info == v.info then  -- conflict?
        conflict = true
        lh.v.info = extra  -- previous assignment will use safe copy
      end
      if lh.v.aux == v.info then  -- conflict?
        conflict = true
        lh.v.aux = extra  -- previous assignment will use safe copy
      end
    end
    lh = lh.prev
  end
  if conflict then
    luaK:codeABC(fs, "OP_MOVE", fs.freereg, v.info, 0)  -- make copy
    luaK:reserveregs(fs, 1)
  end
end

------------------------------------------------------------------------
-- parse a variable assignment sequence
-- * recursively called
-- * used in exprstat()
------------------------------------------------------------------------
function luaY:assignment(ls, lh, nvars)
  local e = {}  -- expdesc
  -- test was: VLOCAL <= lh->v.k && lh->v.k <= VINDEXED
  local c = lh.v.k
  self:check_condition(ls, c == "VLOCAL" or c == "VUPVAL" or c == "VGLOBAL"
                       or c == "VINDEXED", "syntax error")
  if self:testnext(ls, ",") then  -- assignment -> ',' primaryexp assignment
    local nv = {}  -- LHS_assign
          nv.v = {}
    nv.prev = lh
    self:primaryexp(ls, nv.v)
    if nv.v.k == "VLOCAL" then
      self:check_conflict(ls, lh, nv.v)
    end
    self:checklimit(ls.fs, nvars, self.LUAI_MAXCCALLS - ls.L.nCcalls,
                    "variables in assignment")
    self:assignment(ls, nv, nvars + 1)
  else  -- assignment -> '=' explist1
    self:checknext(ls, "=")
    local nexps = self:explist1(ls, e)
    if nexps ~= nvars then
      self:adjust_assign(ls, nvars, nexps, e)
      if nexps > nvars then
        ls.fs.freereg = ls.fs.freereg - (nexps - nvars)  -- remove extra values
      end
    else
      luaK:setoneret(ls.fs, e)  -- close last expression
      luaK:storevar(ls.fs, lh.v, e)
      return  -- avoid default
    end
  end
  self:init_exp(e, "VNONRELOC", ls.fs.freereg - 1)  -- default assignment
  luaK:storevar(ls.fs, lh.v, e)
end

------------------------------------------------------------------------
-- parse condition in a repeat statement or an if control structure
-- * used in repeatstat(), test_then_block()
------------------------------------------------------------------------
function luaY:cond(ls)
  -- cond -> exp
  local v = {}  -- expdesc
  self:expr(ls, v)  -- read condition
  if v.k == "VNIL" then v.k = "VFALSE" end  -- 'falses' are all equal here
  luaK:goiftrue(ls.fs, v)
  return v.f
end

------------------------------------------------------------------------
-- parse a break statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:breakstat(ls)
  -- stat -> BREAK
  local fs = ls.fs
  local bl = fs.bl
  local upval = false
  while bl and not bl.isbreakable do
    if bl.upval then upval = true end
    bl = bl.previous
  end
  if not bl then
    luaX:syntaxerror(ls, "no loop to break")
  end
  if upval then
    luaK:codeABC(fs, "OP_CLOSE", bl.nactvar, 0, 0)
  end
  bl.breaklist = luaK:concat(fs, bl.breaklist, luaK:jump(fs))
end

------------------------------------------------------------------------
-- parse a while-do control structure, body processed by block()
-- * with dynamic array sizes, MAXEXPWHILE + EXTRAEXP limits imposed by
--   the function's implementation can be removed
-- * used in statements()
------------------------------------------------------------------------
function luaY:whilestat(ls, line)
  -- whilestat -> WHILE cond DO block END
  local fs = ls.fs
  local bl = {}  -- BlockCnt
  luaX:next(ls)  -- skip WHILE
  local whileinit = luaK:getlabel(fs)
  local condexit = self:cond(ls)
  self:enterblock(fs, bl, true)
  self:checknext(ls, "TK_DO")
  self:block(ls)
  luaK:patchlist(fs, luaK:jump(fs), whileinit)
  self:check_match(ls, "TK_END", "TK_WHILE", line)
  self:leaveblock(fs)
  luaK:patchtohere(fs, condexit)  -- false conditions finish the loop
end

------------------------------------------------------------------------
-- parse a repeat-until control structure, body parsed by chunk()
-- * used in statements()
------------------------------------------------------------------------
function luaY:repeatstat(ls, line)
  -- repeatstat -> REPEAT block UNTIL cond
  local fs = ls.fs
  local repeat_init = luaK:getlabel(fs)
  local bl1, bl2 = {}, {}  -- BlockCnt
  self:enterblock(fs, bl1, true)  -- loop block
  self:enterblock(fs, bl2, false)  -- scope block
  luaX:next(ls)  -- skip REPEAT
  self:chunk(ls)
  self:check_match(ls, "TK_UNTIL", "TK_REPEAT", line)
  local condexit = self:cond(ls)  -- read condition (inside scope block)
  if not bl2.upval then  -- no upvalues?
    self:leaveblock(fs)  -- finish scope
    luaK:patchlist(ls.fs, condexit, repeat_init)  -- close the loop
  else  -- complete semantics when there are upvalues
    self:breakstat(ls)  -- if condition then break
    luaK:patchtohere(ls.fs, condexit)  -- else...
    self:leaveblock(fs)  -- finish scope...
    luaK:patchlist(ls.fs, luaK:jump(fs), repeat_init)  -- and repeat
  end
  self:leaveblock(fs)  -- finish loop
end

------------------------------------------------------------------------
-- parse the single expressions needed in numerical for loops
-- * used in fornum()
------------------------------------------------------------------------
function luaY:exp1(ls)
  local e = {}  -- expdesc
  self:expr(ls, e)
  local k = e.k
  luaK:exp2nextreg(ls.fs, e)
  return k
end

------------------------------------------------------------------------
-- parse a for loop body for both versions of the for loop
-- * used in fornum(), forlist()
------------------------------------------------------------------------
function luaY:forbody(ls, base, line, nvars, isnum)
  -- forbody -> DO block
  local bl = {}  -- BlockCnt
  local fs = ls.fs
  self:adjustlocalvars(ls, 3)  -- control variables
  self:checknext(ls, "TK_DO")
  local prep = isnum and luaK:codeAsBx(fs, "OP_FORPREP", base, luaK.NO_JUMP)
                     or luaK:jump(fs)
  self:enterblock(fs, bl, false)  -- scope for declared variables
  self:adjustlocalvars(ls, nvars)
  luaK:reserveregs(fs, nvars)
  self:block(ls)
  self:leaveblock(fs)  -- end of scope for declared variables
  luaK:patchtohere(fs, prep)
  local endfor = isnum and luaK:codeAsBx(fs, "OP_FORLOOP", base, luaK.NO_JUMP)
                       or luaK:codeABC(fs, "OP_TFORLOOP", base, 0, nvars)
  luaK:fixline(fs, line)  -- pretend that `OP_FOR' starts the loop
  luaK:patchlist(fs, isnum and endfor or luaK:jump(fs), prep + 1)
end

------------------------------------------------------------------------
-- parse a numerical for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:fornum(ls, varname, line)
  -- fornum -> NAME = exp1,exp1[,exp1] forbody
  local fs = ls.fs
  local base = fs.freereg
  self:new_localvarliteral(ls, "(for index)", 0)
  self:new_localvarliteral(ls, "(for limit)", 1)
  self:new_localvarliteral(ls, "(for step)", 2)
  self:new_localvar(ls, varname, 3)
  self:checknext(ls, '=')
  self:exp1(ls)  -- initial value
  self:checknext(ls, ",")
  self:exp1(ls)  -- limit
  if self:testnext(ls, ",") then
    self:exp1(ls)  -- optional step
  else  -- default step = 1
    luaK:codeABx(fs, "OP_LOADK", fs.freereg, luaK:numberK(fs, 1))
    luaK:reserveregs(fs, 1)
  end
  self:forbody(ls, base, line, 1, true)
end

------------------------------------------------------------------------
-- parse a generic for loop, calls forbody()
-- * used in forstat()
------------------------------------------------------------------------
function luaY:forlist(ls, indexname)
  -- forlist -> NAME {,NAME} IN explist1 forbody
  local fs = ls.fs
  local e = {}  -- expdesc
  local nvars = 0
  local base = fs.freereg
  -- create control variables
  self:new_localvarliteral(ls, "(for generator)", nvars)
  nvars = nvars + 1
  self:new_localvarliteral(ls, "(for state)", nvars)
  nvars = nvars + 1
  self:new_localvarliteral(ls, "(for control)", nvars)
  nvars = nvars + 1
  -- create declared variables
  self:new_localvar(ls, indexname, nvars)
  nvars = nvars + 1
  while self:testnext(ls, ",") do
    self:new_localvar(ls, self:str_checkname(ls), nvars)
    nvars = nvars + 1
  end
  self:checknext(ls, "TK_IN")
  local line = ls.linenumber
  self:adjust_assign(ls, 3, self:explist1(ls, e), e)
  luaK:checkstack(fs, 3)  -- extra space to call generator
  self:forbody(ls, base, line, nvars - 3, false)
end

------------------------------------------------------------------------
-- initial parsing for a for loop, calls fornum() or forlist()
-- * used in statements()
------------------------------------------------------------------------
function luaY:forstat(ls, line)
  -- forstat -> FOR (fornum | forlist) END
  local fs = ls.fs
  local bl = {}  -- BlockCnt
  self:enterblock(fs, bl, true)  -- scope for loop and control variables
  luaX:next(ls)  -- skip `for'
  local varname = self:str_checkname(ls)  -- first variable name
  local c = ls.t.token
  if c == "=" then
    self:fornum(ls, varname, line)
  elseif c == "," or c == "TK_IN" then
    self:forlist(ls, varname)
  else
    luaX:syntaxerror(ls, self:LUA_QL("=").." or "..self:LUA_QL("in").." expected")
  end
  self:check_match(ls, "TK_END", "TK_FOR", line)
  self:leaveblock(fs)  -- loop scope (`break' jumps to this point)
end

------------------------------------------------------------------------
-- parse part of an if control structure, including the condition
-- * used in ifstat()
------------------------------------------------------------------------
function luaY:test_then_block(ls)
  -- test_then_block -> [IF | ELSEIF] cond THEN block
  luaX:next(ls)  -- skip IF or ELSEIF
  local condexit = self:cond(ls)
  self:checknext(ls, "TK_THEN")
  self:block(ls)  -- `then' part
  return condexit
end

------------------------------------------------------------------------
-- parse an if control structure
-- * used in statements()
------------------------------------------------------------------------
function luaY:ifstat(ls, line)
  -- ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END
  local fs = ls.fs
  local escapelist = luaK.NO_JUMP
  local flist = self:test_then_block(ls)  -- IF cond THEN block
  while ls.t.token == "TK_ELSEIF" do
    escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
    luaK:patchtohere(fs, flist)
    flist = self:test_then_block(ls)  -- ELSEIF cond THEN block
  end
  if ls.t.token == "TK_ELSE" then
    escapelist = luaK:concat(fs, escapelist, luaK:jump(fs))
    luaK:patchtohere(fs, flist)
    luaX:next(ls)  -- skip ELSE (after patch, for correct line info)
    self:block(ls)  -- 'else' part
  else
    escapelist = luaK:concat(fs, escapelist, flist)
  end
  luaK:patchtohere(fs, escapelist)
  self:check_match(ls, "TK_END", "TK_IF", line)
end

------------------------------------------------------------------------
-- parse a local function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localfunc(ls)
  local v, b = {}, {}  -- expdesc
  local fs = ls.fs
  self:new_localvar(ls, self:str_checkname(ls), 0)
  self:init_exp(v, "VLOCAL", fs.freereg)
  luaK:reserveregs(fs, 1)
  self:adjustlocalvars(ls, 1)
  self:body(ls, b, false, ls.linenumber)
  luaK:storevar(fs, v, b)
  -- debug information will only see the variable after this point!
  self:getlocvar(fs, fs.nactvar - 1).startpc = fs.pc
end

------------------------------------------------------------------------
-- parse a local variable declaration statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:localstat(ls)
  -- stat -> LOCAL NAME {',' NAME} ['=' explist1]
  local nvars = 0
  local nexps
  local e = {}  -- expdesc
  repeat
    self:new_localvar(ls, self:str_checkname(ls), nvars)
    nvars = nvars + 1
  until not self:testnext(ls, ",")
  if self:testnext(ls, "=") then
    nexps = self:explist1(ls, e)
  else
    e.k = "VVOID"
    nexps = 0
  end
  self:adjust_assign(ls, nvars, nexps, e)
  self:adjustlocalvars(ls, nvars)
end

------------------------------------------------------------------------
-- parse a function name specification
-- * used in funcstat()
------------------------------------------------------------------------
function luaY:funcname(ls, v)
  -- funcname -> NAME {field} [':' NAME]
  local needself = false
  self:singlevar(ls, v)
  while ls.t.token == "." do
    self:field(ls, v)
  end
  if ls.t.token == ":" then
    needself = true
    self:field(ls, v)
  end
  return needself
end

------------------------------------------------------------------------
-- parse a function statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:funcstat(ls, line)
  -- funcstat -> FUNCTION funcname body
  local v, b = {}, {}  -- expdesc
  luaX:next(ls)  -- skip FUNCTION
  local needself = self:funcname(ls, v)
  self:body(ls, b, needself, line)
  luaK:storevar(ls.fs, v, b)
  luaK:fixline(ls.fs, line)  -- definition 'happens' in the first line
end

------------------------------------------------------------------------
-- parse a function call with no returns or an assignment statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:exprstat(ls)
  -- stat -> func | assignment
  local fs = ls.fs
  local v = {}  -- LHS_assign
        v.v = {}
  self:primaryexp(ls, v.v)
  if v.v.k == "VCALL" then  -- stat -> func
    luaP:SETARG_C(luaK:getcode(fs, v.v), 1)  -- call statement uses no results
  else  -- stat -> assignment
    v.prev = nil
    self:assignment(ls, v, 1)
  end
end

------------------------------------------------------------------------
-- parse a return statement
-- * used in statements()
------------------------------------------------------------------------
function luaY:retstat(ls)
  -- stat -> RETURN explist
  local fs = ls.fs
  local e = {}  -- expdesc
  local first, nret  -- registers with returned values
  luaX:next(ls)  -- skip RETURN
  if self:block_follow(ls.t.token) or ls.t.token == ";" then
    first, nret = 0, 0  -- return no values
  else
    nret = self:explist1(ls, e)  -- optional return values
    if self:hasmultret(e.k) then
      luaK:setmultret(fs, e)
      if e.k == "VCALL" and nret == 1 then  -- tail call?
        luaP:SET_OPCODE(luaK:getcode(fs, e), "OP_TAILCALL")
        assert(luaP:GETARG_A(luaK:getcode(fs, e)) == fs.nactvar)
      end
      first = fs.nactvar
      nret = self.LUA_MULTRET  -- return all values
    else
      if nret == 1 then  -- only one single value?
        first = luaK:exp2anyreg(fs, e)
      else
        luaK:exp2nextreg(fs, e)  -- values must go to the 'stack'
        first = fs.nactvar  -- return all 'active' values
        assert(nret == fs.freereg - first)
      end
    end--if
  end--if
  luaK:ret(fs, first, nret)
end

------------------------------------------------------------------------
-- initial parsing for statements, calls a lot of functions
-- * returns boolean instead of 0|1
-- * used in chunk()
------------------------------------------------------------------------
function luaY:statement(ls)
  local line = ls.linenumber  -- may be needed for error messages
  local c = ls.t.token
  if c == "TK_IF" then  -- stat -> ifstat
    self:ifstat(ls, line)
    return false
  elseif c == "TK_WHILE" then  -- stat -> whilestat
    self:whilestat(ls, line)
    return false
  elseif c == "TK_DO" then  -- stat -> DO block END
    luaX:next(ls)  -- skip DO
    self:block(ls)
    self:check_match(ls, "TK_END", "TK_DO", line)
    return false
  elseif c == "TK_FOR" then  -- stat -> forstat
    self:forstat(ls, line)
    return false
  elseif c == "TK_REPEAT" then  -- stat -> repeatstat
    self:repeatstat(ls, line)
    return false
  elseif c == "TK_FUNCTION" then  -- stat -> funcstat
    self:funcstat(ls, line)
    return false
  elseif c == "TK_LOCAL" then  -- stat -> localstat
    luaX:next(ls)  -- skip LOCAL
    if self:testnext(ls, "TK_FUNCTION") then  -- local function?
      self:localfunc(ls)
    else
      self:localstat(ls)
    end
    return false
  elseif c == "TK_RETURN" then  -- stat -> retstat
    self:retstat(ls)
    return true  -- must be last statement
  elseif c == "TK_BREAK" then  -- stat -> breakstat
    luaX:next(ls)  -- skip BREAK
    self:breakstat(ls)
    return true  -- must be last statement
  else
    self:exprstat(ls)
    return false  -- to avoid warnings
  end--if c
end

------------------------------------------------------------------------
-- parse a chunk, which consists of a bunch of statements
-- * used in parser(), body(), block(), repeatstat()
------------------------------------------------------------------------
function luaY:chunk(ls)
  -- chunk -> { stat [';'] }
  local islast = false
  self:enterlevel(ls)
  while not islast and not self:block_follow(ls.t.token) do
    islast = self:statement(ls)
    self:testnext(ls, ";")
    assert(ls.fs.f.maxstacksize >= ls.fs.freereg and
               ls.fs.freereg >= ls.fs.nactvar)
    ls.fs.freereg = ls.fs.nactvar  -- free registers
  end
  self:leavelevel(ls)
end

-- }======================================================================
return luaY
end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaX
G2L_MODULES[G2L["371"]] = {
Closure = function()
local script = G2L["371"]
--[[--------------------------------------------------------------------

  llex.lua
  Lua lexical analyzer in Lua
  This file is part of Yueliang.

  Copyright (c) 2005-2006 Kein-Hong Man <khman@users.sf.net>
  The COPYRIGHT file describes the conditions
  under which this software may be distributed.

  See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * intended to 'imitate' llex.c code; performance is not a concern
-- * tokens are strings; code structure largely retained
-- * deleted stuff (compared to llex.c) are noted, comments retained
-- * nextc() returns the currently read character to simplify coding
--   here; next() in llex.c does not return anything
-- * compatibility code is marked with "--#" comments
--
-- Added:
-- * luaX:chunkid (function luaO_chunkid from lobject.c)
-- * luaX:str2d (function luaO_str2d from lobject.c)
-- * luaX.LUA_QS used in luaX:lexerror (from luaconf.h)
-- * luaX.LUA_COMPAT_LSTR in luaX:read_long_string (from luaconf.h)
-- * luaX.MAX_INT used in luaX:inclinenumber (from llimits.h)
--
-- To use the lexer:
-- (1) luaX:init() to initialize the lexer
-- (2) luaX:setinput() to set the input stream to lex
-- (3) call luaX:next() or luaX:luaX:lookahead() to get tokens,
--     until "TK_EOS": luaX:next()
-- * since EOZ is returned as a string, be careful when regexp testing
--
-- Not implemented:
-- * luaX_newstring: not required by this Lua implementation
-- * buffer MAX_SIZET size limit (from llimits.h) test not implemented
--   in the interest of performance
-- * locale-aware number handling is largely redundant as Lua's
--   tonumber() function is already capable of this
--
-- Changed in 5.1.x:
-- * TK_NAME token order moved down
-- * string representation for TK_NAME, TK_NUMBER, TK_STRING changed
-- * token struct renamed to lower case (LS -> ls)
-- * LexState struct: removed nestlevel, added decpoint
-- * error message functions have been greatly simplified
-- * token2string renamed to luaX_tokens, exposed in llex.h
-- * lexer now handles all kinds of newlines, including CRLF
-- * shbang first line handling removed from luaX:setinput;
--   it is now done in lauxlib.c (luaL_loadfile)
-- * next(ls) macro renamed to nextc(ls) due to new luaX_next function
-- * EXTRABUFF and MAXNOCHECK removed due to lexer changes
-- * checkbuffer(ls, len) macro deleted
-- * luaX:read_numeral now has 3 support functions: luaX:trydecpoint,
--   luaX:buffreplace and (luaO_str2d from lobject.c) luaX:str2d
-- * luaX:read_numeral is now more promiscuous in slurping characters;
--   hexadecimal numbers was added, locale-aware decimal points too
-- * luaX:skip_sep is new; used by luaX:read_long_string
-- * luaX:read_long_string handles new-style long blocks, with some
--   optional compatibility code
-- * luaX:llex: parts changed to support new-style long blocks
-- * luaX:llex: readname functionality has been folded in
-- * luaX:llex: removed test for control characters
--
--------------------------------------------------------------------]]

local luaZ = require(script.Parent.LuaZ)

local luaX = {}

-- FIRST_RESERVED is not required as tokens are manipulated as strings
-- TOKEN_LEN deleted; maximum length of a reserved word not needed

------------------------------------------------------------------------
-- "ORDER RESERVED" deleted; enumeration in one place: luaX.RESERVED
------------------------------------------------------------------------

-- terminal symbols denoted by reserved words: TK_AND to TK_WHILE
-- other terminal symbols: TK_NAME to TK_EOS
luaX.RESERVED = [[
TK_AND and
TK_BREAK break
TK_DO do
TK_ELSE else
TK_ELSEIF elseif
TK_END end
TK_FALSE false
TK_FOR for
TK_FUNCTION function
TK_IF if
TK_IN in
TK_LOCAL local
TK_NIL nil
TK_NOT not
TK_OR or
TK_REPEAT repeat
TK_RETURN return
TK_THEN then
TK_TRUE true
TK_UNTIL until
TK_WHILE while
TK_CONCAT ..
TK_DOTS ...
TK_EQ ==
TK_GE >=
TK_LE <=
TK_NE ~=
TK_NAME <name>
TK_NUMBER <number>
TK_STRING <string>
TK_EOS <eof>]]

-- NUM_RESERVED is not required; number of reserved words

--[[--------------------------------------------------------------------
-- Instead of passing seminfo, the Token struct (e.g. ls.t) is passed
-- so that lexer functions can use its table element, ls.t.seminfo
--
-- SemInfo (struct no longer needed, a mixed-type value is used)
--
-- Token (struct of ls.t and ls.lookahead):
--   token  -- token symbol
--   seminfo  -- semantics information
--
-- LexState (struct of ls; ls is initialized by luaX:setinput):
--   current  -- current character (charint)
--   linenumber  -- input line counter
--   lastline  -- line of last token 'consumed'
--   t  -- current token (table: struct Token)
--   lookahead  -- look ahead token (table: struct Token)
--   fs  -- 'FuncState' is private to the parser
--   L -- LuaState
--   z  -- input stream
--   buff  -- buffer for tokens
--   source  -- current source name
--   decpoint -- locale decimal point
--   nestlevel  -- level of nested non-terminals
----------------------------------------------------------------------]]

-- luaX.tokens (was luaX_tokens) is now a hash; see luaX:init

luaX.MAXSRC = 80
luaX.MAX_INT = 2147483645       -- constants from elsewhere (see above)
luaX.LUA_QS = "'%s'"
luaX.LUA_COMPAT_LSTR = 1
--luaX.MAX_SIZET = 4294967293

------------------------------------------------------------------------
-- initialize lexer
-- * original luaX_init has code to create and register token strings
-- * luaX.tokens: TK_* -> token
-- * luaX.enums:  token -> TK_* (used in luaX:llex)
------------------------------------------------------------------------
function luaX:init()
  local tokens, enums = {}, {}
  for v in string.gmatch(self.RESERVED, "[^\n]+") do
    local _, _, tok, str = string.find(v, "(%S+)%s+(%S+)")
    tokens[tok] = str
    enums[str] = tok
  end
  self.tokens = tokens
  self.enums = enums
end

------------------------------------------------------------------------
-- returns a suitably-formatted chunk name or id
-- * from lobject.c, used in llex.c and ldebug.c
-- * the result, out, is returned (was first argument)
------------------------------------------------------------------------
function luaX:chunkid(source, bufflen)
  local out
  local first = string.sub(source, 1, 1)
  if first == "=" then
    out = string.sub(source, 2, bufflen)  -- remove first char
  else  -- out = "source", or "...source"
    if first == "@" then
      source = string.sub(source, 2)  -- skip the '@'
      bufflen = bufflen - #" '...' "
      local l = #source
      out = ""
      if l > bufflen then
        source = string.sub(source, 1 + l - bufflen)  -- get last part of file name
        out = out.."..."
      end
      out = out..source
    else  -- out = [string "string"]
      local len = string.find(source, "[\n\r]")  -- stop at first newline
      len = len and (len - 1) or #source
      bufflen = bufflen - #(" [string \"...\"] ")
      if len > bufflen then len = bufflen end
      out = "[string \""
      if len < #source then  -- must truncate?
        out = out..string.sub(source, 1, len).."..."
      else
        out = out..source
      end
      out = out.."\"]"
    end
  end
  return out
end

--[[--------------------------------------------------------------------
-- Support functions for lexer
-- * all lexer errors eventually reaches lexerror:
     syntaxerror -> lexerror
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- look up token and return keyword if found (also called by parser)
------------------------------------------------------------------------
function luaX:token2str(ls, token)
  if string.sub(token, 1, 3) ~= "TK_" then
    if string.find(token, "%c") then
      return string.format("char(%d)", string.byte(token))
    end
    return token
  else
  end
    return self.tokens[token]
end

------------------------------------------------------------------------
-- throws a lexer error
-- * txtToken has been made local to luaX:lexerror
-- * can't communicate LUA_ERRSYNTAX, so it is unimplemented
------------------------------------------------------------------------
function luaX:lexerror(ls, msg, token)
  local function txtToken(ls, token)
    if token == "TK_NAME" or
       token == "TK_STRING" or
       token == "TK_NUMBER" then
      return ls.buff
    else
      return self:token2str(ls, token)
    end
  end
  local buff = self:chunkid(ls.source, self.MAXSRC)
  local msg = string.format("%s:%d: %s", buff, ls.linenumber, msg)
  if token then
    msg = string.format("%s near "..self.LUA_QS, msg, txtToken(ls, token))
  end
  -- luaD_throw(ls->L, LUA_ERRSYNTAX)
  error(msg)
end

------------------------------------------------------------------------
-- throws a syntax error (mainly called by parser)
-- * ls.t.token has to be set by the function calling luaX:llex
--   (see luaX:next and luaX:lookahead elsewhere in this file)
------------------------------------------------------------------------
function luaX:syntaxerror(ls, msg)
  self:lexerror(ls, msg, ls.t.token)
end

------------------------------------------------------------------------
-- move on to next line
------------------------------------------------------------------------
function luaX:currIsNewline(ls)
  return ls.current == "\n" or ls.current == "\r"
end

function luaX:inclinenumber(ls)
  local old = ls.current
  -- lua_assert(currIsNewline(ls))
  self:nextc(ls)  -- skip '\n' or '\r'
  if self:currIsNewline(ls) and ls.current ~= old then
    self:nextc(ls)  -- skip '\n\r' or '\r\n'
  end
  ls.linenumber = ls.linenumber + 1
  if ls.linenumber >= self.MAX_INT then
    self:syntaxerror(ls, "chunk has too many lines")
  end
end

------------------------------------------------------------------------
-- initializes an input stream for lexing
-- * if ls (the lexer state) is passed as a table, then it is filled in,
--   otherwise it has to be retrieved as a return value
-- * LUA_MINBUFFER not used; buffer handling not required any more
------------------------------------------------------------------------
function luaX:setinput(L, ls, z, source)
  if not ls then ls = {} end  -- create struct
  if not ls.lookahead then ls.lookahead = {} end
  if not ls.t then ls.t = {} end
  ls.decpoint = "."
  ls.L = L
  ls.lookahead.token = "TK_EOS"  -- no look-ahead token
  ls.z = z
  ls.fs = nil
  ls.linenumber = 1
  ls.lastline = 1
  ls.source = source
  self:nextc(ls)  -- read first char
end

--[[--------------------------------------------------------------------
-- LEXICAL ANALYZER
----------------------------------------------------------------------]]

------------------------------------------------------------------------
-- checks if current character read is found in the set 'set'
------------------------------------------------------------------------
function luaX:check_next(ls, set)
  if not string.find(set, ls.current, 1, 1) then
    return false
  end
  self:save_and_next(ls)
  return true
end

------------------------------------------------------------------------
-- retrieve next token, checking the lookahead buffer if necessary
-- * note that the macro next(ls) in llex.c is now luaX:nextc
-- * utilized used in lparser.c (various places)
------------------------------------------------------------------------
function luaX:next(ls)
  ls.lastline = ls.linenumber
  if ls.lookahead.token ~= "TK_EOS" then  -- is there a look-ahead token?
    -- this must be copy-by-value
    ls.t.seminfo = ls.lookahead.seminfo  -- use this one
    ls.t.token = ls.lookahead.token
    ls.lookahead.token = "TK_EOS"  -- and discharge it
  else
    ls.t.token = self:llex(ls, ls.t)  -- read next token
  end
end

------------------------------------------------------------------------
-- fill in the lookahead buffer
-- * utilized used in lparser.c:constructor
------------------------------------------------------------------------
function luaX:lookahead(ls)
  -- lua_assert(ls.lookahead.token == "TK_EOS")
  ls.lookahead.token = self:llex(ls, ls.lookahead)
end

------------------------------------------------------------------------
-- gets the next character and returns it
-- * this is the next() macro in llex.c; see notes at the beginning
------------------------------------------------------------------------
function luaX:nextc(ls)
  local c = luaZ:zgetc(ls.z)
  ls.current = c
  return c
end

------------------------------------------------------------------------
-- saves the given character into the token buffer
-- * buffer handling code removed, not used in this implementation
-- * test for maximum token buffer length not used, makes things faster
------------------------------------------------------------------------

function luaX:save(ls, c)
  local buff = ls.buff
  -- if you want to use this, please uncomment luaX.MAX_SIZET further up
  --if #buff > self.MAX_SIZET then
  --  self:lexerror(ls, "lexical element too long")
  --end
  ls.buff = buff..c
end

------------------------------------------------------------------------
-- save current character into token buffer, grabs next character
-- * like luaX:nextc, returns the character read for convenience
------------------------------------------------------------------------
function luaX:save_and_next(ls)
  self:save(ls, ls.current)
  return self:nextc(ls)
end

------------------------------------------------------------------------
-- LUA_NUMBER
-- * luaX:read_numeral is the main lexer function to read a number
-- * luaX:str2d, luaX:buffreplace, luaX:trydecpoint are support functions
------------------------------------------------------------------------

------------------------------------------------------------------------
-- string to number converter (was luaO_str2d from lobject.c)
-- * returns the number, nil if fails (originally returns a boolean)
-- * conversion function originally lua_str2number(s,p), a macro which
--   maps to the strtod() function by default (from luaconf.h)
------------------------------------------------------------------------
function luaX:str2d(s)
  local result = tonumber(s)
  if result then return result end
  -- conversion failed
  if string.lower(string.sub(s, 1, 2)) == "0x" then  -- maybe an hexadecimal constant?
    result = tonumber(s, 16)
    if result then return result end  -- most common case
    -- Was: invalid trailing characters?
    -- In C, this function then skips over trailing spaces.
    -- true is returned if nothing else is found except for spaces.
    -- If there is still something else, then it returns a false.
    -- All this is not necessary using Lua's tonumber.
  end
  return nil
end

------------------------------------------------------------------------
-- single-character replacement, for locale-aware decimal points
------------------------------------------------------------------------
function luaX:buffreplace(ls, from, to)
  local result, buff = "", ls.buff
  for p = 1, #buff do
    local c = string.sub(buff, p, p)
    if c == from then c = to end
    result = result..c
  end
  ls.buff = result
end

------------------------------------------------------------------------
-- Attempt to convert a number by translating '.' decimal points to
-- the decimal point character used by the current locale. This is not
-- needed in Yueliang as Lua's tonumber() is already locale-aware.
-- Instead, the code is here in case the user implements localeconv().
------------------------------------------------------------------------
function luaX:trydecpoint(ls, Token)
  -- format error: try to update decimal point separator
  local old = ls.decpoint
  -- translate the following to Lua if you implement localeconv():
  -- struct lconv *cv = localeconv();
  -- ls->decpoint = (cv ? cv->decimal_point[0] : '.');
  self:buffreplace(ls, old, ls.decpoint)  -- try updated decimal separator
  local seminfo = self:str2d(ls.buff)
  Token.seminfo = seminfo
  if not seminfo then
    -- format error with correct decimal point: no more options
    self:buffreplace(ls, ls.decpoint, ".")  -- undo change (for error message)
    self:lexerror(ls, "malformed number", "TK_NUMBER")
  end
end

------------------------------------------------------------------------
-- main number conversion function
-- * "^%w$" needed in the scan in order to detect "EOZ"
------------------------------------------------------------------------
function luaX:read_numeral(ls, Token)
  -- lua_assert(string.find(ls.current, "%d"))
  repeat
    self:save_and_next(ls)
  until string.find(ls.current, "%D") and ls.current ~= "."
  if self:check_next(ls, "Ee") then  -- 'E'?
    self:check_next(ls, "+-")  -- optional exponent sign
  end
  while string.find(ls.current, "^%w$") or ls.current == "_" do
    self:save_and_next(ls)
  end
  self:buffreplace(ls, ".", ls.decpoint)  -- follow locale for decimal point
  local seminfo = self:str2d(ls.buff)
  Token.seminfo = seminfo
  if not seminfo then  -- format error?
    self:trydecpoint(ls, Token) -- try to update decimal point separator
  end
end

------------------------------------------------------------------------
-- count separators ("=") in a long string delimiter
-- * used by luaX:read_long_string
------------------------------------------------------------------------
function luaX:skip_sep(ls)
  local count = 0
  local s = ls.current
  -- lua_assert(s == "[" or s == "]")
  self:save_and_next(ls)
  while ls.current == "=" do
    self:save_and_next(ls)
    count = count + 1
  end
  return (ls.current == s) and count or (-count) - 1
end

------------------------------------------------------------------------
-- reads a long string or long comment
------------------------------------------------------------------------
function luaX:read_long_string(ls, Token, sep)
  local cont = 0
  self:save_and_next(ls)  -- skip 2nd '['
  if self:currIsNewline(ls) then  -- string starts with a newline?
    self:inclinenumber(ls)  -- skip it
  end
  while true do
    local c = ls.current
    if c == "EOZ" then
      self:lexerror(ls, Token and "unfinished long string" or
                    "unfinished long comment", "TK_EOS")
    elseif c == "[" then
      --# compatibility code start
      if self.LUA_COMPAT_LSTR then
        if self:skip_sep(ls) == sep then
          self:save_and_next(ls)  -- skip 2nd '['
          cont = cont + 1
          --# compatibility code start
          if self.LUA_COMPAT_LSTR == 1 then
            if sep == 0 then
              self:lexerror(ls, "nesting of [[...]] is deprecated", "[")
            end
          end
          --# compatibility code end
        end
      end
      --# compatibility code end
    elseif c == "]" then
      if self:skip_sep(ls) == sep then
        self:save_and_next(ls)  -- skip 2nd ']'
        --# compatibility code start
        if self.LUA_COMPAT_LSTR and self.LUA_COMPAT_LSTR == 2 then
          cont = cont - 1
          if sep == 0 and cont >= 0 then break end
        end
        --# compatibility code end
        break
      end
    elseif self:currIsNewline(ls) then
      self:save(ls, "\n")
      self:inclinenumber(ls)
      if not Token then ls.buff = "" end -- avoid wasting space
    else  -- default
      if Token then
        self:save_and_next(ls)
      else
        self:nextc(ls)
      end
    end--if c
  end--while
  if Token then
    local p = 3 + sep
    Token.seminfo = string.sub(ls.buff, p, -p)
  end
end

------------------------------------------------------------------------
-- reads a string
-- * has been restructured significantly compared to the original C code
------------------------------------------------------------------------

function luaX:read_string(ls, del, Token)
  self:save_and_next(ls)
  while ls.current ~= del do
    local c = ls.current
    if c == "EOZ" then
      self:lexerror(ls, "unfinished string", "TK_EOS")
    elseif self:currIsNewline(ls) then
      self:lexerror(ls, "unfinished string", "TK_STRING")
    elseif c == "\\" then
      c = self:nextc(ls)  -- do not save the '\'
      if self:currIsNewline(ls) then  -- go through
        self:save(ls, "\n")
        self:inclinenumber(ls)
      elseif c ~= "EOZ" then -- will raise an error next loop
        -- escapes handling greatly simplified here:
        local i = string.find("abfnrtv", c, 1, 1)
        if i then
          self:save(ls, string.sub("\a\b\f\n\r\t\v", i, i))
          self:nextc(ls)
        elseif not string.find(c, "%d") then
          self:save_and_next(ls)  -- handles \\, \", \', and \?
        else  -- \xxx
          c, i = 0, 0
          repeat
            c = 10 * c + ls.current
            self:nextc(ls)
            i = i + 1
          until i >= 3 or not string.find(ls.current, "%d")
          if c > 255 then  -- UCHAR_MAX
            self:lexerror(ls, "escape sequence too large", "TK_STRING")
          end
          self:save(ls, string.char(c))
        end
      end
    else
      self:save_and_next(ls)
    end--if c
  end--while
  self:save_and_next(ls)  -- skip delimiter
  Token.seminfo = string.sub(ls.buff, 2, -2)
end

------------------------------------------------------------------------
-- main lexer function
------------------------------------------------------------------------
function luaX:llex(ls, Token)
  ls.buff = ""
  while true do
    local c = ls.current
    ----------------------------------------------------------------
    if self:currIsNewline(ls) then
      self:inclinenumber(ls)
    ----------------------------------------------------------------
    elseif c == "-" then
      c = self:nextc(ls)
      if c ~= "-" then return "-" end
      -- else is a comment
      local sep = -1
      if self:nextc(ls) == '[' then
        sep = self:skip_sep(ls)
        ls.buff = ""  -- 'skip_sep' may dirty the buffer
      end
      if sep >= 0 then
        self:read_long_string(ls, nil, sep)  -- long comment
        ls.buff = ""
      else  -- else short comment
        while not self:currIsNewline(ls) and ls.current ~= "EOZ" do
          self:nextc(ls)
        end
      end
    ----------------------------------------------------------------
    elseif c == "[" then
      local sep = self:skip_sep(ls)
      if sep >= 0 then
        self:read_long_string(ls, Token, sep)
        return "TK_STRING"
      elseif sep == -1 then
        return "["
      else
        self:lexerror(ls, "invalid long string delimiter", "TK_STRING")
      end
    ----------------------------------------------------------------
    elseif c == "=" then
      c = self:nextc(ls)
      if c ~= "=" then return "="
      else self:nextc(ls); return "TK_EQ" end
    ----------------------------------------------------------------
    elseif c == "<" then
      c = self:nextc(ls)
      if c ~= "=" then return "<"
      else self:nextc(ls); return "TK_LE" end
    ----------------------------------------------------------------
    elseif c == ">" then
      c = self:nextc(ls)
      if c ~= "=" then return ">"
      else self:nextc(ls); return "TK_GE" end
    ----------------------------------------------------------------
    elseif c == "~" then
      c = self:nextc(ls)
      if c ~= "=" then return "~"
      else self:nextc(ls); return "TK_NE" end
    ----------------------------------------------------------------
    elseif c == "\"" or c == "'" then
      self:read_string(ls, c, Token)
      return "TK_STRING"
    ----------------------------------------------------------------
    elseif c == "." then
      c = self:save_and_next(ls)
      if self:check_next(ls, ".") then
        if self:check_next(ls, ".") then
          return "TK_DOTS"   -- ...
        else return "TK_CONCAT"   -- ..
        end
      elseif not string.find(c, "%d") then
        return "."
      else
        self:read_numeral(ls, Token)
        return "TK_NUMBER"
      end
    ----------------------------------------------------------------
    elseif c == "EOZ" then
      return "TK_EOS"
    ----------------------------------------------------------------
    else  -- default
      if string.find(c, "%s") then
        -- lua_assert(self:currIsNewline(ls))
        self:nextc(ls)
      elseif string.find(c, "%d") then
        self:read_numeral(ls, Token)
        return "TK_NUMBER"
      elseif string.find(c, "[_%a]") then
        -- identifier or reserved word
        repeat
          c = self:save_and_next(ls)
        until c == "EOZ" or not string.find(c, "[_%w]")
        local ts = ls.buff
        local tok = self.enums[ts]
        if tok then return tok end  -- reserved word?
        Token.seminfo = ts
        return "TK_NAME"
      else
        self:nextc(ls)
        return c  -- single-char tokens (+ - / ...)
      end
    ----------------------------------------------------------------
    end--if c
  end--while
end

return luaX
end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.Loadstring.LuaZ
G2L_MODULES[G2L["372"]] = {
Closure = function()
local script = G2L["372"]
--[[--------------------------------------------------------------------

  lzio.lua
  Lua buffered streams in Lua
  This file is part of Yueliang.

  Copyright (c) 2005-2006 Kein-Hong Man <khman@users.sf.net>
  The COPYRIGHT file describes the conditions
  under which this software may be distributed.

  See the ChangeLog for more information.

----------------------------------------------------------------------]]

--[[--------------------------------------------------------------------
-- Notes:
-- * EOZ is implemented as a string, "EOZ"
-- * Format of z structure (ZIO)
--     z.n       -- bytes still unread
--     z.p       -- last read position position in buffer
--     z.reader  -- chunk reader function
--     z.data    -- additional data
-- * Current position, p, is now last read index instead of a pointer
--
-- Not implemented:
-- * luaZ_lookahead: used only in lapi.c:lua_load to detect binary chunk
-- * luaZ_read: used only in lundump.c:ezread to read +1 bytes
-- * luaZ_openspace: dropped; let Lua handle buffers as strings (used in
--   lundump.c:LoadString & lvm.c:luaV_concat)
-- * luaZ buffer macros: dropped; buffers are handled as strings
-- * lauxlib.c:getF reader implementation has an extraline flag to
--   skip over a shbang (#!) line, this is not implemented here
--
-- Added:
-- (both of the following are vaguely adapted from lauxlib.c)
-- * luaZ:make_getS: create Reader from a string
-- * luaZ:make_getF: create Reader that reads from a file
--
-- Changed in 5.1.x:
-- * Chunkreader renamed to Reader (ditto with Chunkwriter)
-- * Zio struct: no more name string, added Lua state for reader
--   (however, Yueliang readers do not require a Lua state)
----------------------------------------------------------------------]]

local luaZ = {}

------------------------------------------------------------------------
-- * reader() should return a string, or nil if nothing else to parse.
--   Additional data can be set only during stream initialization
-- * Readers are handled in lauxlib.c, see luaL_load(file|buffer|string)
-- * LUAL_BUFFERSIZE=BUFSIZ=512 in make_getF() (located in luaconf.h)
-- * Original Reader typedef:
--   const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);
-- * This Lua chunk reader implementation:
--   returns string or nil, no arguments to function
------------------------------------------------------------------------

------------------------------------------------------------------------
-- create a chunk reader from a source string
------------------------------------------------------------------------
function luaZ:make_getS(buff)
  local b = buff
  return function() -- chunk reader anonymous function here
    if not b then return nil end
    local data = b
    b = nil
    return data
  end
end

------------------------------------------------------------------------
-- create a chunk reader from a source file
------------------------------------------------------------------------
--[[
function luaZ:make_getF(filename)
  local LUAL_BUFFERSIZE = 512
  local h = io.open(filename, "r")
  if not h then return nil end
  return function() -- chunk reader anonymous function here
    if not h or io.type(h) == "closed file" then return nil end
    local buff = h:read(LUAL_BUFFERSIZE)
    if not buff then h:close(); h = nil end
    return buff
  end
end
--]]
------------------------------------------------------------------------
-- creates a zio input stream
-- returns the ZIO structure, z
------------------------------------------------------------------------
function luaZ:init(reader, data, name)
  if not reader then return end
  local z = {}
  z.reader = reader
  z.data = data or ""
  z.name = name
  -- set up additional data for reading
  if not data or data == "" then z.n = 0 else z.n = #data end
  z.p = 0
  return z
end

------------------------------------------------------------------------
-- fill up input buffer
------------------------------------------------------------------------
function luaZ:fill(z)
  local buff = z.reader()
  z.data = buff
  if not buff or buff == "" then return "EOZ" end
  z.n, z.p = #buff - 1, 1
  return string.sub(buff, 1, 1)
end

------------------------------------------------------------------------
-- get next character from the input stream
-- * local n, p are used to optimize code generation
------------------------------------------------------------------------
function luaZ:zgetc(z)
  local n, p = z.n, z.p + 1
  if n > 0 then
    z.n, z.p = n - 1, p
    return string.sub(z.data, p, p)
  else
    return self:fill(z)
  end
end

return luaZ
end
}
--ScreenGui.Frame.menu.sc.exe.Server Event.LocalScript
local function C_G2L_373()
local script = G2L["373"]
script.Parent.Parent.Parent.CodeScroll.Code.Changed:Connect(function()
	script.RemoteEvent:FireServer(script.Parent.Parent.Parent.CodeScroll.Code.Text)
end)
end
task.spawn(C_G2L_373)


--ScreenGui.Frame.menu.sc.hte.LocalScript
local function C_G2L_380()
local script = G2L["380"]
local on = false
	script.Parent.Parent.hte.MouseButton1Down:Connect(function()
		if on == false then
			on = true
			script.Parent.Parent.hte.BackgroundColor3 = Color3.new(0.109804, 1, 0.168627)
			script.Parent.Parent.unico.Visible = true
	else
				on = false
				script.Parent.Parent.hte.BackgroundColor3 = Color3.new(1, 0, 0)
		script.Parent.Parent.unico.Visible = false
	
		end
	end)
end
task.spawn(C_G2L_380)


--ScreenGui.Frame.menu.sc.service.LocalScript
local function C_G2L_382()
local script = G2L["382"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_382)


--ScreenGui.Frame.menu.sc.guns.LocalScript
local function C_G2L_386()
local script = G2L["386"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_386)


--ScreenGui.Frame.menu.sc.grab.LocalScript
local function C_G2L_390()
local script = G2L["390"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_390)


--ScreenGui.Frame.menu.sc.guner.LocalScript
local function C_G2L_394()
local script = G2L["394"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_394)


--ScreenGui.Frame.menu.sc.guner.LocalScript
local function C_G2L_398()
local script = G2L["398"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_398)


--ScreenGui.Frame.menu.sc.guner.LocalScript
local function C_G2L_402()
local script = G2L["402"]
script.Parent.MouseButton1Click:connect(function()
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_402)


--ScreenGui.Frame.menu.sc.uj.LocalScript
local function C_G2L_406()
local script = G2L["406"]

script.Parent.MouseButton1Click:connect(function() -- ClientHandler script (local script)
	script.ServerEvent:FireServer()
end)
end
task.spawn(C_G2L_406)


--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
local function C_G2L_414()
local script = G2L["414"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_414)


--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
local function C_G2L_418()
local script = G2L["418"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_418)


--ScreenGui.Frame.menu.sc.Mr bean.LocalScript
local function C_G2L_422()
local script = G2L["422"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_422)


--ScreenGui.Frame.menu.sc.Csutom.LocalScript
local function C_G2L_426()
local script = G2L["426"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_426)


--ScreenGui.Frame.menu.sc.Csutom.LocalScript
local function C_G2L_430()
local script = G2L["430"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_430)


--ScreenGui.Frame.menu.sc.abds.LocalScript
local function C_G2L_434()
local script = G2L["434"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_434)


--ScreenGui.Frame.menu.sc.Csutom.LocalScript
local function C_G2L_437()
local script = G2L["437"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_437)


--ScreenGui.Frame.menu.sc.Csutom.LocalScript
local function C_G2L_442()
local script = G2L["442"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_442)


--ScreenGui.Frame.menu.sc.laser.LocalScript
local function C_G2L_446()
local script = G2L["446"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_446)


--ScreenGui.Frame.menu.sc.laser.LocalScript
local function C_G2L_450()
local script = G2L["450"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_450)


--ScreenGui.Frame.menu.sc.laser.LocalScript
local function C_G2L_454()
local script = G2L["454"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_454)


--ScreenGui.Frame.menu.sc.suki.LocalScript
local function C_G2L_457()
local script = G2L["457"]
script.Parent.MouseButton1Click:Connect(function()
	--=Bird wings made by Lyokofan2000
	--Jump Two Time
	--Down Press Q
	--Wings Spin Press A Two Time
	--Wings Spin Press D Two Time

	script.Parent = nil

	function fly()

		for i,v in pairs(script:GetChildren()) do

			pcall(function() v.Value = "" end)

			game:GetService("Debris"):AddItem(v,.1)

		end

		function weld(p0,p1,c0,c1,par)

			local w = Instance.new("Weld",p0 or par)

			w.Part0 = p0

			w.Part1 = p1

			w.C0 = c0 or CFrame.new()

			w.C1 = c1 or CFrame.new()

			return w

		end

		local motors = {}

		function motor(p0,p1,c0,c1,des,vel,par)

			local w = Instance.new("Motor6D",p0 or par)

			w.Part0 = p0

			w.Part1 = p1

			w.C0 = c0 or CFrame.new()

			w.C1 = c1 or CFrame.new()

			w.MaxVelocity = tonumber(vel) or .05

			w.DesiredAngle = tonumber(des) or 0

			return w

		end

		function lerp(a,b,c)

			return a+(b-a)*c

		end

		function clerp(c1,c2,al)

			local com1 = {c1.X,c1.Y,c1.Z,c1:toEulerAnglesXYZ()}

			local com2 = {c2.X,c2.Y,c2.Z,c2:toEulerAnglesXYZ()}

			for i,v in pairs(com1) do

				com1[i] = lerp(v,com2[i],al)

			end

			return CFrame.new(com1[1],com1[2],com1[3]) * CFrame.Angles(select(4,unpack(com1)))

		end

		function ccomplerp(c1,c2,al)

			local com1 = {c1:components()}

			local com2 = {c2:components()}

			for i,v in pairs(com1) do

				com1[i] = lerp(v,com2[i],al)

			end

			return CFrame.new(unpack(com1))

		end

		function tickwave(time,length,offset)

			return (math.abs((tick()+(offset or 0))%time-time/2)*2-time/2)/time/2*length

		end

		function invcol(c)

			c = c.Color

			return BrickColor.new(Color3.new(1-c.b,1-c.g,1-c.r))

		end

		local oc = oc or function(...) return ... end

		local plr = game.Players.LocalPlayer

		local char = plr.Character

		local tor = char.Torso

		local hum = char.Humanoid

		hum.PlatformStand = false

		pcall(function()

			char.Wings:Destroy()

		end)

		pcall(function()

			char.Angel:Destroy() -- hat

		end)

		local mod = Instance.new("Model",char)

		mod.Name = "Wings"

		local special = {

			--antiboomz0r = {"Really black","Institutional white",0,0,false,Color3.new(1,1,.95),Color3.new(1,1,.6)},

			antiboomz0r = {"New Yeller",nil,0.4,0.7,true,Color3.new(1,1,.95),Color3.new(1,1,.6)},

			--antiboomz0r = {"Cyan","Toothpaste",0,0,false,Color3.new(1,0,0),Color3.new(0,0,0)},

			taart = {"Royal purple",nil,.4,.4,true},

			mitta = {"Black",nil,0,0,false},

			penjuin3 = {"White",nil,0,0,false},

			thepc8110 = {"Black","Bright red",.5,0,false,Color3.new(1,0,0),Color3.new(0,0,0)},

			nonspeaker = {"Cyan","Toothpaste",0,0,false,Color3.new(1,0,0),Color3.new(0,0,0)},

			littleau999 = {"Reddish brown",1030,0,0,false},

			unscripter = {"Really black","Really black",.2,0,true,Color3.new(0,0,0),Color3.new(0,0,0)},

			oxcool1 = {"Really black","White",.2,0,false,Color3.new(0,0,0),Color3.new(0,0,0)},

			krodmiss = {"Really black",nil,0,0,false},

		}

		local topcolor = invcol(char.Torso.BrickColor)

		local feacolor = char.Torso.BrickColor

		local ptrans = 0

		local pref = 0

		local fire = false

		local fmcol = Color3.new()

		local fscol = Color3.new()

		local spec = special[plr.Name:lower()]

		if spec then

			topcolor,feacolor,ptrans,pref,fire,fmcol,fscol = spec[1] and BrickColor.new(spec[1]) or topcolor,spec[2] and BrickColor.new(spec[2]) or feacolor,spec[3],spec[4],spec[5],spec[6],spec[7]

		end

		local part = Instance.new("Part")

		part.FormFactor = "Custom"

		part.Size = Vector3.new(.2,.2,.2)

		part.TopSurface,part.BottomSurface = 0,0

		part.CanCollide = false

		part.BrickColor = topcolor

		part.Transparency = ptrans

		part.Reflectance = pref

		local ef = Instance.new("Fire",fire and part or nil)

		ef.Size = .15

		ef.Color = fmcol or Color3.new()

		ef.SecondaryColor = fscol or Color3.new()

		part:BreakJoints()


		function newpart()

			local clone = part:Clone()

			clone.Parent = mod

			clone:BreakJoints()

			return clone

		end

		local feath = newpart()

		feath.BrickColor = feacolor

		feath.Transparency = 0

		Instance.new("SpecialMesh",feath).MeshType = "Sphere"

		function newfeather()

			local clone = feath:Clone()

			clone.Parent = mod

			clone:BreakJoints()

			return clone

		end


		---------- RIGHT WING

		local r1 = newpart()

		r1.Size = Vector3.new(.3,1.5,.3)*1.2

		local rm1 = motor(tor,r1,CFrame.new(.35,.6,.4) * CFrame.Angles(0,0,math.rad(-60)) * CFrame.Angles(math.rad(30),math.rad(-25),0),CFrame.new(0,-.8,0),.1)

		local r2 = newpart()

		r2.Size = Vector3.new(.4,1.8,.4)*1.2

		local rm2 = motor(r1,r2,CFrame.new(0,.75,0) * CFrame.Angles(0,0,math.rad(50)) * CFrame.Angles(math.rad(-30),math.rad(15),0),CFrame.new(0,-.9,0),.1)

		local r3 = newpart()

		r3.Size = Vector3.new(.3,2.2,.3)*1.2

		local rm3 = motor(r2,r3,CFrame.new(.1,.9,0) * CFrame.Angles(0,0,math.rad(-140)) * CFrame.Angles(math.rad(-3),0,0),CFrame.new(0,-1.1,0),.1)

		local r4 = newpart()

		r4.Size = Vector3.new(.25,1.2,.25)*1.2

		local rm4 = motor(r3,r4,CFrame.new(0,1.1,0) * CFrame.Angles(0,0,math.rad(-10)) * CFrame.Angles(math.rad(-3),0,0),CFrame.new(0,-.6,0),.1)

		local feather = newfeather()

		feather.Mesh.Scale = Vector3.new(1,1,1)

		feather.Size = Vector3.new(.4,3,.3)

		weld(r4,feather,CFrame.new(-.1,-.3,0),CFrame.new(0,-1.5,0))

		feather = newfeather()

		feather.Mesh.Scale = Vector3.new(1,1,1)

		feather.Size = Vector3.new(.4,2.3,.3)

		weld(r4,feather,CFrame.new(.1,-.1,0) * CFrame.Angles(0,math.random()*.1,0),CFrame.new(0,-1.1,0))

		feather = newfeather()

		feather.Mesh.Scale = Vector3.new(1,1,1)

		feather.Size = Vector3.new(.35,2.2,.25)

		weld(r4,feather,CFrame.new(.1,-.3,0) * CFrame.Angles(0,math.random()*.1,math.rad(-10)),CFrame.new(0,-1.1,0))

		local rf3 = {}

		for i=0,7 do

			feather = newfeather()

			feather.Mesh.Scale = Vector3.new(1,1,1)

			feather.Size = Vector3.new(.45,2.2,.35)

			table.insert(rf3,motor(r3,feather,CFrame.new(.05,1-i*.285,0) * CFrame.Angles(0,math.random()*.1,math.rad(-25-i*2)),CFrame.new(0,-feather.Size.Y/2,0)))

		end

		local rf2 = {}

		for i=0,6 do

			feather = newfeather()

			feather.Mesh.Scale = Vector3.new(1,1,1)

			feather.Size = Vector3.new(.45,2.2-i*.08,.3)

			table.insert(rf2,motor(r2,feather,CFrame.new(.05,.75-i*.26,0) * CFrame.Angles(0,math.random()*.1,math.rad(-75-i*4)),CFrame.new(0,-feather.Size.Y/2,0)))

		end

		local rf1 = {}

		for i=0,6 do

			feather = newfeather()

			feather.Mesh.Scale = Vector3.new(1,1,1)

			feather.Size = Vector3.new(.37,1.65-i*.06,.25)

			table.insert(rf1,motor(r1,feather,CFrame.new(.05,.63-i*.21,0) * CFrame.Angles(0,math.random()*.05,math.rad(-75)),CFrame.new(0,-feather.Size.Y/2,0)))

		end

		---------- LEFT WING

		local l1 = newpart()

		l1.Size = Vector3.new(.3,1.5,.3)*1.2

		local lm1 = motor(tor,l1,CFrame.new(-.35,.6,.4) * CFrame.Angles(0,0,math.rad(60)) * CFrame.Angles(math.rad(30),math.rad(25),0) * CFrame.Angles(0,-math.pi,0),CFrame.new(0,-.8,0) ,.1)

		local l2 = newpart()

		l2.Size = Vector3.new(.4,1.8,.4)*1.2

		local lm2 = motor(l1,l2,CFrame.new(0,.75,0) * CFrame.Angles(0,0,math.rad(50)) * CFrame.Angles(math.rad(30),math.rad(-15),0),CFrame.new(0,-.9,0),.1)

		local l3 = newpart()

		l3.Size = Vector3.new(.3,2.2,.3)*1.2

		local lm3 = motor(l2,l3,CFrame.new(.1,.9,0) * CFrame.Angles(0,0,math.rad(-140)) * CFrame.Angles(math.rad(3),0,0),CFrame.new(0,-1.1,0),.1)

		local l4 = newpart()

		l4.Size = Vector3.new(.25,1.2,.25)*1.2

		local lm4 = motor(l3,l4,CFrame.new(0,1.1,0) * CFrame.Angles(0,0,math.rad(-10)) * CFrame.Angles(math.rad(3),0,0),CFrame.new(0,-.6,0),.1)

		local feather = newfeather()

		feather.Mesh.Scale = Vector3.new(1,1,1)

		feather.Size = Vector3.new(.4,3,.3)

		weld(l4,feather,CFrame.new(-.1,-.3,0),CFrame.new(0,-1.5,0))

		feather = newfeather()

		feather.Mesh.Scale = Vector3.new(1,1,1)

		feather.Size = Vector3.new(.4,2.3,.3)

		weld(l4,feather,CFrame.new(.1,-.1,0) * CFrame.Angles(0,math.random()*.1,0),CFrame.new(0,-1.1,0))

		feather = newfeather()

		feather.Mesh.Scale = Vector3.new(1,1,1)

		feather.Size = Vector3.new(.35,2.2,.25)

		weld(l4,feather,CFrame.new(.1,-.3,0) * CFrame.Angles(0,math.random()*.1,math.rad(-10)),CFrame.new(0,-1.1,0))

		local lf3 = {}

		for i=0,7 do

			feather = newfeather()

			feather.Mesh.Scale = Vector3.new(1,1,1)

			feather.Size = Vector3.new(.45,2.2,.35)

			table.insert(lf3,motor(l3,feather,CFrame.new(.05,1-i*.285,0) * CFrame.Angles(0,math.random()*.1,math.rad(-25-i*2)),CFrame.new(0,-feather.Size.Y/2,0)))

		end

		local lf2 = {}

		for i=0,6 do

			feather = newfeather()

			feather.Mesh.Scale = Vector3.new(1,1,1)

			feather.Size = Vector3.new(.45,2.2-i*.08,.3)

			table.insert(lf2,motor(l2,feather,CFrame.new(.05,.75-i*.26,0) * CFrame.Angles(0,math.random()*.1,math.rad(-75-i*4)),CFrame.new(0,-feather.Size.Y/2,0)))

		end

		local lf1 = {}

		for i=0,6 do

			feather = newfeather()

			feather.Mesh.Scale = Vector3.new(1,1,1)

			feather.Size = Vector3.new(.37,1.65-i*.06,.25)

			table.insert(lf1,motor(l1,feather,CFrame.new(.05,.63-i*.21,0) * CFrame.Angles(0,math.random()*.05,math.rad(-75)),CFrame.new(0,-feather.Size.Y/2,0)))

		end

		local rwing = {rm1,rm2,rm3,rm4}

		local lwing = {lm1,lm2,lm3,lm4}

		local oc0 = {}

		for i,v in pairs(rwing) do

			oc0[v] = v.C0

		end

		for i,v in pairs(lwing) do

			oc0[v] = v.C0

		end

		function gotResized()

			if lastsize then

				if tor.Size == lastsize then return end -- This shouldn't happen?

				local scaleVec = tor.Size/lastsize

				for i,v in pairs(oc0) do

					oc0[i] = v-v.p+scaleVec*v.p

				end

				lastsize = tor.Size

			end

			lastsize = tor.Size

		end

		tor.Changed:connect(function(p)

			if p == "Size" then

				gotResized()

			end

		end)

		gotResized()

		local idle = {0,0.5,-.2,0; .05,.05,.1,.05; -.6,-1.5,.1,0;}--0,.3,0,0

		local outlow = {-.7,-.2,1.8,0; .3,.05,.1,.05; .2,0,0,0}

		local outhigh = {.5,-.2,1.8,0; .3,.05,.1,.05; .2,0,0,0}

		local veryhigh = {.9,-.3,1.9,0; .3,.05,.1,.05; .2,0,0,0}

		local flap1 = {-.3,.3,1.1,-.2; .3,.05,.1,.05; .2,-.6,0,0}

		local divebomb = {0,.2,.4,-.7; .3,.05,.1,.05; 0,-.5,-.6,0}


		function setwings(tab,time)

			time = time or 10

			for i=1,4 do

				rwing[i].DesiredAngle = tab[i]

				lwing[i].DesiredAngle = tab[i]

				rwing[i].MaxVelocity = math.abs(tab[i]-rwing[i].CurrentAngle)/time

				lwing[i].MaxVelocity = math.abs(tab[i]-lwing[i].CurrentAngle)/time

				local rcf = oc0[rwing[i]] * (tab[12+i] or CFrame.new())

				local lcf = oc0[lwing[i]] * (tab[12+i] or CFrame.new())

			end

			for i,v in pairs(rf1) do

				v.DesiredAngle = tab[9]

				v.MaxVelocity = math.abs(v.DesiredAngle-v.CurrentAngle)/time

			end

			for i,v in pairs(lf1) do

				v.DesiredAngle = tab[9]

				v.MaxVelocity = math.abs(v.DesiredAngle-v.CurrentAngle)/time

			end

			for i,v in pairs(rf2) do

				v.DesiredAngle = tab[10]

				v.MaxVelocity = math.abs(v.DesiredAngle-v.CurrentAngle)/time

			end

			for i,v in pairs(lf2) do

				v.DesiredAngle = tab[10]

				v.MaxVelocity = math.abs(v.DesiredAngle-v.CurrentAngle)/time

			end

			for i,v in pairs(rf3) do

				v.DesiredAngle = tab[11]

				v.MaxVelocity = math.abs(v.DesiredAngle-v.CurrentAngle)/time

			end

			for i,v in pairs(lf3) do

				v.DesiredAngle = tab[11]

				v.MaxVelocity = math.abs(v.DesiredAngle-v.CurrentAngle)/time

			end

		end

		setwings(outhigh,1)

		flying = false

		moving = false

		for i,v in pairs(tor:GetChildren()) do

			if v.ClassName:lower():match("body") then

				v:Destroy()

			end

		end

		local ctor = tor:Clone()

		ctor:ClearAllChildren()

		ctor.Name = "cTorso"

		ctor.Transparency = 1

		ctor.CanCollide = false

		ctor.FormFactor = "Custom"

		ctor.Size = Vector3.new(.2,.2,.2)

		ctor.Parent = mod

		weld(tor,ctor)

		local bg = Instance.new("BodyGyro",ctor)

		bg.maxTorque = Vector3.new()

		bg.P = 15000

		bg.D = 1000

		local bv = Instance.new("BodyVelocity",ctor)

		bv.maxForce = Vector3.new()

		bv.P = 15000

		vel = Vector3.new()

		cf = CFrame.new()

		flspd = 0


		keysdown = {}

		keypressed = {}

		ktime = {}

		descendtimer = 0

		jumptime = tick()

		hum.Jumping:connect(function()

			jumptime = tick()

		end)

		cam = workspace.CurrentCamera

		kd = plr:GetMouse().KeyDown:connect(oc(function(key) 

			keysdown[key] = true 

			keypressed[key] = true 

			if key == "q" then 

				descendtimer = tick() 

			elseif key == " " and not hum.Jump then 

				jumptime = tick()

			elseif (key == "a" or key == "d") and ktime[key] and tick()-ktime[key] < .3 and math.abs(reqrotx) < .3 then

				reqrotx = key == "a" and math.pi*2 or -math.pi*2

			end

			ktime[key] = tick() 

		end))

		ku = plr:GetMouse().KeyUp:connect(function(key) 

			keysdown[key] = false 

			if key == " " then 

				descendtimer = tick() 

			end 

		end)

		function mid(a,b,c)

			return math.max(a,math.min(b,c or -a))

		end

		function bn(a)

			return a and 1 or 0

		end

		function gm(tar)

			local m = 0

			for i,v in pairs(tar:GetChildren()) do

				if v:IsA("BasePart") then

					m = m + v:GetMass()

				end

				m = m + gm(v)

			end

			return m

		end

		reqrotx = 0

		local grav = 196.2

		local con

		con = game:GetService("RunService").Stepped:connect(oc(function()

        --[[if not mod:IsDescendantOf(workspace) then

                pcall(function() kd:disconnect() end)

                pcall(function() ku:disconnect() end)

                bg:Destroy()

                bv:Destroy()

                con:disconnect()

                script:Destroy()

                return

        end]]

			local obvel = tor.CFrame:vectorToObjectSpace(tor.Velocity)

			local sspd, uspd,fspd = obvel.X,obvel.Y,obvel.Z

			if flying then

				local lfldir = fldir

				fldir = cam.CoordinateFrame:vectorToWorldSpace(Vector3.new(bn(keysdown.d)-bn(keysdown.a),0,bn(keysdown.s)-bn(keysdown.w))).unit

				local lmoving = moving

				moving = fldir.magnitude > .1

				if lmoving and not moving then

					idledir = lfldir*Vector3.new(1,0,1)

					descendtimer = tick()

				end

				local dbomb = fldir.Y < -.6 or (moving and keysdown["1"])

				if moving and keysdown["0"] and lmoving then

					fldir = (Vector3.new(lfldir.X,math.min(fldir.Y,lfldir.Y+.01)-.1,lfldir.Z)+(fldir*Vector3.new(1,0,1))*.05).unit

				end

				local down = tor.CFrame:vectorToWorldSpace(Vector3.new(0,-1,0))

				local descending = (not moving and keysdown["q"] and not keysdown[" "])

				cf = ccomplerp(cf,CFrame.new(tor.Position,tor.Position+(not moving and idledir or fldir)),keysdown["0"] and .02 or .07)

				local gdown = not dbomb and cf.lookVector.Y < -.2 and tor.Velocity.unit.Y < .05

				hum.PlatformStand = true

				bg.maxTorque = Vector3.new(1,1,1)*9e5

				local rotvel = CFrame.new(Vector3.new(),tor.Velocity):toObjectSpace(CFrame.new(Vector3.new(),fldir)).lookVector

				bg.cframe = cf * CFrame.Angles(not moving and -.1 or -math.pi/2+.2,moving and mid(-2.5,rotvel.X/1.5) + reqrotx or 0,0)

				reqrotx = reqrotx - reqrotx/10

				bv.maxForce = Vector3.new(1,1,1)*9e4*.5

				local anioff =(bn(keysdown[" "])-bn(keysdown["q"]))/2

				local ani = tickwave(1.5-anioff,1)

				bv.velocity = bv.velocity:Lerp(Vector3.new(0,bn(not moving)*-ani*15+(descending and math.min(20,tick()-descendtimer)*-8 or bn(keysdown[" "])-bn(keysdown["q"]))*15,0)+vel,.6) 

				vel = moving and cf.lookVector*flspd or Vector3.new()

				flspd = math.min(120,lerp(flspd,moving and (fldir.Y<0 and flspd+(-fldir.Y)*grav/60 or math.max(50,flspd-fldir.Y*grav/300)) or 60,.4))

				setwings(moving and (gdown and outlow or dbomb and divebomb) or (descending and veryhigh or flap1),15)

				for i=1,4 do

					--CFrame.Angles(-.5+bn(i==3)*2.4+bn(i==4)*.5,.1+bn(i==2)*.5-bn(i==3)*1.1,bn(i==3)*.1)

					rwing[i].C0 = clerp(rwing[i].C0,oc0[rwing[i]] * (gdown and CFrame.new() or dbomb and CFrame.Angles(-.5+bn(i==3)*.4+bn(i==4)*.5,.1+bn(i==2)*.5-bn(i==3)*1.1,bn(i==3)*.1) or descending and CFrame.Angles(.3,0,0) or CFrame.Angles((i*.1+1.5)*ani,ani*-.5,1*ani)),descending and .8 or .2)

					lwing[i].C0 = clerp(lwing[i].C0,oc0[lwing[i]] * (gdown and CFrame.new() or dbomb and CFrame.Angles(-(-.5+bn(i==3)*.4+bn(i==4)*.5),-(.1+bn(i==2)*.5-bn(i==3)*1.1),bn(i==3)*.1) or descending and CFrame.Angles(-.3,0,0) or CFrame.Angles(-(i*.1+1.5)*ani,ani*.5,1*ani)),descending and .8 or .2)

				end

				local hit,ray = workspace:FindPartOnRayWithIgnoreList(Ray.new(tor.Position,Vector3.new(0,-3.5+math.min(0,bv.velocity.y)/30,0)),{char})

				if hit and down.Y < -.85 and tick()-flystart > 1 then

					flying = false

					hum.PlatformStand = false

					tor.Velocity = Vector3.new()

				end

			else

				bg.maxTorque = Vector3.new()

				bv.maxForce = Vector3.new()

				local ani = tickwave(walking and .8 or 4.5,1)

				setwings(idle,10)

				local x,y,z = fspd/160,uspd/700,sspd/900

				for i=1,4 do

					rwing[i].C0 = clerp(rwing[i].C0,oc0[rwing[i]] * CFrame.Angles(ani*.1 + -mid(-.1,x),0 + -mid(-.1,y) + bn(i==2)*.6,ani*.02 + -mid(-.1,z)),.2)

					lwing[i].C0 = clerp(lwing[i].C0,oc0[lwing[i]] * CFrame.Angles(ani*-.05 + mid(-.1,x),0 + mid(-.1,y) + -bn(i==2)*.6,ani*.02 + mid(-.1,z)),.2)

				end

				if keypressed[" "] and not flying and (tick()-jumptime > .05 and (tick()-jumptime < 3 or hum.Jump)) then

					vel = Vector3.new(0,50,0)

					bv.velocity = vel

					idledir = cam.CoordinateFrame.lookVector*Vector3.new(1,0,1)

					cf = tor.CFrame * CFrame.Angles(-.01,0,0)

					tor.CFrame = cf

					bg.cframe = cf

					flystart = tick()

					flying = true

				end

			end

			keypressed = {}

		end))



	end fly()

	--Bird Wings By Lyokofan2000
end)
end
task.spawn(C_G2L_457)


--ScreenGui.Frame.menu.sc.suki.LocalScript
local function C_G2L_462()
local script = G2L["462"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_462)


--ScreenGui.Frame.menu.sc.suki.LocalScript
local function C_G2L_467()
local script = G2L["467"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_467)


--ScreenGui.Frame.menu.sc.laser.LocalScript
local function C_G2L_471()
local script = G2L["471"]
script.Parent.MouseButton1Click:Connect(function()
	script.Parent.RemoteEvent:FireServer()
end)
end
task.spawn(C_G2L_471)


--ScreenGui.Frame.menu.sc.Console.Drag
local function C_G2L_476()
local script = G2L["476"]
local UserInputService = game:GetService("UserInputService")

local gui = script.Parent

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
end
task.spawn(C_G2L_476)


--ScreenGui.Frame.menu.sc.user.LocalScript
local function C_G2L_485()
local script = G2L["485"]
local textLabel = script.Parent  -- Reference to the TextLabel

-- Update the TextLabel text to the username
textLabel.Text = game.Players.LocalPlayer.Name

end
task.spawn(C_G2L_485)


--ScreenGui.Frame.menu.sc.unicord.LocalScript
local function C_G2L_488()
local script = G2L["488"]
local imageLabel = script.Parent  -- Reference to the ImageLabel
local player = game.Players.LocalPlayer  -- Reference to the local player

-- Function to load profile picture
local function updateProfilePicture()
	local profilePicUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"

	-- Set the ImageLabel's Image property to the local player's profile picture
	imageLabel.Image = profilePicUrl
end

-- Wait for the local player to be available
if player then
	-- Run the function to set the profile picture
	updateProfilePicture()
end

end
task.spawn(C_G2L_488)


--ScreenGui.Frame.menu.sc.unicord.LocalScript
local function C_G2L_490()
local script = G2L["490"]
local imageLabel = script.Parent  -- Reference to the ImageLabel
local player = game.Players.LocalPlayer  -- Reference to the local player

-- Function to load profile picture
local function updateProfilePicture()
	local profilePicUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"

	-- Set the ImageLabel's Image property to the local player's profile picture
	imageLabel.Image = profilePicUrl
end

-- Wait for the local player to be available
if player then
	-- Run the function to set the profile picture
	updateProfilePicture()
end

end
task.spawn(C_G2L_490)


--ScreenGui.Frame.menu.Drag
local function C_G2L_491()
local script = G2L["491"]
local UserInputService = game:GetService("UserInputService")

local gui = script.Parent

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
end
task.spawn(C_G2L_491)


--ScreenGui.Frame.homes.Frame.user.LocalScript
local function C_G2L_499()
local script = G2L["499"]
local imageLabel = script.Parent  -- Reference to the ImageLabel
local player = game.Players.LocalPlayer  -- Reference to the local player

-- Function to load profile picture
local function updateProfilePicture()
	local profilePicUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"

	-- Set the ImageLabel's Image property to the local player's profile picture
	imageLabel.Image = profilePicUrl
end

-- Wait for the local player to be available
if player then
	-- Run the function to set the profile picture
	updateProfilePicture()
end

end
task.spawn(C_G2L_499)


--ScreenGui.Frame.homes.Frame.TextLabel.LocalScript
local function C_G2L_502()
local script = G2L["502"]
local textLabel = script.Parent  -- Reference to the TextLabel

-- Update the TextLabel text to the username
textLabel.Text = game.Players.LocalPlayer.Name

end
task.spawn(C_G2L_502)


--ScreenGui.Frame.homes.Frame.TextLabel.script
local function C_G2L_504()
local script = G2L["504"]
local textLabel = script.Parent  -- Reference to the TextLabel

-- Function to update the TextLabel with the current real time
local function updateRealTime()
	while true do
		-- Get the current system time in a readable format (e.g., "HH:MM:SS")
		local realTime = os.date("%H:%M:%S")  -- Current time in HH:MM:SS format

		-- Update the TextLabel's text with the current real time
		textLabel.Text = "Real time: " .. realTime

		-- Wait for 1 second before updating again
		wait(1)
	end
end

-- Start updating the real time
updateRealTime()

end
task.spawn(C_G2L_504)


--ScreenGui.Frame.homes.Frame.g.LocalScript
local function C_G2L_507()
local script = G2L["507"]
local textLabel = script.Parent  -- Reference to the TextLabel

-- Function to calculate the player's age in days
local function calculateAgeInDays()
	local player = game.Players.LocalPlayer
	local birthday = player.AccountAge -- The player's account age in days
	return birthday
end

-- Update the TextLabel to show the player's age in days
textLabel.Text = calculateAgeInDays() .. " Days"

end
task.spawn(C_G2L_507)


--ScreenGui.Frame.homes.Drag
local function C_G2L_511()
local script = G2L["511"]
local UserInputService = game:GetService("UserInputService")

local gui = script.Parent

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
end
task.spawn(C_G2L_511)


--ScreenGui.veran.ImageLabel.HINTMAKERRR.LocalScript
local function C_G2L_523()
local script = G2L["523"]
script.Parent.Hint.OnClientInvoke = function()
	return script.Parent.Text
end
end
task.spawn(C_G2L_523)


--ScreenGui.veran.Drag
local function C_G2L_528()
local script = G2L["528"]
local UserInputService = game:GetService("UserInputService")

local gui = script.Parent

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
end
task.spawn(C_G2L_528)



return G2L["0"], require;
